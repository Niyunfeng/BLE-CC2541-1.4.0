###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             25/Feb/2014  11:52:14 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  E:\TexasInstruments\BLE-CC254x-1.4.0\Components\os #
#                          al\common\OSAL_PwrMgr.c                            #
#    Command line       =  -f E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheralzeke\CC2541DB\..\..\config\b #
#                          uildComponents.cfg (-DBROADCASTER_CFG=0x01         #
#                          -DOBSERVER_CFG=0x02 -DPERIPHERAL_CFG=0x04          #
#                          -DCENTRAL_CFG=0x08 -DADV_NCONN_CFG=0x01            #
#                          -DADV_CONN_CFG=0x02 -DSCAN_CFG=0x04                #
#                          -DINIT_CFG=0x08 -DADV_CFG=ADV_NCONN_CFG+ADV_CONN_C #
#                          FG -DLINK_CFG=ADV_CONN_CFG+INIT_CFG                #
#                          -DFULL_CFG=INIT_CFG+SCAN_CFG+ADV_NCONN_CFG+ADV_CON #
#                          N_CFG) -f E:\TexasInstruments\BLE-CC254x-1.4.0\Pro #
#                          jects\ble\SimpleBLEPeripheralzeke\CC2541DB\buildCo #
#                          nfig.cfg (-DHOST_CONFIG=PERIPHERAL_CFG             #
#                          -DGAP_PRIVACY_RECONNECT -DCC2541                   #
#                          -DOAD_IMAGE_VERSION=0x0000                         #
#                          "-DOAD_IMAGE_A_USER_ID='A', 'A', 'A', 'A'"         #
#                          "-DOAD_IMAGE_B_USER_ID='B', 'B', 'B', 'B'")        #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Components\os #
#                          al\common\OSAL_PwrMgr.c -D INT_HEAP_LEN=3074 -D    #
#                          HALNODEBUG -D OSAL_CBTIMER_NUM_TASKS=1 -D          #
#                          HAL_AES_DMA=TRUE -D HAL_DMA=TRUE -D POWER_SAVING   #
#                          -D xPLUS_BROADCASTER -D HAL_LCD=TRUE -D            #
#                          HAL_LED=TRUE -D HAL_UART=TRUE -lcN                 #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheralzeke\CC2541DB\CC2541\List\ -o   #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheralzeke\CC2541DB\CC2541\Obj\ -e    #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheralzeke\CC2541DB\..\..\common\  #
#                          -I E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheralzeke\CC2541DB\..\..\include\ #
#                           -I E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ #
#                          ble\SimpleBLEPeripheralzeke\CC2541DB\..\..\..\..\C #
#                          omponents\hal\include\ -I                          #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheralzeke\CC2541DB\..\..\..\..\Compo #
#                          nents\hal\target\CC2541EB\ -I                      #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheralzeke\CC2541DB\..\..\..\..\Compo #
#                          nents\osal\include\ -I E:\TexasInstruments\BLE-CC2 #
#                          54x-1.4.0\Projects\ble\SimpleBLEPeripheralzeke\CC2 #
#                          541DB\..\..\..\..\Components\services\saddr\ -I    #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheralzeke\CC2541DB\..\..\..\..\Compo #
#                          nents\ble\include\ -I E:\TexasInstruments\BLE-CC25 #
#                          4x-1.4.0\Projects\ble\SimpleBLEPeripheralzeke\CC25 #
#                          41DB\..\..\..\..\Components\ble\controller\phy\    #
#                          -I E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheralzeke\CC2541DB\..\..\..\..\Co #
#                          mponents\ble\controller\include\ -I                #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheralzeke\CC2541DB\..\..\..\..\Compo #
#                          nents\ble\hci\ -I E:\TexasInstruments\BLE-CC254x-1 #
#                          .4.0\Projects\ble\SimpleBLEPeripheralzeke\CC2541DB #
#                          \..\..\..\..\Components\ble\host\ -I               #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheralzeke\CC2541DB\..\..\common\cc25 #
#                          40\ -I E:\TexasInstruments\BLE-CC254x-1.4.0\Projec #
#                          ts\ble\SimpleBLEPeripheralzeke\CC2541DB\..\..\comm #
#                          on\npi\npi_np\ -I E:\TexasInstruments\BLE-CC254x-1 #
#                          .4.0\Projects\ble\SimpleBLEPeripheralzeke\CC2541DB #
#                          \..\..\Profiles\Roles\ -I                          #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheralzeke\CC2541DB\..\..\Profiles\Si #
#                          mpleProfile\ -I E:\TexasInstruments\BLE-CC254x-1.4 #
#                          .0\Projects\ble\SimpleBLEPeripheralzeke\CC2541DB\. #
#                          .\..\Profiles\DevInfo\ -Ohz                        #
#    List file          =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheralzeke\CC2541DB\CC2541\List\OSAL_ #
#                          PwrMgr.lst                                         #
#    Object file        =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheralzeke\CC2541DB\CC2541\Obj\OSAL_P #
#                          wrMgr.r51                                          #
#                                                                             #
#                                                                             #
###############################################################################

E:\TexasInstruments\BLE-CC254x-1.4.0\Components\osal\common\OSAL_PwrMgr.c
      1          /**************************************************************************************************
      2            Filename:       OSAL_pwrmgr.c
      3            Revised:        $Date: 2011-09-16 19:09:24 -0700 (Fri, 16 Sep 2011) $
      4            Revision:       $Revision: 27618 $
      5          
      6            Description:    This file contains the OSAL Power Management API.
      7          
      8          
      9            Copyright 2004-2011 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, 
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE, 
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com. 
     38          **************************************************************************************************/
     39          
     40          /*********************************************************************
     41           * INCLUDES
     42           */
     43          
     44          #include "comdef.h"
     45          #include "OnBoard.h"
     46          #include "OSAL.h"
     47          #include "OSAL_Tasks.h"
     48          #include "OSAL_Timers.h"
     49          #include "OSAL_PwrMgr.h"
     50          
     51          /*********************************************************************
     52           * MACROS
     53           */
     54          
     55          /*********************************************************************
     56           * CONSTANTS
     57           */
     58          
     59          /*********************************************************************
     60           * TYPEDEFS
     61           */
     62          
     63          /*********************************************************************
     64           * GLOBAL VARIABLES
     65           */
     66          
     67          /* This global variable stores the power management attributes.
     68           */
     69          pwrmgr_attribute_t pwrmgr_attribute;
     70          
     71          /*********************************************************************
     72           * EXTERNAL VARIABLES
     73           */
     74          
     75          /*********************************************************************
     76           * EXTERNAL FUNCTIONS
     77           */
     78          
     79          /*********************************************************************
     80           * LOCAL VARIABLES
     81           */
     82          
     83          /*********************************************************************
     84           * LOCAL FUNCTION PROTOTYPES
     85           */
     86          
     87          /*********************************************************************
     88           * FUNCTIONS
     89           *********************************************************************/
     90          
     91          /*********************************************************************
     92           * @fn      osal_pwrmgr_init
     93           *
     94           * @brief   Initialize the power management system.
     95           *
     96           * @param   none.
     97           *
     98           * @return  none.
     99           */
    100          void osal_pwrmgr_init( void )
    101          {
    102            pwrmgr_attribute.pwrmgr_device = PWRMGR_ALWAYS_ON; // Default to no power conservation.
    103            pwrmgr_attribute.pwrmgr_task_state = 0;            // Cleared.  All set to conserve
    104          }
    105          
    106          /*********************************************************************
    107           * @fn      osal_pwrmgr_device
    108           *
    109           * @brief   Sets the device power characteristic.
    110           *
    111           * @param   pwrmgr_device - type of power devices. With PWRMGR_ALWAYS_ON
    112           *          selection, there is no power savings and the device is most
    113           *          likely on mains power. The PWRMGR_BATTERY selection allows the
    114           *          HAL sleep manager to enter sleep.
    115           *
    116           * @return  none
    117           */
    118          void osal_pwrmgr_device( uint8 pwrmgr_device )
    119          {
    120            pwrmgr_attribute.pwrmgr_device = pwrmgr_device;
    121          }
    122          
    123          /*********************************************************************
    124           * @fn      osal_pwrmgr_task_state
    125           *
    126           * @brief   This function is called by each task to state whether or
    127           *          not this task wants to conserve power.
    128           *
    129           * @param   task_id - calling task ID.
    130           *          state - whether the calling task wants to
    131           *          conserve power or not.
    132           *
    133           * @return  SUCCESS if task complete
    134           */
    135          uint8 osal_pwrmgr_task_state( uint8 task_id, uint8 state )
    136          {
    137            if ( task_id >= tasksCnt )
    138              return ( INVALID_TASK );
    139          
    140            if ( state == PWRMGR_CONSERVE )
    141            {
    142              // Clear the task state flag
    143              pwrmgr_attribute.pwrmgr_task_state &= ~(1 << task_id );
    144            }
    145            else
    146            {
    147              // Set the task state flag
    148              pwrmgr_attribute.pwrmgr_task_state |= (1 << task_id);
    149            }
    150          
    151            return ( SUCCESS );
    152          }
    153          
    154          #if defined( POWER_SAVING )
    155          /*********************************************************************
    156           * @fn      osal_pwrmgr_powerconserve
    157           *
    158           * @brief   This function is called from the main OSAL loop when there are
    159           *          no events scheduled and shouldn't be called from anywhere else.
    160           *
    161           * @param   none.
    162           *
    163           * @return  none.
    164           */
    165          void osal_pwrmgr_powerconserve( void )
    166          {
    167            uint32        next;
    168            halIntState_t intState;
    169          
    170            // Should we even look into power conservation
    171            if ( pwrmgr_attribute.pwrmgr_device != PWRMGR_ALWAYS_ON )
    172            {
    173              // Are all tasks in agreement to conserve
    174              if ( pwrmgr_attribute.pwrmgr_task_state == 0 )
    175              {
    176                // Hold off interrupts.
    177                HAL_ENTER_CRITICAL_SECTION( intState );
    178          
    179                // Get next time-out
    180                next = osal_next_timeout();
    181          
    182                // Re-enable interrupts.
    183                HAL_EXIT_CRITICAL_SECTION( intState );
    184          
    185                // Put the processor into sleep mode
    186                OSAL_SET_CPU_INTO_SLEEP( next );
    187              }
    188            }
    189          }
    190          #endif /* POWER_SAVING */
    191          
    192          /*********************************************************************
    193          *********************************************************************/

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       2      0      0  osal_pwrmgr_device
       2      0      0  osal_pwrmgr_init
       0      0     12  osal_pwrmgr_powerconserve
                          0 0 12 -> halSleep
                          0 0 12 -> osal_next_timeout
       0      0     10  osal_pwrmgr_task_state


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  ??osal_pwrmgr_device?relay
       6  ??osal_pwrmgr_init?relay
       6  ??osal_pwrmgr_powerconserve?relay
       6  ??osal_pwrmgr_task_state?relay
       8  ?Subroutine0
       1  _A_IEN0
      10  osal_pwrmgr_device
      14  osal_pwrmgr_init
      46  osal_pwrmgr_powerconserve
      74  osal_pwrmgr_task_state
       7  pwrmgr_attribute

 
 152 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   1 byte  in segment SFR_AN
   7 bytes in segment XDATA_Z
 
 176 bytes of CODE  memory
   0 bytes of DATA  memory (+ 1 byte shared)
   7 bytes of XDATA memory

Errors: none
Warnings: none
