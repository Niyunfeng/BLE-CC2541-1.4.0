###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             19/Mar/2014  13:49:29 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\Source\SimpleTemperature.c     #
#    Command line       =  -f E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheral\CC2541DB\..\..\config\build #
#                          Components.cfg (-DBROADCASTER_CFG=0x01             #
#                          -DOBSERVER_CFG=0x02 -DPERIPHERAL_CFG=0x04          #
#                          -DCENTRAL_CFG=0x08 -DADV_NCONN_CFG=0x01            #
#                          -DADV_CONN_CFG=0x02 -DSCAN_CFG=0x04                #
#                          -DINIT_CFG=0x08 -DADV_CFG=ADV_NCONN_CFG+ADV_CONN_C #
#                          FG -DLINK_CFG=ADV_CONN_CFG+INIT_CFG                #
#                          -DFULL_CFG=INIT_CFG+SCAN_CFG+ADV_NCONN_CFG+ADV_CON #
#                          N_CFG) -f E:\TexasInstruments\BLE-CC254x-1.4.0\Pro #
#                          jects\ble\SimpleBLEPeripheral\CC2541DB\buildConfig #
#                          .cfg (-DHOST_CONFIG=PERIPHERAL_CFG                 #
#                          -DGAP_PRIVACY_RECONNECT -DCC2541                   #
#                          -DOAD_IMAGE_VERSION=0x0000                         #
#                          "-DOAD_IMAGE_A_USER_ID='A', 'A', 'A', 'A'"         #
#                          "-DOAD_IMAGE_B_USER_ID='B', 'B', 'B', 'B'")        #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\Source\SimpleTemperature.c -D  #
#                          INT_HEAP_LEN=3074 -D HALNODEBUG -D                 #
#                          OSAL_CBTIMER_NUM_TASKS=1 -D xHAL_AES_DMA=TRUE -D   #
#                          HAL_DMA=TRUE -D POWER_SAVING -D xPLUS_BROADCASTER  #
#                          -D HAL_LCD=TRUE -D HAL_LED=TRUE -D HAL_UART=TRUE   #
#                          -D HAL_ADC=TRUE -lcN E:\TexasInstruments\BLE-CC254 #
#                          x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\ #
#                          CC2541\List\ -o E:\TexasInstruments\BLE-CC254x-1.4 #
#                          .0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC254 #
#                          1\Obj\ -e --debug --core=plain --dptr=16,1         #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheral\CC2541DB\..\..\common\ -I   #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\include\ -I     #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\hal\include\ -I E:\TexasInstruments\BLE-CC254x-1 #
#                          .4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\..\ #
#                          ..\..\..\Components\hal\target\CC2541EB\ -I        #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\osal\include\ -I E:\TexasInstruments\BLE-CC254x- #
#                          1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\.. #
#                          \..\..\..\Components\services\saddr\ -I            #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\ble\include\ -I E:\TexasInstruments\BLE-CC254x-1 #
#                          .4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\..\ #
#                          ..\..\..\Components\ble\controller\phy\ -I         #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\ble\controller\include\ -I                       #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\ble\hci\ -I E:\TexasInstruments\BLE-CC254x-1.4.0 #
#                          \Projects\ble\SimpleBLEPeripheral\CC2541DB\..\..\. #
#                          .\..\Components\ble\host\ -I                       #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\common\cc2540\  #
#                          -I E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheral\CC2541DB\..\..\common\npi\n #
#                          pi_np\ -I E:\TexasInstruments\BLE-CC254x-1.4.0\Pro #
#                          jects\ble\SimpleBLEPeripheral\CC2541DB\..\..\Profi #
#                          les\Roles\ -I E:\TexasInstruments\BLE-CC254x-1.4.0 #
#                          \Projects\ble\SimpleBLEPeripheral\CC2541DB\..\..\P #
#                          rofiles\SimpleProfile\ -I                          #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\Profiles\DevInf #
#                          o\ -I E:\TexasInstruments\BLE-CC254x-1.4.0\Project #
#                          s\ble\SimpleBLEPeripheral\CC2541DB\..\..\Profiles\ #
#                          Batt\ -I E:\TexasInstruments\BLE-CC254x-1.4.0\Proj #
#                          ects\ble\SimpleBLEPeripheral\CC2541DB\..\..\Profil #
#                          es\HIDDev\ -Ohz                                    #
#    List file          =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\CC2541\List\SimpleTem #
#                          perature.lst                                       #
#    Object file        =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleTemp #
#                          erature.r51                                        #
#                                                                             #
#                                                                             #
###############################################################################

E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\Source\SimpleTemperature.c
      1          #include "SimpleTemperature.h"
      2          #include<ioCC2541.h>
      3          #include "hal_types.h"
      4          #include "hal_lcd.h"
      5          
      6          
      7          #define DISABLE_ALL_INTERRUPTS() (IEN0 = IEN1 = IEN2 = 0x00)//三个   
      8          
      9          /**************************************************************** 
     10                           温度传感器初始化函数        
     11          ****************************************************************/ 
     12          void initTempSensor(void)
     13          { 
     14             DISABLE_ALL_INTERRUPTS();            //关闭所有中断 
     15           
     16          }   
     17          
     18          /**************************************************************** 
     19          读取温度传感器 AD 值函数       
     20          ****************************************************************/ 
     21          uint8 getTemperature(void){ 
     22             
     23             uint16  value;
     24             uint8 v ;
     25             ADCIF=0;////batt  temp 冲突解决
     26             TR0=0x01;         //set '1' to connectthe temperature sensorto the SOC_ADC.
     27             ATEST=0x01;       // Enablesthe temperature sensor
     28             ADCCON3  = (0x3E);                  //选择1.25V为参考电压；14位分辨率；对片内温度传感器采样        
     29             while(!ADCIF);                //等待 AD 转换完成 
     30             value = ADCL;                //ADCL 寄存器低 2 位无效 
     31             value |= ((uint16)ADCH) << 8;
     32             value=value>>4;  
     33            
     34            // HalLcdWriteStringValue("adc_value:", value, 10, HAL_LCD_LINE_2);
     35            
     36            //v=value*0.06229-311.43; //高十度
     37             v=(value-1367.5)/4.5+10;    //根据 AD 值，计算出实际的温度,芯片手册有错，温度系数应该是4.5 /℃
     38          
     39           // HalLcdWriteStringValue("temp_value:", v, 10, HAL_LCD_LINE_4); 
     40          
     41             return   v;                           //进行温度校正，这里减去5℃（不同芯片根据具体情况校正）
     42          
     43          }
     44          
     45          //static void gettemp(void)
     46          //{
     47          //     // osal_snv_read(0xE0,6,&temperature);
     48          //       // uint8 TempValue[6];  
     49          //        uint8 AvgTemp=0,i=0,j;
     50          //        uint8 sensor_data_value;  //传感器数据
     51          //
     52          //        initTempSensor();
     53          //        AvgTemp = getTemperature();  
     54          //        
     55          //        temperature[temp_flag]=AvgTemp;
     56          //        temp_flag++;
     57          //       
     58          //        DS18B20_SendConvert();
     59          //        //延时1S
     60          //        for(j=20; j>0; j--)
     61          //          delay_nus(50);
     62          //        sensor_data_value=DS18B20_GetTem();
     63          //        temp_18b20[temp_18b20_flag]=sensor_data_value;
     64          //        temp_18b20_flag++;
     65          //
     66          //        if(temp_flag==3)
     67          //        {
     68          //
     69          //          for(i=0;i<temp_flag;i++)
     70          //             HalLcdWriteStringValueValue("Temp,18b20:", temperature[i], 10, temp_18b20[i],10,i+1);
     71          //        }
     72                  
     73                  
     74          //}

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       0      0     16  getTemperature
       0      0      0  initTempSensor


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  ??getTemperature?relay
       6  ??initTempSensor?relay
       1  ADCCON3
       1  ADCH
       1  ADCL
       1  IEN2
       1  _A_IEN0
       1  _A_IEN1
       1  _A_TCON
       4  __Constant_40900000
       4  __Constant_41200000
       4  __Constant_c4aaf000
     105  getTemperature
      12  initTempSensor

 
 117 bytes in segment BANKED_CODE
  12 bytes in segment BANK_RELAYS
   7 bytes in segment SFR_AN
  12 bytes in segment XDATA_ROM_C
 
 129 bytes of CODE  memory
   0 bytes of CONST memory (+ 12 bytes shared)
   0 bytes of DATA  memory (+  7 bytes shared)

Errors: none
Warnings: 2
