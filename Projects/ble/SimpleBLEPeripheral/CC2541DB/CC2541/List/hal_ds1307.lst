###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             18/Mar/2014  14:18:01 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  E:\TexasInstruments\BLE-CC254x-1.4.0\Components\ha #
#                          l\target\CC2541EB\hal_ds1307.c                     #
#    Command line       =  -f E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheral\CC2541DB\..\..\config\build #
#                          Components.cfg (-DBROADCASTER_CFG=0x01             #
#                          -DOBSERVER_CFG=0x02 -DPERIPHERAL_CFG=0x04          #
#                          -DCENTRAL_CFG=0x08 -DADV_NCONN_CFG=0x01            #
#                          -DADV_CONN_CFG=0x02 -DSCAN_CFG=0x04                #
#                          -DINIT_CFG=0x08 -DADV_CFG=ADV_NCONN_CFG+ADV_CONN_C #
#                          FG -DLINK_CFG=ADV_CONN_CFG+INIT_CFG                #
#                          -DFULL_CFG=INIT_CFG+SCAN_CFG+ADV_NCONN_CFG+ADV_CON #
#                          N_CFG) -f E:\TexasInstruments\BLE-CC254x-1.4.0\Pro #
#                          jects\ble\SimpleBLEPeripheral\CC2541DB\buildConfig #
#                          .cfg (-DHOST_CONFIG=PERIPHERAL_CFG                 #
#                          -DGAP_PRIVACY_RECONNECT -DCC2541                   #
#                          -DOAD_IMAGE_VERSION=0x0000                         #
#                          "-DOAD_IMAGE_A_USER_ID='A', 'A', 'A', 'A'"         #
#                          "-DOAD_IMAGE_B_USER_ID='B', 'B', 'B', 'B'")        #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Components\ha #
#                          l\target\CC2541EB\hal_ds1307.c -D                  #
#                          INT_HEAP_LEN=3074 -D HALNODEBUG -D                 #
#                          OSAL_CBTIMER_NUM_TASKS=1 -D xHAL_AES_DMA=TRUE -D   #
#                          HAL_DMA=TRUE -D POWER_SAVING -D xPLUS_BROADCASTER  #
#                          -D HAL_LCD=TRUE -D HAL_LED=TRUE -D HAL_UART=TRUE   #
#                          -D HAL_ADC=TRUE -lcN E:\TexasInstruments\BLE-CC254 #
#                          x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\ #
#                          CC2541\List\ -o E:\TexasInstruments\BLE-CC254x-1.4 #
#                          .0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC254 #
#                          1\Obj\ -e --debug --core=plain --dptr=16,1         #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheral\CC2541DB\..\..\common\ -I   #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\include\ -I     #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\hal\include\ -I E:\TexasInstruments\BLE-CC254x-1 #
#                          .4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\..\ #
#                          ..\..\..\Components\hal\target\CC2541EB\ -I        #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\osal\include\ -I E:\TexasInstruments\BLE-CC254x- #
#                          1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\.. #
#                          \..\..\..\Components\services\saddr\ -I            #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\ble\include\ -I E:\TexasInstruments\BLE-CC254x-1 #
#                          .4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\..\ #
#                          ..\..\..\Components\ble\controller\phy\ -I         #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\ble\controller\include\ -I                       #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\ble\hci\ -I E:\TexasInstruments\BLE-CC254x-1.4.0 #
#                          \Projects\ble\SimpleBLEPeripheral\CC2541DB\..\..\. #
#                          .\..\Components\ble\host\ -I                       #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\common\cc2540\  #
#                          -I E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheral\CC2541DB\..\..\common\npi\n #
#                          pi_np\ -I E:\TexasInstruments\BLE-CC254x-1.4.0\Pro #
#                          jects\ble\SimpleBLEPeripheral\CC2541DB\..\..\Profi #
#                          les\Roles\ -I E:\TexasInstruments\BLE-CC254x-1.4.0 #
#                          \Projects\ble\SimpleBLEPeripheral\CC2541DB\..\..\P #
#                          rofiles\SimpleProfile\ -I                          #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\Profiles\DevInf #
#                          o\ -I E:\TexasInstruments\BLE-CC254x-1.4.0\Project #
#                          s\ble\SimpleBLEPeripheral\CC2541DB\..\..\Profiles\ #
#                          Batt\ -I E:\TexasInstruments\BLE-CC254x-1.4.0\Proj #
#                          ects\ble\SimpleBLEPeripheral\CC2541DB\..\..\Profil #
#                          es\HIDDev\ -Ohz                                    #
#    List file          =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\CC2541\List\hal_ds130 #
#                          7.lst                                              #
#    Object file        =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_ds1307 #
#                          .r51                                               #
#                                                                             #
#                                                                             #
###############################################################################

E:\TexasInstruments\BLE-CC254x-1.4.0\Components\hal\target\CC2541EB\hal_ds1307.c
      1          #include "OSAL.h"
      2          #include "hal_ds1307.h"
      3          #include "hal_i2c.h"
      4          #include "hal_sensor.h"
      5          #include "hal_lcd.h"
      6          
      7          static void HalDS1307Select(void);
      8          static char hex2char(uint8 i);
      9          static uint8 char2hex(char c);
     10          static void showDate(uint8 *timeDate);
     11          
     12          /**
     13           * time : (20) 140116144026 -> 2014-01-16 14:40:26 len:14
     14           */
     15          bool HalDS1307WriteTimeData(char *time) {
     16          	bool success;
     17          	uint8 tmp = 0, k = 0;
     18          	HalDS1307Select();
     19          
     20          	for (k = 0; k < 7; k++) {
     21          		tmp = 0;
     22          		if (k < 3) {
     23          			tmp = (char2hex(*(time + 12 - 2 * k)) << 4) | char2hex(*(time + 13 - 2 * k));
     24          			success = HalSensorWriteReg(k, &tmp, 1);
     25          		} else if (k == 3) {
     26          			success = HalSensorWriteReg(k, &tmp, 1);
     27          		} else if (k > 3) {
     28          			tmp = (char2hex(*(time + 14 - 2 * k)) << 4) | char2hex(*(time + 15 - 2 * k));
     29          			success = HalSensorWriteReg(k, &tmp, 1);
     30          		} else {
     31          		}
     32          		if (!success) {
     33          			break;
     34          		}
     35          	}
     36          	return success;
     37          }
     38          
     39          uint32 timeTotalCount(uint8 *timeDate) {
     40          	uint32 i = 0;
     41          	i += timeDate[0] && 0x7F; //seconds
     42          	i += (timeDate[1] && 0x7F) * 60; //minutes
     43          	i += (timeDate[1] && 0x7F) * 60; //minutes
     44          
     45          	return i;
     46          }
     47          
     48          bool HalDS1307ReadTimeData(uint8 *timeDate) {
     49          	bool success;
     50          	HalDS1307Select();
     51          	success = HalSensorReadReg(0x00, timeDate, 7);
     52          	showDate(timeDate);
     53          	return success;
     54          }
     55          
     56          bool HalDS1307InitControlRegister() {
     57          	bool success;
     58          	HalDS1307Select();
     59          	uint8 tmp = 0;
     60          	tmp = 0x90; //1001 0000
     61          	success = HalSensorWriteReg(0x07, &tmp, 1);
     62          	return success;
     63          }
     64          
     65          bool HalDS1307Write(uint8 addr, uint8 *pBuf, uint8 nBytes) {
     66          	bool success;
     67          	HalDS1307Select();
     68          	success = HalSensorWriteReg(addr, pBuf, nBytes);
     69          	return success;
     70          }
     71          
     72          bool HalDS1307Read(uint8 addr, uint8 *pBuf, uint8 nBytes) {
     73          	bool success;
     74          	HalDS1307Select();
     75          	success = HalSensorReadReg(addr, pBuf, nBytes);
     76          	return success;
     77          }
     78          
     79          static void HalDS1307Select(void) {
     80          	// Select slave and set clock rate
     81          	HalI2CInit(0x68, i2cClock_533KHZ);
     82          }
     83          
     84          static void showDate(uint8 *timeDate) {
     85          	char datestr[30];
     86          	osal_memcpy(datestr, "20", 2);
     87          	char str[3];
     88          	str[2] = '\0';
     89          	str[0] = hex2char((timeDate[6] >> 4) & 0x0F);
     90          	str[1] = hex2char(timeDate[6] & 0x0F);
     91          	osal_memcpy(datestr + 2, str, 2);
     92          
     93          	str[0] = hex2char((timeDate[5] >> 4) & 0x01);
     94          	str[1] = hex2char(timeDate[5] & 0x0F);
     95          	osal_memcpy(datestr + 4, str, 2);
     96          
     97          	str[0] = hex2char((timeDate[4] >> 4) & 0x03);
     98          	str[1] = hex2char(timeDate[4] & 0x0F);
     99          	osal_memcpy(datestr + 6, str, 2);
    100          
    101          	str[0] = hex2char((timeDate[2] >> 4) & 0x01);
    102          	str[1] = hex2char(timeDate[2] & 0x0F);
    103          	osal_memcpy(datestr + 8, str, 2);
    104          
    105          	str[0] = hex2char((timeDate[1] >> 4) & 0x07);
    106          	str[1] = hex2char(timeDate[1] & 0x0F);
    107          	osal_memcpy(datestr + 10, str, 2);
    108          
    109          	str[0] = hex2char((timeDate[0] >> 4) & 0x07);
    110          	str[1] = hex2char(timeDate[0] & 0x0F);
    111          	osal_memcpy(datestr + 12, str, 2);
    112          
    113          	datestr[14] = '\0';
    114          	HalLcdWriteString(datestr, HAL_LCD_LINE_7);
    115          }
    116          
    117          static char hex2char(uint8 i) {
    118          	switch (i) {
    119          	case 0:
    120          		return '0';
    121          	case 1:
    122          		return '1';
    123          	case 2:
    124          		return '2';
    125          	case 3:
    126          		return '3';
    127          	case 4:
    128          		return '4';
    129          	case 5:
    130          		return '5';
    131          	case 6:
    132          		return '6';
    133          	case 7:
    134          		return '7';
    135          	case 8:
    136          		return '8';
    137          	case 9:
    138          		return '9';
    139          	default:
    140          		return '0';
    141          	}
    142          }
    143          
    144          static uint8 char2hex(char c) {
    145          	switch (c) {
    146          	case '0':
    147          		return 0;
    148          	case '1':
    149          		return 1;
    150          	case '2':
    151          		return 2;
    152          	case '3':
    153          		return 3;
    154          	case '4':
    155          		return 4;
    156          	case '5':
    157          		return 5;
    158          	case '6':
    159          		return 6;
    160          	case '7':
    161          		return 7;
    162          	case '8':
    163          		return 8;
    164          	case '9':
    165          		return 9;
    166          	default:
    167          		return 0;
    168          	}
    169          }

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       2      0      1  HalDS1307InitControlRegister
                          2 0  1 -> HalI2CInit
                          2 0  1 -> HalSensorWriteReg
       0      0     10  HalDS1307Read
                          0 0 10 -> HalI2CInit
                          0 0 10 -> HalSensorReadReg
       0      0      9  HalDS1307ReadTimeData
                          0 0  9 -> HalI2CInit
                          0 0  9 -> HalSensorReadReg
                          0 0  9 -> showDate
       0      0     10  HalDS1307Write
                          0 0 10 -> HalI2CInit
                          0 0 10 -> HalSensorWriteReg
       1      0     13  HalDS1307WriteTimeData
                          0 0 13 -> HalI2CInit
                          0 0 13 -> HalSensorWriteReg
                          0 0 13 -> char2hex
       0      0     13  char2hex
       0      0     43  hex2char
       1      0     54  showDate
                          0 0 43 -> HalLcdWriteString
                          0 0 43 -> hex2char
                          0 0 45 -> osal_memcpy
       0      0     16  timeTotalCount


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       3  ?<Constant "20">
       6  ??HalDS1307InitControlRegister?relay
       6  ??HalDS1307Read?relay
       6  ??HalDS1307ReadTimeData?relay
       6  ??HalDS1307Write?relay
       6  ??HalDS1307WriteTimeData?relay
       6  ??char2hex?relay
       6  ??hex2char?relay
       6  ??showDate?relay
       6  ??timeTotalCount?relay
       5  ?Subroutine0
      19  ?Subroutine1
      11  ?Subroutine2
       9  ?Subroutine3
       7  ?Subroutine4
      10  ?Subroutine5
      15  ?Subroutine6
      48  HalDS1307InitControlRegister
      33  HalDS1307Read
      44  HalDS1307ReadTimeData
      31  HalDS1307Write
     173  HalDS1307WriteTimeData
      72  char2hex
      71  hex2char
     429  showDate
      87  timeTotalCount

 
 1 064 bytes in segment BANKED_CODE
    54 bytes in segment BANK_RELAYS
     3 bytes in segment XDATA_ROM_C
 
 1 118 bytes of CODE  memory
     3 bytes of CONST memory

Errors: none
Warnings: 1
