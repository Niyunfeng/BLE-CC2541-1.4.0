###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             27/Mar/2014  15:10:17 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  E:\TexasInstruments\BLE-CC254x-1.4.0\Components\os #
#                          al\common\OSAL_PwrMgr.c                            #
#    Command line       =  -f E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheral\CC2541DB\..\..\config\build #
#                          Components.cfg (-DBROADCASTER_CFG=0x01             #
#                          -DOBSERVER_CFG=0x02 -DPERIPHERAL_CFG=0x04          #
#                          -DCENTRAL_CFG=0x08 -DADV_NCONN_CFG=0x01            #
#                          -DADV_CONN_CFG=0x02 -DSCAN_CFG=0x04                #
#                          -DINIT_CFG=0x08 -DADV_CFG=ADV_NCONN_CFG+ADV_CONN_C #
#                          FG -DLINK_CFG=ADV_CONN_CFG+INIT_CFG                #
#                          -DFULL_CFG=INIT_CFG+SCAN_CFG+ADV_NCONN_CFG+ADV_CON #
#                          N_CFG) -f E:\TexasInstruments\BLE-CC254x-1.4.0\Pro #
#                          jects\ble\SimpleBLEPeripheral\CC2541DB\buildConfig #
#                          .cfg (-DHOST_CONFIG=PERIPHERAL_CFG                 #
#                          -DGAP_PRIVACY_RECONNECT -DCC2541                   #
#                          -DOAD_IMAGE_VERSION=0x0000                         #
#                          "-DOAD_IMAGE_A_USER_ID='A', 'A', 'A', 'A'"         #
#                          "-DOAD_IMAGE_B_USER_ID='B', 'B', 'B', 'B'")        #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Components\os #
#                          al\common\OSAL_PwrMgr.c -D INT_HEAP_LEN=3074 -D    #
#                          HALNODEBUG -D OSAL_CBTIMER_NUM_TASKS=1 -D          #
#                          xHAL_AES_DMA=TRUE -D HAL_DMA=TRUE -D POWER_SAVING  #
#                          -D xPLUS_BROADCASTER -D HAL_LCD=TRUE -D            #
#                          HAL_LED=TRUE -D HAL_UART=FALSE -D HAL_ADC=TRUE -D  #
#                          HAL_SLEEP_DEBUG_LED -lcN                           #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\CC2541\List\ -o       #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\CC2541\Obj\ -e        #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheral\CC2541DB\..\..\common\ -I   #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\include\ -I     #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\hal\include\ -I E:\TexasInstruments\BLE-CC254x-1 #
#                          .4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\..\ #
#                          ..\..\..\Components\hal\target\CC2541EB\ -I        #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\osal\include\ -I E:\TexasInstruments\BLE-CC254x- #
#                          1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\.. #
#                          \..\..\..\Components\services\saddr\ -I            #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\ble\include\ -I E:\TexasInstruments\BLE-CC254x-1 #
#                          .4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\..\ #
#                          ..\..\..\Components\ble\controller\phy\ -I         #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\ble\controller\include\ -I                       #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\..\..\Component #
#                          s\ble\hci\ -I E:\TexasInstruments\BLE-CC254x-1.4.0 #
#                          \Projects\ble\SimpleBLEPeripheral\CC2541DB\..\..\. #
#                          .\..\Components\ble\host\ -I                       #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\common\cc2540\  #
#                          -I E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\b #
#                          le\SimpleBLEPeripheral\CC2541DB\..\..\common\npi\n #
#                          pi_np\ -I E:\TexasInstruments\BLE-CC254x-1.4.0\Pro #
#                          jects\ble\SimpleBLEPeripheral\CC2541DB\..\..\Profi #
#                          les\Roles\ -I E:\TexasInstruments\BLE-CC254x-1.4.0 #
#                          \Projects\ble\SimpleBLEPeripheral\CC2541DB\..\..\P #
#                          rofiles\SimpleProfile\ -I                          #
#                          E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\..\..\Profiles\DevInf #
#                          o\ -I E:\TexasInstruments\BLE-CC254x-1.4.0\Project #
#                          s\ble\SimpleBLEPeripheral\CC2541DB\..\..\Profiles\ #
#                          Batt\ -I E:\TexasInstruments\BLE-CC254x-1.4.0\Proj #
#                          ects\ble\SimpleBLEPeripheral\CC2541DB\..\..\Profil #
#                          es\HIDDev\ -Ohz                                    #
#    List file          =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\CC2541\List\OSAL_PwrM #
#                          gr.lst                                             #
#    Object file        =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\ #
#                          SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_PwrMg #
#                          r.r51                                              #
#                                                                             #
#                                                                             #
###############################################################################

E:\TexasInstruments\BLE-CC254x-1.4.0\Components\osal\common\OSAL_PwrMgr.c
      1          /**************************************************************************************************
      2            Filename:       OSAL_pwrmgr.c
      3            Revised:        $Date: 2011-09-16 19:09:24 -0700 (Fri, 16 Sep 2011) $
      4            Revision:       $Revision: 27618 $
      5          
      6            Description:    This file contains the OSAL Power Management API.
      7          
      8          
      9            Copyright 2004-2011 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, 
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE, 
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com. 
     38          **************************************************************************************************/
     39          
     40          /*********************************************************************
     41           * INCLUDES
     42           */
     43          #include "hal_lcd.h"
     44          #include "hal_led.h"
     45          #include "comdef.h"
     46          #include "OnBoard.h"
     47          #include "OSAL.h"
     48          #include "OSAL_Tasks.h"
     49          #include "OSAL_Timers.h"
     50          #include "OSAL_PwrMgr.h"
     51          
     52          /*********************************************************************
     53           * MACROS
     54           */
     55          
     56          /*********************************************************************
     57           * CONSTANTS
     58           */
     59          
     60          /*********************************************************************
     61           * TYPEDEFS
     62           */
     63          
     64          /*********************************************************************
     65           * GLOBAL VARIABLES
     66           */
     67          
     68          /* This global variable stores the power management attributes.
     69           */
     70          pwrmgr_attribute_t pwrmgr_attribute;
     71          
     72          /*********************************************************************
     73           * EXTERNAL VARIABLES
     74           */
     75          
     76          /*********************************************************************
     77           * EXTERNAL FUNCTIONS
     78           */
     79          
     80          /*********************************************************************
     81           * LOCAL VARIABLES
     82           */
     83          
     84          /*********************************************************************
     85           * LOCAL FUNCTION PROTOTYPES
     86           */
     87          
     88          /*********************************************************************
     89           * FUNCTIONS
     90           *********************************************************************/
     91          
     92          /*********************************************************************
     93           * @fn      osal_pwrmgr_init
     94           *
     95           * @brief   Initialize the power management system. osal_init_system( )ÖÐµ÷ÓÃ
     96           *
     97           * @param   none.
     98           *
     99           * @return  none.
    100           */
    101          void osal_pwrmgr_init( void )
    102          {
    103            pwrmgr_attribute.pwrmgr_device = PWRMGR_ALWAYS_ON; // Default to no power conservation.Ä¬ÈÏÃ»ÓÐË¯ÃßÄ£Ê½¡£
    104            pwrmgr_attribute.pwrmgr_task_state = 0;            // Cleared.  All set to conserve ÇåÁã
    105          }
    106          
    107          /*********************************************************************
    108           * @fn      osal_pwrmgr_device
    109           *
    110           * @brief   Sets the device power characteristic.
    111           *
    112           * @param   pwrmgr_device - type of power devices. With PWRMGR_ALWAYS_ON
    113           *          selection, there is no power savings and the device is most
    114           *          likely on mains power. The PWRMGR_BATTERY selection allows the
    115           *          HAL sleep manager to enter sleep.
    116           *
    117           * @return  none
    118           */
    119          void osal_pwrmgr_device( uint8 pwrmgr_device )
    120          {
    121            pwrmgr_attribute.pwrmgr_device = pwrmgr_device;
    122          }
    123          
    124          /*********************************************************************
    125           * @fn      osal_pwrmgr_task_state
    126           *
    127           * @brief   This function is called by each task to state whether or
    128           *          not this task wants to conserve power.
    129               Õâ¸öº¯Êý¿ÉÒÔ±»Ã¿Ò»¸öÈÎÎñµ÷ÓÃ£¬ÓÃÓÚÉèÖÃÕâ¸öÈÎÎñÊÇ·ñÖ§³ÖµÍ¹¦ºÄÔËÐÐ£¬Èç
    130          
    131           * ¹ûÃ¿Ò»¸öÈÎÎñ²»Ö§³ÖµÍ¹¦ºÄ½«ÎÞ·¨½øÈëµÍ¹¦ºÄÄ£Ê½ÔËÐÐ¡£
    132           *
    133           * @param   task_id - calling task ID.
    134           *          state - whether the calling task wants to
    135           *          conserve power or not.
    136           *
    137           * @return  SUCCESS if task complete
    138           */
    139          uint8 osal_pwrmgr_task_state( uint8 task_id, uint8 state )
    140          {
    141            if ( task_id >= tasksCnt )
    142              return ( INVALID_TASK );
    143          
    144            if ( state == PWRMGR_CONSERVE )
    145            { 
    146              // Clear the task state flag ÇåÁã
    147              pwrmgr_attribute.pwrmgr_task_state &= ~(1 << task_id );
    148            }
    149            else
    150            {
    151              // Set the task state flag ÖÃÎ»
    152              pwrmgr_attribute.pwrmgr_task_state |= (1 << task_id);
    153            }
    154          
    155            return ( SUCCESS );
    156          }
    157          
    158          #if defined( POWER_SAVING )
    159          /*********************************************************************
    160           * @fn      osal_pwrmgr_powerconserve
    161           *
    162           * @brief   This function is called from the main OSAL loop when there are
    163           *          no events scheduled and shouldn't be called from anywhere else.
    164           Õâ¸öº¯ÊýÔÚOSALÑ­»·ÖÐÈç¹ûÃ»ÓÐÈÎºÎÊÂ¼þÐèÒªÖ´ÐÐµÄ»°½«±»µ÷ÓÃ£¬½«Éè±¸½øÈë
    165          
    166          * Ë¯ÃßÄ£Ê½£¬²»¿ÉÒÔÔÚÆäËûµØ·½µ÷ÓÃ¸Ãº¯Êý¡£
    167          
    168          * ÐèÒª´ò¿ªPOWER_SAVINGµÄºê¶¨Òå¡£
    169           *
    170           * @param   none.
    171           *
    172           * @return  none.
    173           */
    174          void osal_pwrmgr_powerconserve( void )
    175          {
    176            uint32        next;
    177            halIntState_t intState;
    178          
    179            // Should we even look into power conservation  Ê×ÏÈ¼ì²éÊÇ·ñÖ§³ÖµÍ¹¦ºÄ
    180            if ( pwrmgr_attribute.pwrmgr_device != PWRMGR_ALWAYS_ON )
    181            {
    182                        
    183              // Are all tasks in agreement to conserve ÊÇ·ñËùÓÐÈÎÎñÖ§³ÖµÍ¹¦ºÄ
    184              if ( pwrmgr_attribute.pwrmgr_task_state == 0 )
    185              {                                                              
    186          //        HalLedSet(HAL_LED_1, HAL_LED_MODE_ON );   //¿ªLED1    
    187          //        HalLcdWriteString("sleep time ok", HAL_LCD_LINE_6);
    188                // Hold off interrupts.  ¹ØÖÐ¶Ï
    189                HAL_ENTER_CRITICAL_SECTION( intState );
    190          
    191                // Get next time-out  ²éÑ¯Èí¼þ¶¨Ê±Æ÷Á´±íµÃµ½×î½üÒ»´ÎÒç³öÊ±¼ä
    192                next = osal_next_timeout();
    193          
    194                // Re-enable interrupts.  ¿ªÖÐ¶Ï
    195                HAL_EXIT_CRITICAL_SECTION( intState );
    196               HalLcdWriteStringValue("next:",next, 10, HAL_LCD_LINE_5); 
    197                // Put the processor into sleep mode  ½«ÏµÍ³½øÈëË¯ÃßÄ£Ê½
    198                OSAL_SET_CPU_INTO_SLEEP( next );//ÔÚ OnBoard.hÖÐ¶¨ÒåÈçÏÂ  #define OSAL_SET_CPU_INTO_SLEEP(m)  halSleep(m)   /* interface to HAL sleep */
    199              }
    200            }
    201          }
    202          #endif /* POWER_SAVING */
    203          
    204          /*********************************************************************
    205          *********************************************************************/

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       2      0      0  osal_pwrmgr_device
       2      0      0  osal_pwrmgr_init
       0      0     17  osal_pwrmgr_powerconserve
                          0 0 17 -> HalLcdWriteStringValue
                          0 0 16 -> halSleep
                          0 0 16 -> osal_next_timeout
       0      0     10  osal_pwrmgr_task_state


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  ?<Constant "next:">
       6  ??osal_pwrmgr_device?relay
       6  ??osal_pwrmgr_init?relay
       6  ??osal_pwrmgr_powerconserve?relay
       6  ??osal_pwrmgr_task_state?relay
       8  ?Subroutine0
       1  _A_IEN0
      10  osal_pwrmgr_device
      14  osal_pwrmgr_init
      92  osal_pwrmgr_powerconserve
      74  osal_pwrmgr_task_state
       7  pwrmgr_attribute

 
 198 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   1 byte  in segment SFR_AN
   6 bytes in segment XDATA_ROM_C
   7 bytes in segment XDATA_Z
 
 222 bytes of CODE  memory
   6 bytes of CONST memory
   0 bytes of DATA  memory (+ 1 byte shared)
   7 bytes of XDATA memory

Errors: none
Warnings: 1
