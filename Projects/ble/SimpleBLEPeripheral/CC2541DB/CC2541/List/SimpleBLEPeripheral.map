Warning[w6]: Type conflict for external/entry "strcpy", in module SimpleDS18B20 against external/entry in module ?strcpy; prototyped function vs K&R function
  /* In module SimpleDS18B20: */
  /* K&R Function, args 0, attr 0 */
  int (__xdata_reentrant strcpy)();
  /* In module ?strcpy: */
  /* Function, args 2, attr 0 */
  char * (__xdata_reentrant strcpy)(char *,
                                    char const *);
Warning[w52]: More than one definition for the byte at address 0x6b in common segment INTVEC. It is defined in module "hal_uart" as well as in module "hal_key"
################################################################################
#                                                                              #
#      IAR Universal Linker V5.4.1.30                                          #
#                                                                              #
#           Link time     =  18/Mar/2014  16:52:23                             #
#           Target CPU    =  x51                                               #
#           List file     =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\List\SimpleB #
#                            LEPeripheral.map                                  #
#           Output file 1 =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Exe\SimpleBL #
#                            EPeripheral.hex                                   #
#                            Format: intel-extended                            #
#           Output file 2 =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Exe\SimpleBL #
#                            EPeripheral.d51                                   #
#                            Format: debug                                     #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 6.4\8051\CONFIG\"                               #
#                            -D_NR_OF_BANKS=0x07 -D_CODEBANK_END=0xFFFF        #
#                            -D_CODEBANK_START=0x8000 -D?CBANK_MASK=0xFF       #
#                            -D?CBANK=0x9F                                     #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \Libraries\CC2541DB\bin\CC2541_BLE_peri.lib       #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \Libraries\Common\bin\CC254x_BLE_HCI_TL_None.lib  #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL.r51 #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Clo #
#                            ckBLE.r51                                         #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Mem #
#                            ory.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Pwr #
#                            Mgr.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Sim #
#                            pleBLEPeripheral.r51                              #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Tim #
#                            ers.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OnBoard. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleBL #
#                            EPeripheral_Main.r51                              #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleBL #
#                            ESPIFlash.r51                                     #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleBL #
#                            ESerialUart.r51                                   #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleDS #
#                            18B20.r51                                         #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleEe #
#                            promUtils.r51                                     #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleRT #
#                            CInterrupt.r51                                    #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleTe #
#                            mperature.r51                                     #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\Simplepa #
#                            sscode.r51                                        #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\battserv #
#                            ice.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\devinfos #
#                            ervice.r51                                        #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\gap.r51  #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\gapbondm #
#                            gr.r51                                            #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\gatt_uui #
#                            d.r51                                             #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_adc. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_aes. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_at24 #
#                            c32.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_crc. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_dma. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_driv #
#                            ers.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_ds13 #
#                            07.r51                                            #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_eepr #
#                            om.r51                                            #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_flas #
#                            h.r51                                             #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_i2c. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_key. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_lcd. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_led. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_sens #
#                            or.r51                                            #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_slee #
#                            p.r51                                             #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_star #
#                            tup.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_time #
#                            r.r51                                             #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_uart #
#                            .r51                                              #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\npi.r51  #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\osal_buf #
#                            mgr.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\osal_cbt #
#                            imer.r51                                          #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\osal_snv #
#                            .r51                                              #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\peripher #
#                            al.r51                                            #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\simpleBL #
#                            EPeripheral.r51                                   #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\simpleGA #
#                            TTprofile.r51                                     #
#                            -o                                                #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Exe\SimpleBL #
#                            EPeripheral.d51                                   #
#                            -l                                                #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\List\SimpleB #
#                            LEPeripheral.map                                  #
#                            -xmso -f                                          #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\..\..\common\cc2540 #
#                            \ti_51ew_cc2540b.xcl                              #
#                            (-D_IDATA_END=0xFF -D_PDATA_START=0x1E00          #
#                            -D_PDATA_END=0x1EFF -D_IXDATA_START=0x0001        #
#                            -D_IXDATA_END=0x1EFF                              #
#                            -D_XDATA_START=_IXDATA_START                      #
#                            -D_XDATA_END=_IXDATA_END -D_CODE_START=0x0000     #
#                            -D_CODE_END=0x7FFF -D_FIRST_BANK_ADDR=0x10000     #
#                            -D_NEAR_CODE_END=_CODE_END -D?REGISTER_BANK=0     #
#                            -D_REGISTER_BANK_START=0 -D?PBANK_NUMBER=0x1E     #
#                            -D_BREG_START=0x00 -D?VB=0x20                     #
#                            -D_FAR_DATA_NR_OF_BANKS=0x0E                      #
#                            -D_FAR_DATA_START=0x010001                        #
#                            -D_FAR_DATA_END=0xFFFFFF                          #
#                            -D_FAR_CODE_START=_CODE_START                     #
#                            -D_FAR_CODE_END=_CODE_END                         #
#                            -Z(BIT)BREG=_BREG_START -Z(BIT)BIT_N=0-7F         #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA_END    #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA_END   #
#                            -Z(IDATA)IOVERLAY=08-FF                           #
#                            -Z(CODE)INTVEC=_CODE_START                        #
#                            -Z(CODE)CSTART=_CODE_START-_CODE_END              #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE_START-_CODE_END         #
#                            -Z(CODE)HUGE_ID=_FAR_CODE_START-_FAR_CODE_END     #
#                            -D_SLEEP_CODE_SPACE_START=(_CODE_END-7)           #
#                            -D_SLEEP_CODE_SPACE_END=(_CODE_END)               #
#                            -Z(CODE)SLEEP_CODE=_SLEEP_CODE_SPACE_START-_SLEEP #
#                            _CODE_SPACE_END                                   #
#                            -Z(CODE)BANK_RELAYS,RCODE,DIFUNCT,CODE_N,NEAR_COD #
#                            E=_CODE_START-_CODE_END                           #
#                            -P(CODE)CODE_C=_CODE_START-_CODE_END              #
#                            -P(CONST)XDATA_ROM_C=0x8000-0xFFFF                #
#                            -P(CODE)XDATA_ROM_C_FLASH=0x18000-0x1FFFF         #
#                            -QXDATA_ROM_C=XDATA_ROM_C_FLASH                   #
#                            -P(CODE)BANKED_CODE=_CODE_START-_CODE_END,[(_CODE #
#                            BANK_START+_FIRST_BANK_ADDR)-(_CODEBANK_END+_FIRS #
#                            T_BANK_ADDR)]*_NR_OF_BANKS+10000                  #
#                            -P(CODE)FAR_CODE_C,FAR_CODE_N,FAR_CODE=[_FAR_CODE #
#                            _START-_FAR_CODE_END]/10000                       #
#                            -P(CODE)HUGE_CODE_C=_FAR_CODE_START-_FAR_CODE_END #
#                            -Z(CODE)CHECKSUM#_CODE_END                        #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START                                      #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA_START-_P #
#                            DATA_END                                          #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_START-_X #
#                            DATA_END                                          #
#                            -Z(XDATA)PDATA_Z,PDATA_I=_PDATA_START-_PDATA_END  #
#                            -P(XDATA)PDATA_N=_PDATA_START-_PDATA_END          #
#                            -Z(XDATA)IXDATA_Z,IXDATA_I=_IXDATA_START-_IXDATA_ #
#                            END                                               #
#                            -P(XDATA)IXDATA_N=_IXDATA_START-_IXDATA_END       #
#                            -Z(XDATA)XDATA_Z,XDATA_I=_XDATA_START-_XDATA_END  #
#                            -P(XDATA)XDATA_N=_XDATA_START-_XDATA_END          #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA_START #
#                            -_XDATA_END                                       #
#                            -Z(XDATA)FAR_Z=[_FAR_DATA_START-_FAR_DATA_END]/10 #
#                            000                                               #
#                            -Z(XDATA)FAR_I=[_FAR_DATA_START-_FAR_DATA_END]/10 #
#                            000                                               #
#                            -Z(CODE)FAR_ID=[_FAR_CODE_START-_FAR_CODE_END]/10 #
#                            000                                               #
#                            -Z(XDATA)FAR_HEAP+_FAR_HEAP_SIZE=[_FAR_DATA_START #
#                            -_FAR_DATA_END]/10000                             #
#                            -P(XDATA)FAR_N=[_FAR_DATA_START-_FAR_DATA_END]*_F #
#                            AR_DATA_NR_OF_BANKS+10000                         #
#                            -P(CONST)FAR_ROM_C=[_FAR_DATA_START-_FAR_DATA_END #
#                            ]*_FAR_DATA_NR_OF_BANKS+10000                     #
#                            -Z(XDATA)HUGE_Z,HUGE_I=_FAR_DATA_START-_FAR_DATA_ #
#                            END                                               #
#                            -P(XDATA)HUGE_N=_FAR_DATA_START-_FAR_DATA_END     #
#                            -Z(XDATA)HUGE_HEAP+_HUGE_HEAP_SIZE=_FAR_DATA_STAR #
#                            T-_FAR_DATA_END                                   #
#                            -Z(CONST)HUGE_ROM_C=_FAR_DATA_START-_FAR_DATA_END #
#                            -cx51 -D_BLENV_ADDRESS_SPACE_START=0x7E800        #
#                            -D_BLENV_ADDRESS_SPACE_END=0x7F7FF                #
#                            -Z(CODE)BLENV_ADDRESS_SPACE=_BLENV_ADDRESS_SPACE_ #
#                            START-_BLENV_ADDRESS_SPACE_END                    #
#                            -D_BANK0_START=0x00000 -D_BANK0_END=0x07FFF       #
#                            -D_BANK1_START=0x18000 -D_BANK1_END=0x1FFFF       #
#                            -D_BANK2_START=0x28000 -D_BANK2_END=0x2FFFF       #
#                            -D_BANK3_START=0x38000 -D_BANK3_END=0x3FFFF       #
#                            -D_BANK4_START=0x48000 -D_BANK4_END=0x4FFFF       #
#                            -D_BANK5_START=0x58000 -D_BANK5_END=0x5FFFF       #
#                            -D_BANK6_START=0x68000 -D_BANK6_END=0x6FFFF       #
#                            -D_BANK7_START=0x78000                            #
#                            -D_BANK7_END=(_BLENV_ADDRESS_SPACE_START-1)       #
#                            -P(CODE)BANK0=_BANK0_START-_BANK0_END             #
#                            -P(CODE)BANK1=_BANK1_START-_BANK1_END             #
#                            -P(CODE)BANK2=_BANK2_START-_BANK2_END             #
#                            -P(CODE)BANK3=_BANK3_START-_BANK3_END             #
#                            -P(CODE)BANK4=_BANK4_START-_BANK4_END             #
#                            -P(CODE)BANK5=_BANK5_START-_BANK5_END             #
#                            -P(CODE)BANK6=_BANK6_START-_BANK6_END             #
#                            -P(CODE)BANK7=_BANK7_START-_BANK7_END             #
#                            -M(CODE)[(_CODEBANK_START+_FIRST_BANK_ADDR)-(_COD #
#                            EBANK_END+_FIRST_BANK_ADDR)]*_NR_OF_BANKS+0x10000 #
#                            =0x8000                                           #
#                            -ww69=i                                           #
#                            -D_FLASH_LOCK_BITS_START=((_NR_OF_BANKS*_FIRST_BA #
#                            NK_ADDR)+0xFFF0)                                  #
#                            -D_FLASH_LOCK_BITS_END=((_NR_OF_BANKS*_FIRST_BANK #
#                            _ADDR)+0xFFFF)                                    #
#                            -Z(CODE)FLASH_LOCK_BITS=_FLASH_LOCK_BITS_START-_F #
#                            LASH_LOCK_BITS_END                                #
#                            -U(CODE)0x0000=(CODE)_FLASH_LOCK_BITS_START-_FLAS #
#                            H_LOCK_BITS_END)                                  #
#                            -D_NR_OF_VIRTUAL_REGISTERS=10 -D?PBANK=0x93       #
#                            -e?BCALL_FF=?BCALL -e?BRET_FF=?BRET               #
#                            -e?BDISPATCH_FF=?BDISPATCH                        #
#                            -e_large_write=_formatted_write                   #
#                            -e_large_read=_formatted_read -rt                 #
#                            -Ointel-extended=E:\TexasInstruments\BLE-CC254x-1 #
#                            .4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC #
#                            2541\Exe\SimpleBLEPeripheral.hex                  #
#                            -s __program_start                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            6.4\8051\LIB\CLIB\cl-pli-blxd-1e16x01.r51"        #
#                            -D_IDATA_STACK_SIZE=0xC8                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0x00                          #
#                            -D_XDATA_STACK_SIZE=0x300                         #
#                            -D_XDATA_HEAP_SIZE=0xFF -D_FAR_HEAP_SIZE=0xFFF    #
#                            -D_HUGE_HEAP_SIZE=0xFFF -D_FAR22_HEAP_SIZE=0xFF   #
#                                                                              #
#                           Copyright (C) 1987-2012 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      0000011D  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __SystemLibrary          = CLib
  __calling_convention     = xdata_reentrant
  __code_model             = banked
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FAR22_HEAP_SIZE        000000FF 
           _HUGE_HEAP_SIZE         00000FFF 
           _FAR_HEAP_SIZE          00000FFF 
           _XDATA_HEAP_SIZE        000000FF 
           _XDATA_STACK_SIZE       00000300 
           _PDATA_STACK_SIZE       00000000 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_START   00000000 
           _IDATA_STACK_SIZE       000000C8 
           ?PBANK                  00000093 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000010 
           _FLASH_LOCK_BITS_END    0003FFFF 
           _FLASH_LOCK_BITS_START
                                   0003FFF0 
           _BANK7_END              0003E7FF 
           _BANK7_START            00038000 
           _BANK6_END              00037FFF 
           _BANK6_START            00030000 
           _BANK5_END              0002FFFF 
           _BANK5_START            00028000 
           _BANK4_END              00027FFF 
           _BANK4_START            00020000 
           _BANK3_END              0001FFFF 
           _BANK3_START            00018000 
           _BANK2_END              00017FFF 
           _BANK2_START            00010000 
           _BANK1_END              0000FFFF 
           _BANK1_START            00008000 
           _BANK0_END              00007FFF 
           _BANK0_START            00000000 
           _BLENV_ADDRESS_SPACE_END
                                   0003F7FF 
           _BLENV_ADDRESS_SPACE_START
                                   0003E800 
           _SLEEP_CODE_SPACE_END   00007FFF 
           _SLEEP_CODE_SPACE_START
                                   00007FF8 
           _FAR_CODE_END           00007FFF 
           _FAR_CODE_START         00000000 
           _FAR_DATA_END           00FFFFFF 
           _FAR_DATA_START         00010001 
           _FAR_DATA_NR_OF_BANKS   0000000E 
           ?VB                     00000020        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
           _BREG_START             00000000 
           ?PBANK_NUMBER           0000001E 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _NEAR_CODE_END          00007FFF 
           _FIRST_BANK_ADDR        00010000 
           _CODE_END               00007FFF 
           _CODE_START             00000000 
           _XDATA_END              00001EFF 
           _XDATA_START            00000001 
           _IXDATA_END             00001EFF 
           _IXDATA_START           00000001 
           _PDATA_END              00001EFF 
           _PDATA_START            00001E00 
           _IDATA_END              000000FF 
           ?CBANK                  0000009F        ?RESET_CODE_BANK (CSTARTUP)
                                                   Segment part 0 (?BANKED_CODE_SUPPORT)
           ?CBANK_MASK             000000FF 
           _CODEBANK_START         00008000 
           _CODEBANK_END           0000FFFF 
           _NR_OF_BANKS            00000007 
    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\Libraries\CC2541DB\bin\CC2541_BLE_peri.lib
  LIBRARY MODULE, NAME : att_server

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E36 - 00017E4C (0x17 bytes), align: 0
  Segment part 6.             Intra module refs:   ATT_ErrorRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ErrorRsp            00017E36 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E4D - 00017E7D (0x31 bytes), align: 0
  Segment part 8.             Intra module refs:   ATT_ExchangeMTURsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExchangeMTURsp      00017E4D 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E7E - 00017EB8 (0x3b bytes), align: 0
  Segment part 10.            Intra module refs:   ATT_FindInfoRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindInfoRsp         00017E7E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017EB9 - 00017EE2 (0x2a bytes), align: 0
  Segment part 12.            Intra module refs:   ATT_FindByTypeValueRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindByTypeValueRsp
                                   00017EB9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017EE3 - 00017F0C (0x2a bytes), align: 0
  Segment part 14.            Intra module refs:   ATT_ReadByTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByTypeRsp       00017EE3 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F0D - 00017F23 (0x17 bytes), align: 0
  Segment part 16.            Intra module refs:   ATT_ReadRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadRsp             00017F0D 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F24 - 00017F3A (0x17 bytes), align: 0
  Segment part 18.            Intra module refs:   ATT_ReadBlobRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadBlobRsp         00017F24 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F3B - 00017F51 (0x17 bytes), align: 0
  Segment part 20.            Intra module refs:   ATT_ReadMultiRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadMultiRsp        00017F3B 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F52 - 00017F7A (0x29 bytes), align: 0
  Segment part 22.            Intra module refs:   ATT_ReadByGrpTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByGrpTypeRsp    00017F52 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F7B - 00017F8D (0x13 bytes), align: 0
  Segment part 24.            Intra module refs:   ATT_WriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_WriteRsp            00017F7B 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F8E - 00017FA3 (0x16 bytes), align: 0
  Segment part 26.            Intra module refs:   ATT_PrepareWriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_PrepareWriteRsp     00017F8E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FA4 - 00017FB6 (0x13 bytes), align: 0
  Segment part 28.            Intra module refs:   ATT_ExecuteWriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExecuteWriteRsp     00017FA4 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FB7 - 00017FC6 (0x10 bytes), align: 0
  Segment part 30.            Intra module refs:   ATT_HandleValueNoti::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueNoti     00017FB7 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FC7 - 00017FCC (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   ATT_HandleValueInd
                                                   ATT_HandleValueNoti
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FCD - 00017FD0 (0x4 bytes), align: 0
  Segment part 33.            Intra module refs:   ATT_ExecuteWriteRsp
                                                   ATT_WriteRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FD1 - 00017FD8 (0x8 bytes), align: 0
  Segment part 34.            Intra module refs:   ATT_ErrorRsp
                                                   ATT_PrepareWriteRsp
                                                   ATT_ReadBlobRsp
                                                   ATT_ReadMultiRsp
                                                   ATT_ReadRsp
                                                   Segment part 32
                                                   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FD9 - 00017FDD (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   ATT_ExchangeMTURsp
                                                   ATT_FindByTypeValueRsp
                                                   ATT_FindInfoRsp
                                                   ATT_ReadByGrpTypeRsp
                                                   ATT_ReadByTypeRsp
                                                   Segment part 34
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FDE - 00017FEF (0x12 bytes), align: 0
  Segment part 36.            Intra module refs:   ATT_HandleValueInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueInd      00017FDE 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004D4 - 000004D9 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ErrorRsp::?relay    000004D4        gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004DA - 000004DF (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExchangeMTURsp::?relay
                                   000004DA        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004E0 - 000004E5 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindInfoRsp::?relay
                                   000004E0        gattProcessFindInfoReq (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004E6 - 000004EB (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindByTypeValueRsp::?relay
                                   000004E6        gattServApp_ProcessFindByTypeValueReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004EC - 000004F1 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByTypeRsp::?relay
                                   000004EC        gattServApp_ProcessReadByTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004F2 - 000004F7 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadRsp::?relay     000004F2        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004F8 - 000004FD (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadBlobRsp::?relay
                                   000004F8        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004FE - 00000503 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadMultiRsp::?relay
                                   000004FE        gattServApp_ProcessReadMultiReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000504 - 00000509 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByGrpTypeRsp::?relay
                                   00000504        gattServApp_ProcessReadByGrpTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000050A - 0000050F (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_WriteRsp::?relay    0000050A        gattServApp_ProcessWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000510 - 00000515 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_PrepareWriteRsp::?relay
                                   00000510        gattServApp_ProcessPrepareWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000516 - 0000051B (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExecuteWriteRsp::?relay
                                   00000516        gattServApp_ProcessExecuteWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000051C - 00000521 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueNoti::?relay
                                   0000051C        GATT_Notification (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000522 - 00000527 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueInd::?relay
                                   00000522        GATT_Indication (gatt_server)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : att_util

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000083E9 - 000083F8 (0x10 bytes), align: 0
  Segment part 6.             Intra module refs:   ATT_ConvertUUIDto128
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           btBaseUUID              000083E9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000135BB - 000136B9 (0xff bytes), align: 0
  Segment part 7.             Intra module refs:   ATT_ParsePacket::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePacket         000135BB 
               calls direct
               XSTACK = 00000000 ( 00000011 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000136BA - 000136BE (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   ATT_ParseFindByTypeValueReq
                                                   ATT_ParsePacket
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000136BF - 000136E6 (0x28 bytes), align: 0
  Segment part 10.            Intra module refs:   ATT_BuildErrorRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildErrorRsp       000136BF 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000136E7 - 000136E7 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   ATT_BuildErrorRsp
                                                   Segment part 117
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000136E8 - 000136EB (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   Segment part 56
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000136EC - 000136F6 (0xb bytes), align: 0
  Segment part 18.            Intra module refs:   ATT_BuildExchangeMTURsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000136F7 - 00013719 (0x23 bytes), align: 0
  Segment part 19.            Intra module refs:   ATT_ParseExchangeMTUReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExchangeMTUReq
                                   000136F7 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001371A - 0001371B (0x2 bytes), align: 0
  Segment part 21.            Intra module refs:   ATT_BuildExchangeMTURsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExchangeMTURsp
                                   0001371A 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001371C - 0001371D (0x2 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001371E - 00013724 (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   ATT_ParseExecuteWriteReq
                                                   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013725 - 00013742 (0x1e bytes), align: 0
  Segment part 30.            Intra module refs:   ATT_ParseFindInfoReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindInfoReq    00013725 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013743 - 00013747 (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   ATT_BuildErrorRsp
                                                   ATT_ParseExchangeMTUReq
                                                   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013748 - 00013808 (0xc1 bytes), align: 0
  Segment part 33.            Intra module refs:   ATT_BuildFindInfoRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindInfoRsp    00013748 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013809 - 00013814 (0xc bytes), align: 0
  Segment part 35.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013815 - 00013830 (0x1c bytes), align: 0
  Segment part 36.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013831 - 00013831 (0x1 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 36
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013832 - 00013835 (0x4 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013836 - 0001383D (0x8 bytes), align: 0
  Segment part 39.            Intra module refs:   ATT_BuildFindByTypeValueRsp
                                                   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001383E - 0001383E (0x1 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001383F - 00013846 (0x8 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013847 - 0001384D (0x7 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 36
                                                   Segment part 41
                                                   Segment part 50
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001384E - 00013856 (0x9 bytes), align: 0
  Segment part 50.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013857 - 00013925 (0xcf bytes), align: 0
  Segment part 51.            Intra module refs:   ATT_ParseFindByTypeValueReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindByTypeValueReq
                                   00013857 
               calls direct
               XSTACK = 00000004 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013926 - 0001392B (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   ATT_CompareUUID
                                                   ATT_ParseFindByTypeValueReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001392C - 0001398B (0x60 bytes), align: 0
  Segment part 54.            Intra module refs:   ATT_BuildFindByTypeValueRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindByTypeValueRsp
                                   0001392C 
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001398C - 00013994 (0x9 bytes), align: 0
  Segment part 56.            Intra module refs:   ATT_BuildErrorRsp
                                                   ATT_BuildFindByTypeValueRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013995 - 0001399C (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   ATT_BuildErrorRsp
                                                   ATT_BuildFindByTypeValueRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001399D - 000139A1 (0x5 bytes), align: 0
  Segment part 60.            Intra module refs:   ATT_CompareUUID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000139A2 - 000139A6 (0x5 bytes), align: 0
  Segment part 61.            Intra module refs:   ATT_ConvertUUIDto128
                                                   ATT_ParseWriteReq
                                                   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000139A7 - 00013A27 (0x81 bytes), align: 0
  Segment part 64.            Intra module refs:   ATT_ParseReadByTypeReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByTypeReq
                                   000139A7 
               calls direct
               XSTACK = 00000004 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A28 - 00013A2E (0x7 bytes), align: 0
  Segment part 66.            Intra module refs:   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A2F, align: 0
  Segment part 67.            Intra module refs:   ATT_BuildReadByTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByTypeRsp
                                   00013A2F 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A2F - 00013A69 (0x3b bytes), align: 0
  Segment part 69.            Intra module refs:   ATT_BuildReadByGrpTypeRsp
                                                   ATT_BuildReadByTypeRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A6A - 00013A8D (0x24 bytes), align: 0
  Segment part 74.            Intra module refs:   ATT_ParseReadReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadReq        00013A6A 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A8E - 00013A94 (0x7 bytes), align: 0
  Segment part 76.            Intra module refs:   ATT_ParseExchangeMTUReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A95 - 00013A9A (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   ATT_ParseExchangeMTUReq
                                                   ATT_ParseExecuteWriteReq
                                                   ATT_ParsePacket
                                                   ATT_ParseReadByTypeReq
                                                   ATT_ParseReadReq
                                                   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A9B - 00013AA0 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   ATT_ParseExchangeMTUReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013AA1, align: 0
  Segment part 79.            Intra module refs:   ATT_BuildReadRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadRsp        00013AA1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013AA1 - 00013AC9 (0x29 bytes), align: 0
  Segment part 81.            Intra module refs:   ATT_BuildReadBlobRsp
                                                   ATT_BuildReadMultiRsp
                                                   ATT_BuildReadRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013ACA - 00013AF5 (0x2c bytes), align: 0
  Segment part 84.            Intra module refs:   ATT_BuildPrepareWriteRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013AF6 - 00013AFA (0x5 bytes), align: 0
  Segment part 85.            Intra module refs:   Segment part 69
                                                   Segment part 84
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013AFB - 00013AFF (0x5 bytes), align: 0
  Segment part 86.            Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
                                                   ATT_ParseReadMultiReq
                                                   Segment part 81
                                                   Segment part 85
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B00 - 00013B03 (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 84
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B04 - 00013B11 (0xe bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 81
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B12 - 00013B1F (0xe bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B20 - 00013B2E (0xf bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 57
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B2F - 00013BAE (0x80 bytes), align: 0
  Segment part 91.            Intra module refs:   ATT_ParseWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseWriteReq       00013B2F 
               calls direct
               XSTACK = 00000004 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013BAF - 00013BB2 (0x4 bytes), align: 0
  Segment part 93.            Intra module refs:   ATT_CompareUUID
                                                   ATT_ParseExecuteWriteReq
                                                   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013BB3 - 00013BB8 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 108
                                                   Segment part 109
                                                   Segment part 121
                                                   Segment part 76
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013BB9 - 00013BE7 (0x2f bytes), align: 0
  Segment part 97.            Intra module refs:   ATT_BuildHandleValueInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013BE8 - 00013BEB (0x4 bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 18
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013BEC - 00013BFF (0x14 bytes), align: 0
  Segment part 99.            Intra module refs:   Segment part 89
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C00 - 00013C00 (0x1 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 90
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C01 - 00013C07 (0x7 bytes), align: 0
  Segment part 101.           Intra module refs:   Segment part 100
                                                   Segment part 13
                                                   Segment part 90
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C08 - 00013C28 (0x21 bytes), align: 0
  Segment part 106.           Intra module refs:   ATT_ParseReadBlobReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadBlobReq    00013C08 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C29 - 00013C2F (0x7 bytes), align: 0
  Segment part 108.           Intra module refs:   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C30 - 00013C54 (0x25 bytes), align: 0
  Segment part 109.           Intra module refs:   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C55 - 00013C67 (0x13 bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 109
                                                   Segment part 78
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C68 - 00013C6A (0x3 bytes), align: 0
  Segment part 111.           Intra module refs:   ATT_BuildReadBlobRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadBlobRsp    00013C68 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C6B - 00013C72 (0x8 bytes), align: 0
  Segment part 117.           Intra module refs:   ATT_BuildFindByTypeValueRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C73 - 00013CE3 (0x71 bytes), align: 0
  Segment part 118.           Intra module refs:   ATT_ParseReadMultiReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadMultiReq   00013C73 
               XSTACK = 00000004 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CE4 - 00013CEC (0x9 bytes), align: 0
  Segment part 120.           Intra module refs:   ATT_ParseReadMultiReq
                                                   Segment part 154
                                                   Segment part 69
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CED - 00013CF1 (0x5 bytes), align: 0
  Segment part 121.           Intra module refs:   ATT_ParsePacket
                                                   ATT_ParseReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CF2 - 00013CF4 (0x3 bytes), align: 0
  Segment part 122.           Intra module refs:   ATT_BuildReadMultiRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadMultiRsp   00013CF2 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CF5 - 00013CF7 (0x3 bytes), align: 0
  Segment part 127.           Intra module refs:   ATT_BuildReadByGrpTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByGrpTypeRsp
                                   00013CF5 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013CF8 - 00013D62 (0x6b bytes), align: 0
  Segment part 134.           Intra module refs:   ATT_ParsePrepareWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePrepareWriteReq
                                   00013CF8 
               calls direct
               XSTACK = 00000004 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013D63 - 00013D73 (0x11 bytes), align: 0
  Segment part 136.           Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013D74 - 00013D86 (0x13 bytes), align: 0
  Segment part 137.           Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013D87 - 00013D89 (0x3 bytes), align: 0
  Segment part 138.           Intra module refs:   ATT_BuildPrepareWriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildPrepareWriteRsp
                                   00013D87 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013D8A - 00013DB9 (0x30 bytes), align: 0
  Segment part 146.           Intra module refs:   ATT_ParseExecuteWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExecuteWriteReq
                                   00013D8A 
               XSTACK = 00000004 ( 00000000 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013DBA - 00013DBC (0x3 bytes), align: 0
  Segment part 150.           Intra module refs:   ATT_BuildHandleValueInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildHandleValueInd
                                   00013DBA 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013DBD - 00013DC8 (0xc bytes), align: 0
  Segment part 154.           Intra module refs:   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013DC9 - 00013DD3 (0xb bytes), align: 0
  Segment part 155.           Intra module refs:   ATT_ParsePrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013DD4 - 00013DD9 (0x6 bytes), align: 0
  Segment part 156.           Intra module refs:   Segment part 155
                                                   Segment part 53
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013DDA - 00013DE3 (0xa bytes), align: 0
  Segment part 157.           Intra module refs:   Segment part 155
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013DE4 - 00013ECC (0xe9 bytes), align: 0
  Segment part 160.           Intra module refs:   attSendMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           attSendMsg              00013DE4 
               calls direct
               XSTACK = 00000002 ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013ECD - 00013ED1 (0x5 bytes), align: 0
  Segment part 162.           Intra module refs:   ATT_BuildFindInfoRsp
                                                   attSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013ED2 - 00013F83 (0xb2 bytes), align: 0
  Segment part 163.           Intra module refs:   ATT_CompareUUID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_CompareUUID         00013ED2 
               calls direct
               XSTACK = 00000004 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F84 - 00013FE3 (0x60 bytes), align: 0
  Segment part 165.           Intra module refs:   ATT_ConvertUUIDto128::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ConvertUUIDto128    00013F84 
               calls direct
               XSTACK = 0000001C ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013FE4 - 00013FEC (0x9 bytes), align: 0
  Segment part 167.           Intra module refs:   ATT_ConvertUUIDto128
                                                   ATT_ParseFindByTypeValueReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013FED - 00013FEF (0x3 bytes), align: 0
  Segment part 168.           Intra module refs:   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013FF0 - 00013FF4 (0x5 bytes), align: 0
  Segment part 169.           Intra module refs:   ATT_ConvertUUIDto128
                                                   ATT_ParseReadMultiReq
                                                   Segment part 168
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000528 - 0000052D (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePacket::?relay
                                   00000528        gattProcessRxData (gatt_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000052E - 00000533 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildErrorRsp::?relay
                                   0000052E        ATT_ErrorRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000534 - 00000539 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExchangeMTUReq::?relay
                                   00000534        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000053A - 0000053F (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExchangeMTURsp::?relay
                                   0000053A        ATT_ExchangeMTURsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000540 - 00000545 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindInfoReq::?relay
                                   00000540        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000546 - 0000054B (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindInfoRsp::?relay
                                   00000546        ATT_FindInfoRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000054C - 00000551 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindByTypeValueReq::?relay
                                   0000054C        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000552 - 00000557 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindByTypeValueRsp::?relay
                                   00000552        ATT_FindByTypeValueRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000558 - 0000055D (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByTypeReq::?relay
                                   00000558        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000055E - 00000563 (0x6 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByTypeRsp::?relay
                                   0000055E        ATT_ReadByTypeRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000564 - 00000569 (0x6 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadReq::?relay
                                   00000564        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000056A - 0000056F (0x6 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadRsp::?relay
                                   0000056A        ATT_ReadRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000570 - 00000575 (0x6 bytes), align: 0
  Segment part 92.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseWriteReq::?relay
                                   00000570        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000576 - 0000057B (0x6 bytes), align: 0
  Segment part 107.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadBlobReq::?relay
                                   00000576        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000057C - 00000581 (0x6 bytes), align: 0
  Segment part 112.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadBlobRsp::?relay
                                   0000057C        ATT_ReadBlobRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000582 - 00000587 (0x6 bytes), align: 0
  Segment part 119.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadMultiReq::?relay
                                   00000582        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000588 - 0000058D (0x6 bytes), align: 0
  Segment part 123.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadMultiRsp::?relay
                                   00000588        ATT_ReadMultiRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000058E - 00000593 (0x6 bytes), align: 0
  Segment part 128.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByGrpTypeRsp::?relay
                                   0000058E        ATT_ReadByGrpTypeRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000594 - 00000599 (0x6 bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePrepareWriteReq::?relay
                                   00000594        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000059A - 0000059F (0x6 bytes), align: 0
  Segment part 139.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildPrepareWriteRsp::?relay
                                   0000059A        ATT_PrepareWriteRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005A0 - 000005A5 (0x6 bytes), align: 0
  Segment part 147.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExecuteWriteReq::?relay
                                   000005A0        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005A6 - 000005AB (0x6 bytes), align: 0
  Segment part 151.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildHandleValueInd::?relay
                                   000005A6        Segment part 32 (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005AC - 000005B1 (0x6 bytes), align: 0
  Segment part 161.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           attSendMsg::?relay      000005AC        ATT_ExchangeMTURsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   Segment part 34 (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005B2 - 000005B7 (0x6 bytes), align: 0
  Segment part 164.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_CompareUUID::?relay
                                   000005B2        GATTServApp_ReadAttr (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005B8 - 000005BD (0x6 bytes), align: 0
  Segment part 166.           Intra module refs:   ATT_CompareUUID
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ConvertUUIDto128::?relay
                                   000005B8 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000083E9 - 000083F8 (0x10 bytes), align: 0
  Segment part 177.           Intra module refs:   btBaseUUID

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_configmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000F11 - 00000F11 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_ParamsInit
                                                   gapIncSignCounter
                                                   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAppTaskID            00000F11        gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000301 - 00000301 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   GAP_ParamsInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProfileRole          00000301        GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   SM_ResponderInit (sm_rsppairing)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000302 - 00000302 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   gapGetDevAddress
                                                   gapGetDevAddressMode
                                                   gapProcessNewAddr
                                                   gapProcessRandomAddrComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDeviceAddrMode       00000302        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000303 - 00000304 (0x2 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPrivateAddrChangeTimeout
                                   00000303        GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000305 - 00000305 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   gapProcessRandomAddrComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAutoAdvPrivateAddrChange
                                   00000305        GAP_ProcessEvent (gap_task)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000306 - 00000315 (0x10 bytes), align: 0
  Segment part 12.            Intra module refs:   GAP_ParamsInit
                                                   GAP_SecParamsInit
                                                   Segment part 41
                                                   Segment part 58
                                                   gapGetDevAddress
                                                   gapGetIRK
                                                   gapGetSRK
                                                   gapReadBD_ADDRStatus
                                                   gapReadBufSizeCmdStatus
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F12 - 00000F5F (0x4e bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000316 - 0000031B (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   gapGetDevAddress
                                                   gapProcessNewAddr
                                                   gapProcessRandomAddrComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174DF - 00017506 (0x28 bytes), align: 0
  Segment part 18.            Intra module refs:   GAP_SetParamValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SetParamValue       000174DF 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017507 - 00017522 (0x1c bytes), align: 0
  Segment part 20.            Intra module refs:   GAP_GetParamValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_GetParamValue       00017507 
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017523 - 00017534 (0x12 bytes), align: 0
  Segment part 22.            Intra module refs:   GAP_GetParamValue
                                                   GAP_SetParamValue
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017535 - 00017566 (0x32 bytes), align: 0
  Segment part 23.            Intra module refs:   GAP_ParamsInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ParamsInit          00017535 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017567 - 0001756B (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   GAP_ParamsInit
                                                   GAP_SecParamsInit
                                                   gapReadBufSizeCmdStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001756C - 000175C9 (0x5e bytes), align: 0
  Segment part 26.            Intra module refs:   GAP_SecParamsInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SecParamsInit       0001756C 
               calls direct
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000175CA - 0001760F (0x46 bytes), align: 0
  Segment part 30.            Intra module refs:   gapReadBD_ADDRStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBD_ADDRStatus    000175CA 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017610 - 00017614 (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   gapProcessNewAddr
                                                   gapReadBD_ADDRStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017615 - 0001765F (0x4b bytes), align: 0
  Segment part 33.            Intra module refs:   gapReadBufSizeCmdStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBufSizeCmdStatus
                                   00017615 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017660 - 0001769F (0x40 bytes), align: 0
  Segment part 35.            Intra module refs:   gapProcessNewAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessNewAddr       00017660 
               calls direct
               XSTACK = 00000014 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000176A0 - 000176D2 (0x33 bytes), align: 0
  Segment part 37.            Intra module refs:   gapAddAddrAdj::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAddAddrAdj           000176A0 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000176D3 - 000176D5 (0x3 bytes), align: 0
  Segment part 39.            Intra module refs:   gapGetIRK
                                                   gapGetSRK
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000176D6 - 000176DC (0x7 bytes), align: 0
  Segment part 40.            Intra module refs:   GAP_GetParamValue
                                                   GAP_SetParamValue
                                                   Segment part 39
                                                   gapAddAddrAdj
                                                   gapDetermineAddrType
                                                   gapGetDevAddress
                                                   gapGetDevAddressMode
                                                   gapGetSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000176DD - 000176DF (0x3 bytes), align: 0
  Segment part 41.            Intra module refs:   GAP_SecParamsInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000176E0 - 000176E5 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   GAP_GetParamValue
                                                   GAP_SecParamsInit
                                                   Segment part 39
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000176E6 - 00017713 (0x2e bytes), align: 0
  Segment part 43.            Intra module refs:   gapDetermineAddrType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDetermineAddrType    000176E6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017714 - 000177B2 (0x9f bytes), align: 0
  Segment part 45.            Intra module refs:   gapProcessRandomAddrComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessRandomAddrComplete
                                   00017714 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177B3 - 000177B7 (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   gapIncSignCounter
                                                   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177B8 - 000177B8 (0x1 bytes), align: 0
  Segment part 48.            Intra module refs:   gapProcessRandomAddrComplete
                                                   gapReadBufSizeCmdStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177B9 - 000177BE (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   GAP_SecParamsInit
                                                   Segment part 48
                                                   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177BF - 000177C8 (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177C9 - 000177D0 (0x8 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 50
                                                   gapUpdateConnSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177D1 - 000177DA (0xa bytes), align: 0
  Segment part 52.            Intra module refs:   gapGetSRK::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSRK               000177D1 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177DB - 000177E7 (0xd bytes), align: 0
  Segment part 54.            Intra module refs:   gapGetSignCounter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSignCounter       000177DB 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177E8 - 0001780E (0x27 bytes), align: 0
  Segment part 56.            Intra module refs:   gapIncSignCounter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIncSignCounter       000177E8 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001780F - 0001781A (0xc bytes), align: 0
  Segment part 58.            Intra module refs:   gapGetSignCounter
                                                   gapIncSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001781B - 000178E6 (0xcc bytes), align: 0
  Segment part 59.            Intra module refs:   gapUpdateConnSignCounter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapUpdateConnSignCounter
                                   0001781B 
               calls direct
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000178E7 - 000178F2 (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   gapGetDevAddressMode::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddressMode    000178E7 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000178F3 - 0001790A (0x18 bytes), align: 0
  Segment part 63.            Intra module refs:   gapGetDevAddress::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddress        000178F3 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001790B - 00017914 (0xa bytes), align: 0
  Segment part 65.            Intra module refs:   gapGetIRK::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetIRK               0001790B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017915 - 00017992 (0x7e bytes), align: 0
  Segment part 67.            Intra module refs:   gapSendDeviceInitDoneEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendDeviceInitDoneEvent
                                   00017915 
               calls direct
               XSTACK = 0000000A ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017993 - 0001799B (0x9 bytes), align: 0
  Segment part 71.            Intra module refs:   gapReadBufSizeCmdStatus
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000014E - 0000014E (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   gapAppTaskID
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000014F - 0000019C (0x4e bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000854D - 00008550 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapProcessRandomAddrComplete
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ea60         0000854D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005BE - 000005C3 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SetParamValue::?relay
                                   000005BE        GAPBondMgr_Register (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_SetParameter (peripheral)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005C4 - 000005C9 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   gapUpdateConnSignCounter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_GetParamValue::?relay
                                   000005C4        GAPRole_GetParameter (peripheral)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   SM_StartPairing (sm_pairing)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   sendAuthEvent (gap_linkmgr)
                                                   smStartRspTimer (sm_mgr)
                                                   smpParsePairingReq (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005CA - 000005CF (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ParamsInit::?relay
                                   000005CA        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005D0 - 000005D5 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SecParamsInit::?relay
                                   000005D0        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005D6 - 000005DB (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBD_ADDRStatus::?relay
                                   000005D6        gapProcessHCICmdCompleteEvt (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005DC - 000005E1 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBufSizeCmdStatus::?relay
                                   000005DC        gapProcessHCICmdCompleteEvt (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005E2 - 000005E7 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessNewAddr::?relay
                                   000005E2        GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005E8 - 000005ED (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   gapProcessNewAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAddAddrAdj::?relay   000005E8        gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005EE - 000005F3 (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDetermineAddrType::?relay
                                   000005EE        gapProcessConnectionCompleteEvt (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005F4 - 000005F9 (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessRandomAddrComplete::?relay
                                   000005F4        gapProcessHCICmdCompleteEvt (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005FA - 000005FF (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSRK::?relay       000005FA        SM_GenerateAuthenSig (sm_mgr)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000600 - 00000605 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSignCounter::?relay
                                   00000600        SM_GenerateAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000606 - 0000060B (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIncSignCounter::?relay
                                   00000606        SM_GenerateAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000060C - 00000611 (0x6 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapUpdateConnSignCounter::?relay
                                   0000060C        SM_VerifyAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000612 - 00000617 (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddressMode::?relay
                                   00000612        smResponderSendNextKeyInfo (sm_rsppairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000618 - 0000061D (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddress::?relay
                                   00000618        smResponderSendNextKeyInfo (sm_rsppairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000061E - 00000623 (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetIRK::?relay       0000061E        GAP_ProcessEvent (gap_task)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000624 - 00000629 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   gapReadBD_ADDRStatus
                                                   gapReadBufSizeCmdStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendDeviceInitDoneEvent::?relay
                                   00000624 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000854D - 00008550 (0x4 bytes), align: 0
  Segment part 72.            Intra module refs:   __Constant_ea60

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_devmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000031C - 0000031D (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   gapIsAdvertising
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pGapAdvertState         0000031C        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   Segment part 47 (gap_peridevmgr)
                                                   Segment part 49 (gap_peridevmgr)
                                                   Segment part 91 (gap_peridevmgr)
                                                   gapFreeAdvertState (gap_peridevmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C788 - 0001C78E (0x7 bytes), align: 0
  Segment part 8.             Intra module refs:   GAP_ResolvePrivateAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ResolvePrivateAddr
                                   0001C788 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C78F - 0001C795 (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   GAP_ResolvePrivateAddr
                                                   gapIsAdvertising
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C796 - 0001C7AD (0x18 bytes), align: 0
  Segment part 11.            Intra module refs:   gapIsAdvertising::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIsAdvertising        0001C796 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C7AE - 0001C7C5 (0x18 bytes), align: 0
  Segment part 15.            Intra module refs:   gapValidADType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapValidADType          0001C7AE 
               XSTACK = 00000012 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C7C6 - 0001C85E (0x99 bytes), align: 0
  Segment part 17.            Intra module refs:   gapFindADType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFindADType           0001C7C6 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000062A - 0000062F (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ResolvePrivateAddr::?relay
                                   0000062A        gapBondMgrResolvePrivateAddr (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000630 - 00000635 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIsAdvertising::?relay
                                   00000630        GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000636 - 0000063B (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   gapFindADType
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapValidADType::?relay
                                   00000636 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000063C - 00000641 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFindADType::?relay   0000063C        isLimitedDiscoverableMode (gap_peridevmgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_linkmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000031E - 0000031F (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   gapFreeEstLink
                                                   gapProcessConnectionCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pEstLink                0000031E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000320 - 00000321 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   GAP_Authenticate
                                                   Segment part 22
                                                   Segment part 95
                                                   gapFreeAuthLink
                                                   gapPairingCompleteCB
                                                   gapProcessDisconnectCompleteEvt
                                                   sendAuthEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAuthLink               00000320        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000322 - 00000323 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   GAP_TerminateLinkReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pfnCentralConnCBs       00000322        gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000324 - 00000324 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   GAP_TerminateLinkReq
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000325 - 00000325 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   GAP_TerminateLinkReq
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE14 - 0000CEAC (0x99 bytes), align: 0
  Segment part 13.            Intra module refs:   GAP_TerminateLinkReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateLinkReq    0000CE14 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CEAD - 0000CEB1 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   GAP_TerminateLinkReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CEB2 - 0000CEBF (0xe bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 15
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CEC0 - 0000CF3A (0x7b bytes), align: 0
  Segment part 17.            Intra module refs:   GAP_Signable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Signable            0000CEC0 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF3B - 0000D03E (0x104 bytes), align: 0
  Segment part 19.            Intra module refs:   GAP_Authenticate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Authenticate        0000CF3B 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D03F - 0000D043 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   GAP_Authenticate
                                                   GAP_Signable
                                                   GAP_TerminateLinkReq
                                                   gapProcessDisconnectCompleteEvt
                                                   sendTerminateEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D044 - 0000D049 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   GAP_Authenticate
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D04A - 0000D04F (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D050 - 0000D055 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   GAP_Authenticate
                                                   GAP_Bond
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D056 - 0000D05B (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   gapProcessConnUpdateCompleteEvt
                                                   gapProcessConnectionCompleteEvt
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D05C - 0000D097 (0x3c bytes), align: 0
  Segment part 26.            Intra module refs:   GAP_TerminateAuth::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateAuth       0000D05C 
               calls direct
               XSTACK = 00000000 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D098 - 0000D13B (0xa4 bytes), align: 0
  Segment part 30.            Intra module refs:   GAP_PasscodeUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PasscodeUpdate      0000D098 
               calls direct
               XSTACK = 00000016 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D13C - 0000D140 (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   GAP_Bond
                                                   GAP_PasscodeUpdate
                                                   gapSendBondCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D141 - 0000D213 (0xd3 bytes), align: 0
  Segment part 33.            Intra module refs:   GAP_Bond::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Bond                0000D141 
               calls direct
               XSTACK = 00000001 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D214 - 0000D218 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   gapFreeAuthLink
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D219 - 0000D21D (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
                                                   gapFreeAuthLink
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D21E - 0000D21F (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   GAP_Bond
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D220 - 0000D227 (0x8 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 37
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D228 - 0000D386 (0x15f bytes), align: 0
  Segment part 39.            Intra module refs:   gapProcessConnectionCompleteEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnectionCompleteEvt
                                   0000D228 
               calls direct
               XSTACK = 00000000 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D387 - 0000D38B (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   GAP_Bond
                                                   gapPairingCompleteCB
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D38C - 0000D3E2 (0x57 bytes), align: 0
  Segment part 42.            Intra module refs:   gapProcessConnUpdateCompleteEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnUpdateCompleteEvt
                                   0000D38C 
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D3E3 - 0000D463 (0x81 bytes), align: 0
  Segment part 44.            Intra module refs:   gapProcessDisconnectCompleteEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessDisconnectCompleteEvt
                                   0000D3E3 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D464 - 0000D547 (0xe4 bytes), align: 0
  Segment part 46.            Intra module refs:   sendEstLinkEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendEstLinkEvent        0000D464 
               calls direct
               XSTACK = 00000020 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D548 - 0000D54C (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   gapPairingCompleteCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D54D - 0000D553 (0x7 bytes), align: 0
  Segment part 49.            Intra module refs:   GAP_Signable
                                                   gapPairingCompleteCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D554 - 0000D597 (0x44 bytes), align: 0
  Segment part 50.            Intra module refs:   sendTerminateEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sendTerminateEvent      0000D554 
               calls direct
               XSTACK = 00000016 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D598 - 0000D5A0 (0x9 bytes), align: 0
  Segment part 52.            Intra module refs:   sendTerminateEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D5A1 - 0000D626 (0x86 bytes), align: 0
  Segment part 53.            Intra module refs:   gapSendLinkUpdateEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendLinkUpdateEvent
                                   0000D5A1 
               calls direct
               XSTACK = 0000000D ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D627 - 0000D64C (0x26 bytes), align: 0
  Segment part 55.            Intra module refs:   disconnectNext::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           disconnectNext          0000D627 
               calls direct
               XSTACK = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D64D - 0000D652 (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   GAP_Authenticate
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D653 - 0000D658 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   GAP_Authenticate
                                                   Segment part 57
                                                   disconnectNext
                                                   gapFreeAuthLink
                                                   gapFreeEstLink
                                                   gapProcessConnUpdateCompleteEvt
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D659 - 0000D7FC (0x1a4 bytes), align: 0
  Segment part 59.            Intra module refs:   sendAuthEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sendAuthEvent           0000D659 
               calls direct
               XSTACK = 0000001A ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D7FD - 0000D801 (0x5 bytes), align: 0
  Segment part 61.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D802 - 0000D808 (0x7 bytes), align: 0
  Segment part 62.            Intra module refs:   sendAuthEvent
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D809 - 0000D80D (0x5 bytes), align: 0
  Segment part 63.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D80E - 0000D811 (0x4 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 62
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D812 - 0000D81A (0x9 bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 64
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D81B - 0000D825 (0xb bytes), align: 0
  Segment part 66.            Intra module refs:   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D826 - 0000D82D (0x8 bytes), align: 0
  Segment part 67.            Intra module refs:   gapPairingCompleteCB
                                                   gapSendLinkUpdateEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D82E - 0000D859 (0x2c bytes), align: 0
  Segment part 68.            Intra module refs:   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D85A - 0000D85E (0x5 bytes), align: 0
  Segment part 69.            Intra module refs:   gapPairingCompleteCB
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D85F - 0000D864 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   gapPairingCompleteCB
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D865 - 0000D86C (0x8 bytes), align: 0
  Segment part 71.            Intra module refs:   GAP_Authenticate
                                                   GAP_TerminateLinkReq
                                                   Segment part 70
                                                   gapFreeAuthLink
                                                   gapFreeEstLink
                                                   gapPairingCompleteCB
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D86D - 0000D8A7 (0x3b bytes), align: 0
  Segment part 72.            Intra module refs:   gapFreeAuthLink::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAuthLink         0000D86D 
               calls direct
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D8A8 - 0000D8AE (0x7 bytes), align: 0
  Segment part 74.            Intra module refs:   gapFreeAuthLink
                                                   gapFreeEstLink
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D8AF - 0000D8CC (0x1e bytes), align: 0
  Segment part 75.            Intra module refs:   gapFreeEstLink::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFreeEstLink          0000D8AF 
               calls direct
               XSTACK = 00000016 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D8CD - 0000D944 (0x78 bytes), align: 0
  Segment part 77.            Intra module refs:   gapSendBondCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendBondCompleteEvent
                                   0000D8CD 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D945 - 0000D947 (0x3 bytes), align: 0
  Segment part 79.            Intra module refs:   gapPasskeyNeededCB
                                                   gapSendBondCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D948 - 0000D949 (0x2 bytes), align: 0
  Segment part 80.            Intra module refs:   Segment part 79
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D94A - 0000D94F (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 80
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D950 - 0000DA04 (0xb5 bytes), align: 0
  Segment part 82.            Intra module refs:   gapSendPairingReqEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendPairingReqEvent
                                   0000D950 
               calls direct
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DA05 - 0000DA0C (0x8 bytes), align: 0
  Segment part 84.            Intra module refs:   gapPasskeyNeededCB
                                                   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DA0D - 0000DA16 (0xa bytes), align: 0
  Segment part 85.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DA17 - 0000DA1C (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DA1D - 0000DA23 (0x7 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 85
                                                   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DA24 - 0000DADB (0xb8 bytes), align: 0
  Segment part 88.            Intra module refs:   gapPasskeyNeededCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPasskeyNeededCB      0000DA24 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DADC - 0000DAE3 (0x8 bytes), align: 0
  Segment part 90.            Intra module refs:   gapPasskeyNeededCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DAE4 - 0000DAE6 (0x3 bytes), align: 0
  Segment part 91.            Intra module refs:   Segment part 49
                                                   Segment part 90
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DAE7 - 0000DAEB (0x5 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 102
                                                   Segment part 41
                                                   Segment part 70
                                                   Segment part 91
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DAEC - 0000DCDC (0x1f1 bytes), align: 0
  Segment part 93.            Intra module refs:   gapPairingCompleteCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPairingCompleteCB    0000DAEC 
               calls direct
               XSTACK = 00000008 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DCDD - 0000DCE5 (0x9 bytes), align: 0
  Segment part 95.            Intra module refs:   Segment part 35
                                                   Segment part 69
                                                   Segment part 98
                                                   Segment part 99
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DCE6 - 0000DCE8 (0x3 bytes), align: 0
  Segment part 96.            Intra module refs:   gapPasskeyNeededCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DCE9 - 0000DCEC (0x4 bytes), align: 0
  Segment part 97.            Intra module refs:   GAP_Bond
                                                   GAP_Signable
                                                   Segment part 96
                                                   gapPairingCompleteCB
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DCED - 0000DCF2 (0x6 bytes), align: 0
  Segment part 98.            Intra module refs:   gapFreeAuthLink
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DCF3 - 0000DCF8 (0x6 bytes), align: 0
  Segment part 99.            Intra module refs:   gapPairingCompleteCB
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DCF9 - 0000DCFE (0x6 bytes), align: 0
  Segment part 102.           Intra module refs:   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DCFF - 0000DD04 (0x6 bytes), align: 0
  Segment part 103.           Intra module refs:   GAP_Authenticate
                                                   GAP_Bond
                                                   Segment part 102
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000642 - 00000647 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateLinkReq::?relay
                                   00000642        GAPRole_TerminateConnection (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000648 - 0000064D (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Signable::?relay    00000648        GAPBondMgr_LinkEst (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000064E - 00000653 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Authenticate::?relay
                                   0000064E        gapBondMgrAuthenticate (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000654 - 00000659 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateAuth::?relay
                                   00000654        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000065A - 0000065F (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PasscodeUpdate::?relay
                                   0000065A        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000660 - 00000665 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Bond::?relay        00000660        gapBondMgrBondReq (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000666 - 0000066B (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnectionCompleteEvt::?relay
                                   00000666        gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000066C - 00000671 (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnUpdateCompleteEvt::?relay
                                   0000066C        gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000672 - 00000677 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessDisconnectCompleteEvt::?relay
                                   00000672        gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000678 - 0000067D (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   gapProcessConnectionCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendEstLinkEvent::?relay
                                   00000678 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000067E - 00000683 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
           LOCAL                   ADDRESS         
           =====                   =======         
           sendTerminateEvent::?relay
                                   0000067E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000684 - 00000689 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   gapProcessConnUpdateCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendLinkUpdateEvent::?relay
                                   00000684 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000068A - 0000068F (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   GAP_TerminateLinkReq
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
           LOCAL                   ADDRESS         
           =====                   =======         
           disconnectNext::?relay
                                   0000068A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000690 - 00000695 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   gapPairingCompleteCB
           LOCAL                   ADDRESS         
           =====                   =======         
           sendAuthEvent::?relay   00000690 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000696 - 0000069B (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   GAP_Authenticate
                                                   gapProcessDisconnectCompleteEvt
                                                   sendAuthEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAuthLink::?relay
                                   00000696 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000069C - 000006A1 (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   gapProcessConnectionCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFreeEstLink::?relay
                                   0000069C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006A2 - 000006A7 (0x6 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendBondCompleteEvent::?relay
                                   000006A2        smProcessEncryptChange (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006A8 - 000006AD (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendPairingReqEvent::?relay
                                   000006A8        smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006AE - 000006B3 (0x6 bytes), align: 0
  Segment part 89.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPasskeyNeededCB::?relay
                                   000006AE        smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006B4 - 000006B9 (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPairingCompleteCB::?relay
                                   000006B4        smEndPairing (sm_pairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_peridevmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000F60 - 00000F60 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_UpdateAdvertisingData
                                                   gapWriteAdvDataStatus
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000326 - 00000327 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   GAP_MakeDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   GAP_UpdateAdvertisingData
                                                   Segment part 35
                                                   Segment part 65
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000328 - 00000329 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   GAP_PeriDevMgrInit
                                                   GAP_UpdateAdvertisingData
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000032A - 0000032B (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   GAP_EndDiscoverable
                                                   gapProcessAdvertisingEvt
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F61 - 00000F66 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016895 - 00016967 (0xd3 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_MakeDiscoverable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_MakeDiscoverable    00016895 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016968 - 00016A10 (0xa9 bytes), align: 0
  Segment part 18.            Intra module refs:   GAP_UpdateAdvertisingData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_UpdateAdvertisingData
                                   00016968 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A11 - 00016A5C (0x4c bytes), align: 0
  Segment part 20.            Intra module refs:   GAP_EndDiscoverable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_EndDiscoverable     00016A11 
               calls direct
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A5D - 00016A63 (0x7 bytes), align: 0
  Segment part 31.            Intra module refs:   gapFreeAdvertState
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A64 - 00016B05 (0xa2 bytes), align: 0
  Segment part 32.            Intra module refs:   GAP_PeriDevMgrInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PeriDevMgrInit      00016A64 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B06 - 00016B0A (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   gapSetAdvParamsStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B0B - 00016B0D (0x3 bytes), align: 0
  Segment part 35.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B0E - 00016B13 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   GAP_MakeDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B14 - 00016B9F (0x8c bytes), align: 0
  Segment part 37.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapPeriProcessHCICmdCompleteEvt
                                   00016B14 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016BA0 - 00016C7E (0xdf bytes), align: 0
  Segment part 39.            Intra module refs:   gapSetAdvParams::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParams         00016BA0 
               calls direct, is indirectly called
               XSTACK = 0000000C ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C7F - 00016C8B (0xd bytes), align: 0
  Segment part 41.            Intra module refs:   gapSetAdvParams
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C8C - 00016CBA (0x2f bytes), align: 0
  Segment part 42.            Intra module refs:   gapSetAdvParamsStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParamsStatus   00016C8C 
               calls direct
               XSTACK = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016CBB - 00016DAE (0xf4 bytes), align: 0
  Segment part 44.            Intra module refs:   gapWriteAdvEnableStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvEnableStatus
                                   00016CBB 
               calls direct
               XSTACK = 0000000A ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DAF - 00016DAF (0x1 bytes), align: 0
  Segment part 46.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_MakeDiscoverable
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DB0 - 00016DB5 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 46
                                                   gapSetAdvParams
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DB6 - 00016DBA (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 47
                                                   gapSetAdvParams
                                                   gapSetAdvParamsStatus
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DBB - 00016DBE (0x4 bytes), align: 0
  Segment part 49.            Intra module refs:   gapSendMakeDiscEvent
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DBF - 00016DC7 (0x9 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   gapPeriProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DC8 - 00016DCD (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   GAP_MakeDiscoverable
                                                   Segment part 48
                                                   Segment part 50
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DCE - 00016E08 (0x3b bytes), align: 0
  Segment part 52.            Intra module refs:   gapWriteAdvDataStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvDataStatus   00016DCE 
               calls direct
               XSTACK = 0000000A ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E09 - 00016E0D (0x5 bytes), align: 0
  Segment part 54.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
                                                   gapWriteAdvDataStatus
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E0E - 00016E15 (0x8 bytes), align: 0
  Segment part 55.            Intra module refs:   gapSendMakeDiscEvent
                                                   gapWriteAdvDataStatus
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E16 - 00016ED6 (0xc1 bytes), align: 0
  Segment part 56.            Intra module refs:   gapProcessAdvertisingEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessAdvertisingEvt
                                   00016E16 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016ED7 - 00016EDB (0x5 bytes), align: 0
  Segment part 60.            Intra module refs:   GAP_MakeDiscoverable
                                                   gapProcessAdvertisingEvt
                                                   gapSendMakeDiscEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016EDC - 00016EDE (0x3 bytes), align: 0
  Segment part 65.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016EDF - 00016EE4 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   GAP_PeriDevMgrInit
                                                   Segment part 65
                                                   gapFreeAdvertState
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016EE5 - 00016EEA (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 92
                                                   gapPeriProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016EEB - 00016F26 (0x3c bytes), align: 0
  Segment part 80.            Intra module refs:   gapSendMakeDiscEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendMakeDiscEvent    00016EEB 
               calls direct
               XSTACK = 00000014 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016F27 - 00016F42 (0x1c bytes), align: 0
  Segment part 82.            Intra module refs:   gapFreeAdvertState::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAdvertState      00016F27 
               calls direct
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016F43 - 00016F9E (0x5c bytes), align: 0
  Segment part 84.            Intra module refs:   isLimitedDiscoverableMode::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           isLimitedDiscoverableMode
                                   00016F43 
               calls direct
               XSTACK = 00000014 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016F9F - 00016FA0 (0x2 bytes), align: 0
  Segment part 86.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016FA1 - 00016FA3 (0x3 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016FA4 - 00016FA8 (0x5 bytes), align: 0
  Segment part 88.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_MakeDiscoverable
                                                   Segment part 87
                                                   gapProcessAdvertisingEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016FA9 - 00016FAA (0x2 bytes), align: 0
  Segment part 89.            Intra module refs:   GAP_MakeDiscoverable
                                                   gapSendMakeDiscEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016FAB - 00016FAE (0x4 bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 89
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016FAF - 00016FB1 (0x3 bytes), align: 0
  Segment part 91.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_MakeDiscoverable
                                                   Segment part 90
                                                   gapFreeAdvertState
                                                   gapProcessAdvertisingEvt
                                                   gapSetAdvParams
                                                   gapSetAdvParamsStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016FB2 - 00016FB7 (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   GAP_MakeDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   GAP_UpdateAdvertisingData
                                                   Segment part 91
                                                   gapProcessAdvertisingEvt
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000019D - 0000019D (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000019E - 000001A3 (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000852D - 00008530 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   gapWriteAdvEnableStatus
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e8          0000852D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006BA - 000006BF (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_MakeDiscoverable::?relay
                                   000006BA        GAPRole_ProcessEvent (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006C0 - 000006C5 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_UpdateAdvertisingData::?relay
                                   000006C0        GAPRole_SetParameter (peripheral)
                                                   gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006C6 - 000006CB (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   gapProcessAdvertisingEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_EndDiscoverable::?relay
                                   000006C6        GAPRole_SetParameter (peripheral)
                                                   gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006CC - 000006D1 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PeriDevMgrInit::?relay
                                   000006CC        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006D2 - 000006D7 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 13
           LOCAL                   ADDRESS         
           =====                   =======         
           gapPeriProcessHCICmdCompleteEvt::?relay
                                   000006D2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006D8 - 000006DD (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   GAP_MakeDiscoverable
                                                   Segment part 13
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParams::?relay
                                   000006D8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006DE - 000006E3 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParamsStatus::?relay
                                   000006DE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006E4 - 000006E9 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvEnableStatus::?relay
                                   000006E4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006EA - 000006EF (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvDataStatus::?relay
                                   000006EA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006F0 - 000006F5 (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   Segment part 13
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessAdvertisingEvt::?relay
                                   000006F0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006F6 - 000006FB (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   gapSetAdvParamsStatus
                                                   gapWriteAdvEnableStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendMakeDiscEvent::?relay
                                   000006F6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006FC - 00000701 (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   GAP_MakeDiscoverable
                                                   gapProcessAdvertisingEvt
                                                   gapSendMakeDiscEvent
                                                   gapWriteAdvEnableStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAdvertState::?relay
                                   000006FC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000702 - 00000707 (0x6 bytes), align: 0
  Segment part 85.            Intra module refs:   gapSetAdvParams
                                                   gapWriteAdvEnableStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           isLimitedDiscoverableMode::?relay
                                   00000702 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000852D - 00008530 (0x4 bytes), align: 0
  Segment part 94.            Intra module refs:   __Constant_3e8

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_perilinkmgr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C90A - 0001C98D (0x84 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_SendSlaveSecurityRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SendSlaveSecurityRequest
                                   0001C90A 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000708 - 0000070D (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SendSlaveSecurityRequest::?relay
                                   00000708        GAPBondMgr_LinkEst (gapbondmgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000032C - 0000032C (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_Init
                                                   GAP_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapTaskID               0000032C        GAP_Authenticate (gap_linkmgr)
                                                   GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F67 - 00000F67 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GAP_ProcessEvent
                                                   GAP_RegisterForHCIMsgs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapUnwantedTaskID       00000F67        SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000032D - 0000032E (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
                                                   gapRegisterPeripheral
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pfnPeripheralCBs        0000032D        gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000032F - 00000330 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019967 - 00019970 (0xa bytes), align: 0
  Segment part 11.            Intra module refs:   GAP_RegisterForHCIMsgs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_RegisterForHCIMsgs
                                   00019967 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019971 - 00019974 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   gapRegisterPeripheral
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019975 - 00019975 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   GAP_RegisterForHCIMsgs
                                                   Segment part 13
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019976 - 0001997C (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   GAP_NumActiveConnections
                                                   Segment part 14
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001997D - 000199A2 (0x26 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Init                0001997D 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000199A3 - 00019AB9 (0x117 bytes), align: 0
  Segment part 18.            Intra module refs:   GAP_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ProcessEvent        000199A3 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019ABA - 00019ABE (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019ABF - 00019AC8 (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   GAP_NumActiveConnections::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_NumActiveConnections
                                   00019ABF 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019AC9 - 00019BE7 (0x11f bytes), align: 0
  Segment part 23.            Intra module refs:   gapProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessOSALMsg       00019AC9 
               calls direct
               XSTACK = 00000012 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BE8 - 00019BEA (0x3 bytes), align: 0
  Segment part 25.            Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
                                                   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BEB - 00019BF2 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   GAP_ProcessEvent
                                                   Segment part 25
                                                   gapProcessHCICmdCompleteEvt
                                                   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BF3 - 00019BFD (0xb bytes), align: 0
  Segment part 27.            Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
                                                   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BFE - 00019CC7 (0xca bytes), align: 0
  Segment part 28.            Intra module refs:   gapProcessHCICmdCompleteEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessHCICmdCompleteEvt
                                   00019BFE 
               calls direct
               XSTACK = 00000010 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019CC8 - 00019CDA (0x13 bytes), align: 0
  Segment part 30.            Intra module refs:   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019CDB - 00019CE3 (0x9 bytes), align: 0
  Segment part 31.            Intra module refs:   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019CE4 - 00019CEB (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 27
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019CEC - 00019CF5 (0xa bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
                                                   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019CF6 - 00019CFF (0xa bytes), align: 0
  Segment part 36.            Intra module refs:   gapRegisterPeripheral::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterPeripheral   00019CF6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001A4 - 000001A4 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   gapUnwantedTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000070E - 00000713 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_RegisterForHCIMsgs::?relay
                                   0000070E        GAPRole_Init (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000714 - 00000719 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Init::?relay        00000714        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000071A - 0000071F (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ProcessEvent::?relay
                                   0000071A        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000720 - 00000725 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_NumActiveConnections::?relay
                                   00000720        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000726 - 0000072B (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   GAP_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessOSALMsg::?relay
                                   00000726 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000072C - 00000731 (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   gapProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessHCICmdCompleteEvt::?relay
                                   0000072C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000732 - 00000737 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterPeripheral::?relay
                                   00000732        GAP_PeriDevMgrInit (gap_peridevmgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gapgattserver

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000331 - 00000332 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   Segment part 61
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000857A - 0000857C (0x3 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F68 - 00000F68 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000333 - 00000348 (0x16 bytes), align: 0
  Segment part 10.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F69 - 00000F69 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000349 - 0000034A (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F6A - 00000F6A (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000034B - 0000034B (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F6B - 00000F6B (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000034C - 00000351 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F6C - 00000F6C (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F6D - 00000F74 (0x8 bytes), align: 0
  Segment part 22.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F75 - 00000FCC (0x58 bytes), align: 0
  Segment part 24.            Intra module refs:   GGS_AddService
                                                   GGS_SetParameter
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008513 - 00008518 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   GGS_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapServiceCBs           00008513 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016FB8 - 000170E7 (0x130 bytes), align: 0
  Segment part 27.            Intra module refs:   GGS_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_SetParameter        00016FB8 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000170E8 - 0001710E (0x27 bytes), align: 0
  Segment part 35.            Intra module refs:   GGS_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_AddService          000170E8 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001710F - 00017113 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   GGS_AddService
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017114 - 0001711A (0x7 bytes), align: 0
  Segment part 42.            Intra module refs:   ggs_SetAttrWPermit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001711B - 00017164 (0x4a bytes), align: 0
  Segment part 43.            Intra module refs:   ggs_SetAttrWPermit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_SetAttrWPermit      0001711B 
               XSTACK = 0000000E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017165 - 000172E4 (0x180 bytes), align: 0
  Segment part 45.            Intra module refs:   ggs_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_ReadAttrCB          00017165 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000172E5 - 000172E9 (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   ggs_ReadAttrCB
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000172EA - 000172EF (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000172F0 - 000172F3 (0x4 bytes), align: 0
  Segment part 49.            Intra module refs:   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000172F4 - 000172FD (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000172FE - 00017303 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017304 - 00017309 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001730A - 0001730F (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   GGS_SetParameter
                                                   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017310 - 00017315 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017316 - 0001731B (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001731C - 00017324 (0x9 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 55
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017325 - 00017325 (0x1 bytes), align: 0
  Segment part 57.            Intra module refs:   ggs_ReadAttrCB
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017326 - 0001732B (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   GGS_SetParameter
                                                   Segment part 57
                                                   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001732C - 000174BF (0x194 bytes), align: 0
  Segment part 59.            Intra module refs:   ggs_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_WriteAttrCB         0001732C 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174C0 - 000174C3 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174C4 - 000174CB (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 61
                                                   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174CC - 000174DE (0x13 bytes), align: 0
  Segment part 63.            Intra module refs:   ggs_WriteAttrCB
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001A5 - 000001A5 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001A6 - 000001A6 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001A7 - 000001A7 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001A8 - 000001A8 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 17
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001A9 - 000001A9 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001AA - 000001B1 (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001B2 - 00000209 (0x58 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000738 - 0000073D (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_SetParameter::?relay
                                   00000738        gapBondSetupPrivFlag (gapbondmgr)
                                                   set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000073E - 00000743 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_AddService::?relay
                                   0000073E        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000744 - 00000749 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   GGS_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_SetAttrWPermit::?relay
                                   00000744 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000074A - 0000074F (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   gapServiceCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_ReadAttrCB::?relay
                                   0000074A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000750 - 00000755 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   gapServiceCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_WriteAttrCB::?relay
                                   00000750 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000857A - 0000857C (0x3 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008513 - 00008518 (0x6 bytes), align: 0
  Segment part 65.            Intra module refs:   gapServiceCBs

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gatt_server

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000352 - 00000359 (0x8 bytes), align: 0
  Segment part 6.             Intra module refs:   GATT_InitServer
                                                   gattFindServerInfo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           serverInfoTbl           00000352 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FCD - 00000FCD (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GATT_RegisterForReq
                                                   gattServerProcessMsgCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reqTaskId               00000FCD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000035A - 0000035B (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   GATT_FindHandle
                                                   GATT_FindHandleUUID
                                                   GATT_RegisterService
                                                   GATT_ServiceNumAttrs
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FCE - 00000FCF (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   GATT_RegisterService
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081DB - 0000820A (0x30 bytes), align: 0
  Segment part 12.            Intra module refs:   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AEED - 0000AF56 (0x6a bytes), align: 0
  Segment part 13.            Intra module refs:   GATT_InitServer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_InitServer         0000AEED 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AF57 - 0000B086 (0x130 bytes), align: 0
  Segment part 15.            Intra module refs:   GATT_RegisterService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterService    0000AF57 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B087 - 0000B08B (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   GATT_Indication
                                                   GATT_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B08C - 0000B091 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   GATT_RegisterService
                                                   gattProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B092 - 0000B09B (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
                                                   gattServerHandleTimerCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B09C - 0000B0AA (0xf bytes), align: 0
  Segment part 20.            Intra module refs:   GATT_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B0AB - 0000B0B5 (0xb bytes), align: 0
  Segment part 21.            Intra module refs:   GATT_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B0B6 - 0000B0BE (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   GATT_RegisterForReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterForReq     0000B0B6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B0BF - 0000B0C5 (0x7 bytes), align: 0
  Segment part 26.            Intra module refs:   GATT_RegisterForReq
                                                   GATT_ServiceNumAttrs
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B0C6 - 0000B0ED (0x28 bytes), align: 0
  Segment part 27.            Intra module refs:   GATT_VerifyReadPermissions::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyReadPermissions
                                   0000B0C6 
               calls direct
               XSTACK = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B0EE - 0000B0F2 (0x5 bytes), align: 0
  Segment part 29.            Intra module refs:   GATT_VerifyReadPermissions
                                                   GATT_VerifyWritePermissions
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B0F3 - 0000B149 (0x57 bytes), align: 0
  Segment part 30.            Intra module refs:   GATT_VerifyWritePermissions::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyWritePermissions
                                   0000B0F3 
               calls direct
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B14A - 0000B1ED (0xa4 bytes), align: 0
  Segment part 32.            Intra module refs:   GATT_ServiceChangedInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceChangedInd
                                   0000B14A 
               calls direct
               XSTACK = 00000000 ( 00000029 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B1EE - 0000B1F2 (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   GATT_ServiceChangedInd
                                                   gattProcessWriteReq
                                                   gattServerHandleTimerCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B1F3 - 0000B2F9 (0x107 bytes), align: 0
  Segment part 35.            Intra module refs:   GATT_FindHandleUUID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandleUUID     0000B1F3 
               calls direct
               XSTACK = 0000002C ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B2FA - 0000B3C3 (0xca bytes), align: 0
  Segment part 37.            Intra module refs:   GATT_FindHandle::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandle         0000B2FA 
               XSTACK = 00000010 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B3C4 - 0000B523 (0x160 bytes), align: 0
  Segment part 39.            Intra module refs:   GATT_FindNextAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindNextAttr       0000B3C4 
               calls direct
               XSTACK = 00000004 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B524 - 0000B55E (0x3b bytes), align: 0
  Segment part 41.            Intra module refs:   GATT_ServiceNumAttrs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceNumAttrs    0000B524 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B55F - 0000B566 (0x8 bytes), align: 0
  Segment part 43.            Intra module refs:   GATT_FindHandleUUID
                                                   GATT_RegisterService
                                                   GATT_ServiceNumAttrs
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B567 - 0000B605 (0x9f bytes), align: 0
  Segment part 44.            Intra module refs:   GATT_Indication::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Indication         0000B567 
               calls direct
               XSTACK = 00000024 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B606 - 0000B60B (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   GATT_Indication
                                                   Segment part 73
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B60C - 0000B658 (0x4d bytes), align: 0
  Segment part 47.            Intra module refs:   GATT_Notification::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Notification       0000B60C 
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B659 - 0000B67E (0x26 bytes), align: 0
  Segment part 49.            Intra module refs:   gattServiceLastHandle::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServiceLastHandle   0000B659 
               calls direct
               XSTACK = 00000012 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B67F - 0000B878 (0x1fa bytes), align: 0
  Segment part 51.            Intra module refs:   gattServerProcessMsgCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerProcessMsgCB
                                   0000B67F 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000031 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B879 - 0000B883 (0xb bytes), align: 0
  Segment part 53.            Intra module refs:   GATT_RegisterService
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B884 - 0000B88C (0x9 bytes), align: 0
  Segment part 54.            Intra module refs:   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B88D, align: 0
  Segment part 55.            Intra module refs:   gattProcessExchangeMTUReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExchangeMTUReq
                                   0000B88D 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B88D - 0000B891 (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   gattProcessExchangeMTUReq
                                                   gattProcessExecuteWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B892 - 0000BA5E (0x1cd bytes), align: 0
  Segment part 58.            Intra module refs:   gattProcessFindInfoReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindInfoReq
                                   0000B892 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000002C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BA5F - 0000BA6B (0xd bytes), align: 0
  Segment part 60.            Intra module refs:   gattProcessFindInfoReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BA6C - 0000BA6F (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   gattProcessFindInfoReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BA70 - 0000BA75 (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   GATT_RegisterService
                                                   Segment part 61
                                                   gattProcessFindInfoReq
                                                   gattProcessReadByGrpTypeReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BA76 - 0000BA88 (0x13 bytes), align: 0
  Segment part 63.            Intra module refs:   gattProcessFindInfoReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BA89 - 0000BA8C (0x4 bytes), align: 0
  Segment part 64.            Intra module refs:   gattProcessReadByGrpTypeReq
                                                   gattProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BA8D - 0000BA90 (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   GATT_FindHandleUUID
                                                   GATT_FindNextAttr
                                                   GATT_ServiceNumAttrs
                                                   Segment part 64
                                                   gattProcessFindInfoReq
                                                   gattProcessReadMultiReq
                                                   gattProcessReadReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BA91 - 0000BA96 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 21
                                                   Segment part 65
                                                   Segment part 73
                                                   Segment part 81
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BA97 - 0000BAE3 (0x4d bytes), align: 0
  Segment part 67.            Intra module refs:   gattProcessFindByTypeValueReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindByTypeValueReq
                                   0000BA97 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BAE4 - 0000BB2E (0x4b bytes), align: 0
  Segment part 69.            Intra module refs:   gattProcessReadByTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByTypeReq
                                   0000BAE4 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB2F - 0000BB33 (0x5 bytes), align: 0
  Segment part 71.            Intra module refs:   GATT_InitServer
                                                   gattFindServerInfo
                                                   gattGetServerStatus
                                                   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
                                                   gattProcessReadReq
                                                   gattServiceLastHandle
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB34 - 0000BB40 (0xd bytes), align: 0
  Segment part 72.            Intra module refs:   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB41 - 0000BB56 (0x16 bytes), align: 0
  Segment part 73.            Intra module refs:   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB57 - 0000BB89 (0x33 bytes), align: 0
  Segment part 74.            Intra module refs:   gattProcessReadReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadReq      0000BB57 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB8A - 0000BC11 (0x88 bytes), align: 0
  Segment part 76.            Intra module refs:   gattProcessReadMultiReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadMultiReq
                                   0000BB8A 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC12 - 0000BC13 (0x2 bytes), align: 0
  Segment part 78.            Intra module refs:   GATT_FindHandle
                                                   GATT_FindHandleUUID
                                                   GATT_ServiceChangedInd
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC14 - 0000BC15 (0x2 bytes), align: 0
  Segment part 79.            Intra module refs:   GATT_FindHandleUUID
                                                   Segment part 78
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC16 - 0000BC1B (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   GATT_FindHandle
                                                   GATT_FindNextAttr
                                                   Segment part 79
                                                   gattProcessReadByGrpTypeReq
                                                   gattProcessReadMultiReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC1C - 0000BC23 (0x8 bytes), align: 0
  Segment part 81.            Intra module refs:   GATT_FindNextAttr
                                                   gattProcessReadMultiReq
                                                   gattServerHandleTimerCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC24 - 0000BC26 (0x3 bytes), align: 0
  Segment part 82.            Intra module refs:   GATT_FindNextAttr
                                                   gattProcessFindInfoReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC27 - 0000BC2B (0x5 bytes), align: 0
  Segment part 83.            Intra module refs:   Segment part 82
                                                   gattProcessReadByGrpTypeReq
                                                   gattProcessReadMultiReq
                                                   gattServerHandleConnStatusCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC2C - 0000BCCB (0xa0 bytes), align: 0
  Segment part 84.            Intra module refs:   gattProcessReadByGrpTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByGrpTypeReq
                                   0000BC2C 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BCCC - 0000BCD4 (0x9 bytes), align: 0
  Segment part 86.            Intra module refs:   GATT_FindNextAttr
                                                   gattProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BCD5 - 0000BD0C (0x38 bytes), align: 0
  Segment part 87.            Intra module refs:   gattProcessWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessWriteReq     0000BCD5 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BD0D - 0000BD0F (0x3 bytes), align: 0
  Segment part 89.            Intra module refs:   gattProcessExecuteWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExecuteWriteReq
                                   0000BD0D 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BD10 - 0000BD57 (0x48 bytes), align: 0
  Segment part 91.            Intra module refs:   gattGetServerStatus::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattGetServerStatus     0000BD10 
               calls direct
               XSTACK = 00000010 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BD58 - 0000BD97 (0x40 bytes), align: 0
  Segment part 93.            Intra module refs:   gattFindServerInfo::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattFindServerInfo      0000BD58 
               XSTACK = 0000002D ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BD98 - 0000BDEE (0x57 bytes), align: 0
  Segment part 95.            Intra module refs:   gattServerHandleTimerCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleTimerCB
                                   0000BD98 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BDEF - 0000BEDB (0xed bytes), align: 0
  Segment part 97.            Intra module refs:   gattServerHandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleConnStatusCB
                                   0000BDEF 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000020A - 0000020A (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   reqTaskId
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000020B - 0000020C (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000756 - 0000075B (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_InitServer::?relay
                                   00000756        GATT_Init (gatt_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000075C - 00000761 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterService::?relay
                                   0000075C        GATTServApp_RegisterService (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000762 - 00000767 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterForReq::?relay
                                   00000762        GATTServApp_Init (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000768 - 0000076D (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   gattProcessReadMultiReq
                                                   gattProcessReadReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyReadPermissions::?relay
                                   00000768        gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000076E - 00000773 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   gattProcessWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyWritePermissions::?relay
                                   0000076E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000774 - 00000779 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceChangedInd::?relay
                                   00000774        GATTServApp_SendServiceChangedInd (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000077A - 0000077F (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   GATT_FindNextAttr
                                                   GATT_ServiceChangedInd
                                                   gattProcessFindByTypeValueReq
                                                   gattProcessFindInfoReq
                                                   gattProcessReadByGrpTypeReq
                                                   gattProcessReadByTypeReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandleUUID::?relay
                                   0000077A        gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000780 - 00000785 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   gattProcessReadMultiReq
                                                   gattProcessReadReq
                                                   gattProcessWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandle::?relay
                                   00000780        GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000786 - 0000078B (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindNextAttr::?relay
                                   00000786        GATTServApp_ReadAttr (gattservapp)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000078C - 00000791 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   gattServiceLastHandle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceNumAttrs::?relay
                                   0000078C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000792 - 00000797 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   GATT_ServiceChangedInd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Indication::?relay
                                   00000792        GATTServApp_ProcessCharCfg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000798 - 0000079D (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Notification::?relay
                                   00000798        GATTServApp_ProcessCharCfg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000079E - 000007A3 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   GATT_FindNextAttr
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServiceLastHandle::?relay
                                   0000079E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007A4 - 000007A9 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   GATT_InitServer
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerProcessMsgCB::?relay
                                   000007A4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007AA - 000007AF (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExchangeMTUReq::?relay
                                   000007AA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007B0 - 000007B5 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindInfoReq::?relay
                                   000007B0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007B6 - 000007BB (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindByTypeValueReq::?relay
                                   000007B6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007BC - 000007C1 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByTypeReq::?relay
                                   000007BC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007C2 - 000007C7 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadReq::?relay
                                   000007C2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007C8 - 000007CD (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadMultiReq::?relay
                                   000007C8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007CE - 000007D3 (0x6 bytes), align: 0
  Segment part 85.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByGrpTypeReq::?relay
                                   000007CE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007D4 - 000007D9 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessWriteReq::?relay
                                   000007D4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007DA - 000007DF (0x6 bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExecuteWriteReq::?relay
                                   000007DA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007E0 - 000007E5 (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   GATT_Indication
                                                   GATT_Notification
           LOCAL                   ADDRESS         
           =====                   =======         
           gattGetServerStatus::?relay
                                   000007E0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007E6 - 000007EB (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   gattGetServerStatus
                                                   gattServerHandleConnStatusCB
                                                   gattServerProcessMsgCB
           LOCAL                   ADDRESS         
           =====                   =======         
           gattFindServerInfo::?relay
                                   000007E6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007EC - 000007F1 (0x6 bytes), align: 0
  Segment part 96.            Intra module refs:   GATT_Indication
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleTimerCB::?relay
                                   000007EC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007F2 - 000007F7 (0x6 bytes), align: 0
  Segment part 98.            Intra module refs:   GATT_InitServer
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleConnStatusCB::?relay
                                   000007F2 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000081DB - 0000820A (0x30 bytes), align: 0
  Segment part 101.           Intra module refs:   Segment part 12

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gatt_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000035C - 0000035C (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GATT_Init
                                                   GATT_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattTaskID              0000035C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000035D - 0000035E (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   gattProcessRxData
                                                   gattRegisterServer
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000035F - 00000360 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A633 - 0001A639 (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   gattRegisterServer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattRegisterServer      0001A633 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A63A - 0001A63E (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   gattRegisterServer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A63F - 0001A645 (0x7 bytes), align: 0
  Segment part 12.            Intra module refs:   GATT_AppCompletedMsg
                                                   Segment part 11
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A646 - 0001A64A (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   GATT_Init
                                                   gattStopTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A64B - 0001A692 (0x48 bytes), align: 0
  Segment part 18.            Intra module refs:   GATT_AppCompletedMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_AppCompletedMsg    0001A64B 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A693 - 0001A6A8 (0x16 bytes), align: 0
  Segment part 20.            Intra module refs:   GATT_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Init               0001A693 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6A9 - 0001A6EA (0x42 bytes), align: 0
  Segment part 22.            Intra module refs:   GATT_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ProcessEvent       0001A6A9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6EB - 0001A6EF (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   GATT_ProcessEvent
                                                   gattStartTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6F0 - 0001A7F3 (0x104 bytes), align: 0
  Segment part 25.            Intra module refs:   gattProcessRxData::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessRxData       0001A6F0 
               calls direct
               XSTACK = 0000000C ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7F4 - 0001A7F7 (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7F8 - 0001A7FD (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
                                                   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7FE - 0001A803 (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   GATT_AppCompletedMsg
                                                   Segment part 28
                                                   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A804 - 0001A890 (0x8d bytes), align: 0
  Segment part 30.            Intra module refs:   gattNotifyEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattNotifyEvent         0001A804 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A891 - 0001A8DB (0x4b bytes), align: 0
  Segment part 32.            Intra module refs:   gattStartTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStartTimer          0001A891 
               calls direct
               XSTACK = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A8DC - 0001A905 (0x2a bytes), align: 0
  Segment part 34.            Intra module refs:   gattStopTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStopTimer           0001A8DC 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007F8 - 000007FD (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattRegisterServer::?relay
                                   000007F8        GATT_InitServer (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007FE - 00000803 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_AppCompletedMsg::?relay
                                   000007FE        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000804 - 00000809 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Init::?relay       00000804        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000080A - 0000080F (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ProcessEvent::?relay
                                   0000080A        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000810 - 00000815 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   GATT_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessRxData::?relay
                                   00000810 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000816 - 0000081B (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattNotifyEvent::?relay
                                   00000816        gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000081C - 00000821 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStartTimer::?relay
                                   0000081C        GATT_Indication (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000822 - 00000827 (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStopTimer::?relay   00000822        gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gattservapp

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000361 - 00000361 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GATTServApp_Init
                                                   GATTServApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_TaskID      00000361 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FD0 - 00000FD0 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GATTServApp_RegisterForMsg
                                                   GATTServApp_SendCCCUpdatedEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           appTaskID               00000FD0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000362 - 00000365 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   GATTServApp_Init
                                                   Segment part 43
                                                   gattServApp_FindPrepareWriteQ
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000366 - 00000366 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   gattServApp_HandleConnStatusCB
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000367 - 00000368 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   GATTServApp_RegisterService
                                                   gattServApp_FindServiceCBs
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000369 - 00000369 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000036A - 0000037F (0x16 bytes), align: 0
  Segment part 13.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000380 - 00000398 (0x19 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 62
                                                   Segment part 68
                                                   Segment part 69
                                                   Segment part 82
                                                   Segment part 87
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008571 - 00008573 (0x3 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FD1 - 00000FD1 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000399 - 0000039E (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   GATTServApp_Init
                                                   GATTServApp_SendServiceChangedInd
                                                   Segment part 20
                                                   gattServApp_HandleConnStatusCB
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FD2 - 00000FF1 (0x20 bytes), align: 0
  Segment part 19.            Intra module refs:   GATTServApp_AddService
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000850D - 00008512 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   GATTServApp_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattServiceCBs          0000850D 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002C00 - 00002C0B (0xc bytes), align: 0
  Segment part 22.            Intra module refs:   GATTServApp_RegisterForMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterForMsg
                                   00002C00 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002C0C - 00002C41 (0x36 bytes), align: 0
  Segment part 24.            Intra module refs:   GATTServApp_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_Init        00002C0C 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002C42 - 00002C46 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   GATTServApp_Init
                                                   GATTServApp_SendServiceChangedInd
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002C47 - 00002C8B (0x45 bytes), align: 0
  Segment part 27.            Intra module refs:   GATTServApp_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessEvent
                                   00002C47 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002C8C - 00002D39 (0xae bytes), align: 0
  Segment part 29.            Intra module refs:   GATTServApp_RegisterService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterService
                                   00002C8C 
               calls direct
               XSTACK = 0000000E ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002D3A - 00002D3D (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002D3E - 00002D43 (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002D44 - 00002D45 (0x2 bytes), align: 0
  Segment part 33.            Intra module refs:   GATTServApp_InitCharCfg
                                                   GATTServApp_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002D46 - 00002D4B (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002D4C - 00002DB5 (0x6a bytes), align: 0
  Segment part 41.            Intra module refs:   gattServApp_SetNumPrepareWrites::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_SetNumPrepareWrites
                                   00002D4C 
               calls direct
               XSTACK = 00000009 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002DB6 - 00002DCB (0x16 bytes), align: 0
  Segment part 43.            Intra module refs:   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002DCC - 00002DD1 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   GATTServApp_RegisterService
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002DD2 - 00002E36 (0x65 bytes), align: 0
  Segment part 45.            Intra module refs:   GATTServApp_FindAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_FindAttr    00002DD2 
               XSTACK = 00000033 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002E37 - 00002E5D (0x27 bytes), align: 0
  Segment part 47.            Intra module refs:   GATTServApp_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_AddService
                                   00002E37 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002E5E - 00002E62 (0x5 bytes), align: 0
  Segment part 49.            Intra module refs:   GATTServApp_AddService
                                                   GATTServApp_FindAttr
                                                   GATTServApp_ProcessEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002E63 - 00002E8E (0x2c bytes), align: 0
  Segment part 52.            Intra module refs:   gattServApp_FindServiceCBs::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindServiceCBs
                                   00002E63 
               XSTACK = 0000001D ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002E8F - 00002E95 (0x7 bytes), align: 0
  Segment part 54.            Intra module refs:   GATTServApp_RegisterForMsg
                                                   gattServApp_FindCharCfgItem
                                                   gattServApp_FindPrepareWriteQ
                                                   gattServApp_FindServiceCBs
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002E96 - 00002E9B (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   gattServApp_FindServiceCBs
                                                   gattServApp_HandleConnStatusCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002E9C - 000030B0 (0x215 bytes), align: 0
  Segment part 56.            Intra module refs:   gattServApp_ProcessMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessMsg
                                   00002E9C 
               calls direct
               XSTACK = 0000000C ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000030B1 - 000030B3 (0x3 bytes), align: 0
  Segment part 58.            Intra module refs:   GATTServApp_ReadAttr
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000030B4 - 000030B8 (0x5 bytes), align: 0
  Segment part 59.            Intra module refs:   Segment part 58
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000030B9 - 000030C2 (0xa bytes), align: 0
  Segment part 60.            Intra module refs:   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000030C3 - 000030CA (0x8 bytes), align: 0
  Segment part 61.            Intra module refs:   GATTServApp_RegisterService
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000030CB - 000030D9 (0xf bytes), align: 0
  Segment part 62.            Intra module refs:   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000030DA - 000032BD (0x1e4 bytes), align: 0
  Segment part 63.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessFindByTypeValueReq
                                   000030DA 
               calls direct
               XSTACK = 00000016 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000032BE - 0000347D (0x1c0 bytes), align: 0
  Segment part 65.            Intra module refs:   gattServApp_ProcessReadByTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByTypeReq
                                   000032BE 
               calls direct
               XSTACK = 00000016 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000347E - 00003485 (0x8 bytes), align: 0
  Segment part 67.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003486 - 0000348C (0x7 bytes), align: 0
  Segment part 68.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000348D - 00003490 (0x4 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 68
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003491 - 00003495 (0x5 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003496 - 0000349F (0xa bytes), align: 0
  Segment part 71.            Intra module refs:   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000034A0 - 000034A3 (0x4 bytes), align: 0
  Segment part 72.            Intra module refs:   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000034A4 - 000035C7 (0x124 bytes), align: 0
  Segment part 73.            Intra module refs:   gattServApp_ProcessReadMultiReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadMultiReq
                                   000034A4 
               calls direct
               XSTACK = 00000016 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000035C8 - 000035CC (0x5 bytes), align: 0
  Segment part 75.            Intra module refs:   GATTServApp_WriteAttr
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000035CD - 000035D4 (0x8 bytes), align: 0
  Segment part 76.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000035D5 - 000035DD (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000035DE - 000035E6 (0x9 bytes), align: 0
  Segment part 78.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000035E7 - 0000380E (0x228 bytes), align: 0
  Segment part 79.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByGrpTypeReq
                                   000035E7 
               calls direct
               XSTACK = 00000016 ( 00000022 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000380F - 00003818 (0xa bytes), align: 0
  Segment part 81.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003819 - 0000382A (0x12 bytes), align: 0
  Segment part 82.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000382B - 00003834 (0xa bytes), align: 0
  Segment part 83.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003835 - 0000391E (0xea bytes), align: 0
  Segment part 84.            Intra module refs:   gattServApp_ProcessWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessWriteReq
                                   00003835 
               calls direct
               XSTACK = 00000016 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000391F - 00003923 (0x5 bytes), align: 0
  Segment part 86.            Intra module refs:   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003924 - 00003927 (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003928 - 0000392D (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 87
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000392E - 00003931 (0x4 bytes), align: 0
  Segment part 89.            Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   GATTServApp_ProcessCharCfg
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_WriteAttr
                                                   Segment part 88
                                                   gattServApp_FindAuthorizeAttrCB
                                                   gattServApp_FindServiceCBs
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003932 - 00003937 (0x6 bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 44
                                                   Segment part 62
                                                   Segment part 89
                                                   Segment part 91
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003938 - 00003946 (0xf bytes), align: 0
  Segment part 91.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003947 - 00003A70 (0x12a bytes), align: 0
  Segment part 92.            Intra module refs:   gattServApp_ProcessPrepareWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessPrepareWriteReq
                                   00003947 
               calls direct
               XSTACK = 00000016 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A71 - 00003A87 (0x17 bytes), align: 0
  Segment part 94.            Intra module refs:   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A88 - 00003A89 (0x2 bytes), align: 0
  Segment part 95.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A8A - 00003A8C (0x3 bytes), align: 0
  Segment part 96.            Intra module refs:   Segment part 75
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A8D - 00003A91 (0x5 bytes), align: 0
  Segment part 97.            Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A92 - 00003B7F (0xee bytes), align: 0
  Segment part 98.            Intra module refs:   gattServApp_ProcessExecuteWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessExecuteWriteReq
                                   00003A92 
               calls direct
               XSTACK = 00000016 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B80 - 00003B82 (0x3 bytes), align: 0
  Segment part 100.           Intra module refs:   gattServApp_ProcessMsg
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B83 - 00003B87 (0x5 bytes), align: 0
  Segment part 101.           Intra module refs:   Segment part 100
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B88 - 00003B88 (0x1 bytes), align: 0
  Segment part 102.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B89 - 00003B8E (0x6 bytes), align: 0
  Segment part 103.           Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 102
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B8F - 00003B92 (0x4 bytes), align: 0
  Segment part 104.           Intra module refs:   gattServApp_ProcessReadMultiReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B93 - 00003B9B (0x9 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 104
                                                   gattServApp_ProcessFindByTypeValueReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B9C - 00003BA1 (0x6 bytes), align: 0
  Segment part 106.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_RegisterService
                                                   Segment part 105
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003BA2 - 00003BBE (0x1d bytes), align: 0
  Segment part 107.           Intra module refs:   gattServApp_FindPrepareWriteQ::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindPrepareWriteQ
                                   00003BA2 
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003BBF - 00003BF9 (0x3b bytes), align: 0
  Segment part 109.           Intra module refs:   gattServApp_FindCharCfgItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindCharCfgItem
                                   00003BBF 
               XSTACK = 0000000E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003BFA - 00003C1B (0x22 bytes), align: 0
  Segment part 111.           Intra module refs:   gattServApp_FindAuthorizeAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindAuthorizeAttrCB
                                   00003BFA 
               calls direct
               XSTACK = 0000001D ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C1C - 00003C76 (0x5b bytes), align: 0
  Segment part 113.           Intra module refs:   gattServApp_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_WriteAttrCB
                                   00003C1C 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C77 - 00003C7E (0x8 bytes), align: 0
  Segment part 115.           Intra module refs:   GATTServApp_FindAttr
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_RegisterService
                                                   GATTServApp_SendCCCUpdatedEvent
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C7F - 000040C6 (0x448 bytes), align: 0
  Segment part 116.           Intra module refs:   GATTServApp_ReadAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadAttr    00003C7F 
               calls direct
               XSTACK = 00000039 ( 00000023 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000040C7 - 000040CE (0x8 bytes), align: 0
  Segment part 118.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000040CF - 000040D7 (0x9 bytes), align: 0
  Segment part 119.           Intra module refs:   GATTServApp_ReadAttr
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000040D8 - 000040DF (0x8 bytes), align: 0
  Segment part 120.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000040E0 - 000040E3 (0x4 bytes), align: 0
  Segment part 121.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000040E4 - 000040E8 (0x5 bytes), align: 0
  Segment part 122.           Intra module refs:   GATTServApp_FindAttr
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_UpdateCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000040E9 - 000040EE (0x6 bytes), align: 0
  Segment part 123.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000040EF - 000040F6 (0x8 bytes), align: 0
  Segment part 124.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_WriteAttr
                                                   gattServApp_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000040F7 - 00004106 (0x10 bytes), align: 0
  Segment part 125.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004107 - 00004108 (0x2 bytes), align: 0
  Segment part 126.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_SendCCCUpdatedEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004109 - 0000410F (0x7 bytes), align: 0
  Segment part 127.           Intra module refs:   GATTServApp_SendCCCUpdatedEvent
                                                   Segment part 126
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004110 - 00004119 (0xa bytes), align: 0
  Segment part 128.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000411A - 00004122 (0x9 bytes), align: 0
  Segment part 129.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004123 - 0000412B (0x9 bytes), align: 0
  Segment part 130.           Intra module refs:   Segment part 129
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000412C - 00004135 (0xa bytes), align: 0
  Segment part 131.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004136 - 0000413F (0xa bytes), align: 0
  Segment part 132.           Intra module refs:   Segment part 121
                                                   Segment part 123
                                                   Segment part 131
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004140 - 000041D4 (0x95 bytes), align: 0
  Segment part 133.           Intra module refs:   GATTServApp_WriteAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteAttr   00004140 
               calls direct
               XSTACK = 0000001C ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000041D5 - 00004225 (0x51 bytes), align: 0
  Segment part 139.           Intra module refs:   GATTServApp_UpdateCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_UpdateCharCfg
                                   000041D5 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004226 - 0000424C (0x27 bytes), align: 0
  Segment part 141.           Intra module refs:   GATTServApp_SendServiceChangedInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendServiceChangedInd
                                   00004226 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000424D - 0000428D (0x41 bytes), align: 0
  Segment part 143.           Intra module refs:   GATTServApp_InitCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_InitCharCfg
                                   0000424D 
               calls direct
               XSTACK = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000428E - 00004292 (0x5 bytes), align: 0
  Segment part 145.           Intra module refs:   GATTServApp_InitCharCfg
                                                   GATTServApp_ReadCharCfg
                                                   GATTServApp_UpdateCharCfg
                                                   gattServApp_FindAuthorizeAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004293 - 0000429E (0xc bytes), align: 0
  Segment part 146.           Intra module refs:   GATTServApp_InitCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000429F - 000042BC (0x1e bytes), align: 0
  Segment part 147.           Intra module refs:   GATTServApp_ReadCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadCharCfg
                                   0000429F 
               calls direct
               XSTACK = 0000001D ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000042BD - 00004311 (0x55 bytes), align: 0
  Segment part 149.           Intra module refs:   GATTServApp_WriteCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteCharCfg
                                   000042BD 
               calls direct
               XSTACK = 00000014 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004312 - 00004316 (0x5 bytes), align: 0
  Segment part 151.           Intra module refs:   GATTServApp_RegisterService
                                                   GATTServApp_SendCCCUpdatedEvent
                                                   GATTServApp_WriteCharCfg
                                                   gattServApp_HandleConnStatusCB
                                                   gattServApp_SetNumPrepareWrites
                                                   gattServApp_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004317 - 000043DC (0xc6 bytes), align: 0
  Segment part 152.           Intra module refs:   GATTServApp_ProcessCCCWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCCCWriteReq
                                   00004317 
               calls direct
               XSTACK = 00000014 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000043DD - 000043E0 (0x4 bytes), align: 0
  Segment part 154.           Intra module refs:   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000043E1 - 000043E4 (0x4 bytes), align: 0
  Segment part 155.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   GATTServApp_ProcessCharCfg
                                                   GATTServApp_ReadAttr
                                                   Segment part 154
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000043E5 - 000043EA (0x6 bytes), align: 0
  Segment part 156.           Intra module refs:   Segment part 105
                                                   Segment part 122
                                                   Segment part 155
                                                   Segment part 157
                                                   Segment part 55
                                                   Segment part 60
                                                   Segment part 81
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000043EB - 000043F3 (0x9 bytes), align: 0
  Segment part 157.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   gattServApp_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000043F4 - 000043F5 (0x2 bytes), align: 0
  Segment part 158.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000043F6 - 000043FF (0xa bytes), align: 0
  Segment part 159.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   Segment part 158
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004400 - 0000455F (0x160 bytes), align: 0
  Segment part 160.           Intra module refs:   GATTServApp_ProcessCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCharCfg
                                   00004400 
               calls direct
               XSTACK = 00000005 ( 00000039 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004560 - 00004569 (0xa bytes), align: 0
  Segment part 162.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000456A - 00004575 (0xc bytes), align: 0
  Segment part 163.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   gattServApp_ProcessExecuteWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004576 - 000045F9 (0x84 bytes), align: 0
  Segment part 164.           Intra module refs:   gattServApp_HandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_HandleConnStatusCB
                                   00004576 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000045FA - 00004655 (0x5c bytes), align: 0
  Segment part 166.           Intra module refs:   GATTServApp_SendCCCUpdatedEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendCCCUpdatedEvent
                                   000045FA 
               calls direct
               XSTACK = 00000014 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004656 - 00004660 (0xb bytes), align: 0
  Segment part 168.           Intra module refs:   GATTServApp_SendCCCUpdatedEvent
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000020D - 0000020D (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   appTaskID
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000020E - 0000020E (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000020F - 0000022E (0x20 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000828 - 0000082D (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterForMsg::?relay
                                   00000828        GAPBondMgr_Register (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000082E - 00000833 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_Init::?relay
                                   0000082E        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000834 - 00000839 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessEvent::?relay
                                   00000834        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000083A - 0000083F (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   GATTServApp_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterService::?relay
                                   0000083A        Batt_AddService (battservice)
                                                   DevInfo_AddService (devinfoservice)
                                                   GGS_AddService (gapgattserver)
                                                   SimpleProfile_AddService (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000840 - 00000845 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   GATTServApp_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_SetNumPrepareWrites::?relay
                                   00000840 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000846 - 0000084B (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   GATTServApp_ProcessCharCfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_FindAttr::?relay
                                   00000846 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000084C - 00000851 (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_AddService::?relay
                                   0000084C        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000852 - 00000857 (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_WriteAttr
                                                   gattServApp_FindAuthorizeAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindServiceCBs::?relay
                                   00000852 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000858 - 0000085D (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   GATTServApp_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessMsg::?relay
                                   00000858 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000085E - 00000863 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessFindByTypeValueReq::?relay
                                   0000085E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000864 - 00000869 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByTypeReq::?relay
                                   00000864 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000086A - 0000086F (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadMultiReq::?relay
                                   0000086A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000870 - 00000875 (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByGrpTypeReq::?relay
                                   00000870 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000876 - 0000087B (0x6 bytes), align: 0
  Segment part 85.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessWriteReq::?relay
                                   00000876 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000087C - 00000881 (0x6 bytes), align: 0
  Segment part 93.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessPrepareWriteReq::?relay
                                   0000087C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000882 - 00000887 (0x6 bytes), align: 0
  Segment part 99.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessExecuteWriteReq::?relay
                                   00000882 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000888 - 0000088D (0x6 bytes), align: 0
  Segment part 108.           Intra module refs:   gattServApp_HandleConnStatusCB
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindPrepareWriteQ::?relay
                                   00000888 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000088E - 00000893 (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   GATTServApp_InitCharCfg
                                                   GATTServApp_ReadCharCfg
                                                   GATTServApp_WriteCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindCharCfgItem::?relay
                                   0000088E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000894 - 00000899 (0x6 bytes), align: 0
  Segment part 112.           Intra module refs:   GATTServApp_ReadAttr
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessWriteReq
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindAuthorizeAttrCB::?relay
                                   00000894 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000089A - 0000089F (0x6 bytes), align: 0
  Segment part 114.           Intra module refs:   gattServiceCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_WriteAttrCB::?relay
                                   0000089A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008A0 - 000008A5 (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadAttr::?relay
                                   000008A0        gapBondMgr_SyncCharCfg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008A6 - 000008AB (0x6 bytes), align: 0
  Segment part 134.           Intra module refs:   GATTServApp_UpdateCharCfg
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteAttr::?relay
                                   000008A6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008AC - 000008B1 (0x6 bytes), align: 0
  Segment part 140.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_UpdateCharCfg::?relay
                                   000008AC        GAPBondMgr_LinkEst (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008B2 - 000008B7 (0x6 bytes), align: 0
  Segment part 142.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendServiceChangedInd::?relay
                                   000008B2        GAPBondMgr_LinkEst (gapbondmgr)
                                                   gapBondMgrSendServiceChange (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008B8 - 000008BD (0x6 bytes), align: 0
  Segment part 144.           Intra module refs:   GATTServApp_Init
                                                   gattServApp_HandleConnStatusCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_InitCharCfg::?relay
                                   000008B8        Batt_AddService (battservice)
                                                   SimpleProfile_AddService (simpleGATTprofile)
                                                   simpleProfile_HandleConnStatusCB (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008BE - 000008C3 (0x6 bytes), align: 0
  Segment part 148.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_SendServiceChangedInd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadCharCfg::?relay
                                   000008BE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008C4 - 000008C9 (0x6 bytes), align: 0
  Segment part 150.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteCharCfg::?relay
                                   000008C4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008CA - 000008CF (0x6 bytes), align: 0
  Segment part 153.           Intra module refs:   gattServApp_WriteAttrCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCCCWriteReq::?relay
                                   000008CA        battWriteAttrCB (battservice)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008D0 - 000008D5 (0x6 bytes), align: 0
  Segment part 161.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCharCfg::?relay
                                   000008D0        SimpleProfile_SetParameter (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008D6 - 000008DB (0x6 bytes), align: 0
  Segment part 165.           Intra module refs:   GATTServApp_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_HandleConnStatusCB::?relay
                                   000008D6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008DC - 000008E1 (0x6 bytes), align: 0
  Segment part 167.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendCCCUpdatedEvent::?relay
                                   000008DC 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008571 - 00008573 (0x3 bytes), align: 0
  Segment part 169.           Intra module refs:   Segment part 15
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000850D - 00008512 (0x6 bytes), align: 0
  Segment part 170.           Intra module refs:   gattServiceCBs

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : hci

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000039F - 0000039F (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HCI_SendDataPkt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciPTMenabled           0000039F        HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_Init (hci_tl)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003A0 - 000003A0 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   HCI_HostNumCompletedPktCmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ctrlToHostEnable        000003A0        LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003A1 - 000003A2 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   HCI_HostNumCompletedPktCmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numHostBufs             000003A1        LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003A3 - 000003A3 (0x1 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciCtrlCmdToken         000003A3        Segment part 35 (hci_event)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018000 - 00018009 (0xa bytes), align: 0
  Segment part 13.            Intra module refs:   HCI_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_bm_alloc            00018000 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001800A - 0001804C (0x43 bytes), align: 0
  Segment part 18.            Intra module refs:   HCI_SendDataPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendDataPkt         0001800A 
               calls direct
               XSTACK = 00000002 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001804D - 00018060 (0x14 bytes), align: 0
  Segment part 20.            Intra module refs:   HCI_DisconnectCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_DisconnectCmd       0001804D 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018061 - 00018061 (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   HCI_ReadRssiCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018062 - 00018067 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   HCI_LE_ReadBufSizeCmd
                                                   Segment part 30
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018068 - 000180F0 (0x89 bytes), align: 0
  Segment part 37.            Intra module refs:   HCI_HostNumCompletedPktCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HostNumCompletedPktCmd
                                   00018068 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000180F1 - 000180F7 (0x7 bytes), align: 0
  Segment part 48.            Intra module refs:   HCI_LE_RandCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000180F8 - 0001811F (0x28 bytes), align: 0
  Segment part 49.            Intra module refs:   HCI_ReadBDADDRCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadBDADDRCmd       000180F8 
               calls direct
               XSTACK = 00000000 ( 00000007 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018120 - 00018157 (0x38 bytes), align: 0
  Segment part 51.            Intra module refs:   HCI_ReadRssiCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadRssiCmd         00018120 
               calls direct
               XSTACK = 00000000 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018158 - 0001815C (0x5 bytes), align: 0
  Segment part 55.            Intra module refs:   HCI_LE_ClearWhiteListCmd
                                                   HCI_LE_SetRandomAddressCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001815D - 0001818C (0x30 bytes), align: 0
  Segment part 57.            Intra module refs:   HCI_LE_ReadBufSizeCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadBufSizeCmd   0001815D 
               calls direct
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001818D - 00018193 (0x7 bytes), align: 0
  Segment part 59.            Intra module refs:   HCI_LE_ReadBufSizeCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018194 - 000181BC (0x29 bytes), align: 0
  Segment part 62.            Intra module refs:   HCI_LE_SetRandomAddressCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetRandomAddressCmd
                                   00018194 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000181BD - 00018231 (0x75 bytes), align: 0
  Segment part 64.            Intra module refs:   HCI_LE_SetAdvParamCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvParamCmd   000181BD 
               calls direct
               XSTACK = 00000006 ( 00000013 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018232 - 00018246 (0x15 bytes), align: 0
  Segment part 66.            Intra module refs:   HCI_LE_SetAdvDataCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvDataCmd    00018232 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018247 - 0001825B (0x15 bytes), align: 0
  Segment part 68.            Intra module refs:   HCI_LE_SetScanRspDataCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetScanRspDataCmd
                                   00018247 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001825C - 00018270 (0x15 bytes), align: 0
  Segment part 70.            Intra module refs:   HCI_LE_SetAdvEnableCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvEnableCmd
                                   0001825C 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018271 - 00018277 (0x7 bytes), align: 0
  Segment part 72.            Intra module refs:   HCI_LE_AddWhiteListCmd
                                                   HCI_LE_ClearWhiteListCmd
                                                   HCI_LE_SetAdvDataCmd
                                                   HCI_LE_SetAdvEnableCmd
                                                   HCI_LE_SetAdvParamCmd
                                                   HCI_LE_SetScanRspDataCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018278 - 0001827F (0x8 bytes), align: 0
  Segment part 73.            Intra module refs:   HCI_HostNumCompletedPktCmd
                                                   HCI_LE_SetRandomAddressCmd
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018280 - 0001828C (0xd bytes), align: 0
  Segment part 77.            Intra module refs:   HCI_ReadBDADDRCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001828D - 000182A0 (0x14 bytes), align: 0
  Segment part 80.            Intra module refs:   HCI_LE_ClearWhiteListCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ClearWhiteListCmd
                                   0001828D 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000182A1 - 000182B5 (0x15 bytes), align: 0
  Segment part 82.            Intra module refs:   HCI_LE_AddWhiteListCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_AddWhiteListCmd
                                   000182A1 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000182B6 - 000182B9 (0x4 bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000182BA - 000182C5 (0xc bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 155
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000182C6 - 000182FF (0x3a bytes), align: 0
  Segment part 93.            Intra module refs:   HCI_LE_RandCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_RandCmd          000182C6 
               calls direct
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018300 - 0001832B (0x2c bytes), align: 0
  Segment part 95.            Intra module refs:   HCI_LE_LtkReqReplyCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqReplyCmd   00018300 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001832C - 00018359 (0x2e bytes), align: 0
  Segment part 97.            Intra module refs:   HCI_LE_LtkReqNegReplyCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqNegReplyCmd
                                   0001832C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001835A - 0001835C (0x3 bytes), align: 0
  Segment part 109.           Intra module refs:   HCI_ReadRssiCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001835D - 00018363 (0x7 bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 109
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018364 - 00018365 (0x2 bytes), align: 0
  Segment part 121.           Intra module refs:   HCI_LE_AddWhiteListCmd
                                                   HCI_LE_SetAdvDataCmd
                                                   HCI_LE_SetAdvEnableCmd
                                                   HCI_LE_SetScanRspDataCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018366 - 00018368 (0x3 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 121
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018369 - 0001836C (0x4 bytes), align: 0
  Segment part 123.           Intra module refs:   Segment part 122
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001836D - 0001836F (0x3 bytes), align: 0
  Segment part 124.           Intra module refs:   Segment part 110
                                                   Segment part 123
                                                   Segment part 150
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018370 - 00018374 (0x5 bytes), align: 0
  Segment part 125.           Intra module refs:   HCI_DisconnectCmd
                                                   Segment part 124
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018375 - 00018377 (0x3 bytes), align: 0
  Segment part 130.           Intra module refs:   LL_RandCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018378 - 0001837C (0x5 bytes), align: 0
  Segment part 131.           Intra module refs:   HCI_SendDataPkt
                                                   Segment part 130
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001837D - 00018382 (0x6 bytes), align: 0
  Segment part 138.           Intra module refs:   HCI_LE_LtkReqReplyCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018383 - 00018389 (0x7 bytes), align: 0
  Segment part 144.           Intra module refs:   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001838A - 0001838C (0x3 bytes), align: 0
  Segment part 145.           Intra module refs:   HCI_ReadBDADDRCmd
                                                   Segment part 144
                                                   Segment part 179
                                                   Segment part 48
                                                   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001838D - 00018393 (0x7 bytes), align: 0
  Segment part 146.           Intra module refs:   HCI_bm_alloc
                                                   Segment part 145
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018394 - 00018398 (0x5 bytes), align: 0
  Segment part 149.           Intra module refs:   HCI_LE_LtkReqNegReplyCmd
                                                   HCI_LE_LtkReqReplyCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018399 - 0001839F (0x7 bytes), align: 0
  Segment part 150.           Intra module refs:   Segment part 149
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000183A0 - 000183A3 (0x4 bytes), align: 0
  Segment part 154.           Intra module refs:   HCI_LE_LtkReqNegReplyCmd
                                                   LL_EXT_ExtendRfRangeCback
                                                   LL_EXT_SetRxGainCback
                                                   LL_EXT_SetTxPowerCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000183A4 - 000183A9 (0x6 bytes), align: 0
  Segment part 155.           Intra module refs:   Segment part 138
                                                   Segment part 154
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000183AA - 000183AE (0x5 bytes), align: 0
  Segment part 179.           Intra module refs:   Segment part 203
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000183AF - 000183F7 (0x49 bytes), align: 0
  Segment part 199.           Intra module refs:   LL_RandCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RandCback            000183AF 
               calls direct
               XSTACK = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000183F8 - 00018419 (0x22 bytes), align: 0
  Segment part 201.           Intra module refs:   LL_EXT_SetRxGainCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetRxGainCback   000183F8 
               calls direct
               XSTACK = 00000000 ( 00000003 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001841A - 00018421 (0x8 bytes), align: 0
  Segment part 203.           Intra module refs:   LL_EXT_ExtendRfRangeCback
                                                   LL_EXT_SetRxGainCback
                                                   LL_EXT_SetTxPowerCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018422 - 00018446 (0x25 bytes), align: 0
  Segment part 204.           Intra module refs:   LL_EXT_SetTxPowerCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetTxPowerCback
                                   00018422 
               calls direct
               XSTACK = 00000000 ( 00000003 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018447 - 0001844C (0x6 bytes), align: 0
  Segment part 208.           Intra module refs:   HCI_HostNumCompletedPktCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001844D - 00018474 (0x28 bytes), align: 0
  Segment part 209.           Intra module refs:   LL_EXT_ExtendRfRangeCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ExtendRfRangeCback
                                   0001844D 
               calls direct
               XSTACK = 00000000 ( 00000003 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008E2 - 000008E7 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_bm_alloc::?relay    000008E2        L2CAP_bm_alloc (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008E8 - 000008ED (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendDataPkt::?relay
                                   000008E8        l2capEncapSendData (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008EE - 000008F3 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_DisconnectCmd::?relay
                                   000008EE        GAP_TerminateLinkReq (gap_linkmgr)
                                                   disconnectNext (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008F4 - 000008F9 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HostNumCompletedPktCmd::?relay
                                   000008F4        L2CAP_HostNumCompletedPkts (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008FA - 000008FF (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadBDADDRCmd::?relay
                                   000008FA        GAP_ParamsInit (gap_configmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000900 - 00000905 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadRssiCmd::?relay
                                   00000900        GAPRole_ProcessEvent (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000906 - 0000090B (0x6 bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadBufSizeCmd::?relay
                                   00000906        gapReadBD_ADDRStatus (gap_configmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000090C - 00000911 (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetRandomAddressCmd::?relay
                                   0000090C        gapProcessNewAddr (gap_configmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000912 - 00000917 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvParamCmd::?relay
                                   00000912        gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000918 - 0000091D (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvDataCmd::?relay
                                   00000918        GAP_UpdateAdvertisingData (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000091E - 00000923 (0x6 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetScanRspDataCmd::?relay
                                   0000091E        GAP_UpdateAdvertisingData (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000924 - 00000929 (0x6 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvEnableCmd::?relay
                                   00000924        GAP_EndDiscoverable (gap_peridevmgr)
                                                   gapSetAdvParamsStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000092A - 0000092F (0x6 bytes), align: 0
  Segment part 81.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ClearWhiteListCmd::?relay
                                   0000092A        gapBondMgr_SyncWhiteList (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000930 - 00000935 (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_AddWhiteListCmd::?relay
                                   00000930        gapBondMgr_SyncWhiteList (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000936 - 0000093B (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_RandCmd::?relay
                                   00000936        smProcessRandComplete (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000093C - 00000941 (0x6 bytes), align: 0
  Segment part 96.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqReplyCmd::?relay
                                   0000093C        smResponderProcessLTKReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000942 - 00000947 (0x6 bytes), align: 0
  Segment part 98.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqNegReplyCmd::?relay
                                   00000942        smResponderProcessLTKReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000948 - 0000094D (0x6 bytes), align: 0
  Segment part 200.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RandCback::?relay    00000948        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000094E - 00000953 (0x6 bytes), align: 0
  Segment part 202.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetRxGainCback::?relay
                                   0000094E        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000954 - 00000959 (0x6 bytes), align: 0
  Segment part 205.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetTxPowerCback::?relay
                                   00000954        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000095A - 0000095F (0x6 bytes), align: 0
  Segment part 210.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ExtendRfRangeCback::?relay
                                   0000095A        llProcessPostRfOps (ll_common)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : hci_data

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C388 - 0001C478 (0xf1 bytes), align: 0
  Segment part 8.             Intra module refs:   LL_RxDataCompleteCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RxDataCompleteCback
                                   0001C388 
               calls direct
               XSTACK = 00000002 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C479 - 0001C47C (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   LL_RxDataCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C47D - 0001C48A (0xe bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
                                                   Segment part 14
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C48B - 0001C48F (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   LL_RxDataCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C490 - 0001C499 (0xa bytes), align: 0
  Segment part 13.            Intra module refs:   LL_RxDataCompleteCback
                                                   Segment part 12
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C49A - 0001C4A0 (0x7 bytes), align: 0
  Segment part 14.            Intra module refs:   LL_RxDataCompleteCback
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000960 - 00000965 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RxDataCompleteCback::?relay
                                   00000960        llProcessRxData (ll_common)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : hci_event

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000003A4 - 000003A4 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_EncLtkReqCback
                                                   hciInitEventMasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bleEvtMask              000003A4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003A5 - 000003AC (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_DisconnectCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
                                                   LL_EncLtkReqCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   hciInitEventMasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pHciEvtMask             000003A5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000128E8 - 00012909 (0x22 bytes), align: 0
  Segment part 8.             Intra module refs:   hciInitEventMasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciInitEventMasks       000128E8 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001290A - 00012910 (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   hciInitEventMasks
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012911 - 00012915 (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   HCI_VendorSpecifcCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012916 - 00012A2D (0x118 bytes), align: 0
  Segment part 14.            Intra module refs:   HCI_NumOfCompletedPacketsEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_NumOfCompletedPacketsEvent
                                   00012916 
               calls direct
               XSTACK = 00000000 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012A2E - 00012A32 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   HCI_CommandCompleteEvent
                                                   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012A33 - 00012A37 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012A38 - 00012A4E (0x17 bytes), align: 0
  Segment part 18.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
                                                   Segment part 17
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012A4F - 00012A52 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012A53 - 00012A5D (0xb bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012A5E - 00012A63 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012A64 - 00012B43 (0xe0 bytes), align: 0
  Segment part 22.            Intra module refs:   HCI_CommandCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandCompleteEvent
                                   00012A64 
               calls direct
               XSTACK = 00000003 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012B44 - 00012B62 (0x1f bytes), align: 0
  Segment part 24.            Intra module refs:   HCI_VendorSpecifcCommandCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_VendorSpecifcCommandCompleteEvent
                                   00012B44 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012B63 - 00012BC3 (0x61 bytes), align: 0
  Segment part 26.            Intra module refs:   HCI_CommandStatusEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandStatusEvent
                                   00012B63 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012BC4 - 00012BDB (0x18 bytes), align: 0
  Segment part 31.            Intra module refs:   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012BDC - 00012BDF (0x4 bytes), align: 0
  Segment part 32.            Intra module refs:   LL_EncLtkReqCback
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012BE0 - 00012C1C (0x3d bytes), align: 0
  Segment part 33.            Intra module refs:   HCI_SendCommandStatusEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandStatusEvent
                                   00012BE0 
               calls direct
               XSTACK = 0000000B ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012C1D - 00012C22 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   HCI_CommandCompleteEvent
                                                   HCI_CommandStatusEvent
                                                   HCI_SendCommandCompleteEvent
                                                   HCI_SendCommandStatusEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012C23 - 00012D44 (0x122 bytes), align: 0
  Segment part 36.            Intra module refs:   HCI_SendCommandCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandCompleteEvent
                                   00012C23 
               calls direct
               XSTACK = 00000014 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012D45 - 00012D49 (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   HCI_SendControllerToHostEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012D4A - 00012D4D (0x4 bytes), align: 0
  Segment part 39.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012D4E - 00012D52 (0x5 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 39
                                                   Segment part 42
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012D53 - 00012D5D (0xb bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012D5E - 00012D62 (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012D63 - 00012D65 (0x3 bytes), align: 0
  Segment part 43.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012D66 - 00012D6C (0x7 bytes), align: 0
  Segment part 44.            Intra module refs:   LL_ConnectionCompleteCback
                                                   Segment part 43
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012D6D - 00012D71 (0x5 bytes), align: 0
  Segment part 45.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012D72 - 00012D78 (0x7 bytes), align: 0
  Segment part 46.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012D79 - 00012DEC (0x74 bytes), align: 0
  Segment part 47.            Intra module refs:   HCI_SendControllerToHostEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendControllerToHostEvent
                                   00012D79 
               calls direct
               XSTACK = 0000000D ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012DED - 00012DF0 (0x4 bytes), align: 0
  Segment part 49.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
                                                   HCI_SendCommandCompleteEvent
                                                   HCI_SendControllerToHostEvent
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012DF1 - 00012DF6 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 100
                                                   Segment part 131
                                                   Segment part 49
                                                   Segment part 77
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012DF7 - 00012E06 (0x10 bytes), align: 0
  Segment part 51.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   HCI_SendControllerToHostEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012E07 - 00012E12 (0xc bytes), align: 0
  Segment part 52.            Intra module refs:   HCI_CommandCompleteEvent
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012E13 - 00012E16 (0x4 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 45
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012E17 - 00012E1F (0x9 bytes), align: 0
  Segment part 54.            Intra module refs:   Segment part 53
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012E20 - 00012E28 (0x9 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 46
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012E29 - 00012E2D (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012E2E - 00012E31 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   HCI_SendControllerToHostEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012E32 - 00012E39 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 20
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012E3A - 00013047 (0x20e bytes), align: 0
  Segment part 66.            Intra module refs:   LL_ConnectionCompleteCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnectionCompleteCback
                                   00012E3A 
               calls direct
               XSTACK = 00000009 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013048 - 0001304D (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001304E - 00013056 (0x9 bytes), align: 0
  Segment part 69.            Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013057 - 00013064 (0xe bytes), align: 0
  Segment part 70.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013065 - 0001306C (0x8 bytes), align: 0
  Segment part 71.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001306D - 00013070 (0x4 bytes), align: 0
  Segment part 72.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013071 - 0001307A (0xa bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 72
                                                   Segment part 74
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001307B - 00013080 (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013081 - 0001308A (0xa bytes), align: 0
  Segment part 75.            Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001308B - 0001308E (0x4 bytes), align: 0
  Segment part 76.            Intra module refs:   Segment part 131
                                                   Segment part 75
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001308F - 00013094 (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 76
                                                   Segment part 87
                                                   Segment part 94
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013095 - 00013098 (0x4 bytes), align: 0
  Segment part 78.            Intra module refs:   HCI_SendControllerToHostEvent
                                                   LL_ConnectionCompleteCback
                                                   LL_EncLtkReqCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013099 - 000130A7 (0xf bytes), align: 0
  Segment part 79.            Intra module refs:   Segment part 126
                                                   Segment part 78
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000130A8 - 000130AC (0x5 bytes), align: 0
  Segment part 80.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000130AD - 000130B0 (0x4 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 71
                                                   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000130B1 - 000130BB (0xb bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 73
                                                   Segment part 81
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000130BC - 000130C0 (0x5 bytes), align: 0
  Segment part 83.            Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   Segment part 109
                                                   Segment part 119
                                                   Segment part 54
                                                   Segment part 62
                                                   Segment part 82
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000130C1 - 0001313C (0x7c bytes), align: 0
  Segment part 84.            Intra module refs:   LL_DisconnectCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DisconnectCback      000130C1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001313D - 00013146 (0xa bytes), align: 0
  Segment part 86.            Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013147 - 0001314A (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   HCI_CommandStatusEvent
                                                   LL_ConnParamUpdateCback
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001314B - 0001314E (0x4 bytes), align: 0
  Segment part 88.            Intra module refs:   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001314F - 0001315B (0xd bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 88
                                                   Segment part 90
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001315C - 00013161 (0x6 bytes), align: 0
  Segment part 90.            Intra module refs:   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013162 - 0001321A (0xb9 bytes), align: 0
  Segment part 91.            Intra module refs:   LL_ConnParamUpdateCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnParamUpdateCback
                                   00013162 
               calls direct
               XSTACK = 00000004 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001321B - 00013222 (0x8 bytes), align: 0
  Segment part 93.            Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_EncLtkReqCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013223 - 00013228 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   HCI_CommandStatusEvent
                                                   LL_ConnParamUpdateCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013229 - 0001322A (0x2 bytes), align: 0
  Segment part 95.            Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_EncLtkReqCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001322B - 0001322B (0x1 bytes), align: 0
  Segment part 96.            Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_EncLtkReqCback
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001322C - 00013233 (0x8 bytes), align: 0
  Segment part 97.            Intra module refs:   LL_ConnectionCompleteCback
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013234 - 00013237 (0x4 bytes), align: 0
  Segment part 98.            Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013238 - 0001323E (0x7 bytes), align: 0
  Segment part 99.            Intra module refs:   Segment part 131
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001323F - 00013247 (0x9 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 131
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013248 - 0001324C (0x5 bytes), align: 0
  Segment part 101.           Intra module refs:   LL_ConnParamUpdateCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001324D - 0001324E (0x2 bytes), align: 0
  Segment part 102.           Intra module refs:   HCI_CommandCompleteEvent
                                                   Segment part 101
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001324F - 0001324F (0x1 bytes), align: 0
  Segment part 103.           Intra module refs:   LL_ConnParamUpdateCback
                                                   Segment part 102
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013250 - 00013251 (0x2 bytes), align: 0
  Segment part 104.           Intra module refs:   LL_ConnectionCompleteCback
                                                   Segment part 103
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013252 - 00013257 (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   LL_EncChangeCback
                                                   Segment part 104
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013258 - 0001330F (0xb8 bytes), align: 0
  Segment part 106.           Intra module refs:   LL_ReadRemoteVersionInfoCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRemoteVersionInfoCback
                                   00013258 
               calls direct
               XSTACK = 00000004 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013310 - 00013315 (0x6 bytes), align: 0
  Segment part 108.           Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013316 - 0001331A (0x5 bytes), align: 0
  Segment part 109.           Intra module refs:   LL_DisconnectCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   Segment part 108
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001331B - 0001331C (0x2 bytes), align: 0
  Segment part 110.           Intra module refs:   HCI_SendCommandCompleteEvent
                                                   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001331D - 0001331F (0x3 bytes), align: 0
  Segment part 111.           Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   Segment part 110
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013320 - 00013324 (0x5 bytes), align: 0
  Segment part 112.           Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_EncLtkReqCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   Segment part 111
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013325 - 0001332C (0x8 bytes), align: 0
  Segment part 113.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001332D - 00013330 (0x4 bytes), align: 0
  Segment part 114.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013331 - 0001333A (0xa bytes), align: 0
  Segment part 115.           Intra module refs:   Segment part 114
                                                   Segment part 116
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001333B - 00013340 (0x6 bytes), align: 0
  Segment part 116.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013341 - 00013345 (0x5 bytes), align: 0
  Segment part 117.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013346 - 00013349 (0x4 bytes), align: 0
  Segment part 118.           Intra module refs:   Segment part 113
                                                   Segment part 117
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001334A - 00013354 (0xb bytes), align: 0
  Segment part 119.           Intra module refs:   Segment part 115
                                                   Segment part 118
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013355 - 000134AE (0x15a bytes), align: 0
  Segment part 120.           Intra module refs:   LL_EncLtkReqCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReqCback       00013355 
               calls direct
               XSTACK = 00000002 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000134AF - 00013501 (0x53 bytes), align: 0
  Segment part 122.           Intra module refs:   LL_EncChangeCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncChangeCback       000134AF 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013502 - 00013506 (0x5 bytes), align: 0
  Segment part 124.           Intra module refs:   LL_DisconnectCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013507 - 00013516 (0x10 bytes), align: 0
  Segment part 125.           Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013517 - 00013532 (0x1c bytes), align: 0
  Segment part 126.           Intra module refs:   Segment part 125
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013533 - 00013539 (0x7 bytes), align: 0
  Segment part 127.           Intra module refs:   Segment part 126
                                                   Segment part 32
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001353A - 0001358B (0x52 bytes), align: 0
  Segment part 128.           Intra module refs:   LL_EncKeyRefreshCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncKeyRefreshCback   0001353A 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001358C - 00013596 (0xb bytes), align: 0
  Segment part 130.           Intra module refs:   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013597 - 000135AE (0x18 bytes), align: 0
  Segment part 131.           Intra module refs:   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000135AF - 000135BA (0xc bytes), align: 0
  Segment part 134.           Intra module refs:   HCI_SendCommandStatusEvent
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000966 - 0000096B (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciInitEventMasks::?relay
                                   00000966        HCI_Init (hci_tl)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000096C - 00000971 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_NumOfCompletedPacketsEvent::?relay
                                   0000096C        llProcessTxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000972 - 00000977 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandCompleteEvent::?relay
                                   00000972        HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_ReadBDADDRCmd (hci)
                                                   LL_RandCback (hci)
                                                   Segment part 109 (hci)
                                                   Segment part 122 (hci)
                                                   Segment part 144 (hci)
                                                   Segment part 149 (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000978 - 0000097D (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_VendorSpecifcCommandCompleteEvent::?relay
                                   00000978        Segment part 203 (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000097E - 00000983 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandStatusEvent::?relay
                                   0000097E        HCI_DisconnectCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000984 - 00000989 (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   HCI_CommandStatusEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandStatusEvent::?relay
                                   00000984 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000098A - 0000098F (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   HCI_CommandCompleteEvent
                                                   HCI_VendorSpecifcCommandCompleteEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandCompleteEvent::?relay
                                   0000098A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000990 - 00000995 (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   HCI_SendCommandStatusEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendControllerToHostEvent::?relay
                                   00000990 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000996 - 0000099B (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnectionCompleteCback::?relay
                                   00000996        LL_ProcessEvent (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000099C - 000009A1 (0x6 bytes), align: 0
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DisconnectCback::?relay
                                   0000099C        llConnTerminate (ll_common)
                                                   llProcessRxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009A2 - 000009A7 (0x6 bytes), align: 0
  Segment part 92.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnParamUpdateCback::?relay
                                   000009A2        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009A8 - 000009AD (0x6 bytes), align: 0
  Segment part 107.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRemoteVersionInfoCback::?relay
                                   000009A8        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009AE - 000009B3 (0x6 bytes), align: 0
  Segment part 121.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReqCback::?relay
                                   000009AE        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009B4 - 000009B9 (0x6 bytes), align: 0
  Segment part 123.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncChangeCback::?relay
                                   000009B4        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009BA - 000009BF (0x6 bytes), align: 0
  Segment part 129.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncKeyRefreshCback::?relay
                                   000009BA        llProcessSlaveControlProcedures (ll_slaveEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : l2cap_if

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000003AD - 000003AD (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   L2CAP_HostNumCompletedPkts
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0EA - 0001C14B (0x62 bytes), align: 0
  Segment part 7.             Intra module refs:   L2CAP_RegisterApp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_RegisterApp       0001C0EA 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C14C - 0001C152 (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   L2CAP_HostNumCompletedPkts
                                                   L2CAP_RegisterApp
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C153 - 0001C1A6 (0x54 bytes), align: 0
  Segment part 10.            Intra module refs:   L2CAP_SendData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_SendData          0001C153 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1A7 - 0001C1C8 (0x22 bytes), align: 0
  Segment part 12.            Intra module refs:   L2CAP_CmdReject::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_CmdReject         0001C1A7 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1C9 - 0001C1CD (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   L2CAP_ConnParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1CE - 0001C1F1 (0x24 bytes), align: 0
  Segment part 19.            Intra module refs:   L2CAP_ConnParamUpdateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ConnParamUpdateReq
                                   0001C1CE 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1F2 - 0001C1F4 (0x3 bytes), align: 0
  Segment part 21.            Intra module refs:   L2CAP_CmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1F5 - 0001C1F9 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 18
                                                   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1FA - 0001C1FE (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   L2CAP_SendData
                                                   Segment part 22
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1FF - 0001C244 (0x46 bytes), align: 0
  Segment part 28.            Intra module refs:   L2CAP_HostNumCompletedPkts::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_HostNumCompletedPkts
                                   0001C1FF 
               calls direct
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009C0 - 000009C5 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_RegisterApp::?relay
                                   000009C0        GAP_Init (gap_task)
                                                   GATT_Init (gatt_task)
                                                   SM_Init (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009C6 - 000009CB (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_SendData::?relay
                                   000009C6        attSendMsg (att_util)
                                                   smSendSMMsg (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009CC - 000009D1 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_CmdReject::?relay
                                   000009CC        gapProcessOSALMsg (gap_task)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009D2 - 000009D7 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ConnParamUpdateReq::?relay
                                   000009D2        gapRole_startConnUpdate (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009D8 - 000009DD (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_HostNumCompletedPkts::?relay
                                   000009D8        GATT_AppCompletedMsg (gatt_task)
                                                   gattProcessRxData (gatt_task)
                                                   l2capProcessRxData (l2cap_task)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : l2cap_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000003AE - 000003AE (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   L2CAP_Init
                                                   L2CAP_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capTaskID             000003AE        l2capEncapSendData (l2cap_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003AF - 000003BA (0xc bytes), align: 0
  Segment part 7.             Intra module refs:   L2CAP_Init
                                                   l2capProcessReq
                                                   l2capProcessRxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFixedChannels      000003AF        L2CAP_RegisterApp (l2cap_if)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003BB - 000003D2 (0x18 bytes), align: 0
  Segment part 8.             Intra module refs:   L2CAP_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capChannels           000003BB        Segment part 103 (l2cap_util)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018475 - 000184DC (0x68 bytes), align: 0
  Segment part 9.             Intra module refs:   L2CAP_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_Init              00018475 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000184DD - 000184E1 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   L2CAP_Init
                                                   l2capProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000184E2 - 00018523 (0x42 bytes), align: 0
  Segment part 12.            Intra module refs:   L2CAP_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ProcessEvent      000184E2 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018524 - 00018528 (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   L2CAP_ProcessEvent
                                                   l2capProcessSignal
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018529 - 00018640 (0x118 bytes), align: 0
  Segment part 15.            Intra module refs:   l2capProcessRxData::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRxData      00018529 
               calls direct
               XSTACK = 0000000C ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018641 - 0001873C (0xfc bytes), align: 0
  Segment part 17.            Intra module refs:   l2capProcessSignal::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessSignal      00018641 
               calls direct
               XSTACK = 00000010 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001873D - 0001881F (0xe3 bytes), align: 0
  Segment part 19.            Intra module refs:   l2capProcessRsp::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRsp         0001873D 
               calls direct
               XSTACK = 00000018 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018820 - 000188DA (0xbb bytes), align: 0
  Segment part 21.            Intra module refs:   l2capProcessReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessReq         00018820 
               calls direct
               XSTACK = 00000018 ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000188DB - 000188E1 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   l2capProcessReq
                                                   l2capProcessRxData
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009DE - 000009E3 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_Init::?relay      000009DE        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009E4 - 000009E9 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ProcessEvent::?relay
                                   000009E4        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009EA - 000009EF (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   L2CAP_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRxData::?relay
                                   000009EA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009F0 - 000009F5 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   l2capProcessRxData
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessSignal::?relay
                                   000009F0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009F6 - 000009FB (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   l2capProcessSignal
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRsp::?relay
                                   000009F6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009FC - 00000A01 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   l2capProcessSignal
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessReq::?relay
                                   000009FC 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : l2cap_util

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000003D3 - 000003D3 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   l2capSendReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013FF5 - 0001401C (0x28 bytes), align: 0
  Segment part 7.             Intra module refs:   l2capParseSignalHdr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseSignalHdr     00013FF5 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001401D - 0001401D (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   l2capParsePacket
                                                   l2capParseSignalHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001401E - 00014025 (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014026 - 00014027 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   l2capParseCmdReject
                                                   l2capParseSignalHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014028 - 0001402B (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   Segment part 11
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001402C - 00014036 (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014037 - 00014108 (0xd2 bytes), align: 0
  Segment part 14.            Intra module refs:   l2capSendReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendReq            00014037 
               calls direct
               XSTACK = 00000004 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014109 - 000141D4 (0xcc bytes), align: 0
  Segment part 16.            Intra module refs:   l2capSendCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendCmd            00014109 
               calls direct
               XSTACK = 00000016 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000141D5 - 000141D9 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   l2capNotifyData
                                                   l2capNotifySignal
                                                   l2capSendCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000141DA - 000141E1 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   l2capSendCmd
                                                   l2capSendReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000141E2 - 000142BE (0xdd bytes), align: 0
  Segment part 20.            Intra module refs:   l2capEncapSendData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capEncapSendData      000141E2 
               calls direct
               XSTACK = 00000016 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000142BF - 000142C3 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   l2capEncapSendData
                                                   l2capParsePacket
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000142C4 - 000142D2 (0xf bytes), align: 0
  Segment part 23.            Intra module refs:   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000142D3 - 000142DB (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
                                                   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000142DC - 000143B3 (0xd8 bytes), align: 0
  Segment part 25.            Intra module refs:   l2capParsePacket::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParsePacket        000142DC 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000143B4 - 000143B5 (0x2 bytes), align: 0
  Segment part 27.            Intra module refs:   l2capParsePacket
                                                   l2capStopTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000143B6 - 000143BD (0x8 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000143BE - 0001440D (0x50 bytes), align: 0
  Segment part 29.            Intra module refs:   L2CAP_BuildCmdReject::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildCmdReject    000143BE 
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001440E - 00014412 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   L2CAP_BuildCmdReject
                                                   l2capAllocChannel
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014413 - 00014413 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   L2CAP_BuildCmdReject
                                                   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014414 - 00014417 (0x4 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
                                                   l2capEncapSendData
                                                   l2capParseSignalHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014418 - 00014426 (0xf bytes), align: 0
  Segment part 34.            Intra module refs:   L2CAP_BuildCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014427 - 000144A6 (0x80 bytes), align: 0
  Segment part 35.            Intra module refs:   l2capParseCmdReject::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseCmdReject     00014427 
               XSTACK = 00000002 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000144A7 - 000144B1 (0xb bytes), align: 0
  Segment part 37.            Intra module refs:   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000144B2 - 000144B7 (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   l2capFindLocalId
                                                   l2capNotifySignal
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000144B8 - 000144BD (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000144BE - 000144C4 (0x7 bytes), align: 0
  Segment part 50.            Intra module refs:   l2capFreeChannel
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000144C5 - 000144CD (0x9 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 69
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000144CE - 000144D2 (0x5 bytes), align: 0
  Segment part 59.            Intra module refs:   L2CAP_bm_alloc
                                                   l2capFindLocalId
                                                   l2capHandleTimerCB
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000144D3 - 000144DC (0xa bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000144DD - 00014500 (0x24 bytes), align: 0
  Segment part 65.            Intra module refs:   l2capBuildParamUpdateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildParamUpdateReq
                                   000144DD 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014501 - 00014504 (0x4 bytes), align: 0
  Segment part 67.            Intra module refs:   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014505 - 00014515 (0x11 bytes), align: 0
  Segment part 68.            Intra module refs:   Segment part 67
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014516 - 00014524 (0xf bytes), align: 0
  Segment part 69.            Intra module refs:   L2CAP_BuildCmdReject
                                                   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014525 - 00014529 (0x5 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001452A - 00014531 (0x8 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 68
                                                   Segment part 70
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014532 - 0001453F (0xe bytes), align: 0
  Segment part 72.            Intra module refs:   L2CAP_BuildCmdReject
                                                   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014540 - 00014543 (0x4 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 33
                                                   Segment part 34
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014544 - 0001454A (0x7 bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 56
                                                   Segment part 71
                                                   Segment part 73
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001454B - 0001454B (0x1 bytes), align: 0
  Segment part 75.            Intra module refs:   l2capParseSignalHdr
                                                   l2capStopTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001454C - 00014550 (0x5 bytes), align: 0
  Segment part 76.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   Segment part 75
                                                   l2capBuildParamUpdateReq
                                                   l2capParseParamUpdateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014551 - 0001458D (0x3d bytes), align: 0
  Segment part 77.            Intra module refs:   L2CAP_ParseParamUpdateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ParseParamUpdateReq
                                   00014551 
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001458E - 00014593 (0x6 bytes), align: 0
  Segment part 79.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   Segment part 42
                                                   Segment part 87
                                                   l2capHandleTimerCB
                                                   l2capSendCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014594 - 000145A5 (0x12 bytes), align: 0
  Segment part 80.            Intra module refs:   L2CAP_ParseParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000145A6 - 000145A9 (0x4 bytes), align: 0
  Segment part 81.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000145AA - 000145BC (0x13 bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 81
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000145BD - 000145D8 (0x1c bytes), align: 0
  Segment part 85.            Intra module refs:   l2capParseParamUpdateRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseParamUpdateRsp
                                   000145BD 
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000145D9 - 000145DF (0x7 bytes), align: 0
  Segment part 87.            Intra module refs:   l2capParseParamUpdateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000145E0 - 000145E5 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   l2capParseParamUpdateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000145E6 - 00014657 (0x72 bytes), align: 0
  Segment part 89.            Intra module refs:   l2capNotifyData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifyData         000145E6 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014658 - 0001465F (0x8 bytes), align: 0
  Segment part 91.            Intra module refs:   l2capEncapSendData
                                                   l2capNotifyData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014660 - 000146E4 (0x85 bytes), align: 0
  Segment part 92.            Intra module refs:   l2capNotifySignal::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifySignal       00014660 
               calls direct
               XSTACK = 0000000D ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000146E5 - 000146EE (0xa bytes), align: 0
  Segment part 94.            Intra module refs:   l2capNotifySignal
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000146EF - 000146F8 (0xa bytes), align: 0
  Segment part 95.            Intra module refs:   l2capNotifySignal
                                                   l2capSendReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000146F9 - 00014751 (0x59 bytes), align: 0
  Segment part 96.            Intra module refs:   l2capAllocChannel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capAllocChannel       000146F9 
               XSTACK = 00000012 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014752 - 0001475D (0xc bytes), align: 0
  Segment part 98.            Intra module refs:   l2capAllocChannel
                                                   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001475E - 00014772 (0x15 bytes), align: 0
  Segment part 99.            Intra module refs:   l2capFreeChannel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFreeChannel        0001475E 
               XSTACK = 00000012 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014773 - 000147A8 (0x36 bytes), align: 0
  Segment part 101.           Intra module refs:   l2capFindLocalId::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFindLocalId        00014773 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000147A9 - 000147B8 (0x10 bytes), align: 0
  Segment part 103.           Intra module refs:   l2capAllocChannel
                                                   l2capFindLocalId
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000147B9 - 000147D1 (0x19 bytes), align: 0
  Segment part 104.           Intra module refs:   l2capStopTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capStopTimer          000147B9 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000147D2 - 00014836 (0x65 bytes), align: 0
  Segment part 106.           Intra module refs:   l2capHandleTimerCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capHandleTimerCB      000147D2 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014837 - 00014839 (0x3 bytes), align: 0
  Segment part 108.           Intra module refs:   l2capHandleRxError::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capHandleRxError      00014837 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001483A - 0001485D (0x24 bytes), align: 0
  Segment part 110.           Intra module refs:   L2CAP_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_bm_alloc          0001483A 
               calls direct
               XSTACK = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A02 - 00000A07 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseSignalHdr::?relay
                                   00000A02        l2capProcessSignal (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A08 - 00000A0D (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendReq::?relay    00000A08        Segment part 18 (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A0E - 00000A13 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   l2capSendReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendCmd::?relay    00000A0E        Segment part 21 (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A14 - 00000A19 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   l2capSendCmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capEncapSendData::?relay
                                   00000A14        L2CAP_SendData (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A1A - 00000A1F (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParsePacket::?relay
                                   00000A1A        l2capProcessRxData (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A20 - 00000A25 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildCmdReject::?relay
                                   00000A20        L2CAP_CmdReject (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A26 - 00000A2B (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseCmdReject::?relay
                                   00000A26        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A2C - 00000A31 (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildParamUpdateReq::?relay
                                   00000A2C        L2CAP_ConnParamUpdateReq (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A32 - 00000A37 (0x6 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ParseParamUpdateReq::?relay
                                   00000A32        l2capProcessReq (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A38 - 00000A3D (0x6 bytes), align: 0
  Segment part 86.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseParamUpdateRsp::?relay
                                   00000A38        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A3E - 00000A43 (0x6 bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifyData::?relay
                                   00000A3E        l2capProcessRxData (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A44 - 00000A49 (0x6 bytes), align: 0
  Segment part 93.            Intra module refs:   l2capHandleTimerCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifySignal::?relay
                                   00000A44        l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A4A - 00000A4F (0x6 bytes), align: 0
  Segment part 97.            Intra module refs:   l2capSendReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capAllocChannel::?relay
                                   00000A4A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A50 - 00000A55 (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   l2capHandleTimerCB
                                                   l2capSendReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFreeChannel::?relay
                                   00000A50        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A56 - 00000A5B (0x6 bytes), align: 0
  Segment part 102.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFindLocalId::?relay
                                   00000A56        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A5C - 00000A61 (0x6 bytes), align: 0
  Segment part 105.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capStopTimer::?relay
                                   00000A5C        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A62 - 00000A67 (0x6 bytes), align: 0
  Segment part 107.           Intra module refs:   l2capSendReq
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capHandleTimerCB::?relay
                                   00000A62 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A68 - 00000A6D (0x6 bytes), align: 0
  Segment part 109.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capHandleRxError::?relay
                                   00000A68        l2capProcessSignal (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A6E - 00000A73 (0x6 bytes), align: 0
  Segment part 111.           Intra module refs:   l2capSendCmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_bm_alloc::?relay
                                   00000A6E        attSendMsg (att_util)
                                                   smSendSMMsg (smp)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : linkdb

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000003D4 - 000003F6 (0x23 bytes), align: 0
  Segment part 6.             Intra module refs:   linkDB_Find
                                                   linkDB_FindFirst
                                                   linkDB_Init
                                                   linkDB_NumActive
                                                   linkDB_PerformFunc
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003F7 - 0000040E (0x18 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 36
                                                   linkDB_Register
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A33A - 0001A361 (0x28 bytes), align: 0
  Segment part 8.             Intra module refs:   linkDB_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Init             0001A33A 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A362 - 0001A39F (0x3e bytes), align: 0
  Segment part 10.            Intra module refs:   linkDB_Register::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Register         0001A362 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A3A0 - 0001A45D (0xbe bytes), align: 0
  Segment part 12.            Intra module refs:   linkDB_Add::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Add              0001A3A0 
               calls direct
               XSTACK = 00000004 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A45E - 0001A4C4 (0x67 bytes), align: 0
  Segment part 14.            Intra module refs:   linkDB_Remove::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Remove           0001A45E 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4C5 - 0001A4E0 (0x1c bytes), align: 0
  Segment part 18.            Intra module refs:   linkDB_Find::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Find             0001A4C5 
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4E1 - 0001A501 (0x21 bytes), align: 0
  Segment part 20.            Intra module refs:   linkDB_FindFirst::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_FindFirst        0001A4E1 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A502 - 0001A508 (0x7 bytes), align: 0
  Segment part 22.            Intra module refs:   linkDB_Find
                                                   linkDB_FindFirst
                                                   linkDB_Init
                                                   linkDB_NumActive
                                                   linkDB_PerformFunc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A509 - 0001A533 (0x2b bytes), align: 0
  Segment part 23.            Intra module refs:   linkDB_State::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_State            0001A509 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A534 - 0001A538 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   linkDB_Remove
                                                   linkDB_State
                                                   reportStatusChange
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A539 - 0001A547 (0xf bytes), align: 0
  Segment part 26.            Intra module refs:   linkDB_NumActive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_NumActive        0001A539 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A548 - 0001A5BB (0x74 bytes), align: 0
  Segment part 28.            Intra module refs:   linkDB_Authen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Authen           0001A548 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A5BC - 0001A5BF (0x4 bytes), align: 0
  Segment part 30.            Intra module refs:   linkDB_Add
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A5C0 - 0001A5C4 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 30
                                                   linkDB_Authen
                                                   linkDB_Remove
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A5C5 - 0001A5EA (0x26 bytes), align: 0
  Segment part 32.            Intra module refs:   linkDB_PerformFunc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_PerformFunc      0001A5C5 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A5EB - 0001A621 (0x37 bytes), align: 0
  Segment part 34.            Intra module refs:   reportStatusChange::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           reportStatusChange      0001A5EB 
               XSTACK = 00000014 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A622 - 0001A632 (0x11 bytes), align: 0
  Segment part 36.            Intra module refs:   linkDB_Init
                                                   reportStatusChange
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A74 - 00000A79 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Init::?relay     00000A74        GAP_Init (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A7A - 00000A7F (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Register::?relay
                                   00000A7A        GATTServApp_Init (gattservapp)
                                                   GATT_InitServer (gatt_server)
                                                   SM_Init (sm_task)
                                                   SimpleProfile_AddService (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A80 - 00000A85 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Add::?relay      00000A80        gapProcessConnectionCompleteEvt (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A86 - 00000A8B (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Remove::?relay   00000A86        gapProcessDisconnectCompleteEvt (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A8C - 00000A91 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   linkDB_Add
                                                   linkDB_Authen
                                                   linkDB_Remove
                                                   linkDB_State
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Find::?relay     00000A8C        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt (gap_linkmgr)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   sendAuthEvent (gap_linkmgr)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A92 - 00000A97 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_FindFirst::?relay
                                   00000A92        disconnectNext (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A98 - 00000A9D (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_State::?relay    00000A98        L2CAP_SendData (l2cap_if)
                                                   attSendMsg (att_util)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   l2capSendReq (l2cap_util)
                                                   simpleProfile_HandleConnStatusCB (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A9E - 00000AA3 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_NumActive::?relay
                                   00000A9E        GAP_NumActiveConnections (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AA4 - 00000AA9 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Authen::?relay   00000AA4        GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_VerifyReadPermissions (gatt_server)
                                                   GATT_VerifyWritePermissions (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AAA - 00000AAF (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_PerformFunc::?relay
                                   00000AAA        GAPBondMgr_ServiceChangeInd (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AB0 - 00000AB5 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   linkDB_Add
                                                   linkDB_Remove
           LOCAL                   ADDRESS         
           =====                   =======         
           reportStatusChange::?relay
                                   00000AB0 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000AE - 000000AE (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PMUX                    000000AE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDCTL                   000000C9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D9 - 000000D9 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessRxData (ll_common)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupEncRsp (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncReq (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     000000D9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E1 - 000000E1 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_Reset
                                                   LL_SetAdvControl
                                                   PHY_CommitRxFifo (phy)
                                                   PHY_DeallocateRxFifo (phy)
                                                   PHY_RetryRxFifo (phy)
                                                   PHY_RetryTxFifo (phy)
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llReleaseAllConnId (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSave_rxFIFO (ll_scheduler)
                                                   llSave_txFIFO (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llSetupAdv (ll_common)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupEncRsp (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncReq (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    000000E1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APCFG                   000000F2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000040F - 00000414 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   LL_Init
                                                   LL_ReadBDADDR
                                                   LL_SetAdvParam
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ownPublicAddr           0000040F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000415 - 0000041A (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   LL_Init
                                                   LL_SetAdvParam
                                                   LL_SetRandomAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ownRandomAddr           00000415 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000041B - 00000420 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ownSavedPublicAddr      0000041B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000421 - 00000421 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   LL_Init
                                                   LL_ProcessEvent
                                                   LL_SetAdvControl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TaskID               00000421        LL_PowerOnReq (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduleTask (ll_scheduler)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000422 - 00000422 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   LL_EncLtkNegReply
                                                   LL_EncLtkReply
                                                   LL_ProcessEvent
                                                   LL_Rand
                                                   LL_ReadRssi
                                                   LL_Reset
                                                   LL_SetAdvControl
                                                   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llState                 00000422        LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llFreeTask (ll_scheduler)
                                                   llProcessRxData (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000423 - 00000423 (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskEndCause            00000423        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000424 - 00000425 (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   LL_Rand
                                                   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           postRfOperations        00000424        llProcessPostRfOps (ll_common)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000426 - 00000426 (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   LL_ReadRssi
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rssiCorrection          00000426        llExtendRfRange (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000427 - 00000427 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clkDivOnHalt            00000427        llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000428 - 00000428 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   LL_ProcessEvent
                                                   LL_Reset
                                                   LL_SetAdvControl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nvInUse                 00000428        llScheduleTask (ll_scheduler)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000429 - 00000434 (0xc bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rfCounters              00000429        llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000435 - 0000043D (0x9 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deviceFeatureSet        00000435        llAllocConnId (ll_common)
                                                   llInitFeatureSet (ll_common)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000043E - 0000043E (0x1 bytes), align: 0
  Segment part 36.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maxTxPwrForDTM          0000043E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000043F - 00000443 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           verInfo                 0000043F        llSetupVersionIndReq (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000444 - 0000044B (0x8 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dtmInfo                 00000444        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000044C - 0000044D (0x2 bytes), align: 0
  Segment part 39.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           buildInfo               0000044C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000044E - 00000554 (0x107 bytes), align: 0
  Segment part 40.            Intra module refs:   LL_Disconnect
                                                   LL_EncLtkNegReply
                                                   LL_EncLtkReply
                                                   LL_ProcessEvent
                                                   LL_ReadRssi
                                                   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConns                 0000044E        RF_NormalIsr (ll_isr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocConnId (ll_common)
                                                   llConnCleanup (ll_common)
                                                   llGetNextConn (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llReleaseAllConnId (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llStartSlaveSetup (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000555 - 0000055B (0x7 bytes), align: 0
  Segment part 41.            Intra module refs:   LL_ProcessEvent
                                                   LL_Reset
                                                   LL_SetAdvParam
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           peerInfo                00000555        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupDirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000055C - 00000560 (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           chanMapUpdate           0000055C        llAllocConnId (ll_common)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llSetNextDataChan (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000561 - 00000561 (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           onePktPerEvt            00000561        llConnCleanup (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000562 - 00000562 (0x1 bytes), align: 0
  Segment part 44.            Intra module refs:   LL_Reset
                                                   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numTxDataBufs           00000562        llConnCleanup (ll_common)
                                                   llProcessTxData (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000563 - 00000563 (0x1 bytes), align: 0
  Segment part 45.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numComplPkts            00000563        llConnCleanup (ll_common)
                                                   llProcessTxData (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000564 - 00000564 (0x1 bytes), align: 0
  Segment part 46.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numComplPktsLimit       00000564        llProcessTxData (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000565 - 00000565 (0x1 bytes), align: 0
  Segment part 47.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numComplPktsFlush       00000565        llProcessTxData (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000566 - 00000566 (0x1 bytes), align: 0
  Segment part 48.            Intra module refs:   LL_Reset
                                                   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fastTxRespTime          00000566 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000567 - 00000567 (0x1 bytes), align: 0
  Segment part 49.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           slOverride              00000567        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000568 - 000005BC (0x55 bytes), align: 0
  Segment part 50.            Intra module refs:   LL_Init
                                                   LL_Reset
                                                   LL_SetAdvControl
                                                   LL_SetAdvData
                                                   LL_SetAdvParam
                                                   LL_SetScanRspData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           advInfo                 00000568        llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCheckWhiteListUsage (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llStartAdvSetup (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005BD - 000005BE (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dcdcData                000005BD        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005BF - 000005BF (0x1 bytes), align: 0
  Segment part 52.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           extendRfRange           000005BF        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llExtendRfRange (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005C0 - 000005C0 (0x1 bytes), align: 0
  Segment part 53.            Intra module refs:   LL_CtrlToHostFlowControl
                                                   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rxFifoFlowCtrl          000005C0        llProcessRxData (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005C1 - 000005C1 (0x1 bytes), align: 0
  Segment part 54.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           haltDuringRf            000005C1        llScheduleTask (ll_scheduler)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005C2 - 000005C3 (0x2 bytes), align: 0
  Segment part 55.            Intra module refs:   LL_Init
                                                   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sleepDelay              000005C2 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FF2 - 00000FFF (0xe bytes), align: 0
  Segment part 56.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskEndCauses           00000FF2        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001000 - 0000100B (0xc bytes), align: 0
  Segment part 58.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskErrorEndCauses      00001000        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005C4 - 000005C4 (0x1 bytes), align: 0
  Segment part 61.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           trngCounter             000005C4        RF_NormalIsr (ll_isr)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
IDATA_Z
  Relative segment, address: IDATA 00000029 - 0000002A (0x2 bytes), align: 0
  Segment part 62. ROOT.      Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           myPC                    00000029        RF_NormalIsr (ll_isr)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BEDC - 0000C0B9 (0x1de bytes), align: 0
  Segment part 63.            Intra module refs:   LL_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Init                 0000BEDC 
               calls direct
               XSTACK = 00000000 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C0BA - 0000C2EB (0x232 bytes), align: 0
  Segment part 65.            Intra module refs:   LL_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ProcessEvent         0000C0BA 
               calls direct
               XSTACK = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2EC - 0000C327 (0x3c bytes), align: 0
  Segment part 67.            Intra module refs:   LL_TX_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TX_bm_alloc          0000C2EC 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C328 - 0000C354 (0x2d bytes), align: 0
  Segment part 69.            Intra module refs:   LL_RX_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RX_bm_alloc          0000C328 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C355 - 0000C43E (0xea bytes), align: 0
  Segment part 71.            Intra module refs:   LL_Reset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Reset                0000C355 
               calls direct
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C43F - 0000C489 (0x4b bytes), align: 0
  Segment part 73.            Intra module refs:   LL_ReadBDADDR::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadBDADDR           0000C43F 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C48A - 0000C4D4 (0x4b bytes), align: 0
  Segment part 75.            Intra module refs:   LL_SetRandomAddress::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetRandomAddress     0000C48A 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C4D5 - 0000C4E6 (0x12 bytes), align: 0
  Segment part 77.            Intra module refs:   LL_ClearWhiteList::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ClearWhiteList       0000C4D5 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C4E7 - 0000C526 (0x40 bytes), align: 0
  Segment part 79.            Intra module refs:   LL_AddWhiteListDevice::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_AddWhiteListDevice   0000C4E7 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C527 - 0000C55B (0x35 bytes), align: 0
  Segment part 87.            Intra module refs:   LL_Encrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Encrypt              0000C527 
               calls direct
               XSTACK = 00000002 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C55C - 0000C5A4 (0x49 bytes), align: 0
  Segment part 89.            Intra module refs:   LL_Rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Rand                 0000C55C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C5A5 - 0000C5A9 (0x5 bytes), align: 0
  Segment part 91.            Intra module refs:   LL_Init
                                                   LL_ProcessEvent
                                                   LL_Rand
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C5AA - 0000C5D8 (0x2f bytes), align: 0
  Segment part 92.            Intra module refs:   LL_PseudoRand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PseudoRand           0000C5AA 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C5D9 - 0000C5FB (0x23 bytes), align: 0
  Segment part 100.           Intra module refs:   LL_CtrlToHostFlowControl::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_CtrlToHostFlowControl
                                   0000C5D9 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C5FC - 0000C648 (0x4d bytes), align: 0
  Segment part 108.           Intra module refs:   LL_ReadRssi::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRssi             0000C5FC 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C649 - 0000C6CD (0x85 bytes), align: 0
  Segment part 110.           Intra module refs:   LL_Disconnect::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Disconnect           0000C649 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C6CE - 0000C8DD (0x210 bytes), align: 0
  Segment part 112.           Intra module refs:   LL_TxData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TxData               0000C6CE 
               calls direct
               XSTACK = 00000001 ( 0000001A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8DE - 0000C8E2 (0x5 bytes), align: 0
  Segment part 120.           Intra module refs:   LL_AddWhiteListDevice
                                                   LL_Disconnect
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8E3 - 0000C8E7 (0x5 bytes), align: 0
  Segment part 123.           Intra module refs:   LL_Encrypt
                                                   LL_PseudoRand
                                                   LL_RX_bm_alloc
                                                   LL_SetAdvData
                                                   LL_SetAdvParam
                                                   LL_SetScanRspData
                                                   LL_TX_bm_alloc
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C8E8 - 0000CB26 (0x23f bytes), align: 0
  Segment part 124.           Intra module refs:   LL_SetAdvParam::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvParam          0000C8E8 
               calls direct
               XSTACK = 00000006 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB27 - 0000CB67 (0x41 bytes), align: 0
  Segment part 126.           Intra module refs:   LL_SetAdvData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvData           0000CB27 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB68 - 0000CD09 (0x1a2 bytes), align: 0
  Segment part 128.           Intra module refs:   LL_SetAdvControl::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvControl        0000CB68 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CD0A - 0000CD4A (0x41 bytes), align: 0
  Segment part 132.           Intra module refs:   LL_SetScanRspData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetScanRspData       0000CD0A 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CD4B - 0000CDBD (0x73 bytes), align: 0
  Segment part 134.           Intra module refs:   LL_EncLtkReply::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReply          0000CD4B 
               calls direct
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CDBE - 0000CE09 (0x4c bytes), align: 0
  Segment part 136.           Intra module refs:   LL_EncLtkNegReply::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkNegReply       0000CDBE 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE0A - 0000CE0A (0x1 bytes), align: 0
  Segment part 147.           Intra module refs:   LL_ReadBDADDR
                                                   LL_SetRandomAddress
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE0B - 0000CE0C (0x2 bytes), align: 0
  Segment part 148.           Intra module refs:   Segment part 147
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE0D - 0000CE13 (0x7 bytes), align: 0
  Segment part 149.           Intra module refs:   LL_ClearWhiteList
                                                   LL_CtrlToHostFlowControl
                                                   LL_EncLtkNegReply
                                                   LL_EncLtkReply
                                                   LL_ReadRssi
                                                   LL_Reset
                                                   Segment part 148
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000022F - 0000023C (0xe bytes), align: 0
  Segment part 57.            Intra module refs:   taskEndCauses
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000023D - 00000248 (0xc bytes), align: 0
  Segment part 59.            Intra module refs:   taskErrorEndCauses
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AB6 - 00000ABB (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Init::?relay         00000AB6        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ABC - 00000AC1 (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ProcessEvent::?relay
                                   00000ABC        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AC2 - 00000AC7 (0x6 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TX_bm_alloc::?relay
                                   00000AC2        HCI_bm_alloc (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AC8 - 00000ACD (0x6 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RX_bm_alloc::?relay
                                   00000AC8        llProcessRxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ACE - 00000AD3 (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Reset::?relay        00000ACE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AD4 - 00000AD9 (0x6 bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadBDADDR::?relay   00000AD4        HCI_ReadBDADDRCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ADA - 00000ADF (0x6 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetRandomAddress::?relay
                                   00000ADA        HCI_LE_SetRandomAddressCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AE0 - 00000AE5 (0x6 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ClearWhiteList::?relay
                                   00000AE0        HCI_LE_ClearWhiteListCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AE6 - 00000AEB (0x6 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_AddWhiteListDevice::?relay
                                   00000AE6        HCI_LE_AddWhiteListCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AEC - 00000AF1 (0x6 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Encrypt::?relay      00000AEC        generate_subkey (sm_mgr)
                                                   smEncrypt (sm_mgr)
                                                   sm_CMAC (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AF2 - 00000AF7 (0x6 bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Rand::?relay         00000AF2        HCI_LE_RandCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AF8 - 00000AFD (0x6 bytes), align: 0
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PseudoRand::?relay   00000AF8        Onboard_rand (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AFE - 00000B03 (0x6 bytes), align: 0
  Segment part 101.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_CtrlToHostFlowControl::?relay
                                   00000AFE        HCI_HostNumCompletedPktCmd (hci)
                                                   LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B04 - 00000B09 (0x6 bytes), align: 0
  Segment part 109.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRssi::?relay     00000B04        HCI_ReadRssiCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B0A - 00000B0F (0x6 bytes), align: 0
  Segment part 111.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Disconnect::?relay   00000B0A        HCI_DisconnectCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B10 - 00000B15 (0x6 bytes), align: 0
  Segment part 113.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TxData::?relay       00000B10        HCI_SendDataPkt (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B16 - 00000B1B (0x6 bytes), align: 0
  Segment part 125.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvParam::?relay
                                   00000B16        HCI_LE_SetAdvParamCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B1C - 00000B21 (0x6 bytes), align: 0
  Segment part 127.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvData::?relay   00000B1C        HCI_LE_SetAdvDataCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B22 - 00000B27 (0x6 bytes), align: 0
  Segment part 129.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvControl::?relay
                                   00000B22        HCI_LE_SetAdvEnableCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B28 - 00000B2D (0x6 bytes), align: 0
  Segment part 133.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetScanRspData::?relay
                                   00000B28        HCI_LE_SetScanRspDataCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B2E - 00000B33 (0x6 bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReply::?relay
                                   00000B2E        HCI_LE_LtkReqReplyCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B34 - 00000B39 (0x6 bytes), align: 0
  Segment part 137.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkNegReply::?relay
                                   00000B34        HCI_LE_LtkReqNegReplyCmd (hci)
                                                   LL_EncLtkReqCback (hci_event)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_advEndCauses

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011BD3 - 00011CD0 (0xfe bytes), align: 0
  Segment part 11.            Intra module refs:   llDirectedAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDirectedAdvEvt_TaskEndOk
                                   00011BD3 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011CD1 - 00012369 (0x699 bytes), align: 0
  Segment part 13.            Intra module refs:   llAdvEvt_TaskConnect::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskConnect    00011CD1 
               calls direct
               XSTACK = 00000000 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001236A - 0001258A (0x221 bytes), align: 0
  Segment part 15.            Intra module refs:   llUndirectedAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUndirectedAdvEvt_TaskEndOk
                                   0001236A 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001258B - 0001274D (0x1c3 bytes), align: 0
  Segment part 17.            Intra module refs:   llDiscoverableAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDiscoverableAdvEvt_TaskEndOk
                                   0001258B 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001274E - 00012755 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   llDirectedAdvEvt_TaskEndOk
                                                   llDiscoverableAdvEvt_TaskEndOk
                                                   llNonConnAdvEvt_TaskEndOk
                                                   llUndirectedAdvEvt_TaskEndOk
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012756 - 000128BD (0x168 bytes), align: 0
  Segment part 20.            Intra module refs:   llNonConnAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llNonConnAdvEvt_TaskEndOk
                                   00012756 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000128BE - 000128E7 (0x2a bytes), align: 0
  Segment part 22.            Intra module refs:   llAdvEvt_TaskAbort::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskAbort      000128BE 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B3A - 00000B3F (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDirectedAdvEvt_TaskEndOk::?relay
                                   00000B3A        llSetupDirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B40 - 00000B45 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskConnect::?relay
                                   00000B40        llSetupDirectedAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B46 - 00000B4B (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUndirectedAdvEvt_TaskEndOk::?relay
                                   00000B46        llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B4C - 00000B51 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDiscoverableAdvEvt_TaskEndOk::?relay
                                   00000B4C        llSetupScannableAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B52 - 00000B57 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llNonConnAdvEvt_TaskEndOk::?relay
                                   00000B52        llSetupNonConnectableAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B58 - 00000B5D (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskAbort::?relay
                                   00000B58        llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_common

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A9 - 000000A9 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   llClearSetInts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP0                     000000A9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AF - 000000AF (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1STAT                  000000AF 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B9 - 000000B9 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   llClearSetInts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP1                     000000B9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DA - 000000DA (0x1 bytes), align: 0
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CC0L                  000000DA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DB - 000000DB (0x1 bytes), align: 0
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CC0H                  000000DB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E2 - 000000E2 (0x1 bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CNTL                  000000E2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E3 - 000000E3 (0x1 bytes), align: 0
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CNTH                  000000E3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E4 - 000000E4 (0x1 bytes), align: 0
  Segment part 21. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CTL                   000000E4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E5 - 000000E5 (0x1 bytes), align: 0
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL0                 000000E5 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004661 - 0000470F (0xaf bytes), align: 0
  Segment part 33.            Intra module refs:   llRfInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRfInit                00004661 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004710 - 0000473C (0x2d bytes), align: 0
  Segment part 35.            Intra module refs:   llSetFreqTune::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetFreqTune           00004710 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000473D - 00004782 (0x46 bytes), align: 0
  Segment part 37.            Intra module refs:   llClearSetInts::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llClearSetInts          0000473D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004783 - 000048B8 (0x136 bytes), align: 0
  Segment part 45.            Intra module refs:   llProcessPostRfOps::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessPostRfOps      00004783 
               calls direct
               XSTACK = 00000000 ( 00000008 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000048B9 - 000048BA (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   llStartAdvSetup
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000048BB - 000048BB (0x1 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   llExtendRfRange
                                                   llInitFeatureSet
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000048BC - 000048C2 (0x7 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 123
                                                   Segment part 52
                                                   llCheckWhiteListUsage
                                                   llClearSetInts
                                                   llGetNextConn
                                                   llProcessPostRfOps
                                                   llReleaseAllConnId
                                                   llRfInit
                                                   llSetFreqTune
                                                   llSetupAdv
                                                   llSetupStartEncReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000048C3 - 00004A53 (0x191 bytes), align: 0
  Segment part 56.            Intra module refs:   llFindTxPowerSettings::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindTxPowerSettings   000048C3 
               calls direct
               XSTACK = 00000000 ( 00000022 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004A54 - 00004A58 (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   llAdjustForMissedEvent
                                                   llFindTxPowerSettings
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004A59 - 00004ACD (0x75 bytes), align: 0
  Segment part 59.            Intra module refs:   llExtendRfRange::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llExtendRfRange         00004A59 
               XSTACK = 00000008 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004ACE - 00004AD2 (0x5 bytes), align: 0
  Segment part 63.            Intra module refs:   llSetupDirectedAdvEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004AD3 - 00004AED (0x1b bytes), align: 0
  Segment part 64.            Intra module refs:   llCheckWhiteListUsage::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCheckWhiteListUsage   00004AD3 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004AEE - 00004B68 (0x7b bytes), align: 0
  Segment part 66.            Intra module refs:   llSetupAdv::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupAdv              00004AEE 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004B69 - 00004CC2 (0x15a bytes), align: 0
  Segment part 68.            Intra module refs:   llSetupDirectedAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupDirectedAdvEvt   00004B69 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004CC3 - 00004E22 (0x160 bytes), align: 0
  Segment part 70.            Intra module refs:   llSetupUndirectedAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUndirectedAdvEvt
                                   00004CC3 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004E23 - 00004F28 (0x106 bytes), align: 0
  Segment part 72.            Intra module refs:   llSetupNonConnectableAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNonConnectableAdvEvt
                                   00004E23 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004F29 - 00005089 (0x161 bytes), align: 0
  Segment part 74.            Intra module refs:   llSetupScannableAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupScannableAdvEvt
                                   00004F29 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000508A - 000050A2 (0x19 bytes), align: 0
  Segment part 80.            Intra module refs:   llStartAdvSetup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartAdvSetup         0000508A 
               is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000050A3 - 00005100 (0x5e bytes), align: 0
  Segment part 82.            Intra module refs:   llStartSlaveSetup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartSlaveSetup       000050A3 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005101 - 000051E1 (0xe1 bytes), align: 0
  Segment part 92.            Intra module refs:   llSetupEncRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupEncRsp           00005101 
               calls direct
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001BFC - 00001CB4 (0xb9 bytes), align: 0
  Segment part 166.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNextDataChan       00001BFC        llAdvEvt_TaskConnect (ll_advEndCauses)
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001CB5 - 00001CB9 (0x5 bytes), align: 0
  Segment part 167.           Intra module refs:   llGetNextDataChan
                                                   llProcessTxData
                                                   llSetNextDataChan
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001CBA - 00001E39 (0x180 bytes), align: 0
  Segment part 168.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetNextDataChan       00001CBA        LL_TxData (ll)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001E3A - 00001E78 (0x3f bytes), align: 0
  Segment part 169.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEventInRange          00001E3A        llSetupNextSlaveEvent (ll_slaveEndCauses)
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001E79 - 00001E80 (0x8 bytes), align: 0
  Segment part 170.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEventDelta            00001E79        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001E81 - 0000202D (0x1ad bytes), align: 0
  Segment part 171.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessRxData         00001E81        RF_NormalIsr (ll_isr)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
               calls direct
               XSTACK = 00000000 ( 00000013 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000202E - 00002178 (0x14b bytes), align: 0
  Segment part 172.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessTxData         0000202E        LL_TxData (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   llScheduler (ll_scheduler)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
               calls direct
               XSTACK = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000051E2 - 000051E9 (0x8 bytes), align: 0
  Segment part 94.            Intra module refs:   llEnqueueDataQ
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000051EA - 000051EE (0x5 bytes), align: 0
  Segment part 95.            Intra module refs:   Segment part 94
                                                   llAllocConnId
                                                   llConnTerminate
                                                   llMemCopySrc
                                                   llSetupEncRsp
                                                   llSetupNonConnectableAdvEvt
                                                   llSetupRejectInd
                                                   llSetupScannableAdvEvt
                                                   llStartSlaveSetup
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000051EF - 00005221 (0x33 bytes), align: 0
  Segment part 96.            Intra module refs:   llSetupStartEncReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncReq      000051EF 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005222 - 00005291 (0x70 bytes), align: 0
  Segment part 98.            Intra module refs:   llSetupStartEncRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncRsp      00005222 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005292 - 0000530B (0x7a bytes), align: 0
  Segment part 102.           Intra module refs:   llSetupPauseEncRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupPauseEncRsp      00005292 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000530C - 00005355 (0x4a bytes), align: 0
  Segment part 104.           Intra module refs:   llSetupRejectInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupRejectInd        0000530C 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005356 - 0000541F (0xca bytes), align: 0
  Segment part 108.           Intra module refs:   llSetupFeatureSetRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupFeatureSetRsp    00005356 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005420 - 000054EF (0xd0 bytes), align: 0
  Segment part 110.           Intra module refs:   llSetupVersionIndReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupVersionIndReq    00005420 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000054F0 - 000054F4 (0x5 bytes), align: 0
  Segment part 112.           Intra module refs:   llConnCleanup
                                                   llConvertCtrlProcTimeoutToEvent
                                                   llConvertLstoToEvent
                                                   llDequeueCtrlPkt
                                                   llSetupFeatureSetRsp
                                                   llSetupPauseEncRsp
                                                   llSetupStartEncRsp
                                                   llSetupTermInd
                                                   llSetupUnknownRsp
                                                   llSetupVersionIndReq
                                                   llWriteTxData
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000054F5 - 000055D3 (0xdf bytes), align: 0
  Segment part 113.           Intra module refs:   llSetupTermInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupTermInd          000054F5 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000055D4 - 0000565E (0x8b bytes), align: 0
  Segment part 115.           Intra module refs:   llSetupUnknownRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUnknownRsp       000055D4 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000565F - 000056CC (0x6e bytes), align: 0
  Segment part 117.           Intra module refs:   llEnqueueCtrlPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnqueueCtrlPkt        0000565F 
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000056CD - 00005740 (0x74 bytes), align: 0
  Segment part 119.           Intra module refs:   llDequeueCtrlPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDequeueCtrlPkt        000056CD 
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005741 - 00005766 (0x26 bytes), align: 0
  Segment part 121.           Intra module refs:   llReplaceCtrlPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReplaceCtrlPkt        00005741 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005767 - 0000576B (0x5 bytes), align: 0
  Segment part 123.           Intra module refs:   llReplaceCtrlPkt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000576C - 0000582A (0xbf bytes), align: 0
  Segment part 124.           Intra module refs:   llProcessChanMap::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessChanMap        0000576C 
               XSTACK = 0000000B ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000582B - 0000598F (0x165 bytes), align: 0
  Segment part 128.           Intra module refs:   llAllocConnId::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocConnId           0000582B 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005990 - 000059AC (0x1d bytes), align: 0
  Segment part 132.           Intra module refs:   llReleaseAllConnId::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReleaseAllConnId      00005990 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000059AD - 000059CB (0x1f bytes), align: 0
  Segment part 134.           Intra module refs:   llGetNextConn::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNextConn           000059AD 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000059CC - 00005ABC (0xf1 bytes), align: 0
  Segment part 136.           Intra module refs:   llConnCleanup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnCleanup           000059CC 
               calls direct
               XSTACK = 00000011 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005ABD - 00005AE1 (0x25 bytes), align: 0
  Segment part 138.           Intra module refs:   llConnTerminate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnTerminate         00005ABD 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005AE2 - 00005B0B (0x2a bytes), align: 0
  Segment part 142.           Intra module refs:   llInitFeatureSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitFeatureSet        00005AE2 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005B0C - 00005B86 (0x7b bytes), align: 0
  Segment part 146.           Intra module refs:   llConvertLstoToEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertLstoToEvent    00005B0C 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005B87 - 00005BE0 (0x5a bytes), align: 0
  Segment part 148.           Intra module refs:   llConvertCtrlProcTimeoutToEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertCtrlProcTimeoutToEvent
                                   00005B87 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005BE1 - 00005D49 (0x169 bytes), align: 0
  Segment part 150.           Intra module refs:   llAdjustForMissedEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustForMissedEvent
                                   00005BE1 
               calls direct
               XSTACK = 00000004 ( 00000018 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005D4A - 00005DF7 (0xae bytes), align: 0
  Segment part 152.           Intra module refs:   llWriteTxData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llWriteTxData           00005D4A 
               calls direct
               XSTACK = 00000011 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005DF8 - 00005E38 (0x41 bytes), align: 0
  Segment part 154.           Intra module refs:   llEnqueueDataQ::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnqueueDataQ          00005DF8 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005E39 - 00005E68 (0x30 bytes), align: 0
  Segment part 162.           Intra module refs:   llMemCopySrc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llMemCopySrc            00005E39 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B5E - 00000B63 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRfInit::?relay        00000B5E        LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B64 - 00000B69 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetFreqTune::?relay   00000B64        LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B6A - 00000B6F (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llClearSetInts::?relay
                                   00000B6A        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B70 - 00000B75 (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessPostRfOps::?relay
                                   00000B70        RF_NormalIsr (ll_isr)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B76 - 00000B7B (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindTxPowerSettings::?relay
                                   00000B76        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B7C - 00000B81 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   llProcessPostRfOps
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llExtendRfRange::?relay
                                   00000B7C        LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B82 - 00000B87 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCheckWhiteListUsage::?relay
                                   00000B82        LL_AddWhiteListDevice (ll)
                                                   LL_ClearWhiteList (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B88 - 00000B8D (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupAdv::?relay      00000B88        LL_SetAdvControl (ll)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B8E - 00000B93 (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupDirectedAdvEvt::?relay
                                   00000B8E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B94 - 00000B99 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUndirectedAdvEvt::?relay
                                   00000B94 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B9A - 00000B9F (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNonConnectableAdvEvt::?relay
                                   00000B9A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BA0 - 00000BA5 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupScannableAdvEvt::?relay
                                   00000BA0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BA6 - 00000BAB (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartAdvSetup::?relay
                                   00000BA6        llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BAC - 00000BB1 (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartSlaveSetup::?relay
                                   00000BAC        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BB2 - 00000BB7 (0x6 bytes), align: 0
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupEncRsp::?relay   00000BB2        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BB8 - 00000BBD (0x6 bytes), align: 0
  Segment part 97.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncReq::?relay
                                   00000BB8        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BBE - 00000BC3 (0x6 bytes), align: 0
  Segment part 99.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncRsp::?relay
                                   00000BBE        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BC4 - 00000BC9 (0x6 bytes), align: 0
  Segment part 103.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupPauseEncRsp::?relay
                                   00000BC4        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BCA - 00000BCF (0x6 bytes), align: 0
  Segment part 105.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupRejectInd::?relay
                                   00000BCA        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BD0 - 00000BD5 (0x6 bytes), align: 0
  Segment part 109.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupFeatureSetRsp::?relay
                                   00000BD0        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BD6 - 00000BDB (0x6 bytes), align: 0
  Segment part 111.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupVersionIndReq::?relay
                                   00000BD6        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BDC - 00000BE1 (0x6 bytes), align: 0
  Segment part 114.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupTermInd::?relay
                                   00000BDC        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BE2 - 00000BE7 (0x6 bytes), align: 0
  Segment part 116.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUnknownRsp::?relay
                                   00000BE2        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BE8 - 00000BED (0x6 bytes), align: 0
  Segment part 118.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnqueueCtrlPkt::?relay
                                   00000BE8        LL_Disconnect (ll)
                                                   LL_EncLtkNegReply (ll)
                                                   LL_EncLtkReply (ll)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BEE - 00000BF3 (0x6 bytes), align: 0
  Segment part 120.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDequeueCtrlPkt::?relay
                                   00000BEE        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BF4 - 00000BF9 (0x6 bytes), align: 0
  Segment part 122.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReplaceCtrlPkt::?relay
                                   00000BF4        LL_Disconnect (ll)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BFA - 00000BFF (0x6 bytes), align: 0
  Segment part 125.           Intra module refs:   llSetNextDataChan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessChanMap::?relay
                                   00000BFA        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C00 - 00000C05 (0x6 bytes), align: 0
  Segment part 129.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocConnId::?relay   00000C00        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C06 - 00000C0B (0x6 bytes), align: 0
  Segment part 133.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReleaseAllConnId::?relay
                                   00000C06        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C0C - 00000C11 (0x6 bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNextConn::?relay   00000C0C        llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C12 - 00000C17 (0x6 bytes), align: 0
  Segment part 137.           Intra module refs:   llConnTerminate
                                                   llProcessRxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnCleanup::?relay   00000C12        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C18 - 00000C1D (0x6 bytes), align: 0
  Segment part 139.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnTerminate::?relay
                                   00000C18        LL_ProcessEvent (ll)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C1E - 00000C23 (0x6 bytes), align: 0
  Segment part 143.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitFeatureSet::?relay
                                   00000C1E        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C24 - 00000C29 (0x6 bytes), align: 0
  Segment part 147.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertLstoToEvent::?relay
                                   00000C24        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C2A - 00000C2F (0x6 bytes), align: 0
  Segment part 149.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertCtrlProcTimeoutToEvent::?relay
                                   00000C2A        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C30 - 00000C35 (0x6 bytes), align: 0
  Segment part 151.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustForMissedEvent::?relay
                                   00000C30        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C36 - 00000C3B (0x6 bytes), align: 0
  Segment part 153.           Intra module refs:   llProcessTxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llWriteTxData::?relay   00000C36 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C3C - 00000C41 (0x6 bytes), align: 0
  Segment part 155.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnqueueDataQ::?relay
                                   00000C3C        LL_TxData (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C42 - 00000C47 (0x6 bytes), align: 0
  Segment part 163.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llMemCopySrc::?relay    00000C42        llProcessSlaveControlPacket (ll_slaveEndCauses)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008531 - 00008534 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   llFindTxPowerSettings
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084E6 - 000084ED (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   llFindTxPowerSettings
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008531 - 00008534 (0x4 bytes), align: 0
  Segment part 173.           Intra module refs:   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084E6 - 000084ED (0x8 bytes), align: 0
  Segment part 174.           Intra module refs:   Segment part 32

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_constData

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,CODE_C> 1 (was CODE_C)
  Relative segment, address: CODE 00002BFC - 00002BFF (0x4 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           savedTxPowerSetting     00002BFC        llFindTxPowerSettings (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was CODE_C)
  Relative segment, address: CODE 00002BF8 - 00002BFB (0x4 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ptmFreqTune             00002BF8        LL_PowerOnReq (ll_sleep)
                                                   llRfInit (ll_common)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_enc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D7 - 000000D7 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_DecryptMsg
                                                   LL_ENC_Encrypt
                                                   LL_ENC_EncryptMsg
                                                   LL_ENC_GenerateMIC
                                                   LL_ENC_MoveData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAREQ                  000000D7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005C5 - 000005E4 (0x20 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dataPkt                 000005C5        llProcessRxData (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005E5 - 000005F0 (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   LL_ENC_GenDeviceIV
                                                   LL_ENC_GenDeviceSKD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cachedTRNGdata          000005E5        LL_Init (ll)
                                                   llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000820B - 0000822A (0x20 bytes), align: 0
  Segment part 16.            Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_DecryptMsg
                                                   LL_ENC_Encrypt
                                                   LL_ENC_EncryptMsg
                                                   LL_ENC_GenerateMIC
                                                   LL_ENC_LoadEmptyIV
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zeroBlock               0000820B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010DFF - 00010E4C (0x4e bytes), align: 0
  Segment part 17.            Intra module refs:   LL_ENC_ReverseBytes::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_ReverseBytes     00010DFF 
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010E4D - 00010E58 (0xc bytes), align: 0
  Segment part 19.            Intra module refs:   LL_ENC_GeneratePseudoRandNum::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GeneratePseudoRandNum
                                   00010E4D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010E59 - 00010F31 (0xd9 bytes), align: 0
  Segment part 21.            Intra module refs:   LL_ENC_GenerateTrueRandNum::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateTrueRandNum
                                   00010E59 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010F32 - 00010F36 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   LL_ENC_GenerateTrueRandNum
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010F37 - 00010F67 (0x31 bytes), align: 0
  Segment part 24.            Intra module refs:   LL_ENC_GenDeviceSKD::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceSKD     00010F37 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010F68 - 00010F98 (0x31 bytes), align: 0
  Segment part 26.            Intra module refs:   LL_ENC_GenDeviceIV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceIV      00010F68 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010F99 - 00011010 (0x78 bytes), align: 0
  Segment part 30.            Intra module refs:   LL_ENC_AES128_Encrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_AES128_Encrypt   00010F99 
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011011 - 00011011 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   LL_ENC_InitAesDMA
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011012 - 00011018 (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   LL_ENC_AES128_Encrypt
                                                   LL_ENC_GenDeviceIV
                                                   LL_ENC_GenDeviceSKD
                                                   LL_ENC_GeneratePseudoRandNum
                                                   LL_ENC_LoadEmptyIV
                                                   LL_ENC_MoveData
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011019 - 00011050 (0x38 bytes), align: 0
  Segment part 36.            Intra module refs:   LL_ENC_InitAesDMA::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_InitAesDMA       00011019 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011051 - 000110A2 (0x52 bytes), align: 0
  Segment part 40.            Intra module refs:   LL_ENC_MoveData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_MoveData         00011051 
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000110A3 - 000110DF (0x3d bytes), align: 0
  Segment part 48.            Intra module refs:   LL_ENC_LoadEmptyIV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_LoadEmptyIV      000110A3 
               XSTACK = 0000002B ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000110E0 - 000112F2 (0x213 bytes), align: 0
  Segment part 52.            Intra module refs:   LL_ENC_EncryptMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_EncryptMsg       000110E0 
               XSTACK = 0000001A ( 0000002A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000112F3 - 000112F7 (0x5 bytes), align: 0
  Segment part 54.            Intra module refs:   LL_ENC_DecryptMsg
                                                   LL_ENC_EncryptMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000112F8 - 000112FC (0x5 bytes), align: 0
  Segment part 55.            Intra module refs:   LL_ENC_ReverseBytes
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000112FD - 00011522 (0x226 bytes), align: 0
  Segment part 56.            Intra module refs:   LL_ENC_DecryptMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_DecryptMsg       000112FD 
               XSTACK = 0000001E ( 0000002A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011523 - 0001170D (0x1eb bytes), align: 0
  Segment part 58.            Intra module refs:   LL_ENC_GenerateMIC::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateMIC      00011523 
               calls direct
               XSTACK = 00000020 ( 0000002B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001170E - 000118EF (0x1e2 bytes), align: 0
  Segment part 60.            Intra module refs:   LL_ENC_Encrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Encrypt          0001170E 
               calls direct
               XSTACK = 00000002 ( 0000001C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000118F0 - 000118F7 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_Encrypt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000118F8 - 00011BD2 (0x2db bytes), align: 0
  Segment part 63.            Intra module refs:   LL_ENC_Decrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Decrypt          000118F8 
               calls direct
               XSTACK = 00000002 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C48 - 00000C4D (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_ReverseBytes::?relay
                                   00000C48        llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llSetupEncRsp (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C4E - 00000C53 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GeneratePseudoRandNum::?relay
                                   00000C4E        LL_PseudoRand (ll)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C54 - 00000C59 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateTrueRandNum::?relay
                                   00000C54        LL_Init (ll)
                                                   LL_Rand (ll)
                                                   llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C5A - 00000C5F (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceSKD::?relay
                                   00000C5A        llProcessSlaveControlPacket (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C60 - 00000C65 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceIV::?relay
                                   00000C60        llProcessSlaveControlPacket (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C66 - 00000C6B (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_AES128_Encrypt::?relay
                                   00000C66        LL_Encrypt (ll)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C6C - 00000C71 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_InitAesDMA::?relay
                                   00000C6C        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C72 - 00000C77 (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_MoveData::?relay
                                   00000C72        llProcessRxData (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C78 - 00000C7D (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   LL_ENC_GenerateMIC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_LoadEmptyIV::?relay
                                   00000C78 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C7E - 00000C83 (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   LL_ENC_Encrypt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_EncryptMsg::?relay
                                   00000C7E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C84 - 00000C89 (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   LL_ENC_Decrypt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_DecryptMsg::?relay
                                   00000C84 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C8A - 00000C8F (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_Encrypt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateMIC::?relay
                                   00000C8A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C90 - 00000C95 (0x6 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Encrypt::?relay
                                   00000C90        llSetupFeatureSetRsp (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llWriteTxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C96 - 00000C9B (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Decrypt::?relay
                                   00000C96        llProcessRxData (ll_common)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000820B - 0000822A (0x20 bytes), align: 0
  Segment part 65.            Intra module refs:   zeroBlock

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_errorEndCauses

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007FEE - 00007FF0 (0x3 bytes), align: 0
  Segment part 6.             Intra module refs:   llUnexpectedEndCauseHandler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUnexpectedEndCauseHandler
                                   00007FEE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C9C - 00000CA1 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUnexpectedEndCauseHandler::?relay
                                   00000C9C        Segment part 57 (ll)
                                                   Segment part 59 (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : ll_halt

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 0000217C - 00002182 (0x7 bytes), align: 2
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HaltMcuUsingPhyFlag     0000217C        llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: DATA 00000021 - 00000022 (0x2 bytes), align: 0
  Segment part 1.             Intra module refs:   HaltMcuUsingPhyFlag
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           phyState                00000021        LL_Reset (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   llT2OVFC1_ISR (ll_isr)
           clkState                00000022        llT2OVFC1_ISR (ll_isr)

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : ll_isr

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000091 - 00000091 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   LL_SetAdvControl (ll)
                                                   RF_NormalIsr
                                                   llClearSetInts (ll_common)
                                                   llScheduleTask (ll_scheduler)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF1                 00000091 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009B - 0000009B (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   RF_NormalIsr
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   0000009B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009F - 0000009F (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   LL_Init (ll)
                                                   RF_NormalIsr
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FMAP                    0000009F 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A1 - 000000A1 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   T2_Isr
                                                   llDisableT2Ints (ll_timer2)
                                                   llDisableT2IntsEvts (ll_timer2)
                                                   llInitTimer2 (ll_timer2)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2IRQF                  000000A1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A7 - 000000A7 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   T2_Isr
                                                   llDisableT2Ints (ll_timer2)
                                                   llDisableT2IntsEvts (ll_timer2)
                                                   llInitTimer2 (ll_timer2)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2IRQM                  000000A7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalFlashRead (hal_flash)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_Reset (ll)
                                                   LL_SetAdvControl (ll)
                                                   LL_TxData (ll)
                                                   Onboard_soft_reset (OnBoard)
                                                   RF_NormalIsr
                                                   halDmaIsr (hal_dma)
                                                   halKeyPort0Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   halSetSleepMode (hal_sleep)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   halSleepTimerIsr (hal_sleep)
                                                   halUart0TxIsr (hal_uart)
                                                   llClearSetInts (ll_common)
                                                   llConnCleanup (ll_common)
                                                   llDequeueCtrlPkt (ll_common)
                                                   llDisableT2E1 (ll_timer2)
                                                   llDisableT2Ints (ll_timer2)
                                                   llDisableT2IntsEvts (ll_timer2)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llEnqueueDataQ (ll_common)
                                                   llGetCurrentTime (ll_timer2)
                                                   llGetFullCTandST (ll_timer2)
                                                   llGetTimer2Capture (ll_timer2)
                                                   llInitTimer2 (ll_timer2)
                                                   llProcessTxData (ll_common)
                                                   llReplaceCtrlPkt (ll_common)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llStartTimer2 (ll_timer2)
                                                   llStopTimer2 (ll_timer2)
                                                   llT2OVFC1_ISR
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   main (SimpleBLEPeripheral_Main)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_clear_event (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_int_disable (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_push (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   port0Isr (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   halSleep (hal_sleep)
                                                   llT2OVFC1_ISR
                                                   main (SimpleBLEPeripheral_Main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPCMD                000000BE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BF - 000000BF (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   RF_ErrorIsr
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llClearSetInts (ll_common)
                                                   llSlaveEvt_TaskAbort (ll_slaveEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFERRF                  000000BF 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llRfInit (ll_common)
                                                   llSetFreqTune (ll_common)
                                                   llT2OVFC1_ISR
                                                   main (SimpleBLEPeripheral_Main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               000000C6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E9 - 000000E9 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   RF_NormalIsr
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF0                 000000E9 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002183 - 000022FF (0x17d bytes), align: 0
  Segment part 19.            Intra module refs:   RF_NormalIsr::??INTVEC 131
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_NormalIsr            00002183 
               interrupt function
               calls direct
               ISTACK = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002300 - 00002311 (0x12 bytes), align: 0
  Segment part 20.            Intra module refs:   RF_NormalIsr
                                                   T2_Isr
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002312 - 00002316 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   RF_ErrorIsr
                                                   Segment part 20
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002317 - 00002389 (0x73 bytes), align: 0
  Segment part 22.            Intra module refs:   RF_ErrorIsr::??INTVEC 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_ErrorIsr             00002317 
               interrupt function
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000238A - 000023EE (0x65 bytes), align: 0
  Segment part 23.            Intra module refs:   T2_Isr::??INTVEC 83
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2_Isr                  0000238A 
               interrupt function
               calls direct
               ISTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000023EF - 00002472 (0x84 bytes), align: 0
  Segment part 24.            Intra module refs:   T2_Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llT2OVFC1_ISR           000023EF 
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000005 (0x6 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_ErrorIsr::??INTVEC 3
                                   00000003 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000055 (0x56 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2_Isr::??INTVEC 83     00000053 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000085 (0x86 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_NormalIsr::??INTVEC 131
                                   00000083 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_math

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: DATA 00000023 - 00000028 (0x6 bytes), align: 0
  Segment part 0.             Intra module refs:   llDivide31By16To16
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002474 - 000024C4 (0x51 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDivide31By16To16      00002474        LL_TxData (ll)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_scheduler

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000005F1 - 00000625 (0x35 bytes), align: 0
  Segment part 8.             Intra module refs:   llAllocTask
                                                   llFindNextSecTask
                                                   llFreeTask
                                                   llGetActiveTasks
                                                   llGetCurrentTask
                                                   llGetNumTasks
                                                   llGetTaskState
                                                   llScheduleTask
                                                   llScheduler
                                                   llSchedulerInit
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000626 - 000007AF (0x18a bytes), align: 0
  Segment part 9.             Intra module refs:   llRestoreConnState
                                                   llScheduler
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009ADA - 00009B09 (0x30 bytes), align: 0
  Segment part 10.            Intra module refs:   llSchedulerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSchedulerInit         00009ADA 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009B0A - 0000A1E2 (0x6d9 bytes), align: 0
  Segment part 12.            Intra module refs:   llScheduler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduler             00009B0A 
               calls direct
               XSTACK = 00000000 ( 0000001E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A1E3 - 0000A362 (0x180 bytes), align: 0
  Segment part 14.            Intra module refs:   llScheduleTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduleTask          0000A1E3 
               calls direct
               XSTACK = 0000001A ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A363 - 0000A367 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   llFindNextSecTask
                                                   llScheduleTask
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A368 - 0000A964 (0x5fd bytes), align: 0
  Segment part 19.            Intra module refs:   llFindNextSecTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindNextSecTask       0000A368 
               calls direct
               XSTACK = 0000001A ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A965 - 0000AA47 (0xe3 bytes), align: 0
  Segment part 21.            Intra module refs:   llAllocTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocTask             0000A965 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AA48 - 0000AA4C (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   llAllocTask
                                                   llSave_rxFIFO
                                                   llSave_txFIFO
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AA4D - 0000AA89 (0x3d bytes), align: 0
  Segment part 25.            Intra module refs:   llFreeTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFreeTask              0000AA4D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AA8A - 0000AAA3 (0x1a bytes), align: 0
  Segment part 27.            Intra module refs:   llGetCurrentTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTask        0000AA8A 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AAA4 - 0000AAA5 (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   llGetActiveTasks
                                                   llGetNumTasks
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AAA6 - 0000AAAC (0x7 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 29
                                                   llFreeTask
                                                   llGetCurrentTask
                                                   llGetTaskState
                                                   llSchedulerInit
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AAAD - 0000AADD (0x31 bytes), align: 0
  Segment part 31.            Intra module refs:   llGetTaskState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTaskState          0000AAAD 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AADE - 0000AAE6 (0x9 bytes), align: 0
  Segment part 33.            Intra module refs:   llGetActiveTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetActiveTasks        0000AADE 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AAE7 - 0000AAF0 (0xa bytes), align: 0
  Segment part 37.            Intra module refs:   llGetNumTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNumTasks           0000AAE7 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AAF1 - 0000ABDE (0xee bytes), align: 0
  Segment part 39.            Intra module refs:   llSave_txFIFO::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_txFIFO           0000AAF1 
               calls direct
               XSTACK = 0000001A ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ABDF - 0000ACD4 (0xf6 bytes), align: 0
  Segment part 41.            Intra module refs:   llSave_rxFIFO::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_rxFIFO           0000ABDF 
               calls direct
               XSTACK = 0000001A ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ACD5 - 0000AEEC (0x218 bytes), align: 0
  Segment part 53.            Intra module refs:   llRestoreConnState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestoreConnState      0000ACD5 
               calls direct
               XSTACK = 0000001A ( 00000010 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CA2 - 00000CA7 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSchedulerInit::?relay
                                   00000CA2        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CA8 - 00000CAD (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduler::?relay     00000CA8        LL_SetAdvControl (ll)
                                                   Segment part 19 (ll_advEndCauses)
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llConnTerminate (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CAE - 00000CB3 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduleTask::?relay
                                   00000CAE        LL_TxData (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CB4 - 00000CB9 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindNextSecTask::?relay
                                   00000CB4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CBA - 00000CBF (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocTask::?relay     00000CBA        LL_SetAdvControl (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CC0 - 00000CC5 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFreeTask::?relay      00000CC0        LL_SetAdvControl (ll)
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llConnCleanup (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CC6 - 00000CCB (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTask::?relay
                                   00000CC6        LL_PowerOnReq (ll_sleep)
                                                   LL_Rand (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CCC - 00000CD1 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTaskState::?relay
                                   00000CCC        llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CD2 - 00000CD7 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetActiveTasks::?relay
                                   00000CD2        LL_SetAdvControl (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CD8 - 00000CDD (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNumTasks::?relay   00000CD8        LL_SetAdvControl (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CDE - 00000CE3 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_txFIFO::?relay   00000CDE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CE4 - 00000CE9 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_rxFIFO::?relay   00000CE4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CEA - 00000CEF (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestoreConnState::?relay
                                   00000CEA 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_slaveEndCauses

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000085CB - 000089C9 (0x3ff bytes), align: 0
  Segment part 9.             Intra module refs:   llSlaveEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskEndOk    000085CB 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000089CA - 000089CF (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   llSlaveEvt_TaskAbort::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskAbort    000089CA 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000089D0 - 0000910A (0x73b bytes), align: 0
  Segment part 13.            Intra module refs:   llSetupNextSlaveEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNextSlaveEvent   000089D0 
               calls direct
               XSTACK = 0000000C ( 0000001A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000910B - 0000961E (0x514 bytes), align: 0
  Segment part 15.            Intra module refs:   llProcessSlaveControlPacket::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessSlaveControlPacket
                                   0000910B 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000961F - 00009623 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   llProcessSlaveControlPacket
                                                   llSetupNextSlaveEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009624 - 00009AD9 (0x4b6 bytes), align: 0
  Segment part 18.            Intra module refs:   llProcessSlaveControlProcedures::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessSlaveControlProcedures
                                   00009624 
               calls direct
               XSTACK = 0000000C ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CF0 - 00000CF5 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskEndOk::?relay
                                   00000CF0        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CF6 - 00000CFB (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskAbort::?relay
                                   00000CF6        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CFC - 00000D01 (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   llSlaveEvt_TaskEndOk
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNextSlaveEvent::?relay
                                   00000CFC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D02 - 00000D07 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessSlaveControlPacket::?relay
                                   00000D02        llProcessRxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D08 - 00000D0D (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   llSlaveEvt_TaskEndOk
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessSlaveControlProcedures::?relay
                                   00000D08 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_sleep

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 000024C5 - 00002681 (0x1bd bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TimeToNextRfEvent    000024C5        halSleep (hal_sleep)
               calls direct
               XSTACK = 00000000 ( 0000001F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002682 - 00002715 (0x94 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PowerOffReq          00002682        halSleep (hal_sleep)
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002716 - 0000271A (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   LL_PowerOffReq
                                                   LL_PowerOnReq
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000271B - 000027EA (0xd0 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PowerOnReq           0000271B        halSleep (hal_sleep)
               calls direct
               XSTACK = 00000000 ( 00000009 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_timer2

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000094 - 00000094 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   llInitTimer2
                                                   llStartTimer2
                                                   llStopTimer2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CTRL                  00000094 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009C - 0000009C (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   llDisableT2E1
                                                   llDisableT2IntsEvts
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2OVFC2Event2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CSPCFG                0000009C 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A2 - 000000A2 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2M0                    000000A2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A3 - 000000A3 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2M1                    000000A3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A4 - 000000A4 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MOVF0                 000000A4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A5 - 000000A5 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MOVF1                 000000A5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A6 - 000000A6 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MOVF2                 000000A6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C3 - 000000C3 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MSEL                  000000C3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019599 - 0001962E (0x96 bytes), align: 0
  Segment part 20.            Intra module refs:   llInitTimer2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitTimer2            00019599 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001962F - 0001963E (0x10 bytes), align: 0
  Segment part 22.            Intra module refs:   llStopTimer2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStopTimer2            0001962F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001963F - 00019644 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   llStartTimer2
                                                   llStopTimer2
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019645 - 00019656 (0x12 bytes), align: 0
  Segment part 25.            Intra module refs:   llStartTimer2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartTimer2           00019645 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019657 - 00019660 (0xa bytes), align: 0
  Segment part 29.            Intra module refs:   llSetT2C1Event1
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019661 - 00019698 (0x38 bytes), align: 0
  Segment part 30.            Intra module refs:   llGetCurrentTime
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019699 - 0001969A (0x2 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 30
                                                   Segment part 45
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001969B - 0001969D (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001969E - 000196A4 (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
                                                   Segment part 70
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000196A5 - 000196B6 (0x12 bytes), align: 0
  Segment part 36.            Intra module refs:   ll_McuPrecisionCount
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000196B7 - 000196BA (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 29
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000196BB - 00019725 (0x6b bytes), align: 0
  Segment part 42.            Intra module refs:   llSetT2LongC1Timeout::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Timeout    000196BB 
               XSTACK = 00000002 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019726 - 0001972E (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001972F - 0001976C (0x3e bytes), align: 0
  Segment part 48.            Intra module refs:   llSetT2C1Event1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C1Event1         0001972F 
               XSTACK = 00000000 ( 00000002 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001976D - 000197E0 (0x74 bytes), align: 0
  Segment part 52.            Intra module refs:   llSetT2LongC1Event1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Event1     0001976D 
               XSTACK = 00000002 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000197E1 - 00019859 (0x79 bytes), align: 0
  Segment part 54.            Intra module refs:   llSetT2OVFC2Event2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC2Event2      000197E1 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001985A - 00019862 (0x9 bytes), align: 0
  Segment part 58.            Intra module refs:   llDisableT2Ints::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2Ints         0001985A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019863 - 0001986E (0xc bytes), align: 0
  Segment part 60.            Intra module refs:   llDisableT2IntsEvts::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2IntsEvts     00019863 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001986F - 00019877 (0x9 bytes), align: 0
  Segment part 62.            Intra module refs:   llDisableT2E1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2E1           0001986F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019878 - 0001987A (0x3 bytes), align: 0
  Segment part 64.            Intra module refs:   llDisableT2Ints
                                                   llDisableT2IntsEvts
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001987B - 0001987E (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 64
                                                   llDisableT2E1
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001987F - 00019883 (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 24
                                                   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019884 - 0001988F (0xc bytes), align: 0
  Segment part 67.            Intra module refs:   llGetTimer2Capture::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTimer2Capture      00019884 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019890 - 000198B2 (0x23 bytes), align: 0
  Segment part 69.            Intra module refs:   llGetTimer2Capture
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000198B3 - 000198C1 (0xf bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   llGetFullCTandST
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000198C2 - 000198D7 (0x16 bytes), align: 0
  Segment part 71.            Intra module refs:   llGetCurrentTime::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTime        000198C2 
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000198D8 - 00019936 (0x5f bytes), align: 0
  Segment part 77.            Intra module refs:   llGetFullCTandST::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetFullCTandST        000198D8 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000027EB - 0000283E (0x54 bytes), align: 0
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll24BitTimeCompare      000027EB        LL_TxData (ll)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
               XSTACK = 00000004 ( 00000013 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000283F - 00002843 (0x5 bytes), align: 0
  Segment part 86.            Intra module refs:   ll24BitTimeCompare
                                                   ll24BitTimeDelta
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002844 - 00002898 (0x55 bytes), align: 0
  Segment part 87.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll24BitTimeDelta        00002844        LL_TxData (ll)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
               XSTACK = 00000004 ( 00000013 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002899 - 000028B2 (0x1a bytes), align: 0
  Segment part 90.            Intra module refs:   llAdjustTimeBackward
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000028B3 - 00002921 (0x6f bytes), align: 0
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustTimeBackward    000028B3        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
               XSTACK = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019937 - 00019966 (0x30 bytes), align: 0
  Segment part 83.            Intra module refs:   ll_McuPrecisionCount::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll_McuPrecisionCount    00019937 
               XSTACK = 00000000 ( 00000002 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D0E - 00000D13 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitTimer2::?relay    00000D0E        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D14 - 00000D19 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStopTimer2::?relay    00000D14        LL_PowerOffReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D1A - 00000D1F (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartTimer2::?relay   00000D1A        LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D20 - 00000D25 (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Timeout::?relay
                                   00000D20        llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D26 - 00000D2B (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C1Event1::?relay
                                   00000D26        llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D2C - 00000D31 (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Event1::?relay
                                   00000D2C        llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D32 - 00000D37 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC2Event2::?relay
                                   00000D32        llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D38 - 00000D3D (0x6 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2Ints::?relay
                                   00000D38        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D3E - 00000D43 (0x6 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2IntsEvts::?relay
                                   00000D3E        LL_Reset (ll)
                                                   LL_SetAdvControl (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D44 - 00000D49 (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2E1::?relay   00000D44        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D4A - 00000D4F (0x6 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTimer2Capture::?relay
                                   00000D4A        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D50 - 00000D55 (0x6 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTime::?relay
                                   00000D50        LL_SetAdvControl (ll)
                                                   LL_TxData (ll)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAllocTask (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D56 - 00000D5B (0x6 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetFullCTandST::?relay
                                   00000D56        LL_TimeToNextRfEvent (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D5C - 00000D61 (0x6 bytes), align: 0
  Segment part 84.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll_McuPrecisionCount::?relay
                                   00000D5C        osalTimeUpdate (OSAL_ClockBLE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_timerDrift

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000083D9 - 000083E8 (0x10 bytes), align: 0
  Segment part 6.             Intra module refs:   llCalcScaFactor
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SCA                     000083D9 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084E0 - 000084E5 (0x6 bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OverheadJitter          000084E0        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002922 - 00002977 (0x56 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCalcScaFactor         00002922        llAdvEvt_TaskConnect (ll_advEndCauses)
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002978 - 00002A36 (0xbf bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCalcTimerDrift        00002978        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
               calls direct
               XSTACK = 00000006 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000083D9 - 000083E8 (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   SCA
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084E0 - 000084E5 (0x6 bytes), align: 2
  Segment part 11.            Intra module refs:   OverheadJitter

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : phy

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007B0 - 000007B0 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   PHY_AddWlEntry
                                                   PHY_ClearWhitelist
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numWLEntries            000007B0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D30 - 00018D3C (0xd bytes), align: 0
  Segment part 12.            Intra module refs:   PHY_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Init                00018D30 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D3D - 00018D56 (0x1a bytes), align: 0
  Segment part 18.            Intra module refs:   PHY_Reset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Reset               00018D3D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D57 - 00018D85 (0x2f bytes), align: 0
  Segment part 25.            Intra module refs:   PHY_ClearAllRegsAndFifos::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearAllRegsAndFifos
                                   00018D57 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D86 - 00018D8A (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   PHY_ClearAllRegsAndFifos
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D8B - 00018D95 (0xb bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D96 - 00018DD3 (0x3e bytes), align: 0
  Segment part 33.            Intra module refs:   PHY_SetOwnAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetOwnAddr          00018D96 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018DD4 - 00018E11 (0x3e bytes), align: 0
  Segment part 35.            Intra module refs:   PHY_SetPeerAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetPeerAddr         00018DD4 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E12 - 00018E1A (0x9 bytes), align: 0
  Segment part 37.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E1B - 00018E1F (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E20 - 00018E24 (0x5 bytes), align: 0
  Segment part 39.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E25 - 00018E2A (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E2B - 00018E2F (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 39
                                                   Segment part 40
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E30 - 00018E38 (0x9 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 38
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E39 - 00018E46 (0xe bytes), align: 0
  Segment part 43.            Intra module refs:   PHY_SetCRCInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetCRCInit          00018E39 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E47 - 00018E4D (0x7 bytes), align: 0
  Segment part 45.            Intra module refs:   PHY_SetCRCInit
                                                   PHY_SetSyncWord
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E4E - 00018E58 (0xb bytes), align: 0
  Segment part 46.            Intra module refs:   PHY_GetAdvChans::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetAdvChans         00018E4E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E59 - 00018E65 (0xd bytes), align: 0
  Segment part 48.            Intra module refs:   PHY_SetAdvChans::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvChans         00018E59 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002A37 - 00002A3F (0x9 bytes), align: 0
  Segment part 238.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetDataChan         00002A37        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetNextDataChan (ll_common)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002A40 - 00002A44 (0x5 bytes), align: 0
  Segment part 239.           Intra module refs:   PHY_SetDataChan
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E66 - 00018E7C (0x17 bytes), align: 0
  Segment part 50.            Intra module refs:   PHY_SetEndConnection::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetEndConnection    00018E66 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E7D - 00018E8A (0xe bytes), align: 0
  Segment part 52.            Intra module refs:   PHY_ConfigureMD::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureMD         00018E7D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E8B - 00018E95 (0xb bytes), align: 0
  Segment part 60.            Intra module refs:   PHY_GetEndCause::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetEndCause         00018E8B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E96 - 00018EA1 (0xc bytes), align: 0
  Segment part 64.            Intra module refs:   PHY_InitSeqStat::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_InitSeqStat         00018E96 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018EA2 - 00018EB0 (0xf bytes), align: 0
  Segment part 70.            Intra module refs:   PHY_SetSyncWord::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetSyncWord         00018EA2 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018EB1 - 00018EBB (0xb bytes), align: 0
  Segment part 72.            Intra module refs:   PHY_SetMaxNack::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetMaxNack          00018EB1 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018EBC - 00018ED4 (0x19 bytes), align: 0
  Segment part 74.            Intra module refs:   PHY_ClearWhitelist::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWhitelist      00018EBC 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018ED5 - 00018ED5 (0x1 bytes), align: 0
  Segment part 80.            Intra module refs:   PHY_ClearBlacklistIndex
                                                   PHY_SetBlacklistIndex
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018ED6 - 00018EDA (0x5 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018EDB - 00018EDE (0x4 bytes), align: 0
  Segment part 86.            Intra module refs:   PHY_GetAdvChans
                                                   PHY_GetEndCause
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018EDF - 00018F78 (0x9a bytes), align: 0
  Segment part 89.            Intra module refs:   PHY_AddWlEntry::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_AddWlEntry          00018EDF 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F79 - 00018F85 (0xd bytes), align: 0
  Segment part 94.            Intra module refs:   PHY_AddWlEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F86 - 00018F95 (0x10 bytes), align: 0
  Segment part 95.            Intra module refs:   PHY_SetAdvWlPolicy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvWlPolicy      00018F86 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F96 - 00018FAF (0x1a bytes), align: 0
  Segment part 101.           Intra module refs:   PHY_SetBlacklistIndex::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBlacklistIndex   00018F96 
               XSTACK = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018FB0 - 00018FCC (0x1d bytes), align: 0
  Segment part 106.           Intra module refs:   PHY_ClearBlacklistIndex::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklistIndex
                                   00018FB0 
               XSTACK = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018FCD - 00018FD7 (0xb bytes), align: 0
  Segment part 108.           Intra module refs:   PHY_ClearBlacklist::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklist      00018FCD 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018FD8 - 00018FDD (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   phyFindWlEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018FDE - 00018FE2 (0x5 bytes), align: 0
  Segment part 118.           Intra module refs:   PHY_ClearSavedWhiteList
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018FE3 - 00018FE8 (0x6 bytes), align: 0
  Segment part 119.           Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
                                                   Segment part 118
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018FE9 - 00018FFE (0x16 bytes), align: 0
  Segment part 121.           Intra module refs:   PHY_ClearSavedWhiteList::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearSavedWhiteList
                                   00018FE9 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018FFF - 00019004 (0x6 bytes), align: 0
  Segment part 123.           Intra module refs:   PHY_ClearSavedWhiteList
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019005 - 00019008 (0x4 bytes), align: 0
  Segment part 131.           Intra module refs:   PHY_AddWlEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019009 - 0001900D (0x5 bytes), align: 0
  Segment part 132.           Intra module refs:   Segment part 131
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001900E - 00019018 (0xb bytes), align: 0
  Segment part 134.           Intra module refs:   PHY_ConfigureFifoDataProcessing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureFifoDataProcessing
                                   0001900E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019019 - 0001902D (0x15 bytes), align: 0
  Segment part 136.           Intra module refs:   PHY_ConfigureAppendRfStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureAppendRfStatus
                                   00019019 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001902E - 00019038 (0xb bytes), align: 0
  Segment part 138.           Intra module refs:   PHY_SetFifoConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetFifoConfig       0001902E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019039 - 00019041 (0x9 bytes), align: 0
  Segment part 150.           Intra module refs:   PHY_SetSyncWord
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019042 - 000190A2 (0x61 bytes), align: 0
  Segment part 151.           Intra module refs:   PHY_ConfigWhitener::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigWhitener      00019042 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190A3 - 000190A8 (0x6 bytes), align: 0
  Segment part 165.           Intra module refs:   PHY_RetryTxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryTxFifo         000190A3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190A9 - 000190AE (0x6 bytes), align: 0
  Segment part 167.           Intra module refs:   PHY_RetryRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryRxFifo         000190A9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190AF - 000190B4 (0x6 bytes), align: 0
  Segment part 171.           Intra module refs:   PHY_CommitRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CommitRxFifo        000190AF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190B5 - 000190BA (0x6 bytes), align: 0
  Segment part 175.           Intra module refs:   PHY_DeallocateRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_DeallocateRxFifo    000190B5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190BB - 000190BC (0x2 bytes), align: 0
  Segment part 180.           Intra module refs:   PHY_ClearAllRegsAndFifos
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190BD - 000190BD (0x1 bytes), align: 0
  Segment part 181.           Intra module refs:   Segment part 180
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190BE - 000190BE (0x1 bytes), align: 0
  Segment part 182.           Intra module refs:   Segment part 181
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190BF - 000190BF (0x1 bytes), align: 0
  Segment part 183.           Intra module refs:   PHY_ClearBlacklist
                                                   PHY_ConfigureAppendRfStatus
                                                   PHY_ConfigureFifoDataProcessing
                                                   PHY_ConfigureMD
                                                   PHY_InitSeqStat
                                                   PHY_SetAdvChans
                                                   PHY_SetAdvWlPolicy
                                                   PHY_SetEndConnection
                                                   PHY_SetFifoConfig
                                                   PHY_SetMaxNack
                                                   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
                                                   PHY_SetRfFreq
                                                   Segment part 123
                                                   Segment part 182
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190C0 - 000190C6 (0x7 bytes), align: 0
  Segment part 184.           Intra module refs:   PHY_ClearWhitelist
                                                   PHY_ConfigWhitener
                                                   PHY_Init
                                                   PHY_Reset
                                                   Segment part 183
                                                   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190C7 - 000190CC (0x6 bytes), align: 0
  Segment part 212.           Intra module refs:   Segment part 132
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190CD - 000190FF (0x33 bytes), align: 0
  Segment part 218.           Intra module refs:   PHY_SetRfFreq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetRfFreq           000190CD 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019100 - 00019177 (0x78 bytes), align: 0
  Segment part 220.           Intra module refs:   phyFindWlEntry::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           phyFindWlEntry          00019100 
               XSTACK = 0000000C ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019178 - 0001917C (0x5 bytes), align: 0
  Segment part 222.           Intra module refs:   phyFindWlEntry
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D62 - 00000D67 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Init::?relay        00000D62        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D68 - 00000D6D (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   PHY_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Reset::?relay       00000D68        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D6E - 00000D73 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   PHY_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearAllRegsAndFifos::?relay
                                   00000D6E        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D74 - 00000D79 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetOwnAddr::?relay
                                   00000D74        llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D7A - 00000D7F (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetPeerAddr::?relay
                                   00000D7A        llSetupDirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D80 - 00000D85 (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetCRCInit::?relay
                                   00000D80        LL_Reset (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D86 - 00000D8B (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetAdvChans::?relay
                                   00000D86        llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D8C - 00000D91 (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvChans::?relay
                                   00000D8C        llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D92 - 00000D97 (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetEndConnection::?relay
                                   00000D92        RF_NormalIsr (ll_isr)
                                                   llConnCleanup (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D98 - 00000D9D (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureMD::?relay
                                   00000D98        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D9E - 00000DA3 (0x6 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetEndCause::?relay
                                   00000D9E        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DA4 - 00000DA9 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_InitSeqStat::?relay
                                   00000DA4        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DAA - 00000DAF (0x6 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetSyncWord::?relay
                                   00000DAA        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DB0 - 00000DB5 (0x6 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetMaxNack::?relay
                                   00000DB0        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupVersionIndReq (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DB6 - 00000DBB (0x6 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWhitelist::?relay
                                   00000DB6        LL_ClearWhiteList (ll)
                                                   LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DBC - 00000DC1 (0x6 bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_AddWlEntry::?relay
                                   00000DBC        LL_AddWhiteListDevice (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DC2 - 00000DC7 (0x6 bytes), align: 0
  Segment part 96.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvWlPolicy::?relay
                                   00000DC2        LL_SetAdvParam (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DC8 - 00000DCD (0x6 bytes), align: 0
  Segment part 102.           Intra module refs:   PHY_AddWlEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBlacklistIndex::?relay
                                   00000DC8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DCE - 00000DD3 (0x6 bytes), align: 0
  Segment part 107.           Intra module refs:   PHY_AddWlEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklistIndex::?relay
                                   00000DCE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DD4 - 00000DD9 (0x6 bytes), align: 0
  Segment part 109.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklist::?relay
                                   00000DD4        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DDA - 00000DDF (0x6 bytes), align: 0
  Segment part 122.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearSavedWhiteList::?relay
                                   00000DDA        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DE0 - 00000DE5 (0x6 bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureFifoDataProcessing::?relay
                                   00000DE0        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DE6 - 00000DEB (0x6 bytes), align: 0
  Segment part 137.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureAppendRfStatus::?relay
                                   00000DE6        LL_Reset (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DEC - 00000DF1 (0x6 bytes), align: 0
  Segment part 139.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetFifoConfig::?relay
                                   00000DEC        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DF2 - 00000DF7 (0x6 bytes), align: 0
  Segment part 152.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigWhitener::?relay
                                   00000DF2        llRfInit (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DF8 - 00000DFD (0x6 bytes), align: 0
  Segment part 166.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryTxFifo::?relay
                                   00000DF8        llSave_txFIFO (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DFE - 00000E03 (0x6 bytes), align: 0
  Segment part 168.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryRxFifo::?relay
                                   00000DFE        llProcessRxData (ll_common)
                                                   llSave_rxFIFO (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E04 - 00000E09 (0x6 bytes), align: 0
  Segment part 172.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CommitRxFifo::?relay
                                   00000E04        llSave_rxFIFO (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E0A - 00000E0F (0x6 bytes), align: 0
  Segment part 176.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_DeallocateRxFifo::?relay
                                   00000E0A        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llProcessRxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E10 - 00000E15 (0x6 bytes), align: 0
  Segment part 219.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetRfFreq::?relay   00000E10        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E16 - 00000E1B (0x6 bytes), align: 0
  Segment part 221.           Intra module refs:   PHY_AddWlEntry
           LOCAL                   ADDRESS         
           =====                   =======         
           phyFindWlEntry::?relay
                                   00000E16 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_mgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007B1 - 000007B2 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   Segment part 30
                                                   Segment part 39
                                                   smProcessRandComplete
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008419 - 00008428 (0x10 bytes), align: 0
  Segment part 7.             Intra module refs:   generate_subkey
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB71 - 0000EB75 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   sm_xor
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB76 - 0000EBF9 (0x84 bytes), align: 0
  Segment part 13.            Intra module refs:   SM_CalcRandomAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_CalcRandomAddr       0000EB76 
               calls direct
               XSTACK = 00000000 ( 00000011 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EBFA - 0000ECA0 (0xa7 bytes), align: 0
  Segment part 15.            Intra module refs:   SM_ResolveRandomAddrs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResolveRandomAddrs   0000EBFA 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ECA1 - 0000ECA3 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   SM_CalcRandomAddr
                                                   SM_ResolveRandomAddrs
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ECA4 - 0000ECA8 (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   smGenerateRandBuf
                                                   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ECA9 - 0000EDFD (0x155 bytes), align: 0
  Segment part 21.            Intra module refs:   SM_GenerateAuthenSig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_GenerateAuthenSig    0000ECA9 
               calls direct
               XSTACK = 00000000 ( 00000032 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EDFE - 0000EE07 (0xa bytes), align: 0
  Segment part 23.            Intra module refs:   SM_GenerateAuthenSig
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EE08 - 0000F020 (0x219 bytes), align: 0
  Segment part 24.            Intra module refs:   SM_VerifyAuthenSig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_VerifyAuthenSig      0000EE08 
               calls direct
               XSTACK = 00000003 ( 0000003F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F021 - 0000F028 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   SM_VerifyAuthenSig
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F029 - 0000F102 (0xda bytes), align: 0
  Segment part 27.            Intra module refs:   smProcessRandComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessRandComplete   0000F029 
               calls direct
               XSTACK = 00000000 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F103 - 0000F108 (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   SM_VerifyAuthenSig
                                                   smProcessRandComplete
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F109 - 0000F10E (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F10F - 0000F114 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 30
                                                   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F115 - 0000F149 (0x35 bytes), align: 0
  Segment part 32.            Intra module refs:   smStartRspTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartRspTimer         0000F115 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F14A - 0000F159 (0x10 bytes), align: 0
  Segment part 34.            Intra module refs:   smStopRspTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStopRspTimer          0000F14A 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F15A - 0000F160 (0x7 bytes), align: 0
  Segment part 36.            Intra module refs:   smAuthReqToUint8
                                                   smStopRspTimer
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F161 - 0000F16B (0xb bytes), align: 0
  Segment part 39.            Intra module refs:   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F16C - 0000F1E0 (0x75 bytes), align: 0
  Segment part 42.            Intra module refs:   sm_ah::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_ah                   0000F16C 
               calls direct
               XSTACK = 00000014 ( 00000040 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1E1 - 0000F1F4 (0x14 bytes), align: 0
  Segment part 44.            Intra module refs:   sm_ah
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1F5 - 0000F1FB (0x7 bytes), align: 0
  Segment part 45.            Intra module refs:   sm_s1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1FC - 0000F210 (0x15 bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
                                                   sm_ah
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F211 - 0000F215 (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 46
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F216 - 0000F21A (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 47
                                                   smStartRspTimer
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F21B - 0000F402 (0x1e8 bytes), align: 0
  Segment part 51.            Intra module refs:   sm_c1new::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1new                0000F21B 
               calls direct
               XSTACK = 0000000B ( 0000006A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F403 - 0000F40A (0x8 bytes), align: 0
  Segment part 53.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
                                                   sm_CMAC
                                                   sm_c1new
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F40B - 0000F412 (0x8 bytes), align: 0
  Segment part 54.            Intra module refs:   Segment part 26
                                                   Segment part 44
                                                   sm_c1new
                                                   sm_s1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F413 - 0000F43B (0x29 bytes), align: 0
  Segment part 55.            Intra module refs:   sm_xor::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_xor                  0000F413 
               XSTACK = 00000068 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F43C - 0000F4CD (0x92 bytes), align: 0
  Segment part 57.            Intra module refs:   sm_s1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_s1                   0000F43C 
               calls direct
               XSTACK = 00000004 ( 00000040 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F4CE - 0000F4FF (0x32 bytes), align: 0
  Segment part 59.            Intra module refs:   smGenerateRandBuf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandBuf       0000F4CE 
               calls direct
               XSTACK = 0000000F ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F500 - 0000F50C (0xd bytes), align: 0
  Segment part 61.            Intra module refs:   smAuthReqToUint8::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smAuthReqToUint8        0000F500 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F50D - 0000F55E (0x52 bytes), align: 0
  Segment part 63.            Intra module refs:   smUint8ToAuthReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smUint8ToAuthReq        0000F50D 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F55F - 0000F563 (0x5 bytes), align: 0
  Segment part 65.            Intra module refs:   smEncrypt
                                                   smUint8ToAuthReq
                                                   xor_128
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F564 - 0000F589 (0x26 bytes), align: 0
  Segment part 66.            Intra module refs:   smEncrypt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smEncrypt               0000F564 
               calls direct
               XSTACK = 00000068 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F58A - 0000F7EC (0x263 bytes), align: 0
  Segment part 68.            Intra module refs:   sm_CMAC::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_CMAC                 0000F58A 
               calls direct
               XSTACK = 0000003D ( 0000002D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F7ED - 0000F7F6 (0xa bytes), align: 0
  Segment part 70.            Intra module refs:   SM_VerifyAuthenSig
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F7F7 - 0000F8F9 (0x103 bytes), align: 0
  Segment part 71.            Intra module refs:   generate_subkey::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           generate_subkey         0000F7F7 
               calls direct
               XSTACK = 0000002D ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F8FA - 0000F93A (0x41 bytes), align: 0
  Segment part 73.            Intra module refs:   xor_128::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           xor_128                 0000F8FA 
               XSTACK = 0000002D ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F93B - 0000F943 (0x9 bytes), align: 0
  Segment part 75.            Intra module refs:   smGenerateRandBuf
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F944 - 0000F948 (0x5 bytes), align: 0
  Segment part 76.            Intra module refs:   SM_VerifyAuthenSig
                                                   Segment part 75
                                                   sm_CMAC
                                                   xor_128
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F949 - 0000F951 (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   sm_CMAC
                                                   xor_128
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F952 - 0000F99F (0x4e bytes), align: 0
  Segment part 78.            Intra module refs:   leftshift_onebit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           leftshift_onebit        0000F952 
               XSTACK = 00000012 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E1C - 00000E21 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_CalcRandomAddr::?relay
                                   00000E1C        GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E22 - 00000E27 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResolveRandomAddrs::?relay
                                   00000E22        GAP_ResolvePrivateAddr (gap_devmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E28 - 00000E2D (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_GenerateAuthenSig::?relay
                                   00000E28        attSendMsg (att_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E2E - 00000E33 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_VerifyAuthenSig::?relay
                                   00000E2E        ATT_ParsePacket (att_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E34 - 00000E39 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessRandComplete::?relay
                                   00000E34        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E3A - 00000E3F (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartRspTimer::?relay
                                   00000E3A        smProcessDataMsg (sm_pairing)
                                                   smSendSMMsg (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E40 - 00000E45 (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStopRspTimer::?relay
                                   00000E40        smFreePairingParams (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E46 - 00000E4B (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   SM_CalcRandomAddr
                                                   SM_ResolveRandomAddrs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_ah::?relay           00000E46 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E4C - 00000E51 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1new::?relay        00000E4C        sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E52 - 00000E57 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   sm_c1new
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_xor::?relay          00000E52 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E58 - 00000E5D (0x6 bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_s1::?relay           00000E58        smResponderProcessLTKReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E5E - 00000E63 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   SM_CalcRandomAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandBuf::?relay
                                   00000E5E        GAP_SecParamsInit (gap_configmgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E64 - 00000E69 (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smAuthReqToUint8::?relay
                                   00000E64        smpBuildPairingReqRsp (smp)
                                                   smpBuildSecurityReq (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E6A - 00000E6F (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smUint8ToAuthReq::?relay
                                   00000E6A        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   smProcessPairingReq (sm_pairing)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   smpParsePairingReq (smp)
                                                   smpParseSecurityReq (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E70 - 00000E75 (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   sm_ah
                                                   sm_c1new
                                                   sm_s1
           LOCAL                   ADDRESS         
           =====                   =======         
           smEncrypt::?relay       00000E70 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E76 - 00000E7B (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_CMAC::?relay         00000E76 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E7C - 00000E81 (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   sm_CMAC
           LOCAL                   ADDRESS         
           =====                   =======         
           generate_subkey::?relay
                                   00000E7C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E82 - 00000E87 (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   generate_subkey
                                                   sm_CMAC
           LOCAL                   ADDRESS         
           =====                   =======         
           xor_128::?relay         00000E82 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E88 - 00000E8D (0x6 bytes), align: 0
  Segment part 79.            Intra module refs:   generate_subkey
           LOCAL                   ADDRESS         
           =====                   =======         
           leftshift_onebit::?relay
                                   00000E88 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008419 - 00008428 (0x10 bytes), align: 0
  Segment part 80.            Intra module refs:   Segment part 7

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_pairing

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007B3 - 000007B4 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   SM_PasskeyUpdate
                                                   SM_StartPairing
                                                   Segment part 106
                                                   Segment part 15
                                                   Segment part 18
                                                   Segment part 22
                                                   Segment part 23
                                                   Segment part 52
                                                   Segment part 57
                                                   Segment part 69
                                                   Segment part 72
                                                   Segment part 78
                                                   Segment part 87
                                                   smDetermineKeySize
                                                   smFreePairingParams
                                                   smGenerateConfirm
                                                   smProcessEncryptChange
                                                   smSavePairInfo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pPairingParams          000007B3        Segment part 15 (sm_rsppairing)
                                                   Segment part 16 (sm_rsppairing)
                                                   Segment part 23 (sm_rsppairing)
                                                   Segment part 24 (sm_rsppairing)
                                                   Segment part 27 (sm_rsppairing)
                                                   Segment part 36 (sm_rsppairing)
                                                   Segment part 40 (sm_rsppairing)
                                                   Segment part 46 (sm_rsppairing)
                                                   Segment part 51 (sm_rsppairing)
                                                   Segment part 73 (sm_rsppairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007B5 - 000007B6 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   smNextPairingState
                                                   smProcessDataMsg
                                                   smProcessEncryptChange
                                                   smProcessPairingReq
                                                   smRegisterResponder
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pfnResponderCBs         000007B5        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007B7 - 000007B8 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   smNextPairingState
                                                   smProcessDataMsg
                                                   smProcessEncryptChange
                                                   smStartEncryption
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008245 - 0000825D (0x19 bytes), align: 0
  Segment part 9.             Intra module refs:   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DD05 - 0000DDEC (0xe8 bytes), align: 0
  Segment part 10.            Intra module refs:   SM_StartPairing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_StartPairing         0000DD05 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDED - 0000DDEF (0x3 bytes), align: 0
  Segment part 12.            Intra module refs:   SM_StartPairing
                                                   smEndPairing
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDF0 - 0000DDF3 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDF4 - 0000DDF7 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   SM_StartPairing
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDF8 - 0000DDFE (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   Segment part 45
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDFF - 0000DE03 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 15
                                                   Segment part 73
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE04 - 0000DE05 (0x2 bytes), align: 0
  Segment part 17.            Intra module refs:   smEndPairing
                                                   smLinkCheck
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE06 - 0000DE08 (0x3 bytes), align: 0
  Segment part 18.            Intra module refs:   SM_PasskeyUpdate
                                                   SM_StartPairing
                                                   Segment part 17
                                                   smFreePairingParams
                                                   smGeneratePairingReqRsp
                                                   smNextPairingState
                                                   smProcessEncryptChange
                                                   smSetPairingReqRsp
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE09 - 0000DE0E (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
                                                   smNextPairingState
                                                   smProcessDataMsg
                                                   smProcessEncryptChange
                                                   smProcessPairingReq
                                                   smSetPairingReqRsp
                                                   smStartEncryption
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE0F - 0000DEDC (0xce bytes), align: 0
  Segment part 20.            Intra module refs:   SM_PasskeyUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_PasskeyUpdate        0000DE0F 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEDD - 0000DEEA (0xe bytes), align: 0
  Segment part 22.            Intra module refs:   SM_PasskeyUpdate
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEEB - 0000DEF0 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   SM_PasskeyUpdate
                                                   smEndPairing
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEF1 - 0000DEF5 (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
                                                   smLinkCheck
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEF6 - 0000DEFF (0xa bytes), align: 0
  Segment part 27.            Intra module refs:   smRegisterResponder::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smRegisterResponder     0000DEF6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DF00 - 0000DF1C (0x1d bytes), align: 0
  Segment part 29.            Intra module refs:   smLinkCheck::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smLinkCheck             0000DF00 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DF1D - 0000DF21 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   smEndPairing
                                                   smLinkCheck
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DF22 - 0000DF2D (0xc bytes), align: 0
  Segment part 32.            Intra module refs:   smTimedOut::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smTimedOut              0000DF22 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DF2E - 0000E0BE (0x191 bytes), align: 0
  Segment part 34.            Intra module refs:   smProcessDataMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessDataMsg        0000DF2E 
               calls direct
               XSTACK = 00000000 ( 0000001F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E0BF - 0000E0C1 (0x3 bytes), align: 0
  Segment part 36.            Intra module refs:   smPairingSendIdentityAddrInfo
                                                   smProcessDataMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E0C2 - 0000E0C6 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 36
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E0C7 - 0000E0F5 (0x2f bytes), align: 0
  Segment part 38.            Intra module refs:   smSendFailAndEnd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendFailAndEnd        0000E0C7 
               calls direct
               XSTACK = 0000001F ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E0F6 - 0000E20B (0x116 bytes), align: 0
  Segment part 40.            Intra module refs:   smProcessEncryptChange::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessEncryptChange
                                   0000E0F6 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E20C - 0000E211 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   SM_PasskeyUpdate
                                                   smDetermineKeySize
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E212 - 0000E240 (0x2f bytes), align: 0
  Segment part 43.            Intra module refs:   smNextPairingState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smNextPairingState      0000E212 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E241 - 0000E247 (0x7 bytes), align: 0
  Segment part 45.            Intra module refs:   smNextPairingState
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E248 - 0000E258 (0x11 bytes), align: 0
  Segment part 46.            Intra module refs:   smNextPairingState
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E259 - 0000E25E (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 19
                                                   Segment part 46
                                                   smProcessEncryptChange
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E25F - 0000E263 (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   smRegisterResponder
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E264 - 0000E26A (0x7 bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 48
                                                   smDetermineKeySize
                                                   smFreePairingParams
                                                   smNextPairingState
                                                   smTimedOut
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E26B - 0000E3AF (0x145 bytes), align: 0
  Segment part 50.            Intra module refs:   sm_c1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1                   0000E26B 
               calls direct
               XSTACK = 0000000C ( 0000003A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3B0 - 0000E3B2 (0x3 bytes), align: 0
  Segment part 52.            Intra module refs:   smProcessEncryptChange
                                                   smSavePairInfo
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3B3 - 0000E3B7 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 52
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3B8 - 0000E3BB (0x4 bytes), align: 0
  Segment part 54.            Intra module refs:   SM_StartPairing
                                                   Segment part 53
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3BC - 0000E3BE (0x3 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 16
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3BF - 0000E3C4 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 118
                                                   Segment part 55
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3C5 - 0000E3C7 (0x3 bytes), align: 0
  Segment part 57.            Intra module refs:   smSavePairInfo
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3C8 - 0000E3D0 (0x9 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 57
                                                   smDetermineKeySize
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E3D1 - 0000E4A1 (0xd1 bytes), align: 0
  Segment part 59.            Intra module refs:   smProcessPairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessPairingReq     0000E3D1 
               calls direct
               XSTACK = 00000000 ( 00000013 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E4A2 - 0000E4A5 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 46
                                                   Segment part 70
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E4A6 - 0000E4A9 (0x4 bytes), align: 0
  Segment part 62.            Intra module refs:   smProcessDataMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E4AA - 0000E4AF (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 62
                                                   smFreePairingParams
                                                   smPairingSendMasterID
                                                   smProcessDataMsg
                                                   smProcessPairingReq
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E4B0 - 0000E507 (0x58 bytes), align: 0
  Segment part 64.            Intra module refs:   smStartEncryption::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartEncryption       0000E4B0 
               XSTACK = 00000004 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E508 - 0000E50B (0x4 bytes), align: 0
  Segment part 66.            Intra module refs:   SM_StartPairing
                                                   smStartEncryption
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E50C - 0000E55E (0x53 bytes), align: 0
  Segment part 67.            Intra module refs:   smGeneratePairingReqRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGeneratePairingReqRsp
                                   0000E50C 
               calls direct
               XSTACK = 00000012 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E55F - 0000E561 (0x3 bytes), align: 0
  Segment part 69.            Intra module refs:   smEndPairing
                                                   smGeneratePairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E562 - 0000E566 (0x5 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   smNextPairingState
                                                   smProcessDataMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E567 - 0000E56F (0x9 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 95
                                                   smGeneratePairingReqRsp
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E570 - 0000E572 (0x3 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 71
                                                   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E573 - 0000E578 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 66
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E579 - 0000E5B3 (0x3b bytes), align: 0
  Segment part 74.            Intra module refs:   smGenerateConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateConfirm       0000E579 
               calls direct
               XSTACK = 0000000A ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E5B4 - 0000E5E6 (0x33 bytes), align: 0
  Segment part 76.            Intra module refs:   smGenerateRandMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandMsg       0000E5B4 
               calls direct
               XSTACK = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E5E7 - 0000E5F2 (0xc bytes), align: 0
  Segment part 78.            Intra module refs:   SM_PasskeyUpdate
                                                   smGenerateRandMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E5F3 - 0000E860 (0x26e bytes), align: 0
  Segment part 79.            Intra module refs:   smSavePairInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSavePairInfo          0000E5F3 
               calls direct
               XSTACK = 00000000 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E861 - 0000E86C (0xc bytes), align: 0
  Segment part 81.            Intra module refs:   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E86D - 0000E872 (0x6 bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 81
                                                   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E873 - 0000E87E (0xc bytes), align: 0
  Segment part 83.            Intra module refs:   Segment part 82
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E87F - 0000E884 (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E885 - 0000E88F (0xb bytes), align: 0
  Segment part 85.            Intra module refs:   SM_PasskeyUpdate
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E890 - 0000E895 (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   SM_StartPairing
                                                   smDetermineKeySize
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E896 - 0000E8A3 (0xe bytes), align: 0
  Segment part 87.            Intra module refs:   SM_StartPairing
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E8A4 - 0000E8A6 (0x3 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 107
                                                   Segment part 58
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E8A7 - 0000E8AB (0x5 bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 112
                                                   Segment part 13
                                                   Segment part 42
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E8AC - 0000E8B6 (0xb bytes), align: 0
  Segment part 90.            Intra module refs:   smPairingSendEncInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendEncInfo    0000E8AC 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E8B7 - 0000E8C5 (0xf bytes), align: 0
  Segment part 92.            Intra module refs:   smPairingSendEncInfo
                                                   smPairingSendIdentityInfo
                                                   smPairingSendSingingInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E8C6 - 0000E92C (0x67 bytes), align: 0
  Segment part 93.            Intra module refs:   smPairingSendMasterID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendMasterID   0000E8C6 
               calls direct
               XSTACK = 00000002 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E92D - 0000E949 (0x1d bytes), align: 0
  Segment part 95.            Intra module refs:   smGenerateConfirm
                                                   smGenerateRandMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E94A - 0000E94C (0x3 bytes), align: 0
  Segment part 96.            Intra module refs:   Segment part 92
                                                   Segment part 95
                                                   smGeneratePairingReqRsp
                                                   smPairingSendMasterID
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E94D - 0000E951 (0x5 bytes), align: 0
  Segment part 97.            Intra module refs:   SM_PasskeyUpdate
                                                   Segment part 96
                                                   smSendFailAndEnd
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E952 - 0000E95F (0xe bytes), align: 0
  Segment part 98.            Intra module refs:   smPairingSendIdentityInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityInfo
                                   0000E952 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E960 - 0000E9B8 (0x59 bytes), align: 0
  Segment part 100.           Intra module refs:   smPairingSendIdentityAddrInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityAddrInfo
                                   0000E960 
               calls direct
               XSTACK = 00000000 ( 00000015 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E9B9 - 0000E9C6 (0xe bytes), align: 0
  Segment part 102.           Intra module refs:   smPairingSendSingingInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendSingingInfo
                                   0000E9B9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E9C7 - 0000EA25 (0x5f bytes), align: 0
  Segment part 104.           Intra module refs:   smFreePairingParams::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smFreePairingParams     0000E9C7 
               calls direct
               XSTACK = 00000012 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA26 - 0000EA2E (0x9 bytes), align: 0
  Segment part 106.           Intra module refs:   SM_StartPairing
                                                   smEndPairing
                                                   smFreePairingParams
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA2F - 0000EA31 (0x3 bytes), align: 0
  Segment part 107.           Intra module refs:   smFreePairingParams
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA32 - 0000EA39 (0x8 bytes), align: 0
  Segment part 108.           Intra module refs:   Segment part 107
                                                   smDetermineKeySize
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA3A - 0000EA95 (0x5c bytes), align: 0
  Segment part 109.           Intra module refs:   smEndPairing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smEndPairing            0000EA3A 
               calls direct
               XSTACK = 0000000C ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA96 - 0000EA98 (0x3 bytes), align: 0
  Segment part 111.           Intra module refs:   smSavePairInfo
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA99 - 0000EA9D (0x5 bytes), align: 0
  Segment part 112.           Intra module refs:   Segment part 111
                                                   smEndPairing
                                                   smProcessEncryptChange
                                                   smSavePairInfo
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA9E - 0000EAE7 (0x4a bytes), align: 0
  Segment part 113.           Intra module refs:   smDetermineKeySize::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smDetermineKeySize      0000EA9E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAE8 - 0000EB63 (0x7c bytes), align: 0
  Segment part 115.           Intra module refs:   smSetPairingReqRsp::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smSetPairingReqRsp      0000EAE8 
               calls direct
               XSTACK = 0000002F ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB64 - 0000EB69 (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   smProcessEncryptChange
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB6A - 0000EB70 (0x7 bytes), align: 0
  Segment part 118.           Intra module refs:   Segment part 117
                                                   Segment part 24
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E8E - 00000E93 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_StartPairing::?relay
                                   00000E8E        GAP_Authenticate (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E94 - 00000E99 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_PasskeyUpdate::?relay
                                   00000E94        GAP_PasscodeUpdate (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E9A - 00000E9F (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smRegisterResponder::?relay
                                   00000E9A        SM_ResponderInit (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EA0 - 00000EA5 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smLinkCheck::?relay     00000EA0        SM_Init (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EA6 - 00000EAB (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smTimedOut::?relay      00000EA6        SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EAC - 00000EB1 (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessDataMsg::?relay
                                   00000EAC        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EB2 - 00000EB7 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   smProcessDataMsg
                                                   smProcessPairingReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendFailAndEnd::?relay
                                   00000EB2        GAP_TerminateAuth (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EB8 - 00000EBD (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessEncryptChange::?relay
                                   00000EB8        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EBE - 00000EC3 (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smNextPairingState::?relay
                                   00000EBE        SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EC4 - 00000EC9 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   SM_PasskeyUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1::?relay           00000EC4        smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ECA - 00000ECF (0x6 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessPairingReq::?relay
                                   00000ECA        GAP_Authenticate (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ED0 - 00000ED5 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartEncryption::?relay
                                   00000ED0        GAP_Bond (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ED6 - 00000EDB (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   SM_StartPairing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGeneratePairingReqRsp::?relay
                                   00000ED6        smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EDC - 00000EE1 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   SM_PasskeyUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateConfirm::?relay
                                   00000EDC        smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EE2 - 00000EE7 (0x6 bytes), align: 0
  Segment part 77.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandMsg::?relay
                                   00000EE2        smpResponderProcessPairingRandom (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EE8 - 00000EED (0x6 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSavePairInfo::?relay
                                   00000EE8        smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EEE - 00000EF3 (0x6 bytes), align: 0
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendEncInfo::?relay
                                   00000EEE        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EF4 - 00000EF9 (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendMasterID::?relay
                                   00000EF4        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EFA - 00000EFF (0x6 bytes), align: 0
  Segment part 99.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityInfo::?relay
                                   00000EFA        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F00 - 00000F05 (0x6 bytes), align: 0
  Segment part 101.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityAddrInfo::?relay
                                   00000F00        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F06 - 00000F0B (0x6 bytes), align: 0
  Segment part 103.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendSingingInfo::?relay
                                   00000F06        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F0C - 00000F11 (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   SM_StartPairing
                                                   smEndPairing
                                                   smLinkCheck
           LOCAL                   ADDRESS         
           =====                   =======         
           smFreePairingParams::?relay
                                   00000F0C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F12 - 00000F17 (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   smNextPairingState
                                                   smProcessEncryptChange
                                                   smSendFailAndEnd
                                                   smTimedOut
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smEndPairing::?relay    00000F12        smResponderProcessLTKReq (sm_rsppairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F18 - 00000F1D (0x6 bytes), align: 0
  Segment part 114.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smDetermineKeySize::?relay
                                   00000F18        smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F1E - 00000F23 (0x6 bytes), align: 0
  Segment part 116.           Intra module refs:   smGeneratePairingReqRsp
                                                   sm_c1
           LOCAL                   ADDRESS         
           =====                   =======         
           smSetPairingReqRsp::?relay
                                   00000F1E 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008245 - 0000825D (0x19 bytes), align: 0
  Segment part 119.           Intra module refs:   Segment part 9

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_rsppairing

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 0000100C - 00001011 (0x6 bytes), align: 0
  Segment part 6.             Intra module refs:   SM_ResponderInit
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073FF - 00007420 (0x22 bytes), align: 0
  Segment part 8.             Intra module refs:   SM_ResponderInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResponderInit        000073FF 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007421 - 0000760E (0x1ee bytes), align: 0
  Segment part 10.            Intra module refs:   smResponderProcessLTKReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderProcessLTKReq
                                   00007421 
               calls direct, is indirectly called
               XSTACK = 00000002 ( 00000032 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000760F - 00007613 (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007614 - 00007620 (0xd bytes), align: 0
  Segment part 13.            Intra module refs:   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007621 - 0000762D (0xd bytes), align: 0
  Segment part 14.            Intra module refs:   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000762E - 00007633 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007634 - 00007646 (0x13 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 15
                                                   smpResponderProcessPairingRandom
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007647 - 00007915 (0x2cf bytes), align: 0
  Segment part 17.            Intra module refs:   smpResponderProcessIncoming::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessIncoming
                                   00007647 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007916 - 00007918 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007919 - 0000791C (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   smResponderProcessLTKReq
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000791D - 00007927 (0xb bytes), align: 0
  Segment part 21.            Intra module refs:   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007928 - 00007929 (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000792A - 00007932 (0x9 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007933 - 00007938 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007939 - 0000793F (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007940 - 00007944 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007945 - 0000794C (0x8 bytes), align: 0
  Segment part 27.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000794D - 00007953 (0x7 bytes), align: 0
  Segment part 28.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007954 - 0000795B (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 28
                                                   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000795C - 00007A36 (0xdb bytes), align: 0
  Segment part 30.            Intra module refs:   smpResponderProcessPairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpResponderProcessPairingReq
                                   0000795C 
               calls direct
               XSTACK = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A37 - 00007A3B (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   smpResponderProcessMasterID
                                                   smpResponderProcessPairingRandom
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A3C - 00007A3F (0x4 bytes), align: 0
  Segment part 33.            Intra module refs:   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A40 - 00007A43 (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 33
                                                   Segment part 73
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A44 - 00007A4E (0xb bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A4F - 00007A51 (0x3 bytes), align: 0
  Segment part 36.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A52 - 00007A55 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 36
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A56 - 00007A5E (0x9 bytes), align: 0
  Segment part 38.            Intra module refs:   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A5F - 00007A6A (0xc bytes), align: 0
  Segment part 39.            Intra module refs:   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A6B - 00007A6D (0x3 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 14
                                                   Segment part 38
                                                   Segment part 39
                                                   Segment part 54
                                                   Segment part 63
                                                   Segment part 67
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A6E - 00007A73 (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 37
                                                   Segment part 40
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A74 - 00007B0A (0x97 bytes), align: 0
  Segment part 42.            Intra module refs:   smpResponderProcessPairingRandom::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessPairingRandom
                                   00007A74 
               calls direct
               XSTACK = 0000000E ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007B0B - 00007B11 (0x7 bytes), align: 0
  Segment part 44.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
                                                   smpResponderProcessPairingRandom
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007B12 - 00007B15 (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
                                                   smpResponderProcessPairingRandom
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007B16 - 00007B1F (0xa bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
                                                   Segment part 62
                                                   Segment part 64
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007B20 - 00007B26 (0x7 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 27
                                                   Segment part 46
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007B27 - 00007BCF (0xa9 bytes), align: 0
  Segment part 48.            Intra module refs:   smpResponderProcessMasterID::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessMasterID
                                   00007B27 
               calls direct
               XSTACK = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BD0 - 00007BD6 (0x7 bytes), align: 0
  Segment part 50.            Intra module refs:   smResponderProcessLTKReq
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BD7 - 00007BE5 (0xf bytes), align: 0
  Segment part 51.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BE6 - 00007BE8 (0x3 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 14
                                                   Segment part 38
                                                   Segment part 39
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BE9 - 00007BEE (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 20
                                                   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BEF - 00007C01 (0x13 bytes), align: 0
  Segment part 54.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007C02 - 00007C08 (0x7 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 51
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007C09 - 00007EC2 (0x2ba bytes), align: 0
  Segment part 56.            Intra module refs:   smResponderSendNextKeyInfo::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderSendNextKeyInfo
                                   00007C09 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EC3 - 00007EC5 (0x3 bytes), align: 0
  Segment part 58.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EC6 - 00007ECA (0x5 bytes), align: 0
  Segment part 59.            Intra module refs:   Segment part 58
                                                   smResponderProcessLTKReq
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007ECB - 00007ED8 (0xe bytes), align: 0
  Segment part 60.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007ED9 - 00007EE2 (0xa bytes), align: 0
  Segment part 61.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EE3 - 00007EE7 (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EE8 - 00007EED (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EEE - 00007EF3 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EF4 - 00007EFD (0xa bytes), align: 0
  Segment part 65.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EFE - 00007F03 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 26
                                                   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F04 - 00007F08 (0x5 bytes), align: 0
  Segment part 67.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F09 - 00007F0B (0x3 bytes), align: 0
  Segment part 68.            Intra module refs:   Segment part 67
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F0C - 00007F0D (0x2 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 68
                                                   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F0E - 00007F17 (0xa bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F18 - 00007F1B (0x4 bytes), align: 0
  Segment part 71.            Intra module refs:   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F1C - 00007F1F (0x4 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 71
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F20 - 00007F2C (0xd bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 72
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000249 - 0000024E (0x6 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F24 - 00000F29 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResponderInit::?relay
                                   00000F24        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F2A - 00000F2F (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderProcessLTKReq::?relay
                                   00000F2A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F30 - 00000F35 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessIncoming::?relay
                                   00000F30 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F36 - 00000F3B (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   smpResponderProcessIncoming
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpResponderProcessPairingReq::?relay
                                   00000F36 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F3C - 00000F41 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   smpResponderProcessIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessPairingRandom::?relay
                                   00000F3C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F42 - 00000F47 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   smpResponderProcessIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessMasterID::?relay
                                   00000F42 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F48 - 00000F4D (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderSendNextKeyInfo::?relay
                                   00000F48 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007B9 - 000007B9 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   SM_Init
                                                   SM_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smTaskID                000007B9        smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smStartRspTimer (sm_mgr)
                                                   smStopRspTimer (sm_mgr)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B8FE - 0001B91D (0x20 bytes), align: 0
  Segment part 7.             Intra module refs:   SM_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_Init                 0001B8FE 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B91E - 0001B922 (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   SM_Init
                                                   smProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B923 - 0001B994 (0x72 bytes), align: 0
  Segment part 10.            Intra module refs:   SM_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ProcessEvent         0001B923 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B995 - 0001BAA2 (0x10e bytes), align: 0
  Segment part 12.            Intra module refs:   smProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smProcessOSALMsg        0001B995 
               calls direct
               XSTACK = 0000000C ( 0000000B )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F4E - 00000F53 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_Init::?relay         00000F4E        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F54 - 00000F59 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ProcessEvent::?relay
                                   00000F54        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F5A - 00000F5F (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   SM_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           smProcessOSALMsg::?relay
                                   00000F5A 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : smp

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001611B - 00016123 (0x9 bytes), align: 0
  Segment part 6.             Intra module refs:   smpBuildPairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReq      0001611B 
               calls direct, is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016124 - 0001612C (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   smpBuildPairingRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRsp      00016124 
               calls direct, is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001612D - 000161EA (0xbe bytes), align: 0
  Segment part 10.            Intra module refs:   smpBuildPairingReqRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReqRsp   0001612D 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000161EB - 000161EB (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000161EC - 000161EC (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000161ED - 000161F0 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000161F1 - 000161F6 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000161F7 - 000161FC (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000161FD - 00016203 (0x7 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016204 - 0001639F (0x19c bytes), align: 0
  Segment part 18.            Intra module refs:   smpParsePairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingReq      00016204 
               calls direct
               XSTACK = 00000000 ( 00000013 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000163A0 - 000163AA (0xb bytes), align: 0
  Segment part 20.            Intra module refs:   smpBuildPairingReqRsp
                                                   smpParsePairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000163AB - 000163B4 (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   smpParsePairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000163B5 - 000163EA (0x36 bytes), align: 0
  Segment part 22.            Intra module refs:   smpBuildPairingConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingConfirm
                                   000163B5 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000163EB - 00016424 (0x3a bytes), align: 0
  Segment part 24.            Intra module refs:   smpParsePairingConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingConfirm
                                   000163EB 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016425 - 0001645A (0x36 bytes), align: 0
  Segment part 26.            Intra module refs:   smpBuildPairingRandom::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRandom   00016425 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001645B - 00016494 (0x3a bytes), align: 0
  Segment part 28.            Intra module refs:   smpParsePairingRandom::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingRandom   0001645B 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016495 - 000164BE (0x2a bytes), align: 0
  Segment part 30.            Intra module refs:   smpBuildPairingFailed::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingFailed   00016495 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000164BF - 000164C1 (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   smpBuildPairingReq
                                                   smpBuildPairingRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000164C2 - 000164C8 (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
                                                   smpBuildPairingFailed
                                                   smpParsePairingFailed
                                                   smpParseSecurityReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000164C9 - 000164F4 (0x2c bytes), align: 0
  Segment part 34.            Intra module refs:   smpParsePairingFailed::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingFailed   000164C9 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000164F5 - 0001652A (0x36 bytes), align: 0
  Segment part 36.            Intra module refs:   smpBuildEncInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildEncInfo         000164F5 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001652B - 00016536 (0xc bytes), align: 0
  Segment part 38.            Intra module refs:   smpBuildEncInfo
                                                   smpBuildIdentityInfo
                                                   smpBuildPairingConfirm
                                                   smpBuildPairingRandom
                                                   smpBuildSigningInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016537 - 0001653D (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
                                                   smpBuildPairingReqRsp
                                                   smpBuildSecurityReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001653E - 00016577 (0x3a bytes), align: 0
  Segment part 40.            Intra module refs:   smpParseEncInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseEncInfo         0001653E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016578 - 000165C0 (0x49 bytes), align: 0
  Segment part 42.            Intra module refs:   smpBuildMasterID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildMasterID        00016578 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000165C1 - 00016613 (0x53 bytes), align: 0
  Segment part 44.            Intra module refs:   smpParseMasterID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseMasterID        000165C1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016614 - 00016618 (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   smpBuildEncInfo
                                                   smpBuildIdentityAddrInfo
                                                   smpBuildIdentityInfo
                                                   smpBuildMasterID
                                                   smpBuildPairingConfirm
                                                   smpBuildPairingRandom
                                                   smpBuildSigningInfo
                                                   smpParseEncInfo
                                                   smpParseIdentityAddrInfo
                                                   smpParseIdentityInfo
                                                   smpParseMasterID
                                                   smpParsePairingConfirm
                                                   smpParsePairingRandom
                                                   smpParseSigningInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016619 - 0001664D (0x35 bytes), align: 0
  Segment part 47.            Intra module refs:   smpBuildIdentityInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityInfo    00016619 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001664E - 0001668F (0x42 bytes), align: 0
  Segment part 49.            Intra module refs:   smpBuildIdentityAddrInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityAddrInfo
                                   0001664E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016690 - 0001669D (0xe bytes), align: 0
  Segment part 51.            Intra module refs:   smpBuildIdentityAddrInfo
                                                   smpBuildMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001669E - 000166A8 (0xb bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   smpBuildMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166A9 - 000166E2 (0x3a bytes), align: 0
  Segment part 53.            Intra module refs:   smpParseIdentityInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityInfo    000166A9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166E3 - 00016733 (0x51 bytes), align: 0
  Segment part 55.            Intra module refs:   smpParseIdentityAddrInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityAddrInfo
                                   000166E3 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016734 - 00016769 (0x36 bytes), align: 0
  Segment part 57.            Intra module refs:   smpBuildSigningInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSigningInfo     00016734 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001676A - 000167A3 (0x3a bytes), align: 0
  Segment part 59.            Intra module refs:   smpParseSigningInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSigningInfo     0001676A 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000167A4 - 000167D1 (0x2e bytes), align: 0
  Segment part 61.            Intra module refs:   smpBuildSecurityReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSecurityReq     000167A4 
               calls direct
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000167D2 - 000167F4 (0x23 bytes), align: 0
  Segment part 63.            Intra module refs:   smpParseSecurityReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSecurityReq     000167D2 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000167F5 - 00016894 (0xa0 bytes), align: 0
  Segment part 65.            Intra module refs:   smSendSMMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendSMMsg             000167F5 
               calls direct
               XSTACK = 00000002 ( 00000013 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F60 - 00000F65 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReq::?relay
                                   00000F60        smGeneratePairingReqRsp (sm_pairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F66 - 00000F6B (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRsp::?relay
                                   00000F66        smGeneratePairingReqRsp (sm_pairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F6C - 00000F71 (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 32
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReqRsp::?relay
                                   00000F6C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F72 - 00000F77 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingReq::?relay
                                   00000F72        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F78 - 00000F7D (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingConfirm::?relay
                                   00000F78        smGenerateConfirm (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F7E - 00000F83 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingConfirm::?relay
                                   00000F7E        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F84 - 00000F89 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRandom::?relay
                                   00000F84        smGenerateRandMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F8A - 00000F8F (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingRandom::?relay
                                   00000F8A        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F90 - 00000F95 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingFailed::?relay
                                   00000F90        smSendFailAndEnd (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F96 - 00000F9B (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingFailed::?relay
                                   00000F96        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F9C - 00000FA1 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildEncInfo::?relay
                                   00000F9C        smPairingSendEncInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FA2 - 00000FA7 (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseEncInfo::?relay
                                   00000FA2        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FA8 - 00000FAD (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildMasterID::?relay
                                   00000FA8        smPairingSendMasterID (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FAE - 00000FB3 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseMasterID::?relay
                                   00000FAE        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FB4 - 00000FB9 (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityInfo::?relay
                                   00000FB4        smPairingSendIdentityInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FBA - 00000FBF (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityAddrInfo::?relay
                                   00000FBA        smPairingSendIdentityAddrInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FC0 - 00000FC5 (0x6 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityInfo::?relay
                                   00000FC0        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FC6 - 00000FCB (0x6 bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityAddrInfo::?relay
                                   00000FC6        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FCC - 00000FD1 (0x6 bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSigningInfo::?relay
                                   00000FCC        smPairingSendSingingInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FD2 - 00000FD7 (0x6 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSigningInfo::?relay
                                   00000FD2        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FD8 - 00000FDD (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSecurityReq::?relay
                                   00000FD8        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FDE - 00000FE3 (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSecurityReq::?relay
                                   00000FDE        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FE4 - 00000FE9 (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendSMMsg::?relay     00000FE4        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   Segment part 92 (sm_pairing)
                                                   Segment part 95 (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\Libraries\Common\bin\CC254x_BLE_HCI_TL_None.lib
  LIBRARY MODULE, NAME : hci_tl

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007BA - 000007BA (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   HCI_Init
                                                   HCI_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciTaskID               000007BA        HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BB - 000007BB (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   HCI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciTestTaskID           000007BB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BC - 000007BC (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   HCI_GAPTaskRegister
                                                   HCI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciGapTaskID            000007BC        HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BD - 000007BD (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HCI_Init
                                                   HCI_L2CAPTaskRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciL2capTaskID          000007BD        HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BE - 000007BE (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   HCI_Init
                                                   HCI_SMPTaskRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciSmpTaskID            000007BE        HCI_CommandCompleteEvent (hci_event)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BF - 000007BF (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   HCI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciExtTaskID            000007BF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C85F - 0001C88A (0x2c bytes), align: 0
  Segment part 13.            Intra module refs:   HCI_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_Init                0001C85F 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C88B - 0001C8E5 (0x5b bytes), align: 0
  Segment part 15.            Intra module refs:   HCI_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ProcessEvent        0001C88B 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C8E6 - 0001C8EF (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   HCI_GAPTaskRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_GAPTaskRegister     0001C8E6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C8F0 - 0001C8F7 (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   HCI_L2CAPTaskRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_L2CAPTaskRegister   0001C8F0 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C8F8 - 0001C8FF (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   HCI_GAPTaskRegister
                                                   HCI_L2CAPTaskRegister
                                                   HCI_SMPTaskRegister
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C900 - 0001C909 (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   HCI_SMPTaskRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SMPTaskRegister     0001C900 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FEA - 00000FEF (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_Init::?relay        00000FEA        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FF0 - 00000FF5 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ProcessEvent::?relay
                                   00000FF0        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FF6 - 00000FFB (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_GAPTaskRegister::?relay
                                   00000FF6        GAP_Init (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FFC - 00001001 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_L2CAPTaskRegister::?relay
                                   00000FFC        L2CAP_Init (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001002 - 00001007 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SMPTaskRegister::?relay
                                   00001002        SM_Init (sm_task)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL.r51
  PROGRAM MODULE, NAME : OSAL

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007C0 - 000007C1 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   osal_init_system
                                                   osal_msg_enqueue_push
                                                   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_qHead              000007C0 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001012 - 00001012 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           activeTaskID            00001012 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001485E - 00014867 (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   osal_strlen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen             0001485E 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014868 - 000148A5 (0x3e bytes), align: 0
  Segment part 18.            Intra module refs:   osal_memcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy             00014868 
               XSTACK = 00000010 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000148A6 - 000148EE (0x49 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_revmemcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_revmemcpy          000148A6 
               XSTACK = 00000002 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000148EF - 0001491F (0x31 bytes), align: 0
  Segment part 22.            Intra module refs:   osal_memdup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memdup             000148EF 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014920 - 00014928 (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   osal_memdup
                                                   osal_msg_receive
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00014920 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014929 - 00014982 (0x5a bytes), align: 0
  Segment part 25.            Intra module refs:   osal_memcmp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcmp             00014929 
               XSTACK = 00000002 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014983 - 000149A3 (0x21 bytes), align: 0
  Segment part 27.            Intra module refs:   osal_memset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset             00014983 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000149A4 - 00014C5E (0x2bb bytes), align: 0
  Segment part 36.            Intra module refs:   _ltoa::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ltoa                   000149A4 
               calls direct
               XSTACK = 00000002 ( 00000039 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014C5F - 00014C73 (0x15 bytes), align: 0
  Segment part 38.            Intra module refs:   _ltoa
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00014C5F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014C74 - 00014C7B (0x8 bytes), align: 0
  Segment part 39.            Intra module refs:   _ltoa
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00014C74 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014C7C - 00014C84 (0x9 bytes), align: 0
  Segment part 40.            Intra module refs:   osal_rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand               00014C7C 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014C85 - 00014CD1 (0x4d bytes), align: 0
  Segment part 42.            Intra module refs:   osal_msg_allocate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate       00014C85 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014CD2 - 00014CF3 (0x22 bytes), align: 0
  Segment part 44.            Intra module refs:   osal_msg_deallocate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate     00014CD2 
               calls direct
               XSTACK = 00000009 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014CF4 - 00014CFA (0x7 bytes), align: 0
  Segment part 46.            Intra module refs:   osal_init_system
                                                   osal_msg_deallocate
                                                   osal_rand
                                                   osal_strlen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00014CF4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014CFB - 00014D04 (0xa bytes), align: 0
  Segment part 47.            Intra module refs:   osal_msg_send::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send           00014CFB 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D05 - 00014D63 (0x5f bytes), align: 0
  Segment part 51.            Intra module refs:   osal_msg_enqueue_push::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_msg_enqueue_push   00014D05 
               calls direct
               XSTACK = 00000009 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D64 - 00014D70 (0xd bytes), align: 0
  Segment part 53.            Intra module refs:   osal_msg_deallocate
                                                   osal_msg_enqueue_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00014D64 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D71 - 00014DFC (0x8c bytes), align: 0
  Segment part 54.            Intra module refs:   osal_msg_receive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive        00014D71 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014DFD - 00014E02 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   _ltoa
                                                   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00014DFD 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014E03 - 00014E31 (0x2f bytes), align: 0
  Segment part 59.            Intra module refs:   osal_msg_enqueue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue        00014E03 
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014E32 - 00014E35 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00014E32 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014E36 - 00014E38 (0x3 bytes), align: 0
  Segment part 62.            Intra module refs:   osal_msg_send
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00014E36 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014E39 - 00014E3D (0x5 bytes), align: 0
  Segment part 63.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine5
                                                   osal_clear_event
                                                   osal_memcpy
                                                   osal_msg_enqueue_push
                                                   osal_revmemcpy
                                                   osal_set_event
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014E3E - 00014E42 (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   osal_isbufset
                                                   osal_memset
                                                   osal_msg_allocate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00014E3E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014E43 - 00014E4C (0xa bytes), align: 0
  Segment part 67.            Intra module refs:   osal_msg_allocate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00014E43 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014E4D - 00014E7C (0x30 bytes), align: 0
  Segment part 68.            Intra module refs:   osal_msg_push::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push           00014E4D 
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014E7D - 00014E82 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   _ltoa
                                                   osal_memcpy
                                                   osal_msg_extract
                                                   osal_msg_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00014E7D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014E83 - 00014EF6 (0x74 bytes), align: 0
  Segment part 71.            Intra module refs:   osal_msg_extract::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract        00014E83 
               XSTACK = 00000010 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EF7 - 00014EF9 (0x3 bytes), align: 0
  Segment part 73.            Intra module refs:   osal_msg_enqueue_push
                                                   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00014EF7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EFA - 00014EFC (0x3 bytes), align: 0
  Segment part 74.            Intra module refs:   ?Subroutine15
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EFD - 00014F01 (0x5 bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 74
                                                   osal_msg_enqueue
                                                   osal_msg_extract
                                                   osal_msg_push
                                                   osal_msg_receive
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F02 - 00014F0E (0xd bytes), align: 0
  Segment part 78.            Intra module refs:   osal_msg_enqueue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           00014F02 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F0F - 00014F4F (0x41 bytes), align: 0
  Segment part 79.            Intra module refs:   osal_set_event::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event          00014F0F 
               XSTACK = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F50 - 00014F86 (0x37 bytes), align: 0
  Segment part 81.            Intra module refs:   osal_clear_event::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_clear_event        00014F50 
               XSTACK = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F87 - 00014F98 (0x12 bytes), align: 0
  Segment part 87.            Intra module refs:   osal_int_disable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable        00014F87 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F99 - 00014FB7 (0x1f bytes), align: 0
  Segment part 89.            Intra module refs:   osal_init_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system        00014F99 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014FB8 - 00014FC0 (0x9 bytes), align: 0
  Segment part 91.            Intra module refs:   osal_start_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system       00014FB8 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014FC1 - 00015064 (0xa4 bytes), align: 0
  Segment part 93.            Intra module refs:   osal_run_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_run_system         00014FC1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015065 - 0001506D (0x9 bytes), align: 0
  Segment part 95.            Intra module refs:   _ltoa
                                                   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00015065 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001506E - 00015081 (0x14 bytes), align: 0
  Segment part 96.            Intra module refs:   osal_clear_event
                                                   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0001506E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015082 - 00015085 (0x4 bytes), align: 0
  Segment part 97.            Intra module refs:   osal_msg_enqueue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00015082 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015086 - 0001508D (0x8 bytes), align: 0
  Segment part 98.            Intra module refs:   ?Subroutine7
                                                   osal_msg_enqueue_push
                                                   osal_run_system
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001508E - 000150BB (0x2e bytes), align: 0
  Segment part 106.           Intra module refs:   osal_isbufset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_isbufset           0001508E 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000024F - 0000024F (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   activeTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001008 - 0000100D (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen::?relay     00001008        GATTServApp_ReadAttr (gattservapp)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLcd_HW_WriteLine (hal_lcd)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   hex2Str (simpleBLEPeripheral)
                                                   set_code_name (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000100E - 00001013 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_memdup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy::?relay     0000100E        ATT_BuildFindInfoRsp (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATT_RegisterService (gatt_server)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_RandCback (hci)
                                                   LL_SetAdvData (ll)
                                                   LL_SetScanRspData (ll)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   Segment part 69 (att_util)
                                                   Segment part 81 (att_util)
                                                   Segment part 84 (att_util)
                                                   Segment part 97 (att_util)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   battReadAttrCB (battservice)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   set_code_name (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_c1new (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001014 - 00001019 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_revmemcpy::?relay
                                   00001014        GAPBondMgr_SetParameter (gapbondmgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 46 (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000101A - 0000101F (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memdup::?relay     0000101A        GAP_Bond (gap_linkmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001020 - 00001025 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcmp::?relay     00001020        ATT_CompareUUID (att_util)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   verifyWordM (osal_snv)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001026 - 0000102B (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset::?relay     00001026        GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_ParamsInit (gap_configmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GGS_SetParameter (gapgattserver)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   generate_subkey (sm_mgr)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   linkDB_Remove (linkdb)
                                                   osalInitTasks (OSAL_SimpleBLEPeripheral)
                                                   osal_CbTimerInit (osal_cbtimer)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   set_code_name (Simplepasscode)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1new (sm_mgr)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000102C - 00001031 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ltoa::?relay           0000102C        HalLcdWriteStringValue (hal_lcd)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001032 - 00001037 (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand::?relay       00001032        smGenerateRandBuf (sm_mgr)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001038 - 0000103D (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate::?relay
                                   00001038        GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   OnBoard_SendKeys (OnBoard)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvDataStatus (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   smProcessRandComplete (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000103E - 00001043 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   osal_msg_enqueue_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate::?relay
                                   0000103E        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_ProcessEvent (gap_task)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATT_ProcessEvent (gatt_task)
                                                   HCI_ProcessEvent (hci_tl)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   SM_ProcessEvent (sm_task)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   gapBondFreeAuthEvt (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001044 - 00001049 (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send::?relay   00001044        GAP_ProcessEvent (gap_task)
                                                   GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   OnBoard_SendKeys (OnBoard)
                                                   SM_ProcessEvent (sm_task)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvDataStatus (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   smProcessRandComplete (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000104A - 0000104F (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_msg_enqueue_push::?relay
                                   0000104A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001050 - 00001055 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive::?relay
                                   00001050        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_ProcessEvent (gap_task)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATT_ProcessEvent (gatt_task)
                                                   HCI_ProcessEvent (hci_tl)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   SM_ProcessEvent (sm_task)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001056 - 0000105B (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   osal_msg_enqueue_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue::?relay
                                   00001056 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000105C - 00001061 (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   osal_msg_enqueue_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push::?relay   0000105C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001062 - 00001067 (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract::?relay
                                   00001062 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001068 - 0000106D (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   osal_msg_enqueue_push
                                                   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event::?relay
                                   00001068        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalUARTPollDMA (hal_uart)
                                                   LL_Init (ll)
                                                   LL_PowerOnReq (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalTimerUpdate (OSAL_Timers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000106E - 00001073 (0x6 bytes), align: 0
  Segment part 82.            Intra module refs:   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_clear_event::?relay
                                   0000106E        Hal_ProcessEvent (hal_drivers)
                                                   LL_SetAdvControl (ll)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001074 - 00001079 (0x6 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable::?relay
                                   00001074        InitBoard (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000107A - 0000107F (0x6 bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system::?relay
                                   0000107A        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001080 - 00001085 (0x6 bytes), align: 0
  Segment part 92.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system::?relay
                                   00001080        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001086 - 0000108B (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   osal_start_system
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_run_system::?relay
                                   00001086 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000108C - 00001091 (0x6 bytes), align: 0
  Segment part 107.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_isbufset::?relay   0000108C        GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAP_SecParamsInit (gap_configmgr)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrBondTotal (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList (gapbondmgr)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085CA - 000085CA (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085C9 - 000085C9 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085C7 - 000085C7 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085A8 - 000085A9 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   _ltoa
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008535 - 00008538 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   _ltoa
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2710         00008535 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008539 - 0000853C (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   _ltoa
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5f5e100      00008539 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085CA - 000085CA (0x1 bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085C9 - 000085C9 (0x1 bytes), align: 0
  Segment part 111.           Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085C7 - 000085C7 (0x1 bytes), align: 0
  Segment part 112.           Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085A8 - 000085A9 (0x2 bytes), align: 0
  Segment part 113.           Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008535 - 00008538 (0x4 bytes), align: 0
  Segment part 114.           Intra module refs:   __Constant_2710
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008539 - 0000853C (0x4 bytes), align: 0
  Segment part 115.           Intra module refs:   __Constant_5f5e100

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_ClockBLE.r51
  PROGRAM MODULE, NAME : OSAL_ClockBLE

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007C2 - 000007C3 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           previousLLTimerTick     000007C2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007C4 - 000007C5 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           remUsTicks              000007C4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007C6 - 000007C7 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   ?Subroutine3
                                                   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           timeMSec                000007C6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007C8 - 000007CB (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   osalTimeUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OSAL_timeSeconds        000007C8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C5A5 - 0001C68E (0xea bytes), align: 0
  Segment part 13.            Intra module refs:   osalTimeUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimeUpdate          0001C5A5 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C68F - 0001C69B (0xd bytes), align: 0
  Segment part 15.            Intra module refs:   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001C68F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001092 - 00001097 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimeUpdate::?relay
                                   00001092        llScheduleTask (ll_scheduler)
                                                   osal_run_system (OSAL)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Memory.r51
  PROGRAM MODULE, NAME : OSAL_Memory

  SEGMENTS IN THE MODULE
  ======================
<XDATA_N> 1 (was XDATA_N)
  Relative segment, address: XDATA 00001297 - 00001E98 (0xc02 bytes), align: 0
  Segment part 7.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           theHeap                 00001297 
    -------------------------------------------------------------------------
<XDATA_N> 1 (was XDATA_N)
  Relative segment, address: XDATA 00001E99 - 00001E9A (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
                                                   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ff1                     00001E99 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007CC - 000007CC (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           osalMemStat             000007CC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B70D - 0001B73B (0x2f bytes), align: 0
  Segment part 10.            Intra module refs:   osal_mem_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init           0001B70D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B73C - 0001B742 (0x7 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_mem_free
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001B73C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B743 - 0001B778 (0x36 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_mem_kick::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick           0001B743 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B779 - 0001B8C3 (0x14b bytes), align: 0
  Segment part 15.            Intra module refs:   osal_mem_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc          0001B779 
               XSTACK = 0000000A ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B8C4 - 0001B8FD (0x3a bytes), align: 0
  Segment part 17.            Intra module refs:   osal_mem_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free           0001B8C4 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001098 - 0000109D (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init::?relay   00001098        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000109E - 000010A3 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick::?relay   0000109E        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010A4 - 000010A9 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   osal_mem_kick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc::?relay
                                   000010A4        GAP_Authenticate (gap_linkmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATT_RegisterService (gatt_server)
                                                   HalLcdWriteString (hal_lcd)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   generate_subkey (sm_mgr)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_SimpleBLEPeripheral)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_memdup (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010AA - 000010AF (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_mem_kick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free::?relay   000010AA        GAP_Bond (gap_linkmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   HalLcdWriteString (hal_lcd)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   gapFreeAdvertState (gap_peridevmgr)
                                                   gapFreeAuthLink (gap_linkmgr)
                                                   gapFreeEstLink (gap_linkmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   generate_subkey (sm_mgr)
                                                   linkDB_Remove (linkdb)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_msg_deallocate (OSAL)
                                                   smFreePairingParams (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   sm_CMAC (sm_mgr)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_PwrMgr.r51
  PROGRAM MODULE, NAME : OSAL_PwrMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007CD - 000007D3 (0x7 bytes), align: 0
  Segment part 7.             Intra module refs:   osal_pwrmgr_device
                                                   osal_pwrmgr_init
                                                   osal_pwrmgr_powerconserve
                                                   osal_pwrmgr_task_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pwrmgr_attribute        000007CD 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF65 - 0000FF72 (0xe bytes), align: 0
  Segment part 8.             Intra module refs:   osal_pwrmgr_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init        0000FF65 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF73 - 0000FF7A (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   osal_pwrmgr_device
                                                   osal_pwrmgr_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000FF73 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF7B - 0000FF84 (0xa bytes), align: 0
  Segment part 11.            Intra module refs:   osal_pwrmgr_device::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_device      0000FF7B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF85 - 0000FFCE (0x4a bytes), align: 0
  Segment part 13.            Intra module refs:   osal_pwrmgr_task_state::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_task_state
                                   0000FF85 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FFCF - 0000FFFC (0x2e bytes), align: 0
  Segment part 15.            Intra module refs:   osal_pwrmgr_powerconserve::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_powerconserve
                                   0000FFCF 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010B0 - 000010B5 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init::?relay
                                   000010B0        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010B6 - 000010BB (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_device::?relay
                                   000010B6        LL_ProcessEvent (ll)
                                                   main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010BC - 000010C1 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_task_state::?relay
                                   000010BC        Hal_ProcessEvent (hal_drivers)
                                                   LL_Init (ll)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_ProcessEvent (ll)
                                                   LL_SetAdvControl (ll)
                                                   port0Isr (hal_uart)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010C2 - 000010C7 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_powerconserve::?relay
                                   000010C2        osal_run_system (OSAL)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_SimpleBLEPeripheral.r51
  PROGRAM MODULE, NAME : OSAL_SimpleBLEPeripheral

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000825E - 00008275 (0x18 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksArr                0000825E        osal_run_system (OSAL)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085C8 - 000085C8 (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksCnt                000085C8        osal_clear_event (OSAL)
                                                   osal_msg_enqueue_push (OSAL)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007D4 - 000007D5 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   osalInitTasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksEvents             000007D4        ?Subroutine11 (OSAL)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C98E - 0001C9EC (0x5f bytes), align: 0
  Segment part 9.             Intra module refs:   osalInitTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks           0001C98E 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010C8 - 000010CD (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks::?relay   000010C8        osal_init_system (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000825E - 00008275 (0x18 bytes), align: 0
  Segment part 11.            Intra module refs:   tasksArr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085C8 - 000085C8 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   tasksCnt

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Timers.r51
  PROGRAM MODULE, NAME : OSAL_Timers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007D6 - 000007D7 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine4
                                                   osalAddTimer
                                                   osalFindTimer
                                                   osalTimerUpdate
                                                   osal_next_timeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerHead               000007D6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007D8 - 000007DB (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   osalTimerInit
                                                   osalTimerUpdate
                                                   osal_GetSystemClock
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_systemClock        000007D8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001799C - 000179B0 (0x15 bytes), align: 0
  Segment part 9.             Intra module refs:   osalTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit           0001799C 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000179B1 - 00017A5B (0xab bytes), align: 0
  Segment part 11.            Intra module refs:   osalAddTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer            000179B1 
               calls direct
               XSTACK = 00000012 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017A5C - 00017A60 (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   osalAddTimer
                                                   osal_next_timeout
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00017A5C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017A61 - 00017AA0 (0x40 bytes), align: 0
  Segment part 14.            Intra module refs:   osalFindTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer           00017A61 
               XSTACK = 00000010 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017AA1 - 00017AB9 (0x19 bytes), align: 0
  Segment part 16.            Intra module refs:   osalDeleteTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer         00017AA1 
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017ABA - 00017AEF (0x36 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_start_timerEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx      00017ABA 
               calls direct
               XSTACK = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017AF0 - 00017AF4 (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_start_timerEx
                                                   osal_stop_timerEx
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00017AF0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017AF5 - 00017B3C (0x48 bytes), align: 0
  Segment part 21.            Intra module refs:   osal_start_reload_timer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_reload_timer
                                   00017AF5 
               calls direct
               XSTACK = 00000004 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B3D - 00017B41 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   osal_get_timeoutEx
                                                   osal_start_reload_timer
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00017B3D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B42 - 00017B73 (0x32 bytes), align: 0
  Segment part 24.            Intra module refs:   osal_stop_timerEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx       00017B42 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B74 - 00017BAE (0x3b bytes), align: 0
  Segment part 26.            Intra module refs:   osal_get_timeoutEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx      00017B74 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BAF - 00017BB5 (0x7 bytes), align: 0
  Segment part 30.            Intra module refs:   osalDeleteTimer
                                                   osalFindTimer
                                                   osal_GetSystemClock
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00017BAF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BB6 - 00017DAB (0x1f6 bytes), align: 0
  Segment part 31.            Intra module refs:   osalTimerUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerUpdate         00017BB6 
               calls direct
               XSTACK = 0000000C ( 0000001D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017DAC - 00017DAE (0x3 bytes), align: 0
  Segment part 35.            Intra module refs:   osalAddTimer
                                                   osalTimerUpdate
                                                   osal_next_timeout
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00017DAC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017DAF - 00017DB6 (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   ?Subroutine4
                                                   osalAddTimer
                                                   osalTimerUpdate
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017DB7 - 00017E1C (0x66 bytes), align: 0
  Segment part 37.            Intra module refs:   osal_next_timeout::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_next_timeout       00017DB7 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E1D - 00017E22 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   osalTimerUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00017E1D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E23 - 00017E28 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   ?Subroutine5
                                                   osal_next_timeout
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E29 - 00017E35 (0xd bytes), align: 0
  Segment part 41.            Intra module refs:   osal_GetSystemClock::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock     00017E29 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010CE - 000010D3 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit::?relay   000010CE        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010D4 - 000010D9 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_start_reload_timer
                                                   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer::?relay    000010D4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010DA - 000010DF (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   osalAddTimer
                                                   osal_get_timeoutEx
                                                   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer::?relay   000010DA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010E0 - 000010E5 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer::?relay
                                   000010E0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010E6 - 000010EB (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx::?relay
                                   000010E6        GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalLedUpdate (hal_led)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_ProcessEvent (ll)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halProcessKeyInterrupt (hal_key)
                                                   llScheduleTask (ll_scheduler)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smStartRspTimer (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010EC - 000010F1 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_reload_timer::?relay
                                   000010EC        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010F2 - 000010F7 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx::?relay
                                   000010F2        GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_SetAdvControl (ll)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   llT2OVFC1_ISR (ll_isr)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   smStopRspTimer (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010F8 - 000010FD (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx::?relay
                                   000010F8        GAPRole_SetParameter (peripheral)
                                                   gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010FE - 00001103 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerUpdate::?relay
                                   000010FE        osalTimeUpdate (OSAL_ClockBLE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001104 - 00001109 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_next_timeout::?relay
                                   00001104        osal_pwrmgr_powerconserve (OSAL_PwrMgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000110A - 0000110F (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock::?relay
                                   0000110A        HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OnBoard.r51
  PROGRAM MODULE, NAME : OnBoard

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007DC - 000007DC (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnboardKeyIntEnable     000007DC 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001013 - 00001013 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   OnBoard_SendKeys
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           registeredKeysTaskID    00001013 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDE7 - 0001BE0A (0x24 bytes), align: 0
  Segment part 10.            Intra module refs:   InitBoard::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard               0001BDE7 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE0B - 0001BE0F (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001BE0B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE10 - 0001BE37 (0x28 bytes), align: 0
  Segment part 13.            Intra module refs:   Onboard_rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand            0001BE10 
               calls direct
               XSTACK = 00000000 ( 00000002 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE38 - 0001BE3E (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   Onboard_rand
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001BE38 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE3F - 0001BED6 (0x98 bytes), align: 0
  Segment part 16.            Intra module refs:   _itoa::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _itoa                   0001BE3F 
               XSTACK = 00000000 ( 00000015 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BED7 - 0001BEEE (0x18 bytes), align: 0
  Segment part 18.            Intra module refs:   RegisterForKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys         0001BED7 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BEEF - 0001BF30 (0x42 bytes), align: 0
  Segment part 20.            Intra module refs:   OnBoard_SendKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys        0001BEEF 
               calls direct
               XSTACK = 00000009 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF31 - 0001BF75 (0x45 bytes), align: 0
  Segment part 22.            Intra module refs:   OnBoard_KeyCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback     0001BF31 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002A45 - 00002A4A (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_soft_reset      00002A45        LL_ProcessEvent (ll)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000250 - 00000250 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   registeredKeysTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001110 - 00001115 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard::?relay       00001110        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001116 - 0000111B (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand::?relay    00001116        osal_rand (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000111C - 00001121 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _itoa::?relay           0000111C        _ltoa (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001122 - 00001127 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys::?relay
                                   00001122        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001128 - 0000112D (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys::?relay
                                   00001128 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000112E - 00001133 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback::?relay
                                   0000112E 

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleBLEPeripheral_Main.r51
  PROGRAM MODULE, NAME : SimpleBLEPeripheral_Main

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000009D - 0000009D (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPSTA                0000009D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009E - 0000009E (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llRfInit (ll_common)
                                                   llSetFreqTune (ll_common)
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONSTA               0000009E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C9ED - 0001CA44 (0x58 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0001C9ED        ?call_main (?cmain)
               calls direct

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleBLESPIFlash.r51
  PROGRAM MODULE, NAME : SimpleBLESPIFlash

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   HalLcd_HW_Control (hal_lcd)
                                                   HalLcd_HW_Init (hal_lcd)
                                                   HalLcd_HW_Write (hal_lcd)
                                                   HalLedEnterSleep (hal_led)
                                                   HalLedOnOff (hal_led)
                                                   HalSPIRead
                                                   HalSPIWrite
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   llExtendRfRange (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F8 - 000000F8 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalLcd_HW_Control (hal_lcd)
                                                   HalLcd_HW_Init (hal_lcd)
                                                   HalLcd_HW_Write (hal_lcd)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   xnvSPIWrite
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_U1CSR                000000F8 
           LOCAL                   ADDRESS         
           =====                   =======         
           U1CSR                   000000F8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F9 - 000000F9 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalLcd_HW_Control (hal_lcd)
                                                   HalLcd_HW_Write (hal_lcd)
                                                   HalSPIRead
                                                   HalSPIWrite
                                                   xnvSPIWrite
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1DBUF                  000000F9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FE - 000000FE (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   HalLcd_HW_Control (hal_lcd)
                                                   HalLcd_HW_Init (hal_lcd)
                                                   HalLcd_HW_Write (hal_lcd)
                                                   HalLedInit (hal_led)
                                                   HalSPIRead
                                                   HalSPIWrite
                                                   LL_PowerOffReq (ll_sleep)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   llExtendRfRange (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000FE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF76 - 0001BF80 (0xb bytes), align: 0
  Segment part 11.            Intra module refs:   xnvSPIWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xnvSPIWrite             0001BF76 
               XSTACK = 00000014 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF81 - 0001C019 (0x99 bytes), align: 0
  Segment part 13.            Intra module refs:   HalSPIRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalSPIRead              0001BF81 
               calls direct
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C01A - 0001C021 (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   HalSPIRead
                                                   HalSPIWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001C01A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C022 - 0001C0E9 (0xc8 bytes), align: 0
  Segment part 16.            Intra module refs:   HalSPIWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalSPIWrite             0001C022 
               calls direct
               XSTACK = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000853D - 00008540 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   HalSPIWrite
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_100          0000853D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001134 - 00001139 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   HalSPIRead
                                                   HalSPIWrite
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xnvSPIWrite::?relay     00001134 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000113A - 0000113F (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalSPIRead::?relay      0000113A        simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001140 - 00001145 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalSPIWrite::?relay     00001140        simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000853D - 00008540 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   __Constant_100

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleBLESerialUart.r51
  PROGRAM MODULE, NAME : SimpleBLESerialUart

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00001014 - 00001014 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SBP_UART_STUDY_CMD      00001014 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007DD - 000007DD (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           u_state                 000007DD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007DE - 000008DC (0xff bytes), align: 0
  Segment part 15.            Intra module refs:   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UartBuffer              000007DE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B508 - 0001B510 (0x9 bytes), align: 0
  Segment part 22.            Intra module refs:   SbpHalUART_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUART_Init         0001B508 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B511 - 0001B581 (0x71 bytes), align: 0
  Segment part 24.            Intra module refs:   SbpHalUARTInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUARTInit          0001B511 
               calls direct
               XSTACK = 00000000 ( 0000001D )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B582 - 0001B58E (0xd bytes), align: 0
  Segment part 26.            Intra module refs:   studyCompletedAndBroadcastData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           studyCompletedAndBroadcastData
                                   0001B582 
               calls direct
               XSTACK = 00000009 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B58F - 0001B595 (0x7 bytes), align: 0
  Segment part 28.            Intra module refs:   SbpHalUARTInit
                                                   SbpHalUART_Init
                                                   studyCompletedAndBroadcastData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001B58F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008DD - 000008DE (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine4
                                                   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numBytes                000008DD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008DF - 000008E0 (0x2 bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine3
                                                   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           point                   000008DF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008E1 - 000008E2 (0x2 bytes), align: 0
  Segment part 19.            Intra module refs:   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           irdatalen               000008E1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008E3 - 000009E1 (0xff bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine4
                                                   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pktBuffer               000008E3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009E2 - 000009E2 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   SbpHalUARTRead
                                                   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART_PORT_HAVE_READ     000009E2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B596 - 0001B6CF (0x13a bytes), align: 0
  Segment part 29.            Intra module refs:   SbpHalUARTReadCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUARTReadCallback
                                   0001B596 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B6D0 - 0001B6D9 (0xa bytes), align: 0
  Segment part 31.            Intra module refs:   SbpHalUARTReadCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001B6D0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B6DA - 0001B6DC (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   SbpHalUARTReadCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001B6DA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B6DD - 0001B6E4 (0x8 bytes), align: 0
  Segment part 33.            Intra module refs:   ?Subroutine2
                                                   SbpHalUARTReadCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B6E5 - 0001B6EA (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   SbpHalUARTReadCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001B6E5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B6EB - 0001B6FF (0x15 bytes), align: 0
  Segment part 35.            Intra module refs:   SbpHalUARTRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUARTRead          0001B6EB 
               calls direct
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B700 - 0001B70C (0xd bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine1
                                                   SbpHalUARTRead
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001B700 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000251 - 00000251 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   SBP_UART_STUDY_CMD
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001146 - 0000114B (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUART_Init::?relay
                                   00001146        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000114C - 00001151 (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   SbpHalUART_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUARTInit::?relay
                                   0000114C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001152 - 00001157 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           studyCompletedAndBroadcastData::?relay
                                   00001152 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001158 - 0000115D (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   SbpHalUARTInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUARTReadCallback::?relay
                                   00001158 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000115E - 00001163 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUARTRead::?relay
                                   0000115E 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084C0 - 000084C9 (0xa bytes), align: 0
  Segment part 6.             Intra module refs:   studyCompletedAndBroadcastData
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084D4 - 000084DC (0x9 bytes), align: 0
  Segment part 7.             Intra module refs:   SbpHalUARTReadCallback
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084A1 - 000084AB (0xb bytes), align: 0
  Segment part 8.             Intra module refs:   SbpHalUARTReadCallback
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084B6 - 000084BF (0xa bytes), align: 0
  Segment part 9.             Intra module refs:   SbpHalUARTReadCallback
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084C0 - 000084C9 (0xa bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084D4 - 000084DC (0x9 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084A1 - 000084AB (0xb bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084B6 - 000084BF (0xa bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 9

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleDS18B20.r51
  PROGRAM MODULE, NAME : SimpleDS18B20

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   HalKeyPoll (hal_key)
                                                   HalKeyRead (hal_key)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTPollDMA (hal_uart)
                                                   HalUARTReadDMA (hal_uart)
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   port0Isr (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   00000080 
           LOCAL                   ADDRESS         
           =====                   =======         
           P0                      00000080 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FD - 000000FD (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalKeyInit (hal_key)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTOpen (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   000000FD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CBD7 - 0001CBEE (0x18 bytes), align: 0
  Segment part 9.             Intra module refs:   delay_nus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_nus               0001CBD7 
               XSTACK = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008541 - 00008544 (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   SM_VerifyAuthenSig (sm_mgr)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   findOffset (osal_snv)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     00008541 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001164 - 00001169 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_nus::?relay       00001164        simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008541 - 00008544 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   __Constant_ffffffff

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleEepromUtils.r51
    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleRTCInterrupt.r51
  PROGRAM MODULE, NAME : SimpleRTCInterrupt

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000008A - 0000008A (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   RTCInterruptIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IFG                   0000008A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008C - 0000008C (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalKeyConfig (hal_key)
                                                   HalUARTInitDMA (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PICTL                   0000008C 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008D - 0000008D (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IEN                   0000008D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   HalKeyConfig (hal_key)
                                                   halSleep (hal_sleep)
                                                   halUart0TxIsr (hal_uart)
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    0000009A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E8 - 000000E8 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalUARTOpen (hal_uart)
                                                   RTCInterruptIsr
                                                   halKeyPort2Isr (hal_key)
                                                   halUart0TxIsr (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON2               000000E8 
           LOCAL                   ADDRESS         
           =====                   =======         
           IRCON2                  000000E8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F4 - 000000F4 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalLcd_HW_Control (hal_lcd)
                                                   HalLcd_HW_Init (hal_lcd)
                                                   HalLcd_HW_Write (hal_lcd)
                                                   LL_PowerOffReq (ll_sleep)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   llExtendRfRange (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   000000F4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009E3 - 000009E6 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   RTCInterruptIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           k                       000009E3 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002A4B - 00002ABC (0x72 bytes), align: 0
  Segment part 20.            Intra module refs:   RTCInterruptIsr::??INTVEC 123
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTCInterruptIsr         00002A4B 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000001C )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000007D (0x7e bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTCInterruptIsr::??INTVEC 123
                                   0000007B 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084EE - 000084F4 (0x7 bytes), align: 0
  Segment part 14.            Intra module refs:   RTCInterruptIsr
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008545 - 00008548 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   RTCInterruptIsr
                                                   gapIncSignCounter (gap_configmgr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            00008545 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008549 - 0000854C (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   RTCInterruptIsr
                                                   atoi (Simplepasscode)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_a            00008549 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084EE - 000084F4 (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008545 - 00008548 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   __Constant_1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008549 - 0000854C (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   __Constant_a

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleTemperature.r51
  PROGRAM MODULE, NAME : SimpleTemperature

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 00000088 
           LOCAL                   ADDRESS         
           =====                   =======         
           TCON                    00000088 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B6 - 000000B6 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   HalAdcRead (hal_adc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON3                 000000B6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B8 - 000000B8 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalDmaInit (hal_dma)
                                                   HalKeyConfig (hal_key)
                                                   HalUARTOpen (hal_uart)
                                                   halSleep (hal_sleep)
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 000000B8 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN1                    000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BA - 000000BA (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalAdcRead (hal_adc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCL                    000000BA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BB - 000000BB (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   HalAdcRead (hal_adc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCH                    000000BB 

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\Simplepasscode.r51
  PROGRAM MODULE, NAME : Simplepasscode

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000009E7 - 000009E7 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine1
                                                   set_de_passkey
                                                   set_new_passkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           passkey_flag            000009E7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009E8 - 000009EB (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   set_new_passkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           newpasskey              000009E8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009EC - 000009FF (0x14 bytes), align: 0
  Segment part 11.            Intra module refs:   set_code_name
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           newname                 000009EC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A00 - 00000A00 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   set_code_name
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           code_flag               00000A00 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A01 - 00000A01 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   set_code_name
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           name_flag               00000A01 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001015 - 0000101C (0x8 bytes), align: 0
  Segment part 14.            Intra module refs:   set_de_passkey
           LOCAL                   ADDRESS         
           =====                   =======         
           attDeviceName           00001015 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A02E - 0001A0D9 (0xac bytes), align: 0
  Segment part 17.            Intra module refs:   set_de_passkey::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_de_passkey          0001A02E 
               calls direct
               XSTACK = 0000000A ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0DA - 0001A19D (0xc4 bytes), align: 0
  Segment part 19.            Intra module refs:   set_new_passkey::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_new_passkey         0001A0DA 
               calls direct
               XSTACK = 00000018 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A19E - 0001A1A5 (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   set_code_name
                                                   set_new_passkey
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001A19E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A1A6 - 0001A1AF (0xa bytes), align: 0
  Segment part 22.            Intra module refs:   set_de_passkey
                                                   set_new_passkey
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001A1A6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A1B0 - 0001A1B9 (0xa bytes), align: 0
  Segment part 23.            Intra module refs:   set_de_passkey
                                                   set_new_passkey
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001A1B0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A1BA - 0001A220 (0x67 bytes), align: 0
  Segment part 26.            Intra module refs:   atoi::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           atoi                    0001A1BA 
               XSTACK = 00000016 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A221 - 0001A32E (0x10e bytes), align: 0
  Segment part 28.            Intra module refs:   set_code_name::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_code_name           0001A221 
               calls direct
               XSTACK = 00000000 ( 00000018 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A32F - 0001A339 (0xb bytes), align: 0
  Segment part 30.            Intra module refs:   set_code_name
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001A32F 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000252 - 00000259 (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   attDeviceName
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000116A - 0000116F (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_de_passkey::?relay
                                   0000116A        SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001170 - 00001175 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   set_code_name
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_new_passkey::?relay
                                   00001170 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001176 - 0000117B (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   set_code_name
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           atoi::?relay            00001176 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000117C - 00001181 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_code_name::?relay   0000117C        simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008519 - 0000851E (0x6 bytes), align: 0
  Segment part 6.             Intra module refs:   set_code_name
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008519 - 0000851E (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 6

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\battservice.r51
  PROGRAM MODULE, NAME : battservice

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008598 - 00008599 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   battService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           battServUUID            00008598 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085B6 - 000085B7 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 30
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           battLevelUUID           000085B6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A02 - 00000A03 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   battWriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceCB           00000A02 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A04 - 00000A05 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceSetupCB      00000A04 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A06 - 00000A07 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceTeardownCB   00000A06 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A08 - 00000A09 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceCalcCB       00000A08 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000101D - 0000101E (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine5
                                                   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battMinLevel            0000101D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000101F - 00001020 (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battMaxLevel            0000101F 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001021 - 00001021 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceAdcCh        00001021 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000857D - 0000857F (0x3 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 30
           LOCAL                   ADDRESS         
           =====                   =======         
           battService             0000857D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001022 - 00001022 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 30
           LOCAL                   ADDRESS         
           =====                   =======         
           battLevelProps          00001022 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001023 - 00001023 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 30
                                                   battReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           battLevel               00001023 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A0A - 00000A0F (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   Batt_AddService
                                                   Segment part 30
           LOCAL                   ADDRESS         
           =====                   =======         
           battLevelClientCharCfg
                                   00000A0A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001024 - 00001025 (0x2 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 30
           LOCAL                   ADDRESS         
           =====                   =======         
           hidReportRefBattLevel   00001024 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001026 - 0000104D (0x28 bytes), align: 0
  Segment part 29.            Intra module refs:   Batt_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           battAttrTbl             00001026 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008507 - 0000850C (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   Batt_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           battCBs                 00008507 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE34 - 0001AE5E (0x2b bytes), align: 0
  Segment part 32.            Intra module refs:   Batt_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_AddService         0001AE34 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE5F - 0001AE63 (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   Batt_AddService
                                                   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001AE5F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE64 - 0001AF0E (0xab bytes), align: 0
  Segment part 49.            Intra module refs:   battReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           battReadAttrCB          0001AE64 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF0F - 0001AF95 (0x87 bytes), align: 0
  Segment part 51.            Intra module refs:   battWriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           battWriteAttrCB         0001AF0F 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF96 - 0001AFA3 (0xe bytes), align: 0
  Segment part 53.            Intra module refs:   battReadAttrCB
                                                   battWriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001AF96 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFA4 - 0001AFA6 (0x3 bytes), align: 0
  Segment part 56.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001AFA4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFA7 - 0001AFAA (0x4 bytes), align: 0
  Segment part 57.            Intra module refs:   ?Subroutine5
                                                   battMeasure
                                                   battReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFAB - 0001AFB0 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine4
                                                   Segment part 57
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001AFAB 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFB1 - 0001B071 (0xc1 bytes), align: 0
  Segment part 59.            Intra module refs:   battMeasure::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           battMeasure             0001AFB1 
               calls direct
               XSTACK = 0000000B ( 0000000A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B072 - 0001B077 (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   battMeasure
                                                   battWriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001B072 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B078 - 0001B07D (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   battMeasure
                                                   battWriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001B078 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000025A - 0000025B (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   battMinLevel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000025C - 0000025D (0x2 bytes), align: 0
  Segment part 17.            Intra module refs:   battMaxLevel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000025E - 0000025E (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   battServiceAdcCh
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000025F - 0000025F (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   battLevelProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000260 - 00000260 (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   battLevel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000261 - 00000262 (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   hidReportRefBattLevel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000263 - 0000028A (0x28 bytes), align: 0
  Segment part 30.            Intra module refs:   battAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001182 - 00001187 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_AddService::?relay
                                   00001182        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001188 - 0000118D (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   battCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           battReadAttrCB::?relay
                                   00001188 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000118E - 00001193 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   battCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           battWriteAttrCB::?relay
                                   0000118E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001194 - 00001199 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   battReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           battMeasure::?relay     00001194 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008598 - 00008599 (0x2 bytes), align: 0
  Segment part 65.            Intra module refs:   battServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085B6 - 000085B7 (0x2 bytes), align: 0
  Segment part 66.            Intra module refs:   battLevelUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000857D - 0000857F (0x3 bytes), align: 0
  Segment part 67.            Intra module refs:   battService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008507 - 0000850C (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   battCBs

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\devinfoservice.r51
  PROGRAM MODULE, NAME : devinfoservice

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008592 - 00008593 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   devInfoService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoServUUID         00008592 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008590 - 00008591 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoSystemIdUUID     00008590 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000858E - 0000858F (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoModelNumberUUID
                                   0000858E 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000858C - 0000858D (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoSerialNumberUUID
                                   0000858C 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000858A - 0000858B (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoFirmwareRevUUID
                                   0000858A 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008588 - 00008589 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoHardwareRevUUID
                                   00008588 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008586 - 00008587 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoSoftwareRevUUID
                                   00008586 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085B4 - 000085B5 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoMfrNameUUID      000085B4 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085BA - 000085BB (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfo11073CertUUID    000085BA 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085A6 - 000085A7 (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoPnpIdUUID        000085A6 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084DD - 000084DF (0x3 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoService          000084DD 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000104E - 0000104E (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSystemIdProps    0000104E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A10 - 00000A17 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   DevInfo_SetParameter
                                                   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSystemId         00000A10 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000104F - 0000104F (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoModelNumberProps
                                   0000104F 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008462 - 0000846E (0xd bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoModelNumber      00008462 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001050 - 00001050 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSerialNumberProps
                                   00001050 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008446 - 00008453 (0xe bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSerialNumber     00008446 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001051 - 00001051 (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoFirmwareRevProps
                                   00001051 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008374 - 00008385 (0x12 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoFirmwareRev      00008374 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001052 - 00001052 (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoHardwareRevProps
                                   00001052 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000833E - 0000834F (0x12 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoHardwareRev      0000833E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001053 - 00001053 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSoftwareRevProps
                                   00001053 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008362 - 00008373 (0x12 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSoftwareRev      00008362 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001054 - 00001054 (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoMfrNameProps     00001054 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008350 - 00008361 (0x12 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoMfrName          00008350 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001055 - 00001055 (0x1 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo11073CertProps   00001055 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008454 - 00008461 (0xe bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo11073Cert        00008454 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001056 - 00001056 (0x1 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoPnpIdProps       00001056 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001057 - 0000105D (0x7 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoPnpId            00001057 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000105E - 000010F5 (0x98 bytes), align: 0
  Segment part 45.            Intra module refs:   DevInfo_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoAttrTbl          0000105E 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000851F - 00008524 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   DevInfo_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoCBs              0000851F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A906 - 0001A925 (0x20 bytes), align: 0
  Segment part 48.            Intra module refs:   DevInfo_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_AddService      0001A906 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A926 - 0001A92A (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   DevInfo_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001A926 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A92B - 0001A954 (0x2a bytes), align: 0
  Segment part 51.            Intra module refs:   DevInfo_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_SetParameter    0001A92B 
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A955 - 0001ABA4 (0x250 bytes), align: 0
  Segment part 55.            Intra module refs:   devInfo_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo_ReadAttrCB      0001A955 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 00000019 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABA5 - 0001ABAC (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001ABA5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABAD - 0001ABB3 (0x7 bytes), align: 0
  Segment part 58.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001ABAD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABB4 - 0001ABBC (0x9 bytes), align: 0
  Segment part 59.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001ABB4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABBD - 0001ABC5 (0x9 bytes), align: 0
  Segment part 60.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001ABBD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABC6 - 0001ABD1 (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001ABC6 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000028B - 0000028B (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   devInfoSystemIdProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000028C - 0000028C (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   devInfoModelNumberProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000028D - 0000028D (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   devInfoSerialNumberProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000028E - 0000028E (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   devInfoFirmwareRevProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000028F - 0000028F (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   devInfoHardwareRevProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000290 - 00000290 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   devInfoSoftwareRevProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000291 - 00000291 (0x1 bytes), align: 0
  Segment part 36.            Intra module refs:   devInfoMfrNameProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000292 - 00000292 (0x1 bytes), align: 0
  Segment part 39.            Intra module refs:   devInfo11073CertProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000293 - 00000293 (0x1 bytes), align: 0
  Segment part 42.            Intra module refs:   devInfoPnpIdProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000294 - 0000029A (0x7 bytes), align: 0
  Segment part 44.            Intra module refs:   devInfoPnpId
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000029B - 00000332 (0x98 bytes), align: 0
  Segment part 46.            Intra module refs:   devInfoAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000119A - 0000119F (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_AddService::?relay
                                   0000119A        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011A0 - 000011A5 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_SetParameter::?relay
                                   000011A0        peripheralStateNotificationCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011A6 - 000011AB (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   devInfoCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo_ReadAttrCB::?relay
                                   000011A6 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008592 - 00008593 (0x2 bytes), align: 0
  Segment part 62.            Intra module refs:   devInfoServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008590 - 00008591 (0x2 bytes), align: 0
  Segment part 63.            Intra module refs:   devInfoSystemIdUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000858E - 0000858F (0x2 bytes), align: 0
  Segment part 64.            Intra module refs:   devInfoModelNumberUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000858C - 0000858D (0x2 bytes), align: 0
  Segment part 65.            Intra module refs:   devInfoSerialNumberUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000858A - 0000858B (0x2 bytes), align: 0
  Segment part 66.            Intra module refs:   devInfoFirmwareRevUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008588 - 00008589 (0x2 bytes), align: 0
  Segment part 67.            Intra module refs:   devInfoHardwareRevUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008586 - 00008587 (0x2 bytes), align: 0
  Segment part 68.            Intra module refs:   devInfoSoftwareRevUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085B4 - 000085B5 (0x2 bytes), align: 0
  Segment part 69.            Intra module refs:   devInfoMfrNameUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085BA - 000085BB (0x2 bytes), align: 0
  Segment part 70.            Intra module refs:   devInfo11073CertUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085A6 - 000085A7 (0x2 bytes), align: 0
  Segment part 71.            Intra module refs:   devInfoPnpIdUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084DD - 000084DF (0x3 bytes), align: 0
  Segment part 72.            Intra module refs:   devInfoService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008462 - 0000846E (0xd bytes), align: 0
  Segment part 73.            Intra module refs:   devInfoModelNumber
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008446 - 00008453 (0xe bytes), align: 0
  Segment part 74.            Intra module refs:   devInfoSerialNumber
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008374 - 00008385 (0x12 bytes), align: 0
  Segment part 75.            Intra module refs:   devInfoFirmwareRev
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000833E - 0000834F (0x12 bytes), align: 0
  Segment part 76.            Intra module refs:   devInfoHardwareRev
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008362 - 00008373 (0x12 bytes), align: 0
  Segment part 77.            Intra module refs:   devInfoSoftwareRev
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008350 - 00008361 (0x12 bytes), align: 0
  Segment part 78.            Intra module refs:   devInfoMfrName
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008454 - 00008461 (0xe bytes), align: 0
  Segment part 79.            Intra module refs:   devInfo11073Cert
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000851F - 00008524 (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   devInfoCBs

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\gap.r51
  PROGRAM MODULE, NAME : gap

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA45 - 0001CA9A (0x56 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_DeviceInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_DeviceInit          0001CA45 
               calls direct
               XSTACK = 00000004 ( 00000011 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011AC - 000011B1 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_DeviceInit::?relay
                                   000011AC        GAPRole_StartDevice (peripheral)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\gapbondmgr.r51
  PROGRAM MODULE, NAME : gapbondmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000A18 - 00000A18 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GAPBondMgr_Init
                                                   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_Register
                                                   gapBondMgrEraseBonding
                                                   gapBondMgrSendServiceChange
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_TaskID       00000A18 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010F6 - 000010F6 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_PairingMode     000010F6 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010F7 - 000010F8 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_InitiateWait    000010F7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A19 - 00000A19 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_MITM            00000A19 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A1A - 00000A1A (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_IOCap           00000A1A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A1B - 00000A1B (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_OOBDataFlag     00000A1B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A1C - 00000A2B (0x10 bytes), align: 0
  Segment part 15.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_OOBData         00000A1C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A2C - 00000A2C (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_Bonding         00000A2C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A2D - 00000A2D (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_AutoFail        00000A2D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010F9 - 000010F9 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_AutoFailReason
                                   000010F9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010FA - 000010FA (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine17
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_KeyDistList     000010FA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A2E - 00000A31 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_Passcode        00000A2E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010FB - 000010FB (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_KeySize         000010FB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A32 - 00000A33 (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine7
                                                   GAPBondMgr_Register
           LOCAL                   ADDRESS         
           =====                   =======         
           pGapBondCB              00000A32 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A34 - 00000ABF (0x8c bytes), align: 0
  Segment part 26.            Intra module refs:   GAPBondMgr_ResolveAddr
                                                   gapBondMgrAddBond
                                                   gapBondMgrBondTotal
                                                   gapBondMgrFindAddr
                                                   gapBondMgrReadBonds
                                                   gapBondMgr_SyncWhiteList
           LOCAL                   ADDRESS         
           =====                   =======         
           bonds                   00000A34 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AC0 - 00000AC0 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAddBond
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           autoSyncWhiteList       00000AC0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AC1 - 00000AC1 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           eraseAllBonds           00000AC1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AC2 - 00000ACB (0xa bytes), align: 0
  Segment part 29.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           bondsToDelete           00000AC2 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010FC - 000010FC (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   gapBondFreeAuthEvt
                                                   gapBondMgrAddBond
                                                   gapBondMgrEraseBonding
           LOCAL                   ADDRESS         
           =====                   =======         
           bondIdx                 000010FC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000ACC - 00000ACD (0x2 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine13
                                                   ?Subroutine14
                                                   ?Subroutine9
                                                   GAPBondMgr_ProcessGAPMsg
                                                   gapBondFreeAuthEvt
                                                   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           pAuthEvt                00000ACC 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005E69 - 000060C3 (0x25b bytes), align: 0
  Segment part 36.            Intra module refs:   GAPBondMgr_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_SetParameter
                                   00005E69 
               calls direct
               XSTACK = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000060C4 - 000060CD (0xa bytes), align: 0
  Segment part 38.            Intra module refs:   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           000060C4 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000060CE - 0000626E (0x1a1 bytes), align: 0
  Segment part 41.            Intra module refs:   GAPBondMgr_LinkEst::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_LinkEst      000060CE 
               calls direct
               XSTACK = 00000001 ( 00000046 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000626F - 00006322 (0xb4 bytes), align: 0
  Segment part 43.            Intra module refs:   GAPBondMgr_ResolveAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ResolveAddr
                                   0000626F 
               calls direct
               XSTACK = 00000044 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006323 - 000063AB (0x89 bytes), align: 0
  Segment part 45.            Intra module refs:   GAPBondMgr_ServiceChangeInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ServiceChangeInd
                                   00006323 
               calls direct
               XSTACK = 0000000C ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063AC - 000063B0 (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   gapBondMgrChangeState
                                                   gapBondMgrGetPublicAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000063AC 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063B1 - 000063B5 (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   ?Subroutine1
                                                   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ServiceChangeInd
                                                   gapBondMgrFindAddr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063B6 - 0000643A (0x85 bytes), align: 0
  Segment part 49.            Intra module refs:   GAPBondMgr_UpdateCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_UpdateCharCfg
                                   000063B6 
               calls direct
               XSTACK = 0000000F ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000643B - 0000645F (0x25 bytes), align: 0
  Segment part 51.            Intra module refs:   GAPBondMgr_Register::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Register     0000643B 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006460 - 0000678D (0x32e bytes), align: 0
  Segment part 55.            Intra module refs:   GAPBondMgr_ProcessGAPMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessGAPMsg
                                   00006460 
               calls direct
               XSTACK = 0000000C ( 00000026 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000678E - 00006790 (0x3 bytes), align: 0
  Segment part 57.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000678E 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006791 - 00006795 (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   ?Subroutine0
                                                   GAPBondMgr_ResolveAddr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006796 - 00006798 (0x3 bytes), align: 0
  Segment part 59.            Intra module refs:   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00006796 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006799 - 0000679E (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   ?Subroutine12
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrChangeState
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000679F - 000067AD (0xf bytes), align: 0
  Segment part 61.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0000679F 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000067AE - 000067B5 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
                                                   Segment part 103
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           000067AE 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000067B6 - 0000683B (0x86 bytes), align: 0
  Segment part 63.            Intra module refs:   gapBondMgrChangeState::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrChangeState   000067B6 
               calls direct
               XSTACK = 0000000C ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000683C - 00006962 (0x127 bytes), align: 0
  Segment part 65.            Intra module refs:   gapBondMgrUpdateCharCfg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrUpdateCharCfg
                                   0000683C 
               calls direct
               XSTACK = 0000000E ( 00000028 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006963 - 00006968 (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   gapBondMgrInvertCharCfgItem
                                                   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00006963 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006969 - 0000696E (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   ?Subroutine18
                                                   GAPBondMgr_ProcessGAPMsg
                                                   gapBondMgrAddBond
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000696F - 000069A1 (0x33 bytes), align: 0
  Segment part 69.            Intra module refs:   gapBondMgrFindCharCfgItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindCharCfgItem
                                   0000696F 
               XSTACK = 00000028 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000069A2 - 000069A8 (0x7 bytes), align: 0
  Segment part 71.            Intra module refs:   GAPBondMgr_LinkEst
                                                   gapBondMgrFindCharCfgItem
                                                   gapBondMgrInvertCharCfgItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           000069A2 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000069A9 - 000069DD (0x35 bytes), align: 0
  Segment part 72.            Intra module refs:   gapBondMgrInvertCharCfgItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrInvertCharCfgItem
                                   000069A9 
               XSTACK = 00000044 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000069DE - 00006B6D (0x190 bytes), align: 0
  Segment part 74.            Intra module refs:   gapBondMgrAddBond::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAddBond       000069DE 
               calls direct
               XSTACK = 00000024 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006B6E - 00006B76 (0x9 bytes), align: 0
  Segment part 76.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           00006B6E 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006B77 - 00006B7F (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00006B77 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006B80 - 00006B8A (0xb bytes), align: 0
  Segment part 78.            Intra module refs:   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00006B80 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006B8B - 00006B91 (0x7 bytes), align: 0
  Segment part 79.            Intra module refs:   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00006B8B 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006B92 - 00006B97 (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   ?Subroutine10
                                                   GAPBondMgr_LinkEst
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006B98 - 00006B9D (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   ?Subroutine16
                                                   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
                                                   Segment part 80
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           00006B98 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006B9E - 00006BFA (0x5d bytes), align: 0
  Segment part 82.            Intra module refs:   gapBondMgrGetPublicAddr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrGetPublicAddr
                                   00006B9E 
               calls direct
               XSTACK = 00000010 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006BFB - 00006C43 (0x49 bytes), align: 0
  Segment part 84.            Intra module refs:   gapBondMgrFindAddr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindAddr      00006BFB 
               calls direct
               XSTACK = 0000001A ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006C44 - 00006CAE (0x6b bytes), align: 0
  Segment part 86.            Intra module refs:   gapBondMgrResolvePrivateAddr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrResolvePrivateAddr
                                   00006C44 
               calls direct
               XSTACK = 00000010 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006CAF - 00006D1F (0x71 bytes), align: 0
  Segment part 88.            Intra module refs:   gapBondMgrReadBonds::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrReadBonds     00006CAF 
               calls direct
               XSTACK = 00000024 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006D20 - 00006D4C (0x2d bytes), align: 0
  Segment part 90.            Intra module refs:   gapBondMgrBondTotal::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondTotal     00006D20 
               calls direct
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006D4D - 00006D51 (0x5 bytes), align: 0
  Segment part 92.            Intra module refs:   GAPBondMgr_Init
                                                   gapBondMgrBondTotal
                                                   gapBondMgrEraseAllBondings
                                                   gapBondMgrFindCharCfgItem
                                                   gapBondMgrInvertCharCfgItem
                                                   gapBondMgrReadBonds
                                                   gapBondMgrResolvePrivateAddr
                                                   gapBondMgr_SyncWhiteList
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00006D4D 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006D52 - 00006D69 (0x18 bytes), align: 0
  Segment part 93.            Intra module refs:   gapBondMgrEraseAllBondings::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseAllBondings
                                   00006D52 
               calls direct
               XSTACK = 00000024 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006D6A - 00006EAA (0x141 bytes), align: 0
  Segment part 95.            Intra module refs:   gapBondMgrEraseBonding::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseBonding
                                   00006D6A 
               calls direct
               XSTACK = 00000024 ( 00000042 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EAB - 00006EB2 (0x8 bytes), align: 0
  Segment part 97.            Intra module refs:   gapBondMgrBondReq
                                                   gapBondMgrEraseBonding
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00006EAB 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EB3 - 00006EC2 (0x10 bytes), align: 0
  Segment part 98.            Intra module refs:   GAPBondMgr_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Init         00006EB3 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EC3 - 00006FCD (0x10b bytes), align: 0
  Segment part 100.           Intra module refs:   GAPBondMgr_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessEvent
                                   00006EC3 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006FCE - 00006FD0 (0x3 bytes), align: 0
  Segment part 102.           Intra module refs:   GAPBondMgr_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00006FCE 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006FD1 - 00006FD8 (0x8 bytes), align: 0
  Segment part 103.           Intra module refs:   ?Subroutine9
                                                   gapBondMgr_SyncCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006FD9 - 00006FDD (0x5 bytes), align: 0
  Segment part 106.           Intra module refs:   gapBondMgr_SyncCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00006FD9 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006FDE - 00006FF3 (0x16 bytes), align: 0
  Segment part 107.           Intra module refs:   gapBondMgrSendServiceChange::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrSendServiceChange
                                   00006FDE 
               calls direct, is indirectly called
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006FF4 - 00006FF9 (0x6 bytes), align: 0
  Segment part 109.           Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00006FF4 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006FFA - 00006FFF (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   ?Subroutine8
                                                   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
                                                   gapBondFreeAuthEvt
                                                   gapBondMgrSendServiceChange
                                                   gapBondMgr_SyncCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007000 - 0000702E (0x2f bytes), align: 0
  Segment part 111.           Intra module refs:   gapBondSetupPrivFlag::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondSetupPrivFlag    00007000 
               calls direct
               XSTACK = 0000001A ( 00000001 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000702F - 00007035 (0x7 bytes), align: 0
  Segment part 113.           Intra module refs:   GAPBondMgr_Register
                                                   gapBondFreeAuthEvt
                                                   gapBondMgrSendServiceChange
                                                   gapBondSetupPrivFlag
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000702F 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007036 - 000071D0 (0x19b bytes), align: 0
  Segment part 114.           Intra module refs:   gapBondMgrAuthenticate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAuthenticate
                                   00007036 
               calls direct
               XSTACK = 00000024 ( 00000028 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000071D1 - 000071D3 (0x3 bytes), align: 0
  Segment part 116.           Intra module refs:   gapBondMgrAddBond
                                                   gapBondMgrAuthenticate
                                                   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            000071D1 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000071D4 - 000071D8 (0x5 bytes), align: 0
  Segment part 117.           Intra module refs:   ?Subroutine2
                                                   GAPBondMgr_UpdateCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000071D9 - 000071DF (0x7 bytes), align: 0
  Segment part 118.           Intra module refs:   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           000071D9 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000071E0 - 000071E9 (0xa bytes), align: 0
  Segment part 119.           Intra module refs:   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           000071E0 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000071EA - 00007276 (0x8d bytes), align: 0
  Segment part 120.           Intra module refs:   gapBondMgrBondReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondReq       000071EA 
               calls direct
               XSTACK = 00000045 ( 00000029 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007277 - 000072B5 (0x3f bytes), align: 0
  Segment part 122.           Intra module refs:   gapBondMgr_SyncWhiteList::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncWhiteList
                                   00007277 
               calls direct
               XSTACK = 0000001A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000072B6 - 000073C6 (0x111 bytes), align: 0
  Segment part 124.           Intra module refs:   gapBondMgr_SyncCharCfg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncCharCfg
                                   000072B6 
               calls direct
               XSTACK = 0000000C ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073C7 - 000073CE (0x8 bytes), align: 0
  Segment part 126.           Intra module refs:   gapBondMgr_SyncCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           000073C7 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073CF - 000073D1 (0x3 bytes), align: 0
  Segment part 127.           Intra module refs:   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            000073CF 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073D2 - 000073D9 (0x8 bytes), align: 0
  Segment part 128.           Intra module refs:   ?Subroutine7
                                                   GAPBondMgr_ProcessGAPMsg
                                                   gapBondFreeAuthEvt
                                                   gapBondMgrAddBond
                                                   gapBondMgr_SyncCharCfg
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000ACE - 00000ACF (0x2 bytes), align: 0
  Segment part 33.            Intra module refs:   gapBondMgr_SyncCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncCharCfg::pAttr
                                   00000ACE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AD0 - 00000AD1 (0x2 bytes), align: 0
  Segment part 34.            Intra module refs:   gapBondMgr_SyncCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncCharCfg::service
                                   00000AD0 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073DA - 000073FE (0x25 bytes), align: 0
  Segment part 129.           Intra module refs:   gapBondFreeAuthEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondFreeAuthEvt      000073DA 
               calls direct
               XSTACK = 00000042 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000333 - 00000333 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   gapBond_PairingMode
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000334 - 00000335 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   gapBond_InitiateWait
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000336 - 00000336 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   gapBond_AutoFailReason
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000337 - 00000337 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   gapBond_KeyDistList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000338 - 00000338 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   gapBond_KeySize
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000339 - 00000339 (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   bondIdx
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011B2 - 000011B7 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_SetParameter::?relay
                                   000011B2        set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011B8 - 000011BD (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_LinkEst::?relay
                                   000011B8        gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011BE - 000011C3 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_ServiceChangeInd
                                                   GAPBondMgr_SetParameter
                                                   GAPBondMgr_UpdateCharCfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ResolveAddr::?relay
                                   000011BE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011C4 - 000011C9 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   GAPBondMgr_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ServiceChangeInd::?relay
                                   000011C4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011CA - 000011CF (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   GAPBondMgr_ProcessEvent
                                                   gapBondMgr_SyncCharCfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_UpdateCharCfg::?relay
                                   000011CA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011D0 - 000011D5 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Register::?relay
                                   000011D0        SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011D6 - 000011DB (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   GAPBondMgr_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessGAPMsg::?relay
                                   000011D6        gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011DC - 000011E1 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   GAPBondMgr_ServiceChangeInd
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrChangeState::?relay
                                   000011DC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011E2 - 000011E7 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   GAPBondMgr_UpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrUpdateCharCfg::?relay
                                   000011E2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011E8 - 000011ED (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindCharCfgItem::?relay
                                   000011E8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011EE - 000011F3 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   GAPBondMgr_LinkEst
                                                   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrInvertCharCfgItem::?relay
                                   000011EE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011F4 - 000011F9 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAddBond::?relay
                                   000011F4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011FA - 000011FF (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   GAPBondMgr_ResolveAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrGetPublicAddr::?relay
                                   000011FA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001200 - 00001205 (0x6 bytes), align: 0
  Segment part 85.            Intra module refs:   GAPBondMgr_ResolveAddr
                                                   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindAddr::?relay
                                   00001200 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001206 - 0000120B (0x6 bytes), align: 0
  Segment part 87.            Intra module refs:   GAPBondMgr_ResolveAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrResolvePrivateAddr::?relay
                                   00001206 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000120C - 00001211 (0x6 bytes), align: 0
  Segment part 89.            Intra module refs:   GAPBondMgr_Init
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrReadBonds::?relay
                                   0000120C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001212 - 00001217 (0x6 bytes), align: 0
  Segment part 91.            Intra module refs:   gapBondSetupPrivFlag
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondTotal::?relay
                                   00001212 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001218 - 0000121D (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseAllBondings::?relay
                                   00001218 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000121E - 00001223 (0x6 bytes), align: 0
  Segment part 96.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrEraseAllBondings
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseBonding::?relay
                                   0000121E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001224 - 00001229 (0x6 bytes), align: 0
  Segment part 99.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Init::?relay
                                   00001224        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000122A - 0000122F (0x6 bytes), align: 0
  Segment part 101.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessEvent::?relay
                                   0000122A        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001230 - 00001235 (0x6 bytes), align: 0
  Segment part 108.           Intra module refs:   GAPBondMgr_ServiceChangeInd
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrSendServiceChange::?relay
                                   00001230 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001236 - 0000123B (0x6 bytes), align: 0
  Segment part 112.           Intra module refs:   gapBondMgrAddBond
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondSetupPrivFlag::?relay
                                   00001236 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000123C - 00001241 (0x6 bytes), align: 0
  Segment part 115.           Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAuthenticate::?relay
                                   0000123C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001242 - 00001247 (0x6 bytes), align: 0
  Segment part 121.           Intra module refs:   GAPBondMgr_LinkEst
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondReq::?relay
                                   00001242 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001248 - 0000124D (0x6 bytes), align: 0
  Segment part 123.           Intra module refs:   gapBondMgrAddBond
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncWhiteList::?relay
                                   00001248 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000124E - 00001253 (0x6 bytes), align: 0
  Segment part 125.           Intra module refs:   GAPBondMgr_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncCharCfg::?relay
                                   0000124E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001254 - 00001259 (0x6 bytes), align: 0
  Segment part 130.           Intra module refs:   GAPBondMgr_ProcessEvent
                                                   gapBondMgrEraseBonding
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondFreeAuthEvt::?relay
                                   00001254 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084FB - 00008500 (0x6 bytes), align: 0
  Segment part 6.             Intra module refs:   GAPBondMgr_LinkEst
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008529 - 0000852C (0x4 bytes), align: 0
  Segment part 35.            Intra module refs:   GAPBondMgr_SetParameter
                                                   GAP_PasscodeUpdate (gap_linkmgr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_f4240        00008529 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084FB - 00008500 (0x6 bytes), align: 0
  Segment part 131.           Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008529 - 0000852C (0x4 bytes), align: 0
  Segment part 132.           Intra module refs:   __Constant_f4240

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\gatt_uuid.r51
  PROGRAM MODULE, NAME : gatt_uuid

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085B8 - 000085B9 (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapServiceUUID          000085B8        Segment part 7 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085B2 - 000085B3 (0x2 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattServiceUUID         000085B2        Segment part 15 (gattservapp)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085C4 - 000085C5 (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           primaryServiceUUID      000085C4        GATT_FindNextAttr (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   Segment part 20 (gattservapp)
                                                   Segment part 25 (gapgattserver)
                                                   Segment part 30 (battservice)
                                                   Segment part 46 (devinfoservice)
                                                   Segment part 53 (simpleGATTprofile)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085A4 - 000085A5 (0x2 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           secondaryServiceUUID    000085A4        GATTServApp_ReadAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_RegisterService (gatt_server)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085A0 - 000085A1 (0x2 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           characterUUID           000085A0        GATT_FindNextAttr (gatt_server)
                                                   Segment part 20 (gattservapp)
                                                   Segment part 25 (gapgattserver)
                                                   Segment part 30 (battservice)
                                                   Segment part 46 (devinfoservice)
                                                   Segment part 53 (simpleGATTprofile)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000859E - 0000859F (0x2 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           charUserDescUUID        0000859E        Segment part 53 (simpleGATTprofile)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000859C - 0000859D (0x2 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clientCharCfgUUID       0000859C        Segment part 20 (gattservapp)
                                                   Segment part 30 (battservice)
                                                   Segment part 53 (simpleGATTprofile)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000859A - 0000859B (0x2 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deviceNameUUID          0000859A        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008584 - 00008585 (0x2 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           appearanceUUID          00008584        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008582 - 00008583 (0x2 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           periPrivacyFlagUUID     00008582        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008580 - 00008581 (0x2 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reconnectAddrUUID       00008580        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008594 - 00008595 (0x2 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           periConnParamUUID       00008594        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008596 - 00008597 (0x2 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           serviceChangedUUID      00008596        GATT_ServiceChangedInd (gatt_server)
                                                   Segment part 20 (gattservapp)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085A2 - 000085A3 (0x2 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reportRefUUID           000085A2        Segment part 30 (battservice)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085B8 - 000085B9 (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   gapServiceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085B2 - 000085B3 (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   gattServiceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085C4 - 000085C5 (0x2 bytes), align: 0
  Segment part 31.            Intra module refs:   primaryServiceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085A4 - 000085A5 (0x2 bytes), align: 0
  Segment part 32.            Intra module refs:   secondaryServiceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085A0 - 000085A1 (0x2 bytes), align: 0
  Segment part 34.            Intra module refs:   characterUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000859E - 0000859F (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   charUserDescUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000859C - 0000859D (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   clientCharCfgUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000859A - 0000859B (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   deviceNameUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008584 - 00008585 (0x2 bytes), align: 0
  Segment part 42.            Intra module refs:   appearanceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008582 - 00008583 (0x2 bytes), align: 0
  Segment part 43.            Intra module refs:   periPrivacyFlagUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008580 - 00008581 (0x2 bytes), align: 0
  Segment part 44.            Intra module refs:   reconnectAddrUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008594 - 00008595 (0x2 bytes), align: 0
  Segment part 45.            Intra module refs:   periConnParamUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008596 - 00008597 (0x2 bytes), align: 0
  Segment part 46.            Intra module refs:   serviceChangedUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085A2 - 000085A3 (0x2 bytes), align: 0
  Segment part 49.            Intra module refs:   reportRefUUID

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_adc.r51
  PROGRAM MODULE, NAME : hal_adc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B4 - 000000B4 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   HalAdcRead
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 000000B4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCFG                  000000F2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AD2 - 00000AD2 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   HalAdcInit
                                                   HalAdcRead
                                                   HalAdcSetReference
           LOCAL                   ADDRESS         
           =====                   =======         
           adcRef                  00000AD2 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F2D - 00007F35 (0x9 bytes), align: 0
  Segment part 12.            Intra module refs:   HalAdcInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit              00007F2D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F36 - 00007F3D (0x8 bytes), align: 0
  Segment part 14.            Intra module refs:   HalAdcInit
                                                   HalAdcSetReference
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00007F36 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F3E - 00007FE2 (0xa5 bytes), align: 0
  Segment part 15.            Intra module refs:   HalAdcRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead              00007F3E 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007FE3 - 00007FED (0xb bytes), align: 0
  Segment part 17.            Intra module refs:   HalAdcSetReference::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcSetReference      00007FE3 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000125A - 0000125F (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit::?relay      0000125A        HalDriverInit (hal_drivers)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001260 - 00001265 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead::?relay      00001260        battMeasure (battservice)
                                                   halGetJoyKeyInput (hal_key)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001266 - 0000126B (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcSetReference::?relay
                                   00001266        battMeasure (battservice)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_aes.r51
  PROGRAM MODULE, NAME : hal_aes

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B3 - 000000B3 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCCS                   000000B3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D1 - 000000D1 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalFlashWrite (hal_flash)
                                                   HalUARTInitDMA (hal_uart)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
                                                   halDmaIsr (hal_dma)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  000000D1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D6 - 000000D6 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalFlashWrite (hal_flash)
                                                   HalUARTInitDMA (hal_uart)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  000000D6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAE6 - 0001CB1D (0x38 bytes), align: 0
  Segment part 10.            Intra module refs:   aesDmaInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit              0001CAE6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB1E - 0001CB24 (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   HalAesInit
                                                   aesDmaInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001CB1E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB25 - 0001CB2E (0xa bytes), align: 0
  Segment part 20.            Intra module refs:   HalAesInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit              0001CB25 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000126C - 00001271 (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   HalAesInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit::?relay      0000126C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001272 - 00001277 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit::?relay      00001272        HalDriverInit (hal_drivers)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_at24c32.r51
    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_crc.r51
  PROGRAM MODULE, NAME : hal_crc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000BC - 000000BC (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   LL_ENC_GenerateTrueRandNum (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDL                    000000BC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BD - 000000BD (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   LL_ENC_GenerateTrueRandNum (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDH                    000000BD 

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_dma.r51
  PROGRAM MODULE, NAME : hal_dma

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalUARTOpen (hal_uart)
                                                   halDmaIsr
                                                   halKeyPort0Isr (hal_key)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   halSleepTimerIsr (hal_sleep)
                                                   llClearSetInts (ll_common)
                                                   port0Isr (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                000000C0 
           LOCAL                   ADDRESS         
           =====                   =======         
           IRCON                   000000C0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D2 - 000000D2 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGL                000000D2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D3 - 000000D3 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGH                000000D3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D4 - 000000D4 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGL                000000D4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D5 - 000000D5 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGH                000000D5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AD3 - 00000ADA (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh0                  00000AD3        HalFlashWrite (hal_flash)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000ADB - 00000AFA (0x20 bytes), align: 0
  Segment part 16.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh1234               00000ADB        HalUARTInitDMA (hal_uart)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_InitAesDMA (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
                                                   aesDmaInit (hal_aes)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CBEF - 0001CC01 (0x13 bytes), align: 0
  Segment part 17.            Intra module refs:   HalDmaInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit              0001CBEF 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002ABD - 00002AE5 (0x29 bytes), align: 0
  Segment part 19.            Intra module refs:   halDmaIsr::??INTVEC 67
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halDmaIsr               00002ABD 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000045 (0x46 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halDmaIsr::??INTVEC 67
                                   00000043 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001278 - 0000127D (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit::?relay      00001278        HalDriverInit (hal_drivers)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_drivers.r51
  PROGRAM MODULE, NAME : hal_drivers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000AFB - 00000AFB (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   Hal_Init
                                                   Hal_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_TaskID              00000AFB        HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalUARTPollDMA (hal_uart)
                                                   halProcessKeyInterrupt (hal_key)
                                                   port0Isr (hal_uart)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C69C - 0001C6A4 (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   Hal_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init                0001C69C 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C6A5 - 0001C6AB (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   HalDriverInit
                                                   Hal_Init
                                                   Hal_ProcessPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001C6A5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C6AC - 0001C6C6 (0x1b bytes), align: 0
  Segment part 11.            Intra module refs:   HalDriverInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit           0001C6AC 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C6C7 - 0001C77A (0xb4 bytes), align: 0
  Segment part 13.            Intra module refs:   Hal_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent        0001C6C7 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C77B - 0001C787 (0xd bytes), align: 0
  Segment part 15.            Intra module refs:   Hal_ProcessPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll         0001C77B 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008565 - 00008568 (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   HalLedUpdate (hal_led)
                                                   Hal_ProcessEvent
                                                   osal_snv_compact (osal_snv)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_64           00008565 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000127E - 00001283 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init::?relay        0000127E        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001284 - 00001289 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit::?relay   00001284        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000128A - 0000128F (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent::?relay
                                   0000128A        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001290 - 00001295 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll::?relay
                                   00001290        osal_run_system (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008565 - 00008568 (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   __Constant_64

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_ds1307.r51
  PROGRAM MODULE, NAME : hal_ds1307

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABD2 - 0001ABFD (0x2c bytes), align: 0
  Segment part 12.            Intra module refs:   HalDS1307ReadTimeData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDS1307ReadTimeData   0001ABD2 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABFE - 0001AC02 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   showDate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001ABFE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC03 - 0001ADAF (0x1ad bytes), align: 0
  Segment part 21.            Intra module refs:   showDate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           showDate                0001AC03 
               calls direct
               XSTACK = 00000009 ( 0000002D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADB0 - 0001ADB6 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   showDate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001ADB0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADB7 - 0001ADBF (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   showDate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001ADB7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADC0 - 0001ADCE (0xf bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001ADC0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADCF - 0001ADD9 (0xb bytes), align: 0
  Segment part 26.            Intra module refs:   showDate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001ADCF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADDA - 0001ADEC (0x13 bytes), align: 0
  Segment part 27.            Intra module refs:   showDate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001ADDA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADED - 0001AE33 (0x47 bytes), align: 0
  Segment part 28.            Intra module refs:   hex2char::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           hex2char                0001ADED 
               XSTACK = 0000002B ( 00000000 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001296 - 0000129B (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDS1307ReadTimeData::?relay
                                   00001296        RTCInterruptIsr (SimpleRTCInterrupt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000129C - 000012A1 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   HalDS1307ReadTimeData
           LOCAL                   ADDRESS         
           =====                   =======         
           showDate::?relay        0000129C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012A2 - 000012A7 (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   showDate
           LOCAL                   ADDRESS         
           =====                   =======         
           hex2char::?relay        000012A2 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008574 - 00008576 (0x3 bytes), align: 0
  Segment part 6.             Intra module refs:   showDate
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008574 - 00008576 (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 6

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_eeprom.r51
    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_flash.r51
  PROGRAM MODULE, NAME : hal_flash

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000C7 - 000000C7 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalFlashRead
                                                   __low_level_init (hal_startup)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MEMCTR                  000000C7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C4A1 - 0001C525 (0x85 bytes), align: 0
  Segment part 10.            Intra module refs:   HalFlashRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashRead            0001C4A1 
               XSTACK = 00000002 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C526 - 0001C58B (0x66 bytes), align: 0
  Segment part 12.            Intra module refs:   HalFlashWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashWrite           0001C526 
               XSTACK = 00000002 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C58C - 0001C5A4 (0x19 bytes), align: 0
  Segment part 14.            Intra module refs:   HalFlashErase::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashErase           0001C58C 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012A8 - 000012AD (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashRead::?relay    000012A8        LL_Init (ll)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   initNV (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   verifyWordM (osal_snv)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012AE - 000012B3 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashWrite::?relay   000012AE        llFindTxPowerSettings (ll_common)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012B4 - 000012B9 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashErase::?relay   000012B4        erasePage (osal_snv)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_i2c.r51
  PROGRAM MODULE, NAME : hal_i2c

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000AFC - 00000AFC (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   HalI2CInit
                                                   i2cMstStrt
           LOCAL                   ADDRESS         
           =====                   =======         
           i2cAddr                 00000AFC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C245 - 0001C278 (0x34 bytes), align: 0
  Segment part 7.             Intra module refs:   i2cMstStrt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           i2cMstStrt              0001C245 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C279 - 0001C299 (0x21 bytes), align: 0
  Segment part 9.             Intra module refs:   HalI2CInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CInit              0001C279 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C29A - 0001C29A (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   HalI2CInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001C29A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C29B - 0001C2A1 (0x7 bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine0
                                                   i2cMstStrt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2A2 - 0001C318 (0x77 bytes), align: 0
  Segment part 13.            Intra module refs:   HalI2CRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CRead              0001C2A2 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C319 - 0001C37F (0x67 bytes), align: 0
  Segment part 15.            Intra module refs:   HalI2CWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CWrite             0001C319 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C380 - 0001C382 (0x3 bytes), align: 0
  Segment part 17.            Intra module refs:   HalI2CRead
                                                   HalI2CWrite
                                                   i2cMstStrt
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001C380 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C383 - 0001C387 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine1
                                                   HalI2CRead
                                                   HalI2CWrite
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012BA - 000012BF (0x6 bytes), align: 0
  Segment part 8.             Intra module refs:   HalI2CRead
                                                   HalI2CWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           i2cMstStrt::?relay      000012BA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012C0 - 000012C5 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CInit::?relay      000012C0        HalDS1307ReadTimeData (hal_ds1307)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012C6 - 000012CB (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CRead::?relay      000012C6        HalSensorReadReg (hal_sensor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012CC - 000012D1 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CWrite::?relay     000012CC        HalSensorReadReg (hal_sensor)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_key.r51
  PROGRAM MODULE, NAME : hal_key

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000089 - 00000089 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalKeyConfig
                                                   HalUARTOpen (hal_uart)
                                                   halKeyPort0Isr
                                                   halProcessKeyInterrupt
                                                   port0Isr (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IFG                   00000089 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008B - 0000008B (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalKeyConfig
                                                   halKeyPort2Isr
                                                   halProcessKeyInterrupt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IFG                   0000008B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalKeyPoll
                                                   HalKeyRead
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P2                   000000A0 
           LOCAL                   ADDRESS         
           =====                   =======         
           P2                      000000A0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AB - 000000AB (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   HalKeyConfig
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTPollDMA (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IEN                   000000AB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AC - 000000AC (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   HalKeyConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IEN                   000000AC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F3 - 000000F3 (0x1 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   HalKeyInit
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTOpen (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   000000F3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F5 - 000000F5 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   HalKeyInit
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   000000F5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F7 - 000000F7 (0x1 bytes), align: 0
  Segment part 15. ROOT.      Intra module refs:   HalKeyInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2INP                   000000F7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FF - 000000FF (0x1 bytes), align: 0
  Segment part 17. ROOT.      Intra module refs:   HalKeyInit
                                                   HalUARTInitDMA (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   000000FF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AFD - 00000AFD (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           halKeySavedKeys         00000AFD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AFE - 00000AFF (0x2 bytes), align: 0
  Segment part 26.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           pHalKeyProcessFunction
                                   00000AFE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B00 - 00000B00 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
           LOCAL                   ADDRESS         
           =====                   =======         
           HalKeyConfigured        00000B00 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B01 - 00000B01 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   HalKeyConfig
                                                   HalKeyPoll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_KeyIntEnable        00000B01        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BAA3 - 0001BAC4 (0x22 bytes), align: 0
  Segment part 30.            Intra module refs:   HalKeyInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit              0001BAA3 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BAC5 - 0001BACB (0x7 bytes), align: 0
  Segment part 32.            Intra module refs:   HalKeyExitSleep
                                                   HalKeyInit
                                                   halProcessKeyInterrupt
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001BAC5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BACC - 0001BB31 (0x66 bytes), align: 0
  Segment part 33.            Intra module refs:   HalKeyConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig            0001BACC 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BB32 - 0001BB4C (0x1b bytes), align: 0
  Segment part 35.            Intra module refs:   HalKeyRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead              0001BB32 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BB4D - 0001BB51 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   HalKeyPoll
                                                   HalKeyRead
                                                   halGetJoyKeyInput
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001BB4D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BB52 - 0001BBA2 (0x51 bytes), align: 0
  Segment part 38.            Intra module refs:   HalKeyPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll              0001BB52 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BBA3 - 0001BBFD (0x5b bytes), align: 0
  Segment part 40.            Intra module refs:   halGetJoyKeyInput::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halGetJoyKeyInput       0001BBA3 
               calls direct
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BBFE - 0001BC37 (0x3a bytes), align: 0
  Segment part 42.            Intra module refs:   halProcessKeyInterrupt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessKeyInterrupt
                                   0001BBFE 
               calls direct
               XSTACK = 0000000E ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BC38 - 0001BC3A (0x3 bytes), align: 0
  Segment part 44.            Intra module refs:   HalKeyEnterSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyEnterSleep        0001BC38 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BC3B - 0001BC44 (0xa bytes), align: 0
  Segment part 46.            Intra module refs:   HalKeyExitSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyExitSleep         0001BC3B 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002AE6 - 00002B01 (0x1c bytes), align: 0
  Segment part 48.            Intra module refs:   halKeyPort0Isr::??INTVEC 107
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr          00002AE6 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002B02 - 00002B0E (0xd bytes), align: 0
  Segment part 49.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort2Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00002B02 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002B0F - 00002B2C (0x1e bytes), align: 0
  Segment part 50.            Intra module refs:   halKeyPort2Isr::??INTVEC 51
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr          00002B0F 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000035 (0x36 bytes), align: 0
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr::??INTVEC 51
                                   00000033 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000006D (0x6e bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr::??INTVEC 107
                                   0000006B 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000856D - 00008570 (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   halProcessKeyInterrupt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_19           0000856D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012D2 - 000012D7 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit::?relay      000012D2        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012D8 - 000012DD (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig::?relay    000012D8        InitBoard (OnBoard)
                                                   OnBoard_KeyCallback (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012DE - 000012E3 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   HalKeyExitSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead::?relay      000012DE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012E4 - 000012E9 (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll::?relay      000012E4        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012EA - 000012EF (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   HalKeyPoll
                                                   HalKeyRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halGetJoyKeyInput::?relay
                                   000012EA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012F0 - 000012F5 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort2Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessKeyInterrupt::?relay
                                   000012F0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012F6 - 000012FB (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyEnterSleep::?relay
                                   000012F6        halSleep (hal_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012FC - 00001301 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyExitSleep::?relay
                                   000012FC        halSleep (hal_sleep)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000856D - 00008570 (0x4 bytes), align: 0
  Segment part 51.            Intra module refs:   __Constant_19

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_lcd.r51
  PROGRAM MODULE, NAME : hal_lcd

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalLcd_HW_Init
                                                   HalUARTInitDMA (hal_uart)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCFG                  000000F1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FA - 000000FA (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalLcd_HW_Init
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1BAUD                  000000FA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FB - 000000FB (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   HalLcd_HW_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1UCR                   000000FB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FC - 000000FC (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   HalLcd_HW_Init
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1GCR                   000000FC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B02 - 00000B03 (0x2 bytes), align: 0
  Segment part 17.            Intra module refs:   HalLcdInit
                                                   HalLcdWriteString
           LOCAL                   ADDRESS         
           =====                   =======         
           Lcd_Line1               00000B02 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000188E2 - 0001891A (0x39 bytes), align: 0
  Segment part 19.            Intra module refs:   set_ddram_line_col::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_ddram_line_col      000188E2 
               calls direct
               XSTACK = 0000000D ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001891B - 0001898C (0x72 bytes), align: 0
  Segment part 21.            Intra module refs:   DisplayByte_5x7::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DisplayByte_5x7         0001891B 
               calls direct
               XSTACK = 00000009 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001898D - 0001899A (0xe bytes), align: 0
  Segment part 23.            Intra module refs:   HalLcdInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit              0001898D 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001899B - 000189A1 (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   HalLcdInit
                                                   HalLcd_HW_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001899B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000189A2 - 00018AB5 (0x114 bytes), align: 0
  Segment part 26.            Intra module refs:   HalLcdWriteString::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteString       000189A2 
               calls direct, is recursive
               XSTACK = 0000002D ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018AB6 - 00018ACC (0x17 bytes), align: 0
  Segment part 30.            Intra module refs:   HalLcdWriteStringValue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00018AB6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018ACD - 00018B3C (0x70 bytes), align: 0
  Segment part 33.            Intra module refs:   HalLcdWriteStringValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValue
                                   00018ACD 
               calls direct
               XSTACK = 00000001 ( 0000002B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018B3D - 00018B40 (0x4 bytes), align: 0
  Segment part 35.            Intra module refs:   HalLcdWriteStringValue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00018B3D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018B41 - 00018B48 (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   ?Subroutine4
                                                   HalLcdWriteString
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018B49 - 00018C0E (0xc6 bytes), align: 0
  Segment part 41.            Intra module refs:   HalLcd_HW_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Init          00018B49 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C0F - 00018C24 (0x16 bytes), align: 0
  Segment part 43.            Intra module refs:   HalLcd_HW_Control::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Control       00018C0F 
               XSTACK = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C25 - 00018C2D (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   HalLcd_HW_Control
                                                   HalLcd_HW_Write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00018C25 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C2E - 00018C45 (0x18 bytes), align: 0
  Segment part 46.            Intra module refs:   HalLcd_HW_Write::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Write         00018C2E 
               XSTACK = 0000000D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C46 - 00018C54 (0xf bytes), align: 0
  Segment part 48.            Intra module refs:   HalLcd_HW_Control
                                                   HalLcd_HW_Write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00018C46 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C55 - 00018C81 (0x2d bytes), align: 0
  Segment part 51.            Intra module refs:   HalLcd_HW_Clear::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Clear         00018C55 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C82 - 00018C86 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   HalLcd_HW_Clear
                                                   HalLcd_HW_WriteChar
                                                   set_ddram_line_col
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00018C82 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C87 - 00018C91 (0xb bytes), align: 0
  Segment part 54.            Intra module refs:   DisplayByte_5x7
                                                   HalLcd_HW_Clear
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00018C87 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C92 - 00018CA9 (0x18 bytes), align: 0
  Segment part 57.            Intra module refs:   HalLcd_HW_WriteChar::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_WriteChar     00018C92 
               calls direct
               XSTACK = 0000000B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018CAA - 00018CFA (0x51 bytes), align: 0
  Segment part 59.            Intra module refs:   HalLcd_HW_WriteLine::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_WriteLine     00018CAA 
               calls direct
               XSTACK = 00000012 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018CFB - 00018D2F (0x35 bytes), align: 0
  Segment part 61.            Intra module refs:   HalLcd_HW_WaitUs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_WaitUs        00018CFB 
               XSTACK = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008000 - 000081DA (0x1db bytes), align: 0
  Segment part 18.            Intra module refs:   DisplayByte_5x7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ascii_table_5x7         00008000 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001302 - 00001307 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   DisplayByte_5x7
                                                   HalLcd_HW_Clear
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_ddram_line_col::?relay
                                   00001302 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001308 - 0000130D (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   HalLcd_HW_WriteChar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DisplayByte_5x7::?relay
                                   00001308 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000130E - 00001313 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit::?relay      0000130E        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001314 - 00001319 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   ?Subroutine3
                                                   HalLcdWriteString
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteString::?relay
                                   00001314        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   set_code_name (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   studyCompletedAndBroadcastData (SimpleBLESerialUart)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000131A - 0000131F (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValue::?relay
                                   0000131A        SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001320 - 00001325 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   HalLcdInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Init::?relay
                                   00001320 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001326 - 0000132B (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   HalLcd_HW_Init
                                                   set_ddram_line_col
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Control::?relay
                                   00001326 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000132C - 00001331 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   DisplayByte_5x7
                                                   HalLcd_HW_Clear
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Write::?relay
                                   0000132C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001332 - 00001337 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   HalLcd_HW_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Clear::?relay
                                   00001332 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001338 - 0000133D (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   HalLcd_HW_WriteLine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_WriteChar::?relay
                                   00001338 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000133E - 00001343 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   HalLcdWriteString
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_WriteLine::?relay
                                   0000133E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001344 - 00001349 (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   HalLcd_HW_Init
                                                   set_ddram_line_col
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_WaitUs::?relay
                                   00001344 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008386 - 00008396 (0x11 bytes), align: 0
  Segment part 15.            Intra module refs:   HalLcdWriteString
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008000 - 000081DA (0x1db bytes), align: 0
  Segment part 63.            Intra module refs:   ascii_table_5x7
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008386 - 00008396 (0x11 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 15

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_led.r51
  PROGRAM MODULE, NAME : hal_led

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000B04 - 00000B04 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   HalLedBlink
                                                   HalLedOnOff
                                                   HalLedSet
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedState             00000B04 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B05 - 00000B05 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HalLedEnterSleep
                                                   HalLedExitSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           HalSleepLedState        00000B05 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B06 - 00000B06 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   HalLedBlink
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           preBlinkState           00000B06 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B07 - 00000B2B (0x25 bytes), align: 0
  Segment part 11.            Intra module refs:   ?Subroutine0
                                                   HalLedBlink
                                                   HalLedEnterSleep
                                                   HalLedSet
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedStatusControl     00000B07 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001917D - 00019193 (0x17 bytes), align: 0
  Segment part 13.            Intra module refs:   HalLedInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit              0001917D 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019194 - 0001920D (0x7a bytes), align: 0
  Segment part 15.            Intra module refs:   HalLedSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet               00019194 
               calls direct, is recursive
               XSTACK = 00000019 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001920E - 000192E8 (0xdb bytes), align: 0
  Segment part 17.            Intra module refs:   HalLedBlink::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink             0001920E 
               calls direct, is recursive
               XSTACK = 0000000B ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000192E9 - 000192F1 (0x9 bytes), align: 0
  Segment part 19.            Intra module refs:   HalLedBlink
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000192E9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000192F2 - 000194C8 (0x1d7 bytes), align: 0
  Segment part 20.            Intra module refs:   HalLedUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate            000192F2 
               calls direct
               XSTACK = 00000000 ( 0000001D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000194C9 - 00019521 (0x59 bytes), align: 0
  Segment part 22.            Intra module refs:   HalLedOnOff::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedOnOff             000194C9 
               XSTACK = 00000019 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019522 - 00019525 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   HalLedExitSleep
                                                   HalLedInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00019522 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019526 - 00019526 (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine0
                                                   HalLedOnOff
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019527 - 0001952D (0x7 bytes), align: 0
  Segment part 26.            Intra module refs:   HalLedEnterSleep
                                                   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001952E - 00019584 (0x57 bytes), align: 0
  Segment part 29.            Intra module refs:   HalLedEnterSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedEnterSleep        0001952E 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019585 - 00019598 (0x14 bytes), align: 0
  Segment part 31.            Intra module refs:   HalLedExitSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedExitSleep         00019585 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000134A - 0000134F (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit::?relay      0000134A        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001350 - 00001355 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   HalLedBlink
                                                   HalLedInit
                                                   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet::?relay       00001350        InitBoard (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001356 - 0000135B (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   HalLedSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink::?relay     00001356 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000135C - 00001361 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   HalLedExitSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate::?relay    0000135C        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001362 - 00001367 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   HalLedEnterSleep
                                                   HalLedExitSleep
                                                   HalLedSet
                                                   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedOnOff::?relay     00001362 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001368 - 0000136D (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedEnterSleep::?relay
                                   00001368        halSleep (hal_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000136E - 00001373 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedExitSleep::?relay
                                   0000136E        halSleep (hal_sleep)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_sensor.r51
  PROGRAM MODULE, NAME : hal_sensor

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA9B - 0001CAE0 (0x46 bytes), align: 0
  Segment part 10.            Intra module refs:   HalSensorReadReg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalSensorReadReg        0001CA9B 
               calls direct
               XSTACK = 0000000B ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAE1 - 0001CAE5 (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   HalSensorReadReg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001CAE1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001374 - 00001379 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalSensorReadReg::?relay
                                   00001374        HalDS1307ReadTimeData (hal_ds1307)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_sleep.r51
  PROGRAM MODULE, NAME : hal_sleep

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000087 - 00000087 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   halSetSleepMode
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PCON                    00000087 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000095 - 00000095 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalUARTPollDMA (hal_uart)
                                                   halSleepReadTimer
                                                   halSleepSetTimer
                                                   llGetFullCTandST (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST0                     00000095 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000096 - 00000096 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   halSleepReadTimer
                                                   halSleepSetTimer
                                                   llGetFullCTandST (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST1                     00000096 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000097 - 00000097 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   halSleepReadTimer
                                                   halSleepSetTimer
                                                   llGetFullCTandST (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST2                     00000097 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AD - 000000AD (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STLOAD                  000000AD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B2C - 00000B2C (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   halSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           halPwrMgtMode           00000B2C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B2D - 00000B2D (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   halSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           wakeForRF               00000B2D 
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA 0000001A - 0000001A (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   halSetSleepMode
                                                   halSleep
                                                   halSleepTimerIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepPconValue       0000001A        ?Subroutine2 (hal_key)
                                                   Hal_ProcessPoll (hal_drivers)
                                                   halDmaIsr (hal_dma)
                                                   port0Isr (hal_uart)
    -------------------------------------------------------------------------
SLEEP_CODE
  Relative segment, address: CODE 00007FF8 - 00007FFF (0x8 bytes), align: 0
  Segment part 27.            Intra module refs:   halSetSleepMode::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSetSleepMode         00007FF8 
               XSTACK = 00000018 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B07E - 0001B20F (0x192 bytes), align: 0
  Segment part 29.            Intra module refs:   halSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleep                0001B07E 
               calls direct
               XSTACK = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B210 - 0001B218 (0x9 bytes), align: 0
  Segment part 31.            Intra module refs:   halSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001B210 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B219 - 0001B279 (0x61 bytes), align: 0
  Segment part 32.            Intra module refs:   halSleepSetTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepSetTimer        0001B219 
               XSTACK = 0000001C ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B27A - 0001B2BF (0x46 bytes), align: 0
  Segment part 34.            Intra module refs:   halSleepReadTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepReadTimer       0001B27A 
               XSTACK = 00000018 ( 00000004 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B2C0 - 0001B2C2 (0x3 bytes), align: 0
  Segment part 38.            Intra module refs:   halRestoreSleepLevel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRestoreSleepLevel    0001B2C0 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002B2D - 00002B50 (0x24 bytes), align: 0
  Segment part 40.            Intra module refs:   halSleepTimerIsr::??INTVEC 43
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr        00002B2D 
               interrupt function
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000002D (0x2e bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr::??INTVEC 43
                                   0000002B 
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE 0000014D - 0000014D (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   halSleepPconValue
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008569 - 0000856C (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_9c41         00008569 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008561 - 00008564 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_43           00008561 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000855D - 00008560 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ff0001       0000855D 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008559 - 0000855C (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ff0000       00008559 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008555 - 00008558 (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_7d           00008555 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008551 - 00008554 (0x4 bytes), align: 0
  Segment part 26.            Intra module refs:   halSleepSetTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffe7     00008551 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000137A - 0000137F (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSetSleepMode::?relay
                                   0000137A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001380 - 00001385 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleep::?relay        00001380        osal_pwrmgr_powerconserve (OSAL_PwrMgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001386 - 0000138B (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepSetTimer::?relay
                                   00001386 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000138C - 00001391 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepReadTimer::?relay
                                   0000138C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001392 - 00001397 (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRestoreSleepLevel::?relay
                                   00001392        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008569 - 0000856C (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   __Constant_9c41
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008561 - 00008564 (0x4 bytes), align: 0
  Segment part 42.            Intra module refs:   __Constant_43
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000855D - 00008560 (0x4 bytes), align: 0
  Segment part 43.            Intra module refs:   __Constant_ff0001
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008559 - 0000855C (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   __Constant_ff0000
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008555 - 00008558 (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   __Constant_7d
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008551 - 00008554 (0x4 bytes), align: 0
  Segment part 46.            Intra module refs:   __Constant_ffffffe7

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_startup.r51
  PROGRAM MODULE, NAME : hal_startup

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000086 - 00000090 (0xb bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        00000086        __low_level_init_call (?cmain)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_timer.r51
    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_uart.r51
  PROGRAM MODULE, NAME : hal_uart

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000086 - 00000086 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalUARTBusyDMA
                                                   HalUARTInitDMA
                                                   HalUARTOpen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0CSR                   00000086 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C1 - 000000C1 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   halUart0TxIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0DBUF                  000000C1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   HalUARTInitDMA
                                                   HalUARTOpen
                                                   HalUARTReadDMA
                                                   HalUARTRxAvailDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0BAUD                  000000C2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C4 - 000000C4 (0x1 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   HalUARTInitDMA
                                                   HalUARTOpen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0UCR                   000000C4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C5 - 000000C5 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   HalUARTOpen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0GCR                   000000C5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B2E - 00000B2E (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   HalUARTPollDMA
                                                   port0Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           dmaRdyIsr               00000B2E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B2F - 00000B2F (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   HalUARTPollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           dmaRdyDly               00000B2F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B30 - 00000CB6 (0x187 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine3
                                                   HalUARTBusyDMA
                                                   HalUARTInitDMA
                                                   HalUARTOpen
                                                   HalUARTPollDMA
                                                   HalUARTReadDMA
                                                   HalUARTRxAvailDMA
                                                   halUart0TxIsr
                                                   port0Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           dmaCfg                  00000B30 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019D00 - 00019D95 (0x96 bytes), align: 0
  Segment part 33.            Intra module refs:   HalUARTInitDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTInitDMA          00019D00 
               calls direct
               XSTACK = 00000000 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019D96 - 00019D9A (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   HalUARTBusyDMA
                                                   HalUARTInitDMA
                                                   HalUARTPollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00019D96 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019D9B - 00019E1E (0x84 bytes), align: 0
  Segment part 36.            Intra module refs:   HalUARTReadDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTReadDMA          00019D9B 
               XSTACK = 00000009 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019E1F - 00019EE0 (0xc2 bytes), align: 0
  Segment part 40.            Intra module refs:   HalUARTPollDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTPollDMA          00019E1F 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CB7 - 00000CB7 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   HalUARTRxAvailDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sweepIdx                00000CB7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019EE1 - 00019F40 (0x60 bytes), align: 0
  Segment part 42.            Intra module refs:   HalUARTRxAvailDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTRxAvailDMA       00019EE1 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019F41 - 00019F55 (0x15 bytes), align: 0
  Segment part 44.            Intra module refs:   HalUARTRxAvailDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00019F41 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019F56 - 00019F7D (0x28 bytes), align: 0
  Segment part 45.            Intra module refs:   HalUARTBusyDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTBusyDMA          00019F56 
               calls direct
               XSTACK = 0000000A ( 0000000A )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002B51 - 00002B8B (0x3b bytes), align: 0
  Segment part 71.            Intra module refs:   port0Isr::??INTVEC 107
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port0Isr                00002B51 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002B8C - 00002BF5 (0x6a bytes), align: 0
  Segment part 72.            Intra module refs:   halUart0TxIsr::??INTVEC 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart0TxIsr           00002B8C 
               interrupt function
               ISTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019F7E - 00019F86 (0x9 bytes), align: 0
  Segment part 49.            Intra module refs:   HalUARTInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit             00019F7E 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019F87 - 00019FEF (0x69 bytes), align: 0
  Segment part 51.            Intra module refs:   HalUARTOpen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen             00019F87 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019FF0 - 00019FF6 (0x7 bytes), align: 0
  Segment part 53.            Intra module refs:   HalUARTInit
                                                   HalUARTOpen
                                                   HalUARTPoll
                                                   HalUARTRxAvailDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00019FF0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019FF7 - 0001A009 (0x13 bytes), align: 0
  Segment part 54.            Intra module refs:   HalUARTRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead             00019FF7 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A00A - 0001A00E (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   HalUARTRead
                                                   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001A00A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A00F - 0001A017 (0x9 bytes), align: 0
  Segment part 63.            Intra module refs:   HalUARTPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTPoll             0001A00F 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A018 - 0001A02A (0x13 bytes), align: 0
  Segment part 65.            Intra module refs:   Hal_UART_RxBufLen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen       0001A018 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A02B - 0001A02D (0x3 bytes), align: 0
  Segment part 69.            Intra module refs:   HalUARTIsrDMA::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTIsrDMA           0001A02B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000003D (0x3e bytes), align: 0
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart0TxIsr::??INTVEC 59
                                   0000003B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000006D (0x6e bytes), align: 0
  Segment part 23. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port0Isr::??INTVEC 107
                                   0000006B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001398 - 0000139D (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   HalUARTInit
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTInitDMA::?relay
                                   00001398 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000139E - 000013A3 (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   HalUARTRead
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTReadDMA::?relay
                                   0000139E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013A4 - 000013A9 (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTPollDMA::?relay
                                   000013A4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013AA - 000013AF (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   HalUARTBusyDMA
                                                   HalUARTPollDMA
                                                   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTRxAvailDMA::?relay
                                   000013AA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013B0 - 000013B5 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   HalUARTPollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTBusyDMA::?relay
                                   000013B0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013B6 - 000013BB (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit::?relay     000013B6        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013BC - 000013C1 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen::?relay     000013BC        SbpHalUARTInit (SimpleBLESerialUart)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013C2 - 000013C7 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead::?relay     000013C2        SbpHalUARTRead (SimpleBLESerialUart)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013C8 - 000013CD (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTPoll::?relay     000013C8        Hal_ProcessPoll (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013CE - 000013D3 (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen::?relay
                                   000013CE        SbpHalUARTReadCallback (SimpleBLESerialUart)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013D4 - 000013D9 (0x6 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTIsrDMA::?relay   000013D4        halDmaIsr (hal_dma)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\npi.r51
    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\osal_bufmgr.r51
  PROGRAM MODULE, NAME : osal_bufmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000CB8 - 00000CB9 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine2
                                                   osal_bm_alloc
                                                   osal_bm_free
           LOCAL                   ADDRESS         
           =====                   =======         
           bm_list_ptr             00000CB8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BC45 - 0001BC91 (0x4d bytes), align: 0
  Segment part 8.             Intra module refs:   osal_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_alloc           0001BC45 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BC92 - 0001BC96 (0x5 bytes), align: 0
  Segment part 10.            Intra module refs:   osal_bm_adjust_header
                                                   osal_bm_alloc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001BC92 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BC97 - 0001BD20 (0x8a bytes), align: 0
  Segment part 11.            Intra module refs:   osal_bm_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_free            0001BC97 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD21 - 0001BD87 (0x67 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_bm_adjust_header::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_adjust_header   0001BD21 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD88 - 0001BDC9 (0x42 bytes), align: 0
  Segment part 17.            Intra module refs:   bm_desc_from_payload::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           bm_desc_from_payload    0001BD88 
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDCA - 0001BDCC (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   bm_desc_from_payload
                                                   osal_bm_alloc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001BDCA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDCD - 0001BDD2 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine2
                                                   bm_desc_from_payload
                                                   osal_bm_free
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDD3 - 0001BDE6 (0x14 bytes), align: 0
  Segment part 21.            Intra module refs:   bm_desc_from_payload
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001BDD3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013DA - 000013DF (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_alloc::?relay   000013DA        LL_RX_bm_alloc (ll)
                                                   LL_TX_bm_alloc (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013E0 - 000013E5 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_free::?relay    000013E0        HCI_ProcessEvent (hci_tl)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   attSendMsg (att_util)
                                                   gattProcessRxData (gatt_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   llConnCleanup (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llProcessTxData (ll_common)
                                                   smProcessOSALMsg (sm_task)
                                                   smSendSMMsg (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013E6 - 000013EB (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_adjust_header::?relay
                                   000013E6        L2CAP_bm_alloc (l2cap_util)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capParsePacket (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013EC - 000013F1 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_bm_adjust_header
           LOCAL                   ADDRESS         
           =====                   =======         
           bm_desc_from_payload::?relay
                                   000013EC 

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\osal_cbtimer.r51
  PROGRAM MODULE, NAME : osal_cbtimer

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 000010FD - 000010FE (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   osal_CbTimerInit
                                                   osal_CbTimerProcessEvent
                                                   osal_CbTimerStart
                                                   osal_CbTimerStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           baseTaskID              000010FD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CBA - 00000CF5 (0x3c bytes), align: 0
  Segment part 8.             Intra module refs:   ?Subroutine1
                                                   osal_CbTimerInit
                                                   osal_CbTimerStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cbTimers                00000CBA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B2C3 - 0001B2EC (0x2a bytes), align: 0
  Segment part 9.             Intra module refs:   osal_CbTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerInit        0001B2C3 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B2ED - 0001B3BA (0xce bytes), align: 0
  Segment part 11.            Intra module refs:   osal_CbTimerProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerProcessEvent
                                   0001B2ED 
               XSTACK = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B3BB - 0001B47E (0xc4 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_CbTimerStart::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStart       0001B3BB 
               calls direct
               XSTACK = 00000004 ( 00000017 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B47F - 0001B48B (0xd bytes), align: 0
  Segment part 15.            Intra module refs:   osal_CbTimerProcessEvent
                                                   osal_CbTimerStart
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001B47F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B48C - 0001B48D (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   osal_CbTimerStart
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001B48C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B48E - 0001B495 (0x8 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine0
                                                   osal_CbTimerStop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B496 - 0001B507 (0x72 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_CbTimerStop::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStop        0001B496 
               calls direct
               XSTACK = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000033A - 0000033B (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   baseTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013F2 - 000013F7 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerInit::?relay
                                   000013F2        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013F8 - 000013FD (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerProcessEvent::?relay
                                   000013F8        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013FE - 00001403 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStart::?relay
                                   000013FE        gattStartTimer (gatt_task)
                                                   l2capSendReq (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001404 - 00001409 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStop::?relay
                                   00001404        gattStopTimer (gatt_task)
                                                   l2capStopTimer (l2cap_util)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\osal_snv.r51
  PROGRAM MODULE, NAME : osal_snv

  SEGMENTS IN THE MODULE
  ======================
BLENV_ADDRESS_SPACE
  Relative segment, address: CODE 0003E800 - 0003F7FF (0x1000 bytes), align: 0
  Segment part 6.             Intra module refs:   activePg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _nvBuf                  0003E800 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CF6 - 00000CF6 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 55
                                                   compactPage
                                                   findOffset
                                                   initNV
                                                   osal_snv_compact
                                                   osal_snv_read
                                                   osal_snv_write
                                                   setActivePage
                                                   setXferPage
           LOCAL                   ADDRESS         
           =====                   =======         
           activePg                00000CF6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CF7 - 00000CF8 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 55
                                                   compactPage
                                                   findOffset
                                                   initNV
                                                   osal_snv_compact
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           pgOff                   00000CF7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CF9 - 00000CF9 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   compactPage
                                                   erasePage
                                                   initNV
                                                   osal_snv_write
                                                   setActivePage
                                                   verifyWordM
                                                   writeItem
                                                   writeWord
           LOCAL                   ADDRESS         
           =====                   =======         
           failF                   00000CF9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000150BC - 00015182 (0xc7 bytes), align: 0
  Segment part 13.            Intra module refs:   initNV::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           initNV                  000150BC 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015183 - 000151AF (0x2d bytes), align: 0
  Segment part 15.            Intra module refs:   setActivePage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           setActivePage           00015183 
               calls direct
               XSTACK = 0000001E ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000151B0 - 000151B9 (0xa bytes), align: 0
  Segment part 17.            Intra module refs:   setActivePage
                                                   setXferPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000151B0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000151BA - 000151DD (0x24 bytes), align: 0
  Segment part 18.            Intra module refs:   setXferPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           setXferPage             000151BA 
               calls direct
               XSTACK = 00000014 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000151DE - 000151E3 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   setActivePage
                                                   setXferPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            000151DE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000151E4 - 00015235 (0x52 bytes), align: 0
  Segment part 21.            Intra module refs:   erasePage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           erasePage               000151E4 
               calls direct
               XSTACK = 0000001E ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015236 - 00015239 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   cleanErasedPage
                                                   erasePage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00015236 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001523A - 0001523B (0x2 bytes), align: 0
  Segment part 24.            Intra module refs:   findItem
                                                   findOffset
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001523A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001523C - 0001523E (0x3 bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine4
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001523F - 00015243 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 25
                                                   osal_snv_read
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015244 - 0001528D (0x4a bytes), align: 0
  Segment part 27.            Intra module refs:   cleanErasedPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           cleanErasedPage         00015244 
               calls direct
               XSTACK = 00000010 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001528E - 00015299 (0xc bytes), align: 0
  Segment part 29.            Intra module refs:   cleanErasedPage
                                                   erasePage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001528E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001529A - 000152FE (0x65 bytes), align: 0
  Segment part 30.            Intra module refs:   findOffset::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           findOffset              0001529A 
               calls direct
               XSTACK = 00000010 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000152FF - 0001538B (0x8d bytes), align: 0
  Segment part 32.            Intra module refs:   findItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           findItem                000152FF 
               calls direct
               XSTACK = 0000001E ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001538C - 00015396 (0xb bytes), align: 0
  Segment part 34.            Intra module refs:   compactPage
                                                   findItem
                                                   findOffset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0001538C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015397 - 00015486 (0xf0 bytes), align: 0
  Segment part 35.            Intra module refs:   writeItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem               00015397 
               calls direct
               XSTACK = 00000015 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015487 - 0001548B (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   osal_snv_compact
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00015487 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001548C - 0001548F (0x4 bytes), align: 0
  Segment part 38.            Intra module refs:   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001548C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015490 - 00015499 (0xa bytes), align: 0
  Segment part 39.            Intra module refs:   ?Subroutine5
                                                   writeItem
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001549A - 000154A5 (0xc bytes), align: 0
  Segment part 40.            Intra module refs:   ?Subroutine7
                                                   Segment part 39
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0001549A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000154A6 - 00015633 (0x18e bytes), align: 0
  Segment part 41.            Intra module refs:   compactPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           compactPage             000154A6 
               calls direct
               XSTACK = 00000014 ( 00000020 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015634 - 0001563C (0x9 bytes), align: 0
  Segment part 43.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00015634 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001563D - 000156C1 (0x85 bytes), align: 0
  Segment part 44.            Intra module refs:   verifyWordM::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           verifyWordM             0001563D 
               calls direct
               XSTACK = 00000019 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000156C2 - 000156C9 (0x8 bytes), align: 0
  Segment part 46.            Intra module refs:   osal_snv_write
                                                   verifyWordM
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000156C2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000156CA - 00015730 (0x67 bytes), align: 0
  Segment part 47.            Intra module refs:   writeWord::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWord               000156CA 
               calls direct
               XSTACK = 0000001E ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015731 - 00015747 (0x17 bytes), align: 0
  Segment part 49.            Intra module refs:   osal_snv_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_init           00015731 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015748 - 00015847 (0x100 bytes), align: 0
  Segment part 51.            Intra module refs:   osal_snv_write::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_write          00015748 
               calls direct
               XSTACK = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015848 - 00015851 (0xa bytes), align: 0
  Segment part 53.            Intra module refs:   compactPage
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00015848 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015852 - 00015853 (0x2 bytes), align: 0
  Segment part 54.            Intra module refs:   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00015852 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015854 - 00015861 (0xe bytes), align: 0
  Segment part 55.            Intra module refs:   ?Subroutine6
                                                   osal_snv_read
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015862 - 0001589F (0x3e bytes), align: 0
  Segment part 56.            Intra module refs:   osal_snv_read::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_read           00015862 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000158A0 - 000158FD (0x5e bytes), align: 0
  Segment part 58.            Intra module refs:   osal_snv_compact::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_compact        000158A0 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008525 - 00008528 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   initNV
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_100000       00008525 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000140A - 0000140F (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   osal_snv_init
           LOCAL                   ADDRESS         
           =====                   =======         
           initNV::?relay          0000140A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001410 - 00001415 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   compactPage
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           setActivePage::?relay   00001410 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001416 - 0000141B (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_snv_compact
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           setXferPage::?relay     00001416 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000141C - 00001421 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   cleanErasedPage
                                                   compactPage
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           erasePage::?relay       0000141C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001422 - 00001427 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           cleanErasedPage::?relay
                                   00001422 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001428 - 0000142D (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           findOffset::?relay      00001428 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000142E - 00001433 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   compactPage
                                                   osal_snv_read
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           findItem::?relay        0000142E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001434 - 00001439 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem::?relay       00001434 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000143A - 0000143F (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   initNV
                                                   osal_snv_compact
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           compactPage::?relay     0000143A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001440 - 00001445 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   writeItem
                                                   writeWord
           LOCAL                   ADDRESS         
           =====                   =======         
           verifyWordM::?relay     00001440 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001446 - 0000144B (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   compactPage
                                                   setActivePage
                                                   setXferPage
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWord::?relay       00001446 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000144C - 00001451 (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_init::?relay   0000144C        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001452 - 00001457 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_write::?relay
                                   00001452        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001458 - 0000145D (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_read::?relay   00001458        GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPRole_Init (peripheral)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000145E - 00001463 (0x6 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_compact::?relay
                                   0000145E        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008525 - 00008528 (0x4 bytes), align: 0
  Segment part 60.            Intra module refs:   __Constant_100000

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\peripheral.r51
  PROGRAM MODULE, NAME : peripheral

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000CFA - 00000CFA (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   ?Subroutine13
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   GAPRole_TerminateConnection
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_TaskID          00000CFA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CFB - 00000CFB (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   GAPRole_TerminateConnection
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_state           00000CFB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CFC - 00000CFC (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_StartDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_profileRole     00000CFC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CFD - 00000D0C (0x10 bytes), align: 0
  Segment part 9.             Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_IRK             00000CFD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D0D - 00000D1C (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_SRK             00000D0D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D1D - 00000D20 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_signCounter     00000D1D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D21 - 00000D26 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_bdAddr          00000D21 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010FF - 000010FF (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvEnabled      000010FF 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001100 - 00001101 (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvertOffTime   00001100 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001102 - 00001102 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvertDataLen   00001102 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001103 - 00001121 (0x1f bytes), align: 0
  Segment part 19.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvertData      00001103 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D27 - 00000D27 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ScanRspDataLen
                                   00000D27 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D28 - 00000D46 (0x1f bytes), align: 0
  Segment part 22.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ScanRspData     00000D28 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D47 - 00000D47 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvEventType    00000D47 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D48 - 00000D48 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvDirectType   00000D48 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D49 - 00000D4E (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvDirectAddr   00000D49 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D4F - 00000D4F (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvChanMap      00000D4F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D50 - 00000D50 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvFilterPolicy
                                   00000D50 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001122 - 00001123 (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   ?Subroutine4
                                                   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnectionHandle
                                   00001122 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D51 - 00000D52 (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_RSSIReadRate    00000D51 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D53 - 00000D58 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnectedDevAddr
                                   00000D53 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D59 - 00000D59 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ParamUpdateEnable
                                   00000D59 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001124 - 00001125 (0x2 bytes), align: 0
  Segment part 33.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_MinConnInterval
                                   00001124 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001126 - 00001127 (0x2 bytes), align: 0
  Segment part 35.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_MaxConnInterval
                                   00001126 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D5A - 00000D5B (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_SlaveLatency    00000D5A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001128 - 00001129 (0x2 bytes), align: 0
  Segment part 38.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_TimeoutMultiplier
                                   00001128 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D5C - 00000D5D (0x2 bytes), align: 0
  Segment part 40.            Intra module refs:   ?Subroutine6
                                                   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnInterval    00000D5C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D5E - 00000D5F (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   ?Subroutine7
                                                   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnSlaveLatency
                                   00000D5E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D60 - 00000D61 (0x2 bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine8
                                                   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnTimeout     00000D60 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D62 - 00000D62 (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_ProcessOSALMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           paramUpdateNoSuccessOption
                                   00000D62 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D63 - 00000D64 (0x2 bytes), align: 0
  Segment part 44.            Intra module refs:   ?Subroutine2
                                                   GAPRole_StartDevice
                                                   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           pGapRoles_AppCGs        00000D63 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D65 - 00000D66 (0x2 bytes), align: 0
  Segment part 45.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           pGapRoles_ParamUpdateCB
                                   00000D65 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010000 - 0001035E (0x35f bytes), align: 0
  Segment part 46.            Intra module refs:   GAPRole_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SetParameter    00010000 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001035F - 00010360 (0x2 bytes), align: 0
  Segment part 48.            Intra module refs:   ?Subroutine15
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0001035F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010361 - 00010366 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine18
                                                   GAPRole_SendUpdateParam
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010367 - 00010372 (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00010367 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010373 - 00010380 (0xe bytes), align: 0
  Segment part 51.            Intra module refs:   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00010373 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010381 - 000104F7 (0x177 bytes), align: 0
  Segment part 52.            Intra module refs:   GAPRole_GetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_GetParameter    00010381 
               calls direct
               XSTACK = 00000000 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000104F8 - 00010500 (0x9 bytes), align: 0
  Segment part 54.            Intra module refs:   GAPRole_GetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           000104F8 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010501 - 00010503 (0x3 bytes), align: 0
  Segment part 55.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00010501 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010504 - 00010508 (0x5 bytes), align: 0
  Segment part 56.            Intra module refs:   ?Subroutine0
                                                   GAPRole_GetParameter
                                                   GAPRole_SendUpdateParam
                                                   gapRole_ProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010509 - 00010558 (0x50 bytes), align: 0
  Segment part 57.            Intra module refs:   GAPRole_StartDevice::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_StartDevice     00010509 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010559 - 0001055F (0x7 bytes), align: 0
  Segment part 61.            Intra module refs:   GAPRole_TerminateConnection
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00010559 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010560 - 0001057E (0x1f bytes), align: 0
  Segment part 62.            Intra module refs:   GAPRole_TerminateConnection::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_TerminateConnection
                                   00010560 
               calls direct
               XSTACK = 00000016 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001057F - 000105FC (0x7e bytes), align: 0
  Segment part 64.            Intra module refs:   GAPRole_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_Init            0001057F 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000105FD - 0001078C (0x190 bytes), align: 0
  Segment part 66.            Intra module refs:   GAPRole_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_ProcessEvent    000105FD 
               calls direct
               XSTACK = 00000000 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001078D - 00010792 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0001078D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010793 - 00010877 (0xe5 bytes), align: 0
  Segment part 69.            Intra module refs:   gapRole_ProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessOSALMsg
                                   00010793 
               calls direct
               XSTACK = 00000016 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010878 - 00010C17 (0x3a0 bytes), align: 0
  Segment part 71.            Intra module refs:   gapRole_ProcessGAPMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessGAPMsg   00010878 
               calls direct
               XSTACK = 0000000C ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C18 - 00010C1D (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00010C18 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C1E - 00010C29 (0xc bytes), align: 0
  Segment part 74.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00010C1E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C2A - 00010C2C (0x3 bytes), align: 0
  Segment part 75.            Intra module refs:   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00010C2A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C2D - 00010C32 (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   ?Subroutine10
                                                   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C33 - 00010C36 (0x4 bytes), align: 0
  Segment part 77.            Intra module refs:   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00010C33 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C37 - 00010C3A (0x4 bytes), align: 0
  Segment part 78.            Intra module refs:   ?Subroutine9
                                                   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C3B - 00010C40 (0x6 bytes), align: 0
  Segment part 79.            Intra module refs:   ?Subroutine6
                                                   ?Subroutine7
                                                   ?Subroutine8
                                                   Segment part 78
                                                   Segment part 87
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00010C3B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C41 - 00010C4C (0xc bytes), align: 0
  Segment part 80.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00010C41 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C4D - 00010C58 (0xc bytes), align: 0
  Segment part 81.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00010C4D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C59 - 00010C64 (0xc bytes), align: 0
  Segment part 82.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00010C59 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C65 - 00010C73 (0xf bytes), align: 0
  Segment part 83.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00010C65 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C74 - 00010C76 (0x3 bytes), align: 0
  Segment part 84.            Intra module refs:   GAPRole_ProcessEvent
                                                   GAPRole_TerminateConnection
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00010C74 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C77 - 00010C7C (0x6 bytes), align: 0
  Segment part 85.            Intra module refs:   ?Subroutine4
                                                   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C7D - 00010C7F (0x3 bytes), align: 0
  Segment part 86.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00010C7D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C80 - 00010C85 (0x6 bytes), align: 0
  Segment part 87.            Intra module refs:   ?Subroutine2
                                                   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C86 - 00010D5B (0xd6 bytes), align: 0
  Segment part 88.            Intra module refs:   gapRole_startConnUpdate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_startConnUpdate
                                   00010C86 
               calls direct
               XSTACK = 00000016 ( 00000018 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010D5C - 00010DF5 (0x9a bytes), align: 0
  Segment part 90.            Intra module refs:   GAPRole_SendUpdateParam::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SendUpdateParam
                                   00010D5C 
               calls direct
               XSTACK = 0000001A ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010DF6 - 00010DFE (0x9 bytes), align: 0
  Segment part 92.            Intra module refs:   GAPRole_SendUpdateParam
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           00010DF6 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000033C - 0000033C (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   gapRole_AdvEnabled
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000033D - 0000033E (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   gapRole_AdvertOffTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000033F - 0000033F (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   gapRole_AdvertDataLen
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000340 - 0000035E (0x1f bytes), align: 0
  Segment part 20.            Intra module refs:   gapRole_AdvertData
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000035F - 00000360 (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   gapRole_ConnectionHandle
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000361 - 00000362 (0x2 bytes), align: 0
  Segment part 34.            Intra module refs:   gapRole_MinConnInterval
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000363 - 00000364 (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   gapRole_MaxConnInterval
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000365 - 00000366 (0x2 bytes), align: 0
  Segment part 39.            Intra module refs:   gapRole_TimeoutMultiplier
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001464 - 00001469 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SetParameter::?relay
                                   00001464        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000146A - 0000146F (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_GetParameter::?relay
                                   0000146A        peripheralStateNotificationCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001470 - 00001475 (0x6 bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_StartDevice::?relay
                                   00001470        SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001476 - 0000147B (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_TerminateConnection::?relay
                                   00001476        simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000147C - 00001481 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_Init::?relay    0000147C        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001482 - 00001487 (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_ProcessEvent::?relay
                                   00001482        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001488 - 0000148D (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   GAPRole_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessOSALMsg::?relay
                                   00001488 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000148E - 00001493 (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessGAPMsg::?relay
                                   0000148E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001494 - 00001499 (0x6 bytes), align: 0
  Segment part 89.            Intra module refs:   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_startConnUpdate::?relay
                                   00001494 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000149A - 0000149F (0x6 bytes), align: 0
  Segment part 91.            Intra module refs:   GAPRole_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SendUpdateParam::?relay
                                   0000149A 

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\simpleBLEPeripheral.r51
  PROGRAM MODULE, NAME : simpleBLEPeripheral

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000D67 - 00000D68 (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   peripheralStateNotificationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           gapConnHandle           00000D67 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D69 - 00000E66 (0xfe bytes), align: 0
  Segment part 42.            Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           recv_value              00000D69 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E67 - 00000E67 (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           TRANSFER_DATA_STATE_IN
                                   00000E67 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E68 - 00000E68 (0x1 bytes), align: 0
  Segment part 44.            Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           data_len                00000E68 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E69 - 00000E69 (0x1 bytes), align: 0
  Segment part 45.            Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           cur_data_len            00000E69 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E6A - 00000E6A (0x1 bytes), align: 0
  Segment part 46.            Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           data_len_index          00000E6A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E6B - 00000E6B (0x1 bytes), align: 0
  Segment part 55.            Intra module refs:   SimpleBLEPeripheral_Init
                                                   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_TaskID
                                   00000E6B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E6C - 00000E6C (0x1 bytes), align: 0
  Segment part 56.            Intra module refs:   peripheralStateNotificationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProfileState         00000E6C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000112A - 00001147 (0x1e bytes), align: 0
  Segment part 57.            Intra module refs:   SimpleBLEPeripheral_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           scanRspData             0000112A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001148 - 0000114E (0x7 bytes), align: 0
  Segment part 59.            Intra module refs:   SimpleBLEPeripheral_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           advertData              00001148 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000114F - 00001152 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_PeripheralCBs
                                   0000114F 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001153 - 00001156 (0x4 bytes), align: 0
  Segment part 63.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_BondMgrCBs
                                   00001153 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001157 - 00001158 (0x2 bytes), align: 0
  Segment part 65.            Intra module refs:   SimpleBLEPeripheral_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_SimpleProfileCBs
                                   00001157 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000158FE - 00015970 (0x73 bytes), align: 0
  Segment part 70.            Intra module refs:   simpleBLEPeripheralPairStateCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheralPairStateCB
                                   000158FE 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015971 - 00015C02 (0x292 bytes), align: 0
  Segment part 72.            Intra module refs:   SimpleBLEPeripheral_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleBLEPeripheral_Init
                                   00015971 
               calls direct
               XSTACK = 00000000 ( 0000008E )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C03 - 00015C04 (0x2 bytes), align: 0
  Segment part 74.            Intra module refs:   bdAddr2Str
                                                   hex2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00015C03 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C05 - 00015C0C (0x8 bytes), align: 0
  Segment part 75.            Intra module refs:   ?Subroutine0
                                                   SimpleBLEPeripheral_Init
                                                   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C0D - 00015C8D (0x81 bytes), align: 0
  Segment part 76.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleBLEPeripheral_ProcessEvent
                                   00015C0D 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C8E - 00015DBF (0x132 bytes), align: 0
  Segment part 78.            Intra module refs:   peripheralStateNotificationCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           peripheralStateNotificationCB
                                   00015C8E 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000017 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015DC0 - 00016006 (0x247 bytes), align: 0
  Segment part 80.            Intra module refs:   simpleProfileChangeCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChangeCB   00015DC0 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000005F )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016007 - 00016011 (0xb bytes), align: 0
  Segment part 82.            Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00016007 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016012 - 00016074 (0x63 bytes), align: 0
  Segment part 83.            Intra module refs:   bdAddr2Str::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           bdAddr2Str              00016012 
               XSTACK = 00000017 ( 0000001A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016075 - 00016081 (0xd bytes), align: 0
  Segment part 85.            Intra module refs:   bdAddr2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00016075 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E6D - 00000E7B (0xf bytes), align: 0
  Segment part 67.            Intra module refs:   bdAddr2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           bdAddr2Str::str         00000E6D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016082 - 000160EE (0x6d bytes), align: 0
  Segment part 86.            Intra module refs:   hex2Str::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           hex2Str                 00016082 
               calls direct
               XSTACK = 0000005B ( 0000001A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000160EF - 000160FB (0xd bytes), align: 0
  Segment part 88.            Intra module refs:   hex2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            000160EF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000160FC - 00016102 (0x7 bytes), align: 0
  Segment part 89.            Intra module refs:   bdAddr2Str
                                                   hex2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            000160FC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016103 - 0001610A (0x8 bytes), align: 0
  Segment part 90.            Intra module refs:   bdAddr2Str
                                                   hex2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00016103 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001610B - 0001611A (0x10 bytes), align: 0
  Segment part 91.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001610B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E7C - 00000E8F (0x14 bytes), align: 0
  Segment part 68.            Intra module refs:   hex2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           hex2Str::str            00000E7C 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000367 - 00000384 (0x1e bytes), align: 0
  Segment part 58.            Intra module refs:   scanRspData
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000385 - 0000038B (0x7 bytes), align: 0
  Segment part 60.            Intra module refs:   advertData
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000038C - 0000038F (0x4 bytes), align: 0
  Segment part 62.            Intra module refs:   simpleBLEPeripheral_PeripheralCBs
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000390 - 00000393 (0x4 bytes), align: 0
  Segment part 64.            Intra module refs:   simpleBLEPeripheral_BondMgrCBs
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000394 - 00000395 (0x2 bytes), align: 0
  Segment part 66.            Intra module refs:   simpleBLEPeripheral_SimpleProfileCBs
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014A0 - 000014A5 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 64
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheralPairStateCB::?relay
                                   000014A0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014A6 - 000014AB (0x6 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleBLEPeripheral_Init::?relay
                                   000014A6        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014AC - 000014B1 (0x6 bytes), align: 0
  Segment part 77.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleBLEPeripheral_ProcessEvent::?relay
                                   000014AC        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014B2 - 000014B7 (0x6 bytes), align: 0
  Segment part 79.            Intra module refs:   Segment part 62
           LOCAL                   ADDRESS         
           =====                   =======         
           peripheralStateNotificationCB::?relay
                                   000014B2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014B8 - 000014BD (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 66
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChangeCB::?relay
                                   000014B8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014BE - 000014C3 (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   peripheralStateNotificationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           bdAddr2Str::?relay      000014BE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014C4 - 000014C9 (0x6 bytes), align: 0
  Segment part 87.            Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           hex2Str::?relay         000014C4 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000083C9 - 000083D8 (0x10 bytes), align: 0
  Segment part 14.            Intra module refs:   simpleBLEPeripheralPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000083F9 - 00008408 (0x10 bytes), align: 0
  Segment part 15.            Intra module refs:   simpleBLEPeripheralPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000846F - 0000847B (0xd bytes), align: 0
  Segment part 16.            Intra module refs:   simpleBLEPeripheralPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008409 - 00008418 (0x10 bytes), align: 0
  Segment part 17.            Intra module refs:   simpleBLEPeripheralPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000083B9 - 000083C8 (0x10 bytes), align: 0
  Segment part 18.            Intra module refs:   simpleBLEPeripheralPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008276 - 00008289 (0x14 bytes), align: 0
  Segment part 19.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082DA - 000082ED (0x14 bytes), align: 0
  Segment part 20.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000832A - 0000833D (0x14 bytes), align: 0
  Segment part 21.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000829E - 000082B1 (0x14 bytes), align: 0
  Segment part 22.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008316 - 00008329 (0x14 bytes), align: 0
  Segment part 23.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082B2 - 000082C5 (0x14 bytes), align: 0
  Segment part 24.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008429 - 00008437 (0xf bytes), align: 0
  Segment part 25.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000822B - 00008244 (0x1a bytes), align: 0
  Segment part 26.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008489 - 00008494 (0xc bytes), align: 0
  Segment part 27.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008495 - 000084A0 (0xc bytes), align: 0
  Segment part 28.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084CA - 000084D3 (0xa bytes), align: 0
  Segment part 29.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000847C - 00008488 (0xd bytes), align: 0
  Segment part 30.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084AC - 000084B5 (0xa bytes), align: 0
  Segment part 31.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084F5 - 000084FA (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085C6 - 000085C6 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082EE - 00008301 (0x14 bytes), align: 0
  Segment part 34.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008302 - 00008315 (0x14 bytes), align: 0
  Segment part 35.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000828A - 0000829D (0x14 bytes), align: 0
  Segment part 36.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082C6 - 000082D9 (0x14 bytes), align: 0
  Segment part 37.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008438 - 00008445 (0xe bytes), align: 0
  Segment part 38.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008397 - 000083A7 (0x11 bytes), align: 0
  Segment part 39.            Intra module refs:   bdAddr2Str
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000083A8 - 000083B8 (0x11 bytes), align: 0
  Segment part 40.            Intra module refs:   hex2Str
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000083C9 - 000083D8 (0x10 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000083F9 - 00008408 (0x10 bytes), align: 0
  Segment part 93.            Intra module refs:   Segment part 15
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000846F - 0000847B (0xd bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008409 - 00008418 (0x10 bytes), align: 0
  Segment part 95.            Intra module refs:   Segment part 17
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000083B9 - 000083C8 (0x10 bytes), align: 0
  Segment part 96.            Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008276 - 00008289 (0x14 bytes), align: 0
  Segment part 97.            Intra module refs:   Segment part 19
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000082DA - 000082ED (0x14 bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000832A - 0000833D (0x14 bytes), align: 0
  Segment part 99.            Intra module refs:   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000829E - 000082B1 (0x14 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008316 - 00008329 (0x14 bytes), align: 0
  Segment part 101.           Intra module refs:   Segment part 23
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000082B2 - 000082C5 (0x14 bytes), align: 0
  Segment part 102.           Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008429 - 00008437 (0xf bytes), align: 0
  Segment part 103.           Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000822B - 00008244 (0x1a bytes), align: 0
  Segment part 104.           Intra module refs:   Segment part 26
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008489 - 00008494 (0xc bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008495 - 000084A0 (0xc bytes), align: 0
  Segment part 106.           Intra module refs:   Segment part 28
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084CA - 000084D3 (0xa bytes), align: 0
  Segment part 107.           Intra module refs:   Segment part 29
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000847C - 00008488 (0xd bytes), align: 0
  Segment part 108.           Intra module refs:   Segment part 30
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084AC - 000084B5 (0xa bytes), align: 0
  Segment part 109.           Intra module refs:   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084F5 - 000084FA (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085C6 - 000085C6 (0x1 bytes), align: 0
  Segment part 111.           Intra module refs:   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000082EE - 00008301 (0x14 bytes), align: 0
  Segment part 112.           Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008302 - 00008315 (0x14 bytes), align: 0
  Segment part 113.           Intra module refs:   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000828A - 0000829D (0x14 bytes), align: 0
  Segment part 114.           Intra module refs:   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000082C6 - 000082D9 (0x14 bytes), align: 0
  Segment part 115.           Intra module refs:   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008438 - 00008445 (0xe bytes), align: 0
  Segment part 116.           Intra module refs:   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008397 - 000083A7 (0x11 bytes), align: 0
  Segment part 117.           Intra module refs:   Segment part 39
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000083A8 - 000083B8 (0x11 bytes), align: 0
  Segment part 118.           Intra module refs:   Segment part 40

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\simpleGATTprofile.r51
  PROGRAM MODULE, NAME : simpleGATTprofile

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085BC - 000085BD (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   simpleProfileService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfileServUUID   000085BC 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085BE - 000085BF (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 53
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar1UUID
                                   000085BE 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085C0 - 000085C1 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 53
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar2UUID
                                   000085C0 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085C2 - 000085C3 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 53
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar3UUID
                                   000085C2 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085B0 - 000085B1 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 53
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar4UUID
                                   000085B0 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085AE - 000085AF (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 53
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar5UUID
                                   000085AE 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085AC - 000085AD (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 53
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar6UUID
                                   000085AC 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085AA - 000085AB (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 53
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar7UUID
                                   000085AA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E90 - 00000E91 (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   SimpleProfile_RegisterAppCBs
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_AppCBs    00000E90 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008577 - 00008579 (0x3 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileService    00008577 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001159 - 00001159 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar1Props
                                   00001159 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E92 - 00000EA5 (0x14 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 53
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar1      00000E92 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000115A - 0000116A (0x11 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar1UserDesp
                                   0000115A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000116B - 0000116B (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar2Props
                                   0000116B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000EA6 - 00000EB9 (0x14 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 53
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar2      00000EA6 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000116C - 0000117C (0x11 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar2UserDesp
                                   0000116C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000117D - 0000117D (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar3Props
                                   0000117D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000EBA - 00000ECD (0x14 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 53
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar3      00000EBA 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000117E - 0000118E (0x11 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar3UserDesp
                                   0000117E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000118F - 0000118F (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar4Props
                                   0000118F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000ECE - 00000ECE (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 53
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar4      00000ECE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000ECF - 00000ED4 (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 53
                                                   SimpleProfile_AddService
                                                   SimpleProfile_SetParameter
                                                   simpleProfile_HandleConnStatusCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar4Config
                                   00000ECF 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001190 - 000011A0 (0x11 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar4UserDesp
                                   00001190 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000011A1 - 000011A1 (0x1 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar5Props
                                   000011A1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000ED5 - 00000EE8 (0x14 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 53
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar5      00000ED5 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000011A2 - 000011B2 (0x11 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar5UserDesp
                                   000011A2 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000011B3 - 000011B3 (0x1 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar6Props
                                   000011B3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000EE9 - 00000EFC (0x14 bytes), align: 0
  Segment part 44.            Intra module refs:   Segment part 53
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar6      00000EE9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000011B4 - 000011C4 (0x11 bytes), align: 0
  Segment part 45.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar6UserDesp
                                   000011B4 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000011C5 - 000011C5 (0x1 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar7Props
                                   000011C5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000EFD - 00000F10 (0x14 bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 53
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar7      00000EFD 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000011C6 - 000011D6 (0x11 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 53
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar7UserDesp
                                   000011C6 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000011D7 - 00001296 (0xc0 bytes), align: 0
  Segment part 52.            Intra module refs:   SimpleProfile_AddService
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileAttrTbl    000011D7 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008501 - 00008506 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   SimpleProfile_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfileCBs        00008501 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F9A0 - 0000F9DD (0x3e bytes), align: 0
  Segment part 55.            Intra module refs:   SimpleProfile_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_AddService
                                   0000F9A0 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F9DE - 0000F9E4 (0x7 bytes), align: 0
  Segment part 57.            Intra module refs:   SimpleProfile_AddService
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000F9DE 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F9E5 - 0000FA01 (0x1d bytes), align: 0
  Segment part 58.            Intra module refs:   SimpleProfile_RegisterAppCBs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_RegisterAppCBs
                                   0000F9E5 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FA02 - 0000FB07 (0x106 bytes), align: 0
  Segment part 60.            Intra module refs:   SimpleProfile_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_SetParameter
                                   0000FA02 
               calls direct
               XSTACK = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FB08 - 0000FB9C (0x95 bytes), align: 0
  Segment part 62.            Intra module refs:   SimpleProfile_GetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_GetParameter
                                   0000FB08 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FB9D - 0000FBA1 (0x5 bytes), align: 0
  Segment part 64.            Intra module refs:   SimpleProfile_GetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0000FB9D 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FBA2 - 0000FC81 (0xe0 bytes), align: 0
  Segment part 67.            Intra module refs:   simpleProfile_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_ReadAttrCB
                                   0000FBA2 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC82 - 0000FC82 (0x1 bytes), align: 0
  Segment part 69.            Intra module refs:   simpleProfile_ReadAttrCB
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000FC82 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC83 - 0000FC88 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   ?Subroutine4
                                                   simpleProfile_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC89 - 0000FEEE (0x266 bytes), align: 0
  Segment part 71.            Intra module refs:   simpleProfile_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_WriteAttrCB
                                   0000FC89 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FEEF - 0000FEF7 (0x9 bytes), align: 0
  Segment part 73.            Intra module refs:   simpleProfile_ReadAttrCB
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000FEEF 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FEF8 - 0000FEFD (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   simpleProfile_ReadAttrCB
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000FEF8 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FEFE - 0000FF14 (0x17 bytes), align: 0
  Segment part 75.            Intra module refs:   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000FEFE 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF15 - 0000FF2B (0x17 bytes), align: 0
  Segment part 76.            Intra module refs:   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000FF15 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF2C - 0000FF64 (0x39 bytes), align: 0
  Segment part 77.            Intra module refs:   simpleProfile_HandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_HandleConnStatusCB
                                   0000FF2C 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000396 - 00000396 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   simpleProfileChar1Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000397 - 000003A7 (0x11 bytes), align: 0
  Segment part 20.            Intra module refs:   simpleProfileChar1UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003A8 - 000003A8 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   simpleProfileChar2Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003A9 - 000003B9 (0x11 bytes), align: 0
  Segment part 25.            Intra module refs:   simpleProfileChar2UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003BA - 000003BA (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   simpleProfileChar3Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003BB - 000003CB (0x11 bytes), align: 0
  Segment part 30.            Intra module refs:   simpleProfileChar3UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003CC - 000003CC (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   simpleProfileChar4Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003CD - 000003DD (0x11 bytes), align: 0
  Segment part 36.            Intra module refs:   simpleProfileChar4UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003DE - 000003DE (0x1 bytes), align: 0
  Segment part 38.            Intra module refs:   simpleProfileChar5Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003DF - 000003EF (0x11 bytes), align: 0
  Segment part 41.            Intra module refs:   simpleProfileChar5UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003F0 - 000003F0 (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   simpleProfileChar6Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003F1 - 00000401 (0x11 bytes), align: 0
  Segment part 46.            Intra module refs:   simpleProfileChar6UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000402 - 00000402 (0x1 bytes), align: 0
  Segment part 48.            Intra module refs:   simpleProfileChar7Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000403 - 00000413 (0x11 bytes), align: 0
  Segment part 51.            Intra module refs:   simpleProfileChar7UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000414 - 000004D3 (0xc0 bytes), align: 0
  Segment part 53.            Intra module refs:   simpleProfileAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014CA - 000014CF (0x6 bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_AddService::?relay
                                   000014CA        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014D0 - 000014D5 (0x6 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_RegisterAppCBs::?relay
                                   000014D0        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014D6 - 000014DB (0x6 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_SetParameter::?relay
                                   000014D6        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014DC - 000014E1 (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_GetParameter::?relay
                                   000014DC        simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014E2 - 000014E7 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   simpleProfileCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_ReadAttrCB::?relay
                                   000014E2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014E8 - 000014ED (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   simpleProfileCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_WriteAttrCB::?relay
                                   000014E8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014EE - 000014F3 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   SimpleProfile_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_HandleConnStatusCB::?relay
                                   000014EE 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085BC - 000085BD (0x2 bytes), align: 0
  Segment part 79.            Intra module refs:   simpleProfileServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085BE - 000085BF (0x2 bytes), align: 0
  Segment part 80.            Intra module refs:   simpleProfilechar1UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085C0 - 000085C1 (0x2 bytes), align: 0
  Segment part 81.            Intra module refs:   simpleProfilechar2UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085C2 - 000085C3 (0x2 bytes), align: 0
  Segment part 82.            Intra module refs:   simpleProfilechar3UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085B0 - 000085B1 (0x2 bytes), align: 0
  Segment part 83.            Intra module refs:   simpleProfilechar4UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085AE - 000085AF (0x2 bytes), align: 0
  Segment part 84.            Intra module refs:   simpleProfilechar5UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085AC - 000085AD (0x2 bytes), align: 0
  Segment part 85.            Intra module refs:   simpleProfilechar6UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085AA - 000085AB (0x2 bytes), align: 0
  Segment part 86.            Intra module refs:   simpleProfilechar7UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008577 - 00008579 (0x3 bytes), align: 0
  Segment part 87.            Intra module refs:   simpleProfileService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008501 - 00008506 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   simpleProfileCBs

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 6.4\8051\LIB\CLIB\cl-pli-blxd-1e16x01.r51
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000091 - 00000095 (0x5 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    00000091        ?call_main (?cmain)
           ?C_EXIT                 00000091 
           ?ROM_MONITOR_NOPS       00000091 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000096, align: 0
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  00000096        Segment part 13 (CSTARTUP)
               calls direct
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000096 - 0000009E (0x9 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   00000096        __low_level_init (hal_startup)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000009F - 000000AC (0xe bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_Z           0000009F        Segment part 1 (ll_halt)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000AD - 000000BA (0xe bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_Z          000000AD        myPC (ll)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000BB - 000000CA (0x10 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          000000BB        GATTServApp_TaskID (gattservapp)
                                                   HalKeyConfigured (hal_key)
                                                   HalLedState (hal_led)
                                                   HalLedStatusControl (hal_led)
                                                   HalSleepLedState (hal_led)
                                                   Hal_KeyIntEnable (hal_key)
                                                   Hal_TaskID (hal_drivers)
                                                   LL_TaskID (ll)
                                                   Lcd_Line1 (hal_lcd)
                                                   OSAL_timeSeconds (OSAL_ClockBLE)
                                                   OnboardKeyIntEnable (OnBoard)
                                                   Segment part 10 (gap_linkmgr)
                                                   Segment part 10 (gap_peridevmgr)
                                                   Segment part 10 (gap_task)
                                                   Segment part 10 (gapgattserver)
                                                   Segment part 10 (gattservapp)
                                                   Segment part 11 (gap_peridevmgr)
                                                   Segment part 11 (gattservapp)
                                                   Segment part 12 (gap_configmgr)
                                                   Segment part 12 (gattservapp)
                                                   Segment part 13 (gapgattserver)
                                                   Segment part 13 (gattservapp)
                                                   Segment part 14 (gattservapp)
                                                   Segment part 15 (gap_configmgr)
                                                   Segment part 16 (gapgattserver)
                                                   Segment part 18 (gattservapp)
                                                   Segment part 19 (gapgattserver)
                                                   Segment part 6 (gapgattserver)
                                                   Segment part 6 (l2cap_if)
                                                   Segment part 6 (l2cap_util)
                                                   Segment part 6 (linkdb)
                                                   Segment part 6 (sm_mgr)
                                                   Segment part 7 (gatt_task)
                                                   Segment part 7 (linkdb)
                                                   Segment part 8 (gatt_task)
                                                   Segment part 8 (ll_scheduler)
                                                   Segment part 8 (sm_pairing)
                                                   Segment part 9 (gap_linkmgr)
                                                   Segment part 9 (gap_peridevmgr)
                                                   Segment part 9 (gatt_server)
                                                   Segment part 9 (gattservapp)
                                                   Segment part 9 (ll_scheduler)
                                                   TRANSFER_DATA_STATE_IN (simpleBLEPeripheral)
                                                   UART_PORT_HAVE_READ (SimpleBLESerialUart)
                                                   UartBuffer (SimpleBLESerialUart)
                                                   activePg (osal_snv)
                                                   adcRef (hal_adc)
                                                   advInfo (ll)
                                                   autoSyncWhiteList (gapbondmgr)
                                                   battLevelClientCharCfg (battservice)
                                                   battServiceCB (battservice)
                                                   battServiceCalcCB (battservice)
                                                   battServiceSetupCB (battservice)
                                                   battServiceTeardownCB (battservice)
                                                   bdAddr2Str::str (simpleBLEPeripheral)
                                                   bleEvtMask (hci_event)
                                                   bm_list_ptr (osal_bufmgr)
                                                   bonds (gapbondmgr)
                                                   bondsToDelete (gapbondmgr)
                                                   buildInfo (ll)
                                                   cachedTRNGdata (ll_enc)
                                                   cbTimers (osal_cbtimer)
                                                   chanMapUpdate (ll)
                                                   clkDivOnHalt (ll)
                                                   code_flag (Simplepasscode)
                                                   ctrlToHostEnable (hci)
                                                   cur_data_len (simpleBLEPeripheral)
                                                   dataPkt (ll_enc)
                                                   data_len (simpleBLEPeripheral)
                                                   data_len_index (simpleBLEPeripheral)
                                                   dcdcData (ll)
                                                   devInfoSystemId (devinfoservice)
                                                   deviceFeatureSet (ll)
                                                   dmaCfg (hal_uart)
                                                   dmaCh0 (hal_dma)
                                                   dmaCh1234 (hal_dma)
                                                   dmaRdyDly (hal_uart)
                                                   dmaRdyIsr (hal_uart)
                                                   dtmInfo (ll)
                                                   eraseAllBonds (gapbondmgr)
                                                   extendRfRange (ll)
                                                   failF (osal_snv)
                                                   fastTxRespTime (ll)
                                                   gapAutoAdvPrivateAddrChange (gap_configmgr)
                                                   gapBondMgr_SyncCharCfg::pAttr (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg::service (gapbondmgr)
                                                   gapBondMgr_TaskID (gapbondmgr)
                                                   gapBond_AutoFail (gapbondmgr)
                                                   gapBond_Bonding (gapbondmgr)
                                                   gapBond_IOCap (gapbondmgr)
                                                   gapBond_MITM (gapbondmgr)
                                                   gapBond_OOBData (gapbondmgr)
                                                   gapBond_OOBDataFlag (gapbondmgr)
                                                   gapBond_Passcode (gapbondmgr)
                                                   gapConnHandle (simpleBLEPeripheral)
                                                   gapDeviceAddrMode (gap_configmgr)
                                                   gapPrivateAddrChangeTimeout (gap_configmgr)
                                                   gapProfileRole (gap_configmgr)
                                                   gapProfileState (simpleBLEPeripheral)
                                                   gapRole_AdvChanMap (peripheral)
                                                   gapRole_AdvDirectAddr (peripheral)
                                                   gapRole_AdvDirectType (peripheral)
                                                   gapRole_AdvEventType (peripheral)
                                                   gapRole_AdvFilterPolicy (peripheral)
                                                   gapRole_ConnInterval (peripheral)
                                                   gapRole_ConnSlaveLatency (peripheral)
                                                   gapRole_ConnTimeout (peripheral)
                                                   gapRole_ConnectedDevAddr (peripheral)
                                                   gapRole_IRK (peripheral)
                                                   gapRole_ParamUpdateEnable (peripheral)
                                                   gapRole_RSSIReadRate (peripheral)
                                                   gapRole_SRK (peripheral)
                                                   gapRole_ScanRspData (peripheral)
                                                   gapRole_ScanRspDataLen (peripheral)
                                                   gapRole_SlaveLatency (peripheral)
                                                   gapRole_TaskID (peripheral)
                                                   gapRole_bdAddr (peripheral)
                                                   gapRole_profileRole (peripheral)
                                                   gapRole_signCounter (peripheral)
                                                   gapRole_state (peripheral)
                                                   gapTaskID (gap_task)
                                                   gattTaskID (gatt_task)
                                                   halKeySavedKeys (hal_key)
                                                   halPwrMgtMode (hal_sleep)
                                                   haltDuringRf (ll)
                                                   hciCtrlCmdToken (hci)
                                                   hciExtTaskID (hci_tl)
                                                   hciGapTaskID (hci_tl)
                                                   hciL2capTaskID (hci_tl)
                                                   hciPTMenabled (hci)
                                                   hciSmpTaskID (hci_tl)
                                                   hciTaskID (hci_tl)
                                                   hciTestTaskID (hci_tl)
                                                   hex2Str::str (simpleBLEPeripheral)
                                                   i2cAddr (hal_i2c)
                                                   irdatalen (SimpleBLESerialUart)
                                                   k (SimpleRTCInterrupt)
                                                   l2capChannels (l2cap_task)
                                                   l2capFixedChannels (l2cap_task)
                                                   l2capTaskID (l2cap_task)
                                                   llConns (ll)
                                                   llState (ll)
                                                   maxTxPwrForDTM (ll)
                                                   name_flag (Simplepasscode)
                                                   newname (Simplepasscode)
                                                   newpasskey (Simplepasscode)
                                                   numBytes (SimpleBLESerialUart)
                                                   numComplPkts (ll)
                                                   numComplPktsFlush (ll)
                                                   numComplPktsLimit (ll)
                                                   numHostBufs (hci)
                                                   numTxDataBufs (ll)
                                                   numWLEntries (phy)
                                                   nvInUse (ll)
                                                   onePktPerEvt (ll)
                                                   osalMemStat (OSAL_Memory)
                                                   osal_qHead (OSAL)
                                                   osal_systemClock (OSAL_Timers)
                                                   ownPublicAddr (ll)
                                                   ownRandomAddr (ll)
                                                   ownSavedPublicAddr (ll)
                                                   pAuthEvt (gapbondmgr)
                                                   pAuthLink (gap_linkmgr)
                                                   pEstLink (gap_linkmgr)
                                                   pGapAdvertState (gap_devmgr)
                                                   pGapBondCB (gapbondmgr)
                                                   pGapRoles_AppCGs (peripheral)
                                                   pGapRoles_ParamUpdateCB (peripheral)
                                                   pHalKeyProcessFunction (hal_key)
                                                   pHciEvtMask (hci_event)
                                                   pPairingParams (sm_pairing)
                                                   paramUpdateNoSuccessOption (peripheral)
                                                   passkey_flag (Simplepasscode)
                                                   peerInfo (ll)
                                                   pfnCentralConnCBs (gap_linkmgr)
                                                   pfnPeripheralCBs (gap_task)
                                                   pfnResponderCBs (sm_pairing)
                                                   pgOff (osal_snv)
                                                   pktBuffer (SimpleBLESerialUart)
                                                   point (SimpleBLESerialUart)
                                                   postRfOperations (ll)
                                                   preBlinkState (hal_led)
                                                   previousLLTimerTick (OSAL_ClockBLE)
                                                   pwrmgr_attribute (OSAL_PwrMgr)
                                                   recv_value (simpleBLEPeripheral)
                                                   remUsTicks (OSAL_ClockBLE)
                                                   rfCounters (ll)
                                                   rssiCorrection (ll)
                                                   rxFifoFlowCtrl (ll)
                                                   serverInfoTbl (gatt_server)
                                                   simpleBLEPeripheral_TaskID (simpleBLEPeripheral)
                                                   simpleProfileChar1 (simpleGATTprofile)
                                                   simpleProfileChar2 (simpleGATTprofile)
                                                   simpleProfileChar3 (simpleGATTprofile)
                                                   simpleProfileChar4 (simpleGATTprofile)
                                                   simpleProfileChar4Config (simpleGATTprofile)
                                                   simpleProfileChar5 (simpleGATTprofile)
                                                   simpleProfileChar6 (simpleGATTprofile)
                                                   simpleProfileChar7 (simpleGATTprofile)
                                                   simpleProfile_AppCBs (simpleGATTprofile)
                                                   slOverride (ll)
                                                   sleepDelay (ll)
                                                   smTaskID (sm_task)
                                                   sweepIdx (hal_uart)
                                                   taskEndCause (ll)
                                                   tasksEvents (OSAL_SimpleBLEPeripheral)
                                                   timeMSec (OSAL_ClockBLE)
                                                   timerHead (OSAL_Timers)
                                                   trngCounter (ll)
                                                   u_state (SimpleBLESerialUart)
                                                   verInfo (ll)
                                                   wakeForRF (hal_sleep)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000CB - 000000DD (0x13 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_I           000000CB        halSleepPconValue (hal_sleep)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000DE - 00000106 (0x29 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          000000DE        SBP_UART_STUDY_CMD (SimpleBLESerialUart)
                                                   Segment part 10 (gatt_server)
                                                   Segment part 11 (gapgattserver)
                                                   Segment part 12 (gap_peridevmgr)
                                                   Segment part 13 (gap_configmgr)
                                                   Segment part 14 (gapgattserver)
                                                   Segment part 16 (gattservapp)
                                                   Segment part 17 (gapgattserver)
                                                   Segment part 19 (gattservapp)
                                                   Segment part 20 (gapgattserver)
                                                   Segment part 22 (gapgattserver)
                                                   Segment part 24 (gapgattserver)
                                                   Segment part 6 (gap_peridevmgr)
                                                   Segment part 6 (sm_rsppairing)
                                                   Segment part 8 (gapgattserver)
                                                   activeTaskID (OSAL)
                                                   advertData (simpleBLEPeripheral)
                                                   appTaskID (gattservapp)
                                                   attDeviceName (Simplepasscode)
                                                   baseTaskID (osal_cbtimer)
                                                   battAttrTbl (battservice)
                                                   battLevel (battservice)
                                                   battLevelProps (battservice)
                                                   battMaxLevel (battservice)
                                                   battMinLevel (battservice)
                                                   battServiceAdcCh (battservice)
                                                   bondIdx (gapbondmgr)
                                                   devInfo11073CertProps (devinfoservice)
                                                   devInfoAttrTbl (devinfoservice)
                                                   devInfoFirmwareRevProps (devinfoservice)
                                                   devInfoHardwareRevProps (devinfoservice)
                                                   devInfoMfrNameProps (devinfoservice)
                                                   devInfoModelNumberProps (devinfoservice)
                                                   devInfoPnpId (devinfoservice)
                                                   devInfoPnpIdProps (devinfoservice)
                                                   devInfoSerialNumberProps (devinfoservice)
                                                   devInfoSoftwareRevProps (devinfoservice)
                                                   devInfoSystemIdProps (devinfoservice)
                                                   gapAppTaskID (gap_configmgr)
                                                   gapBond_AutoFailReason (gapbondmgr)
                                                   gapBond_InitiateWait (gapbondmgr)
                                                   gapBond_KeyDistList (gapbondmgr)
                                                   gapBond_KeySize (gapbondmgr)
                                                   gapBond_PairingMode (gapbondmgr)
                                                   gapRole_AdvEnabled (peripheral)
                                                   gapRole_AdvertData (peripheral)
                                                   gapRole_AdvertDataLen (peripheral)
                                                   gapRole_AdvertOffTime (peripheral)
                                                   gapRole_ConnectionHandle (peripheral)
                                                   gapRole_MaxConnInterval (peripheral)
                                                   gapRole_MinConnInterval (peripheral)
                                                   gapRole_TimeoutMultiplier (peripheral)
                                                   gapUnwantedTaskID (gap_task)
                                                   hidReportRefBattLevel (battservice)
                                                   registeredKeysTaskID (OnBoard)
                                                   reqTaskId (gatt_server)
                                                   scanRspData (simpleBLEPeripheral)
                                                   simpleBLEPeripheral_BondMgrCBs (simpleBLEPeripheral)
                                                   simpleBLEPeripheral_PeripheralCBs (simpleBLEPeripheral)
                                                   simpleBLEPeripheral_SimpleProfileCBs (simpleBLEPeripheral)
                                                   simpleProfileAttrTbl (simpleGATTprofile)
                                                   simpleProfileChar1Props (simpleGATTprofile)
                                                   simpleProfileChar1UserDesp (simpleGATTprofile)
                                                   simpleProfileChar2Props (simpleGATTprofile)
                                                   simpleProfileChar2UserDesp (simpleGATTprofile)
                                                   simpleProfileChar3Props (simpleGATTprofile)
                                                   simpleProfileChar3UserDesp (simpleGATTprofile)
                                                   simpleProfileChar4Props (simpleGATTprofile)
                                                   simpleProfileChar4UserDesp (simpleGATTprofile)
                                                   simpleProfileChar5Props (simpleGATTprofile)
                                                   simpleProfileChar5UserDesp (simpleGATTprofile)
                                                   simpleProfileChar6Props (simpleGATTprofile)
                                                   simpleProfileChar6UserDesp (simpleGATTprofile)
                                                   simpleProfileChar7Props (simpleGATTprofile)
                                                   simpleProfileChar7UserDesp (simpleGATTprofile)
                                                   taskEndCauses (ll)
                                                   taskErrorEndCauses (ll)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000107, align: 0
  Segment part 37.            Intra module refs:   __low_level_init_call
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000107 - 0000011C (0x16 bytes), align: 0
  Segment part 38.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              00000107 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 00000038, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           00000038 
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 00000001, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           00000001 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000011D - 00000122 (0x6 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         0000011D        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               00000120 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000123 - 00000128 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              00000123        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000129 - 0000012B (0x3 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        00000129        Absolute parts (?BANKED_CODE_SUPPORT)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000012C - 0000012E (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   Absolute parts

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?Subroutine0 (SimpleBLESPIFlash)
                                                   ?Subroutine0 (hal_sleep)
                                                   ?Subroutine1 (hal_ds1307)
                                                   ?Subroutine1 (hal_led)
                                                   ?Subroutine1 (osal_cbtimer)
                                                   ?Subroutine12 (peripheral)
                                                   ?Subroutine18 (OSAL)
                                                   ?Subroutine2 (devinfoservice)
                                                   ?Subroutine2 (hal_ds1307)
                                                   ?Subroutine2 (simpleGATTprofile)
                                                   ?Subroutine21 (gapbondmgr)
                                                   ?Subroutine3 (devinfoservice)
                                                   ?Subroutine3 (peripheral)
                                                   ?Subroutine3 (simpleGATTprofile)
                                                   ?Subroutine5 (devinfoservice)
                                                   ?Subroutine5 (peripheral)
                                                   ?Subroutine6 (hal_ds1307)
                                                   ?Subroutine6 (osal_snv)
                                                   ?Subroutine8 (gapbondmgr)
                                                   ?UL_GE_X (?UL_GE_X)
                                                   ATT_BuildFindByTypeValueRsp (att_util)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ErrorRsp (att_server)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_ExecuteWriteRsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_HandleValueInd (att_server)
                                                   ATT_HandleValueNoti (att_server)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseReadMultiReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_PrepareWriteRsp (att_server)
                                                   ATT_ReadBlobRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   ATT_ReadMultiRsp (att_server)
                                                   ATT_ReadRsp (att_server)
                                                   ATT_WriteRsp (att_server)
                                                   Batt_AddService (battservice)
                                                   DevInfo_AddService (devinfoservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   DisplayByte_5x7 (hal_lcd)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_AddService (gattservapp)
                                                   GATTServApp_FindAttr (gattservapp)
                                                   GATTServApp_InitCharCfg (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   GATTServApp_SendServiceChangedInd (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATTServApp_WriteCharCfg (gattservapp)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_InitServer (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ProcessEvent (gatt_task)
                                                   GATT_RegisterService (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GATT_VerifyWritePermissions (gatt_server)
                                                   GGS_AddService (gapgattserver)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_ProcessEvent (hci_tl)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HalAdcRead (hal_adc)
                                                   HalDS1307ReadTimeData (hal_ds1307)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalI2CRead (hal_i2c)
                                                   HalI2CWrite (hal_i2c)
                                                   HalKeyRead (hal_key)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLcd_HW_Clear (hal_lcd)
                                                   HalLcd_HW_WriteLine (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalSPIRead (SimpleBLESPIFlash)
                                                   HalSPIWrite (SimpleBLESPIFlash)
                                                   HalSensorReadReg (hal_sensor)
                                                   HalUARTBusyDMA (hal_uart)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTPollDMA (hal_uart)
                                                   HalUARTReadDMA (hal_uart)
                                                   L2CAP_BuildCmdReject (l2cap_util)
                                                   L2CAP_CmdReject (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   L2CAP_Init (l2cap_task)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   L2CAP_SendData (l2cap_if)
                                                   LL_AddWhiteListDevice (ll)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_ReverseBytes (ll_enc)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_ProcessEvent (ll)
                                                   LL_PseudoRand (ll)
                                                   LL_RX_bm_alloc (ll)
                                                   LL_Rand (ll)
                                                   LL_RandCback (hci)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_SetAdvControl (ll)
                                                   LL_SetAdvData (ll)
                                                   LL_SetAdvParam (ll)
                                                   LL_SetScanRspData (ll)
                                                   LL_TX_bm_alloc (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   PHY_AddWlEntry (phy)
                                                   PHY_ClearBlacklistIndex (phy)
                                                   PHY_SetBlacklistIndex (phy)
                                                   RF_NormalIsr (ll_isr)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ProcessEvent (sm_task)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   Segment part 100 (gattservapp)
                                                   Segment part 101 (gattservapp)
                                                   Segment part 103 (l2cap_util)
                                                   Segment part 104 (hci_event)
                                                   Segment part 105 (gattservapp)
                                                   Segment part 105 (hci_event)
                                                   Segment part 108 (hci_event)
                                                   Segment part 115 (gattservapp)
                                                   Segment part 119 (gattservapp)
                                                   Segment part 119 (hci_event)
                                                   Segment part 120 (gattservapp)
                                                   Segment part 124 (gattservapp)
                                                   Segment part 125 (gattservapp)
                                                   Segment part 130 (gattservapp)
                                                   Segment part 130 (hci_event)
                                                   Segment part 131 (hci_event)
                                                   Segment part 132 (gattservapp)
                                                   Segment part 137 (att_util)
                                                   Segment part 156 (att_util)
                                                   Segment part 162 (gattservapp)
                                                   Segment part 167 (att_util)
                                                   Segment part 18 (gatt_server)
                                                   Segment part 18 (hci_event)
                                                   Segment part 19 (gatt_server)
                                                   Segment part 19 (l2cap_util)
                                                   Segment part 20 (hci_event)
                                                   Segment part 20 (smp)
                                                   Segment part 21 (gatt_server)
                                                   Segment part 22 (sm_rsppairing)
                                                   Segment part 23 (l2cap_util)
                                                   Segment part 23 (sm_mgr)
                                                   Segment part 24 (gap_linkmgr)
                                                   Segment part 24 (l2cap_util)
                                                   Segment part 26 (sm_mgr)
                                                   Segment part 28 (gatt_task)
                                                   Segment part 30 (linkdb)
                                                   Segment part 36 (att_util)
                                                   Segment part 38 (smp)
                                                   Segment part 39 (osal_snv)
                                                   Segment part 41 (gap_peridevmgr)
                                                   Segment part 44 (hci_event)
                                                   Segment part 45 (sm_mgr)
                                                   Segment part 46 (sm_mgr)
                                                   Segment part 50 (gap_configmgr)
                                                   Segment part 51 (gapgattserver)
                                                   Segment part 53 (att_util)
                                                   Segment part 53 (gatt_server)
                                                   Segment part 54 (sm_mgr)
                                                   Segment part 55 (gapgattserver)
                                                   Segment part 57 (gap_linkmgr)
                                                   Segment part 58 (gattservapp)
                                                   Segment part 59 (gattservapp)
                                                   Segment part 60 (sm_rsppairing)
                                                   Segment part 62 (gap_linkmgr)
                                                   Segment part 62 (gattservapp)
                                                   Segment part 63 (gatt_server)
                                                   Segment part 66 (att_util)
                                                   Segment part 67 (gap_linkmgr)
                                                   Segment part 68 (gap_linkmgr)
                                                   Segment part 68 (gattservapp)
                                                   Segment part 69 (att_util)
                                                   Segment part 70 (hci_event)
                                                   Segment part 71 (gattservapp)
                                                   Segment part 71 (sm_rsppairing)
                                                   Segment part 72 (gatt_server)
                                                   Segment part 72 (sm_rsppairing)
                                                   Segment part 75 (sm_mgr)
                                                   Segment part 77 (sm_mgr)
                                                   Segment part 78 (gattservapp)
                                                   Segment part 80 (gap_linkmgr)
                                                   Segment part 81 (gap_linkmgr)
                                                   Segment part 81 (gattservapp)
                                                   Segment part 81 (sm_pairing)
                                                   Segment part 82 (gattservapp)
                                                   Segment part 82 (hci_event)
                                                   Segment part 83 (gattservapp)
                                                   Segment part 83 (sm_pairing)
                                                   Segment part 85 (gap_linkmgr)
                                                   Segment part 86 (gatt_server)
                                                   Segment part 86 (hci_event)
                                                   Segment part 88 (att_util)
                                                   Segment part 88 (gattservapp)
                                                   Segment part 89 (gap_peridevmgr)
                                                   Segment part 90 (ll_timer2)
                                                   Segment part 91 (gattservapp)
                                                   Segment part 92 (sm_pairing)
                                                   Segment part 93 (hci_event)
                                                   Segment part 94 (gattservapp)
                                                   Segment part 95 (l2cap_util)
                                                   Segment part 95 (sm_pairing)
                                                   Segment part 97 (hci_event)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   SimpleProfile_AddService (simpleGATTprofile)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   atoi (Simplepasscode)
                                                   attSendMsg (att_util)
                                                   battMeasure (battservice)
                                                   battReadAttrCB (battservice)
                                                   battWriteAttrCB (battservice)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapPeriProcessHCICmdCompleteEvt (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattFindServerInfo (gatt_server)
                                                   gattGetServerStatus (gatt_server)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattProcessReadMultiReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattProcessWriteReq (gatt_server)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   halUart0TxIsr (hal_uart)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capAllocChannel (l2cap_util)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capFindLocalId (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capParseCmdReject (l2cap_util)
                                                   l2capParsePacket (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   leftshift_onebit (sm_mgr)
                                                   linkDB_Add (linkdb)
                                                   linkDB_Authen (linkdb)
                                                   linkDB_Remove (linkdb)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocTask (ll_scheduler)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llConnCleanup (ll_common)
                                                   llConvertCtrlProcTimeoutToEvent (ll_common)
                                                   llConvertLstoToEvent (ll_common)
                                                   llDequeueCtrlPkt (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llGetNextDataChan (ll_common)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessChanMap (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llProcessTxData (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSave_rxFIFO (ll_scheduler)
                                                   llSave_txFIFO (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetNextDataChan (ll_common)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_adjust_header (osal_bufmgr)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_isbufset (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   phyFindWlEntry (phy)
                                                   reportStatusChange (linkdb)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   set_code_name (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_HandleConnStatusCB (simpleGATTprofile)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smEncrypt (sm_mgr)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandBuf (sm_mgr)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendEncInfo (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendIdentityInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smPairingSendSingingInfo (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessPairingReq (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   smStartEncryption (sm_pairing)
                                                   smStartRspTimer (sm_mgr)
                                                   smUint8ToAuthReq (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingReqRsp (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParsePairingReq (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
                                                   xor_128 (sm_mgr)
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000018 - 00000019 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000018        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?Subroutine1 (hal_ds1307)
                                                   ?Subroutine12 (osal_snv)
                                                   ?Subroutine3 (Simplepasscode)
                                                   ?Subroutine3 (hal_lcd)
                                                   ?Subroutine4 (simpleBLEPeripheral)
                                                   ?Subroutine5 (simpleBLEPeripheral)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ParseExecuteWriteReq (att_util)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetRandomAddressCmd (hci)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedUpdate (hal_led)
                                                   HalSensorReadReg (hal_sensor)
                                                   HalUARTInitDMA (hal_uart)
                                                   L2CAP_HostNumCompletedPkts (l2cap_if)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback (hci)
                                                   LL_EXT_SetRxGainCback (hci)
                                                   LL_EXT_SetTxPowerCback (hci)
                                                   LL_RandCback (hci)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   Onboard_rand (OnBoard)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTInit (SimpleBLESerialUart)
                                                   Segment part 134 (hci_event)
                                                   Segment part 30 (ll_timer2)
                                                   Segment part 36 (ll_timer2)
                                                   Segment part 44 (sm_mgr)
                                                   Segment part 60 (gattservapp)
                                                   Segment part 61 (gattservapp)
                                                   Segment part 63 (gatt_server)
                                                   Segment part 70 (sm_mgr)
                                                   Segment part 72 (hci)
                                                   Segment part 77 (hci)
                                                   Segment part 83 (gattservapp)
                                                   Segment part 90 (hci)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   bdAddr2Str (simpleBLEPeripheral)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   hex2Str (simpleBLEPeripheral)
                                                   initNV (osal_snv)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   llDivide31By16To16 (ll_math)
                                                   llEventInRange (ll_common)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llProcessTxData (ll_common)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   memset (?memset)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_snv_write (osal_snv)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   set_code_name (Simplepasscode)
                                                   set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessPairingReq (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSendSMMsg (smp)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   writeItem (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_CODE_SUPPORT

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000012F - 0000014C (0x1e bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL_FF               0000012F        ?call_main (?cmain)
           ?BRET_FF                00000135        ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?Subroutine0 (OSAL)
                                                   ?Subroutine0 (OSAL_Memory)
                                                   ?Subroutine0 (OSAL_PwrMgr)
                                                   ?Subroutine0 (SimpleBLESerialUart)
                                                   ?Subroutine0 (hal_adc)
                                                   ?Subroutine0 (hal_aes)
                                                   ?Subroutine0 (hal_drivers)
                                                   ?Subroutine0 (hal_key)
                                                   ?Subroutine1 (OSAL_Timers)
                                                   ?Subroutine1 (OnBoard)
                                                   ?Subroutine1 (hal_lcd)
                                                   ?Subroutine1 (peripheral)
                                                   ?Subroutine2 (hal_lcd)
                                                   ?Subroutine2 (hal_uart)
                                                   ?Subroutine3 (gapbondmgr)
                                                   HalDmaInit (hal_dma)
                                                   HalFlashErase (hal_flash)
                                                   HalKeyEnterSleep (hal_key)
                                                   HalLcd_HW_WaitUs (hal_lcd)
                                                   HalUARTIsrDMA (hal_uart)
                                                   PHY_CommitRxFifo (phy)
                                                   PHY_DeallocateRxFifo (phy)
                                                   PHY_RetryRxFifo (phy)
                                                   PHY_RetryTxFifo (phy)
                                                   SM_ResponderInit (sm_rsppairing)
                                                   Segment part 10 (gap_devmgr)
                                                   Segment part 10 (hci_event)
                                                   Segment part 12 (gatt_task)
                                                   Segment part 12 (hal_i2c)
                                                   Segment part 146 (hci)
                                                   Segment part 149 (ll)
                                                   Segment part 15 (gap_task)
                                                   Segment part 184 (phy)
                                                   Segment part 22 (linkdb)
                                                   Segment part 23 (hci_tl)
                                                   Segment part 25 (att_util)
                                                   Segment part 26 (gatt_server)
                                                   Segment part 26 (hal_led)
                                                   Segment part 30 (ll_scheduler)
                                                   Segment part 31 (gap_peridevmgr)
                                                   Segment part 33 (ll_enc)
                                                   Segment part 33 (ll_timer2)
                                                   Segment part 33 (smp)
                                                   Segment part 36 (sm_mgr)
                                                   Segment part 40 (gap_configmgr)
                                                   Segment part 42 (gapgattserver)
                                                   Segment part 49 (sm_pairing)
                                                   Segment part 50 (l2cap_util)
                                                   Segment part 53 (ll_common)
                                                   Segment part 54 (gattservapp)
                                                   Segment part 57 (gatt_server)
                                                   Segment part 66 (ll_timer2)
                                                   Segment part 74 (gap_linkmgr)
                                                   Segment part 9 (l2cap_if)
                                                   SimpleProfile_RegisterAppCBs (simpleGATTprofile)
                                                   bm_desc_from_payload (osal_bufmgr)
                                                   delay_nus (SimpleDS18B20)
                                                   gapValidADType (gap_devmgr)
                                                   halRestoreSleepLevel (hal_sleep)
                                                   halSetSleepMode (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   hex2char (hal_ds1307)
                                                   l2capHandleRxError (l2cap_util)
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llInitTimer2 (ll_timer2)
                                                   llSlaveEvt_TaskAbort (ll_slaveEndCauses)
                                                   llUnexpectedEndCauseHandler (ll_errorEndCauses)
                                                   main (SimpleBLEPeripheral_Main)
                                                   memset (?memset)
                                                   osalInitTasks (OSAL_SimpleBLEPeripheral)
                                                   osal_int_disable (OSAL)
                                                   osal_snv_init (osal_snv)
                                                   strlen (?strlen)
                                                   xnvSPIWrite (SimpleBLESPIFlash)
           ?BDISPATCH_FF           00000138        ATT_BuildErrorRsp::?relay (att_util)
                                                   ATT_BuildExchangeMTURsp::?relay (att_util)
                                                   ATT_BuildFindByTypeValueRsp::?relay (att_util)
                                                   ATT_BuildFindInfoRsp::?relay (att_util)
                                                   ATT_BuildHandleValueInd::?relay (att_util)
                                                   ATT_BuildPrepareWriteRsp::?relay (att_util)
                                                   ATT_BuildReadBlobRsp::?relay (att_util)
                                                   ATT_BuildReadByGrpTypeRsp::?relay (att_util)
                                                   ATT_BuildReadByTypeRsp::?relay (att_util)
                                                   ATT_BuildReadMultiRsp::?relay (att_util)
                                                   ATT_BuildReadRsp::?relay (att_util)
                                                   ATT_CompareUUID::?relay (att_util)
                                                   ATT_ConvertUUIDto128::?relay (att_util)
                                                   ATT_ErrorRsp::?relay (att_server)
                                                   ATT_ExchangeMTURsp::?relay (att_server)
                                                   ATT_ExecuteWriteRsp::?relay (att_server)
                                                   ATT_FindByTypeValueRsp::?relay (att_server)
                                                   ATT_FindInfoRsp::?relay (att_server)
                                                   ATT_HandleValueInd::?relay (att_server)
                                                   ATT_HandleValueNoti::?relay (att_server)
                                                   ATT_ParseExchangeMTUReq::?relay (att_util)
                                                   ATT_ParseExecuteWriteReq::?relay (att_util)
                                                   ATT_ParseFindByTypeValueReq::?relay (att_util)
                                                   ATT_ParseFindInfoReq::?relay (att_util)
                                                   ATT_ParsePacket::?relay (att_util)
                                                   ATT_ParsePrepareWriteReq::?relay (att_util)
                                                   ATT_ParseReadBlobReq::?relay (att_util)
                                                   ATT_ParseReadByTypeReq::?relay (att_util)
                                                   ATT_ParseReadMultiReq::?relay (att_util)
                                                   ATT_ParseReadReq::?relay (att_util)
                                                   ATT_ParseWriteReq::?relay (att_util)
                                                   ATT_PrepareWriteRsp::?relay (att_server)
                                                   ATT_ReadBlobRsp::?relay (att_server)
                                                   ATT_ReadByGrpTypeRsp::?relay (att_server)
                                                   ATT_ReadByTypeRsp::?relay (att_server)
                                                   ATT_ReadMultiRsp::?relay (att_server)
                                                   ATT_ReadRsp::?relay (att_server)
                                                   ATT_WriteRsp::?relay (att_server)
                                                   Batt_AddService::?relay (battservice)
                                                   DevInfo_AddService::?relay (devinfoservice)
                                                   DevInfo_SetParameter::?relay (devinfoservice)
                                                   DisplayByte_5x7::?relay (hal_lcd)
                                                   GAPBondMgr_Init::?relay (gapbondmgr)
                                                   GAPBondMgr_LinkEst::?relay (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent::?relay (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg::?relay (gapbondmgr)
                                                   GAPBondMgr_Register::?relay (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr::?relay (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd::?relay (gapbondmgr)
                                                   GAPBondMgr_SetParameter::?relay (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg::?relay (gapbondmgr)
                                                   GAPRole_GetParameter::?relay (peripheral)
                                                   GAPRole_Init::?relay (peripheral)
                                                   GAPRole_ProcessEvent::?relay (peripheral)
                                                   GAPRole_SendUpdateParam::?relay (peripheral)
                                                   GAPRole_SetParameter::?relay (peripheral)
                                                   GAPRole_StartDevice::?relay (peripheral)
                                                   GAPRole_TerminateConnection::?relay (peripheral)
                                                   GAP_Authenticate::?relay (gap_linkmgr)
                                                   GAP_Bond::?relay (gap_linkmgr)
                                                   GAP_DeviceInit::?relay (gap)
                                                   GAP_EndDiscoverable::?relay (gap_peridevmgr)
                                                   GAP_GetParamValue::?relay (gap_configmgr)
                                                   GAP_Init::?relay (gap_task)
                                                   GAP_MakeDiscoverable::?relay (gap_peridevmgr)
                                                   GAP_NumActiveConnections::?relay (gap_task)
                                                   GAP_ParamsInit::?relay (gap_configmgr)
                                                   GAP_PasscodeUpdate::?relay (gap_linkmgr)
                                                   GAP_PeriDevMgrInit::?relay (gap_peridevmgr)
                                                   GAP_ProcessEvent::?relay (gap_task)
                                                   GAP_RegisterForHCIMsgs::?relay (gap_task)
                                                   GAP_ResolvePrivateAddr::?relay (gap_devmgr)
                                                   GAP_SecParamsInit::?relay (gap_configmgr)
                                                   GAP_SendSlaveSecurityRequest::?relay (gap_perilinkmgr)
                                                   GAP_SetParamValue::?relay (gap_configmgr)
                                                   GAP_Signable::?relay (gap_linkmgr)
                                                   GAP_TerminateAuth::?relay (gap_linkmgr)
                                                   GAP_TerminateLinkReq::?relay (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData::?relay (gap_peridevmgr)
                                                   GATTServApp_AddService::?relay (gattservapp)
                                                   GATTServApp_FindAttr::?relay (gattservapp)
                                                   GATTServApp_Init::?relay (gattservapp)
                                                   GATTServApp_InitCharCfg::?relay (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq::?relay (gattservapp)
                                                   GATTServApp_ProcessCharCfg::?relay (gattservapp)
                                                   GATTServApp_ProcessEvent::?relay (gattservapp)
                                                   GATTServApp_ReadAttr::?relay (gattservapp)
                                                   GATTServApp_ReadCharCfg::?relay (gattservapp)
                                                   GATTServApp_RegisterForMsg::?relay (gattservapp)
                                                   GATTServApp_RegisterService::?relay (gattservapp)
                                                   GATTServApp_SendCCCUpdatedEvent::?relay (gattservapp)
                                                   GATTServApp_SendServiceChangedInd::?relay (gattservapp)
                                                   GATTServApp_UpdateCharCfg::?relay (gattservapp)
                                                   GATTServApp_WriteAttr::?relay (gattservapp)
                                                   GATTServApp_WriteCharCfg::?relay (gattservapp)
                                                   GATT_AppCompletedMsg::?relay (gatt_task)
                                                   GATT_FindHandle::?relay (gatt_server)
                                                   GATT_FindHandleUUID::?relay (gatt_server)
                                                   GATT_FindNextAttr::?relay (gatt_server)
                                                   GATT_Indication::?relay (gatt_server)
                                                   GATT_Init::?relay (gatt_task)
                                                   GATT_InitServer::?relay (gatt_server)
                                                   GATT_Notification::?relay (gatt_server)
                                                   GATT_ProcessEvent::?relay (gatt_task)
                                                   GATT_RegisterForReq::?relay (gatt_server)
                                                   GATT_RegisterService::?relay (gatt_server)
                                                   GATT_ServiceChangedInd::?relay (gatt_server)
                                                   GATT_ServiceNumAttrs::?relay (gatt_server)
                                                   GATT_VerifyReadPermissions::?relay (gatt_server)
                                                   GATT_VerifyWritePermissions::?relay (gatt_server)
                                                   GGS_AddService::?relay (gapgattserver)
                                                   GGS_SetParameter::?relay (gapgattserver)
                                                   HCI_CommandCompleteEvent::?relay (hci_event)
                                                   HCI_CommandStatusEvent::?relay (hci_event)
                                                   HCI_DisconnectCmd::?relay (hci)
                                                   HCI_GAPTaskRegister::?relay (hci_tl)
                                                   HCI_HostNumCompletedPktCmd::?relay (hci)
                                                   HCI_Init::?relay (hci_tl)
                                                   HCI_L2CAPTaskRegister::?relay (hci_tl)
                                                   HCI_LE_AddWhiteListCmd::?relay (hci)
                                                   HCI_LE_ClearWhiteListCmd::?relay (hci)
                                                   HCI_LE_LtkReqNegReplyCmd::?relay (hci)
                                                   HCI_LE_LtkReqReplyCmd::?relay (hci)
                                                   HCI_LE_RandCmd::?relay (hci)
                                                   HCI_LE_ReadBufSizeCmd::?relay (hci)
                                                   HCI_LE_SetAdvDataCmd::?relay (hci)
                                                   HCI_LE_SetAdvEnableCmd::?relay (hci)
                                                   HCI_LE_SetAdvParamCmd::?relay (hci)
                                                   HCI_LE_SetRandomAddressCmd::?relay (hci)
                                                   HCI_LE_SetScanRspDataCmd::?relay (hci)
                                                   HCI_NumOfCompletedPacketsEvent::?relay (hci_event)
                                                   HCI_ProcessEvent::?relay (hci_tl)
                                                   HCI_ReadBDADDRCmd::?relay (hci)
                                                   HCI_ReadRssiCmd::?relay (hci)
                                                   HCI_SMPTaskRegister::?relay (hci_tl)
                                                   HCI_SendCommandCompleteEvent::?relay (hci_event)
                                                   HCI_SendCommandStatusEvent::?relay (hci_event)
                                                   HCI_SendControllerToHostEvent::?relay (hci_event)
                                                   HCI_SendDataPkt::?relay (hci)
                                                   HCI_VendorSpecifcCommandCompleteEvent::?relay (hci_event)
                                                   HCI_bm_alloc::?relay (hci)
                                                   HalAdcInit::?relay (hal_adc)
                                                   HalAdcRead::?relay (hal_adc)
                                                   HalAdcSetReference::?relay (hal_adc)
                                                   HalAesInit::?relay (hal_aes)
                                                   HalDS1307ReadTimeData::?relay (hal_ds1307)
                                                   HalDmaInit::?relay (hal_dma)
                                                   HalDriverInit::?relay (hal_drivers)
                                                   HalFlashErase::?relay (hal_flash)
                                                   HalFlashRead::?relay (hal_flash)
                                                   HalFlashWrite::?relay (hal_flash)
                                                   HalI2CInit::?relay (hal_i2c)
                                                   HalI2CRead::?relay (hal_i2c)
                                                   HalI2CWrite::?relay (hal_i2c)
                                                   HalKeyConfig::?relay (hal_key)
                                                   HalKeyEnterSleep::?relay (hal_key)
                                                   HalKeyExitSleep::?relay (hal_key)
                                                   HalKeyInit::?relay (hal_key)
                                                   HalKeyPoll::?relay (hal_key)
                                                   HalKeyRead::?relay (hal_key)
                                                   HalLcdInit::?relay (hal_lcd)
                                                   HalLcdWriteString::?relay (hal_lcd)
                                                   HalLcdWriteStringValue::?relay (hal_lcd)
                                                   HalLcd_HW_Clear::?relay (hal_lcd)
                                                   HalLcd_HW_Control::?relay (hal_lcd)
                                                   HalLcd_HW_Init::?relay (hal_lcd)
                                                   HalLcd_HW_WaitUs::?relay (hal_lcd)
                                                   HalLcd_HW_Write::?relay (hal_lcd)
                                                   HalLcd_HW_WriteChar::?relay (hal_lcd)
                                                   HalLcd_HW_WriteLine::?relay (hal_lcd)
                                                   HalLedBlink::?relay (hal_led)
                                                   HalLedEnterSleep::?relay (hal_led)
                                                   HalLedExitSleep::?relay (hal_led)
                                                   HalLedInit::?relay (hal_led)
                                                   HalLedOnOff::?relay (hal_led)
                                                   HalLedSet::?relay (hal_led)
                                                   HalLedUpdate::?relay (hal_led)
                                                   HalSPIRead::?relay (SimpleBLESPIFlash)
                                                   HalSPIWrite::?relay (SimpleBLESPIFlash)
                                                   HalSensorReadReg::?relay (hal_sensor)
                                                   HalUARTBusyDMA::?relay (hal_uart)
                                                   HalUARTInit::?relay (hal_uart)
                                                   HalUARTInitDMA::?relay (hal_uart)
                                                   HalUARTIsrDMA::?relay (hal_uart)
                                                   HalUARTOpen::?relay (hal_uart)
                                                   HalUARTPoll::?relay (hal_uart)
                                                   HalUARTPollDMA::?relay (hal_uart)
                                                   HalUARTRead::?relay (hal_uart)
                                                   HalUARTReadDMA::?relay (hal_uart)
                                                   HalUARTRxAvailDMA::?relay (hal_uart)
                                                   Hal_Init::?relay (hal_drivers)
                                                   Hal_ProcessEvent::?relay (hal_drivers)
                                                   Hal_ProcessPoll::?relay (hal_drivers)
                                                   Hal_UART_RxBufLen::?relay (hal_uart)
                                                   InitBoard::?relay (OnBoard)
                                                   L2CAP_BuildCmdReject::?relay (l2cap_util)
                                                   L2CAP_CmdReject::?relay (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq::?relay (l2cap_if)
                                                   L2CAP_HostNumCompletedPkts::?relay (l2cap_if)
                                                   L2CAP_Init::?relay (l2cap_task)
                                                   L2CAP_ParseParamUpdateReq::?relay (l2cap_util)
                                                   L2CAP_ProcessEvent::?relay (l2cap_task)
                                                   L2CAP_RegisterApp::?relay (l2cap_if)
                                                   L2CAP_SendData::?relay (l2cap_if)
                                                   L2CAP_bm_alloc::?relay (l2cap_util)
                                                   LL_AddWhiteListDevice::?relay (ll)
                                                   LL_ClearWhiteList::?relay (ll)
                                                   LL_ConnParamUpdateCback::?relay (hci_event)
                                                   LL_ConnectionCompleteCback::?relay (hci_event)
                                                   LL_CtrlToHostFlowControl::?relay (ll)
                                                   LL_Disconnect::?relay (ll)
                                                   LL_DisconnectCback::?relay (hci_event)
                                                   LL_ENC_AES128_Encrypt::?relay (ll_enc)
                                                   LL_ENC_Decrypt::?relay (ll_enc)
                                                   LL_ENC_DecryptMsg::?relay (ll_enc)
                                                   LL_ENC_Encrypt::?relay (ll_enc)
                                                   LL_ENC_EncryptMsg::?relay (ll_enc)
                                                   LL_ENC_GenDeviceIV::?relay (ll_enc)
                                                   LL_ENC_GenDeviceSKD::?relay (ll_enc)
                                                   LL_ENC_GenerateMIC::?relay (ll_enc)
                                                   LL_ENC_GeneratePseudoRandNum::?relay (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum::?relay (ll_enc)
                                                   LL_ENC_InitAesDMA::?relay (ll_enc)
                                                   LL_ENC_LoadEmptyIV::?relay (ll_enc)
                                                   LL_ENC_MoveData::?relay (ll_enc)
                                                   LL_ENC_ReverseBytes::?relay (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback::?relay (hci)
                                                   LL_EXT_SetRxGainCback::?relay (hci)
                                                   LL_EXT_SetTxPowerCback::?relay (hci)
                                                   LL_EncChangeCback::?relay (hci_event)
                                                   LL_EncKeyRefreshCback::?relay (hci_event)
                                                   LL_EncLtkNegReply::?relay (ll)
                                                   LL_EncLtkReply::?relay (ll)
                                                   LL_EncLtkReqCback::?relay (hci_event)
                                                   LL_Encrypt::?relay (ll)
                                                   LL_Init::?relay (ll)
                                                   LL_ProcessEvent::?relay (ll)
                                                   LL_PseudoRand::?relay (ll)
                                                   LL_RX_bm_alloc::?relay (ll)
                                                   LL_Rand::?relay (ll)
                                                   LL_RandCback::?relay (hci)
                                                   LL_ReadBDADDR::?relay (ll)
                                                   LL_ReadRemoteVersionInfoCback::?relay (hci_event)
                                                   LL_ReadRssi::?relay (ll)
                                                   LL_Reset::?relay (ll)
                                                   LL_RxDataCompleteCback::?relay (hci_data)
                                                   LL_SetAdvControl::?relay (ll)
                                                   LL_SetAdvData::?relay (ll)
                                                   LL_SetAdvParam::?relay (ll)
                                                   LL_SetRandomAddress::?relay (ll)
                                                   LL_SetScanRspData::?relay (ll)
                                                   LL_TX_bm_alloc::?relay (ll)
                                                   LL_TxData::?relay (ll)
                                                   OnBoard_KeyCallback::?relay (OnBoard)
                                                   OnBoard_SendKeys::?relay (OnBoard)
                                                   Onboard_rand::?relay (OnBoard)
                                                   PHY_AddWlEntry::?relay (phy)
                                                   PHY_ClearAllRegsAndFifos::?relay (phy)
                                                   PHY_ClearBlacklist::?relay (phy)
                                                   PHY_ClearBlacklistIndex::?relay (phy)
                                                   PHY_ClearSavedWhiteList::?relay (phy)
                                                   PHY_ClearWhitelist::?relay (phy)
                                                   PHY_CommitRxFifo::?relay (phy)
                                                   PHY_ConfigWhitener::?relay (phy)
                                                   PHY_ConfigureAppendRfStatus::?relay (phy)
                                                   PHY_ConfigureFifoDataProcessing::?relay (phy)
                                                   PHY_ConfigureMD::?relay (phy)
                                                   PHY_DeallocateRxFifo::?relay (phy)
                                                   PHY_GetAdvChans::?relay (phy)
                                                   PHY_GetEndCause::?relay (phy)
                                                   PHY_Init::?relay (phy)
                                                   PHY_InitSeqStat::?relay (phy)
                                                   PHY_Reset::?relay (phy)
                                                   PHY_RetryRxFifo::?relay (phy)
                                                   PHY_RetryTxFifo::?relay (phy)
                                                   PHY_SetAdvChans::?relay (phy)
                                                   PHY_SetAdvWlPolicy::?relay (phy)
                                                   PHY_SetBlacklistIndex::?relay (phy)
                                                   PHY_SetCRCInit::?relay (phy)
                                                   PHY_SetEndConnection::?relay (phy)
                                                   PHY_SetFifoConfig::?relay (phy)
                                                   PHY_SetMaxNack::?relay (phy)
                                                   PHY_SetOwnAddr::?relay (phy)
                                                   PHY_SetPeerAddr::?relay (phy)
                                                   PHY_SetRfFreq::?relay (phy)
                                                   PHY_SetSyncWord::?relay (phy)
                                                   RegisterForKeys::?relay (OnBoard)
                                                   SM_CalcRandomAddr::?relay (sm_mgr)
                                                   SM_GenerateAuthenSig::?relay (sm_mgr)
                                                   SM_Init::?relay (sm_task)
                                                   SM_PasskeyUpdate::?relay (sm_pairing)
                                                   SM_ProcessEvent::?relay (sm_task)
                                                   SM_ResolveRandomAddrs::?relay (sm_mgr)
                                                   SM_ResponderInit::?relay (sm_rsppairing)
                                                   SM_StartPairing::?relay (sm_pairing)
                                                   SM_VerifyAuthenSig::?relay (sm_mgr)
                                                   SbpHalUARTInit::?relay (SimpleBLESerialUart)
                                                   SbpHalUARTRead::?relay (SimpleBLESerialUart)
                                                   SbpHalUARTReadCallback::?relay (SimpleBLESerialUart)
                                                   SbpHalUART_Init::?relay (SimpleBLESerialUart)
                                                   SimpleBLEPeripheral_Init::?relay (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent::?relay (simpleBLEPeripheral)
                                                   SimpleProfile_AddService::?relay (simpleGATTprofile)
                                                   SimpleProfile_GetParameter::?relay (simpleGATTprofile)
                                                   SimpleProfile_RegisterAppCBs::?relay (simpleGATTprofile)
                                                   SimpleProfile_SetParameter::?relay (simpleGATTprofile)
                                                   _itoa::?relay (OnBoard)
                                                   _ltoa::?relay (OSAL)
                                                   aesDmaInit::?relay (hal_aes)
                                                   atoi::?relay (Simplepasscode)
                                                   attSendMsg::?relay (att_util)
                                                   battMeasure::?relay (battservice)
                                                   battReadAttrCB::?relay (battservice)
                                                   battWriteAttrCB::?relay (battservice)
                                                   bdAddr2Str::?relay (simpleBLEPeripheral)
                                                   bm_desc_from_payload::?relay (osal_bufmgr)
                                                   cleanErasedPage::?relay (osal_snv)
                                                   compactPage::?relay (osal_snv)
                                                   delay_nus::?relay (SimpleDS18B20)
                                                   devInfo_ReadAttrCB::?relay (devinfoservice)
                                                   disconnectNext::?relay (gap_linkmgr)
                                                   erasePage::?relay (osal_snv)
                                                   findItem::?relay (osal_snv)
                                                   findOffset::?relay (osal_snv)
                                                   gapAddAddrAdj::?relay (gap_configmgr)
                                                   gapBondFreeAuthEvt::?relay (gapbondmgr)
                                                   gapBondMgrAddBond::?relay (gapbondmgr)
                                                   gapBondMgrAuthenticate::?relay (gapbondmgr)
                                                   gapBondMgrBondReq::?relay (gapbondmgr)
                                                   gapBondMgrBondTotal::?relay (gapbondmgr)
                                                   gapBondMgrChangeState::?relay (gapbondmgr)
                                                   gapBondMgrEraseAllBondings::?relay (gapbondmgr)
                                                   gapBondMgrEraseBonding::?relay (gapbondmgr)
                                                   gapBondMgrFindAddr::?relay (gapbondmgr)
                                                   gapBondMgrFindCharCfgItem::?relay (gapbondmgr)
                                                   gapBondMgrGetPublicAddr::?relay (gapbondmgr)
                                                   gapBondMgrInvertCharCfgItem::?relay (gapbondmgr)
                                                   gapBondMgrReadBonds::?relay (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr::?relay (gapbondmgr)
                                                   gapBondMgrSendServiceChange::?relay (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg::?relay (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg::?relay (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList::?relay (gapbondmgr)
                                                   gapBondSetupPrivFlag::?relay (gapbondmgr)
                                                   gapDetermineAddrType::?relay (gap_configmgr)
                                                   gapFindADType::?relay (gap_devmgr)
                                                   gapFreeAdvertState::?relay (gap_peridevmgr)
                                                   gapFreeAuthLink::?relay (gap_linkmgr)
                                                   gapFreeEstLink::?relay (gap_linkmgr)
                                                   gapGetDevAddress::?relay (gap_configmgr)
                                                   gapGetDevAddressMode::?relay (gap_configmgr)
                                                   gapGetIRK::?relay (gap_configmgr)
                                                   gapGetSRK::?relay (gap_configmgr)
                                                   gapGetSignCounter::?relay (gap_configmgr)
                                                   gapIncSignCounter::?relay (gap_configmgr)
                                                   gapIsAdvertising::?relay (gap_devmgr)
                                                   gapPairingCompleteCB::?relay (gap_linkmgr)
                                                   gapPasskeyNeededCB::?relay (gap_linkmgr)
                                                   gapPeriProcessHCICmdCompleteEvt::?relay (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt::?relay (gap_peridevmgr)
                                                   gapProcessConnUpdateCompleteEvt::?relay (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt::?relay (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt::?relay (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt::?relay (gap_task)
                                                   gapProcessNewAddr::?relay (gap_configmgr)
                                                   gapProcessOSALMsg::?relay (gap_task)
                                                   gapProcessRandomAddrComplete::?relay (gap_configmgr)
                                                   gapReadBD_ADDRStatus::?relay (gap_configmgr)
                                                   gapReadBufSizeCmdStatus::?relay (gap_configmgr)
                                                   gapRegisterPeripheral::?relay (gap_task)
                                                   gapRole_ProcessGAPMsg::?relay (peripheral)
                                                   gapRole_ProcessOSALMsg::?relay (peripheral)
                                                   gapRole_startConnUpdate::?relay (peripheral)
                                                   gapSendBondCompleteEvent::?relay (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent::?relay (gap_configmgr)
                                                   gapSendLinkUpdateEvent::?relay (gap_linkmgr)
                                                   gapSendMakeDiscEvent::?relay (gap_peridevmgr)
                                                   gapSendPairingReqEvent::?relay (gap_linkmgr)
                                                   gapSetAdvParams::?relay (gap_peridevmgr)
                                                   gapSetAdvParamsStatus::?relay (gap_peridevmgr)
                                                   gapUpdateConnSignCounter::?relay (gap_configmgr)
                                                   gapValidADType::?relay (gap_devmgr)
                                                   gapWriteAdvDataStatus::?relay (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus::?relay (gap_peridevmgr)
                                                   gattFindServerInfo::?relay (gatt_server)
                                                   gattGetServerStatus::?relay (gatt_server)
                                                   gattNotifyEvent::?relay (gatt_task)
                                                   gattProcessExchangeMTUReq::?relay (gatt_server)
                                                   gattProcessExecuteWriteReq::?relay (gatt_server)
                                                   gattProcessFindByTypeValueReq::?relay (gatt_server)
                                                   gattProcessFindInfoReq::?relay (gatt_server)
                                                   gattProcessReadByGrpTypeReq::?relay (gatt_server)
                                                   gattProcessReadByTypeReq::?relay (gatt_server)
                                                   gattProcessReadMultiReq::?relay (gatt_server)
                                                   gattProcessReadReq::?relay (gatt_server)
                                                   gattProcessRxData::?relay (gatt_task)
                                                   gattProcessWriteReq::?relay (gatt_server)
                                                   gattRegisterServer::?relay (gatt_task)
                                                   gattServApp_FindAuthorizeAttrCB::?relay (gattservapp)
                                                   gattServApp_FindCharCfgItem::?relay (gattservapp)
                                                   gattServApp_FindPrepareWriteQ::?relay (gattservapp)
                                                   gattServApp_FindServiceCBs::?relay (gattservapp)
                                                   gattServApp_HandleConnStatusCB::?relay (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq::?relay (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq::?relay (gattservapp)
                                                   gattServApp_ProcessMsg::?relay (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq::?relay (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq::?relay (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq::?relay (gattservapp)
                                                   gattServApp_ProcessReadMultiReq::?relay (gattservapp)
                                                   gattServApp_ProcessWriteReq::?relay (gattservapp)
                                                   gattServApp_SetNumPrepareWrites::?relay (gattservapp)
                                                   gattServApp_WriteAttrCB::?relay (gattservapp)
                                                   gattServerHandleConnStatusCB::?relay (gatt_server)
                                                   gattServerHandleTimerCB::?relay (gatt_server)
                                                   gattServerProcessMsgCB::?relay (gatt_server)
                                                   gattServiceLastHandle::?relay (gatt_server)
                                                   gattStartTimer::?relay (gatt_task)
                                                   gattStopTimer::?relay (gatt_task)
                                                   generate_subkey::?relay (sm_mgr)
                                                   ggs_ReadAttrCB::?relay (gapgattserver)
                                                   ggs_SetAttrWPermit::?relay (gapgattserver)
                                                   ggs_WriteAttrCB::?relay (gapgattserver)
                                                   halGetJoyKeyInput::?relay (hal_key)
                                                   halProcessKeyInterrupt::?relay (hal_key)
                                                   halRestoreSleepLevel::?relay (hal_sleep)
                                                   halSetSleepMode::?relay (hal_sleep)
                                                   halSleep::?relay (hal_sleep)
                                                   halSleepReadTimer::?relay (hal_sleep)
                                                   halSleepSetTimer::?relay (hal_sleep)
                                                   hciInitEventMasks::?relay (hci_event)
                                                   hex2Str::?relay (simpleBLEPeripheral)
                                                   hex2char::?relay (hal_ds1307)
                                                   i2cMstStrt::?relay (hal_i2c)
                                                   initNV::?relay (osal_snv)
                                                   isLimitedDiscoverableMode::?relay (gap_peridevmgr)
                                                   l2capAllocChannel::?relay (l2cap_util)
                                                   l2capBuildParamUpdateReq::?relay (l2cap_util)
                                                   l2capEncapSendData::?relay (l2cap_util)
                                                   l2capFindLocalId::?relay (l2cap_util)
                                                   l2capFreeChannel::?relay (l2cap_util)
                                                   l2capHandleRxError::?relay (l2cap_util)
                                                   l2capHandleTimerCB::?relay (l2cap_util)
                                                   l2capNotifyData::?relay (l2cap_util)
                                                   l2capNotifySignal::?relay (l2cap_util)
                                                   l2capParseCmdReject::?relay (l2cap_util)
                                                   l2capParsePacket::?relay (l2cap_util)
                                                   l2capParseParamUpdateRsp::?relay (l2cap_util)
                                                   l2capParseSignalHdr::?relay (l2cap_util)
                                                   l2capProcessReq::?relay (l2cap_task)
                                                   l2capProcessRsp::?relay (l2cap_task)
                                                   l2capProcessRxData::?relay (l2cap_task)
                                                   l2capProcessSignal::?relay (l2cap_task)
                                                   l2capSendCmd::?relay (l2cap_util)
                                                   l2capSendReq::?relay (l2cap_util)
                                                   l2capStopTimer::?relay (l2cap_util)
                                                   leftshift_onebit::?relay (sm_mgr)
                                                   linkDB_Add::?relay (linkdb)
                                                   linkDB_Authen::?relay (linkdb)
                                                   linkDB_Find::?relay (linkdb)
                                                   linkDB_FindFirst::?relay (linkdb)
                                                   linkDB_Init::?relay (linkdb)
                                                   linkDB_NumActive::?relay (linkdb)
                                                   linkDB_PerformFunc::?relay (linkdb)
                                                   linkDB_Register::?relay (linkdb)
                                                   linkDB_Remove::?relay (linkdb)
                                                   linkDB_State::?relay (linkdb)
                                                   llAdjustForMissedEvent::?relay (ll_common)
                                                   llAdvEvt_TaskAbort::?relay (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect::?relay (ll_advEndCauses)
                                                   llAllocConnId::?relay (ll_common)
                                                   llAllocTask::?relay (ll_scheduler)
                                                   llCheckWhiteListUsage::?relay (ll_common)
                                                   llClearSetInts::?relay (ll_common)
                                                   llConnCleanup::?relay (ll_common)
                                                   llConnTerminate::?relay (ll_common)
                                                   llConvertCtrlProcTimeoutToEvent::?relay (ll_common)
                                                   llConvertLstoToEvent::?relay (ll_common)
                                                   llDequeueCtrlPkt::?relay (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llDisableT2E1::?relay (ll_timer2)
                                                   llDisableT2Ints::?relay (ll_timer2)
                                                   llDisableT2IntsEvts::?relay (ll_timer2)
                                                   llDiscoverableAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llEnqueueCtrlPkt::?relay (ll_common)
                                                   llEnqueueDataQ::?relay (ll_common)
                                                   llExtendRfRange::?relay (ll_common)
                                                   llFindNextSecTask::?relay (ll_scheduler)
                                                   llFindTxPowerSettings::?relay (ll_common)
                                                   llFreeTask::?relay (ll_scheduler)
                                                   llGetActiveTasks::?relay (ll_scheduler)
                                                   llGetCurrentTask::?relay (ll_scheduler)
                                                   llGetCurrentTime::?relay (ll_timer2)
                                                   llGetFullCTandST::?relay (ll_timer2)
                                                   llGetNextConn::?relay (ll_common)
                                                   llGetNumTasks::?relay (ll_scheduler)
                                                   llGetTaskState::?relay (ll_scheduler)
                                                   llGetTimer2Capture::?relay (ll_timer2)
                                                   llInitFeatureSet::?relay (ll_common)
                                                   llInitTimer2::?relay (ll_timer2)
                                                   llMemCopySrc::?relay (ll_common)
                                                   llNonConnAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llProcessChanMap::?relay (ll_common)
                                                   llProcessPostRfOps::?relay (ll_common)
                                                   llProcessSlaveControlPacket::?relay (ll_slaveEndCauses)
                                                   llProcessSlaveControlProcedures::?relay (ll_slaveEndCauses)
                                                   llReleaseAllConnId::?relay (ll_common)
                                                   llReplaceCtrlPkt::?relay (ll_common)
                                                   llRestoreConnState::?relay (ll_scheduler)
                                                   llRfInit::?relay (ll_common)
                                                   llSave_rxFIFO::?relay (ll_scheduler)
                                                   llSave_txFIFO::?relay (ll_scheduler)
                                                   llScheduleTask::?relay (ll_scheduler)
                                                   llScheduler::?relay (ll_scheduler)
                                                   llSchedulerInit::?relay (ll_scheduler)
                                                   llSetFreqTune::?relay (ll_common)
                                                   llSetT2C1Event1::?relay (ll_timer2)
                                                   llSetT2LongC1Event1::?relay (ll_timer2)
                                                   llSetT2LongC1Timeout::?relay (ll_timer2)
                                                   llSetT2OVFC2Event2::?relay (ll_timer2)
                                                   llSetupAdv::?relay (ll_common)
                                                   llSetupDirectedAdvEvt::?relay (ll_common)
                                                   llSetupEncRsp::?relay (ll_common)
                                                   llSetupFeatureSetRsp::?relay (ll_common)
                                                   llSetupNextSlaveEvent::?relay (ll_slaveEndCauses)
                                                   llSetupNonConnectableAdvEvt::?relay (ll_common)
                                                   llSetupPauseEncRsp::?relay (ll_common)
                                                   llSetupRejectInd::?relay (ll_common)
                                                   llSetupScannableAdvEvt::?relay (ll_common)
                                                   llSetupStartEncReq::?relay (ll_common)
                                                   llSetupStartEncRsp::?relay (ll_common)
                                                   llSetupTermInd::?relay (ll_common)
                                                   llSetupUndirectedAdvEvt::?relay (ll_common)
                                                   llSetupUnknownRsp::?relay (ll_common)
                                                   llSetupVersionIndReq::?relay (ll_common)
                                                   llSlaveEvt_TaskAbort::?relay (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk::?relay (ll_slaveEndCauses)
                                                   llStartAdvSetup::?relay (ll_common)
                                                   llStartSlaveSetup::?relay (ll_common)
                                                   llStartTimer2::?relay (ll_timer2)
                                                   llStopTimer2::?relay (ll_timer2)
                                                   llUndirectedAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llUnexpectedEndCauseHandler::?relay (ll_errorEndCauses)
                                                   llWriteTxData::?relay (ll_common)
                                                   ll_McuPrecisionCount::?relay (ll_timer2)
                                                   memset::?relay (?memset)
                                                   osalAddTimer::?relay (OSAL_Timers)
                                                   osalDeleteTimer::?relay (OSAL_Timers)
                                                   osalFindTimer::?relay (OSAL_Timers)
                                                   osalInitTasks::?relay (OSAL_SimpleBLEPeripheral)
                                                   osalTimeUpdate::?relay (OSAL_ClockBLE)
                                                   osalTimerInit::?relay (OSAL_Timers)
                                                   osalTimerUpdate::?relay (OSAL_Timers)
                                                   osal_CbTimerInit::?relay (osal_cbtimer)
                                                   osal_CbTimerProcessEvent::?relay (osal_cbtimer)
                                                   osal_CbTimerStart::?relay (osal_cbtimer)
                                                   osal_CbTimerStop::?relay (osal_cbtimer)
                                                   osal_GetSystemClock::?relay (OSAL_Timers)
                                                   osal_bm_adjust_header::?relay (osal_bufmgr)
                                                   osal_bm_alloc::?relay (osal_bufmgr)
                                                   osal_bm_free::?relay (osal_bufmgr)
                                                   osal_clear_event::?relay (OSAL)
                                                   osal_get_timeoutEx::?relay (OSAL_Timers)
                                                   osal_init_system::?relay (OSAL)
                                                   osal_int_disable::?relay (OSAL)
                                                   osal_isbufset::?relay (OSAL)
                                                   osal_mem_alloc::?relay (OSAL_Memory)
                                                   osal_mem_free::?relay (OSAL_Memory)
                                                   osal_mem_init::?relay (OSAL_Memory)
                                                   osal_mem_kick::?relay (OSAL_Memory)
                                                   osal_memcmp::?relay (OSAL)
                                                   osal_memcpy::?relay (OSAL)
                                                   osal_memdup::?relay (OSAL)
                                                   osal_memset::?relay (OSAL)
                                                   osal_msg_allocate::?relay (OSAL)
                                                   osal_msg_deallocate::?relay (OSAL)
                                                   osal_msg_enqueue::?relay (OSAL)
                                                   osal_msg_enqueue_push::?relay (OSAL)
                                                   osal_msg_extract::?relay (OSAL)
                                                   osal_msg_push::?relay (OSAL)
                                                   osal_msg_receive::?relay (OSAL)
                                                   osal_msg_send::?relay (OSAL)
                                                   osal_next_timeout::?relay (OSAL_Timers)
                                                   osal_pwrmgr_device::?relay (OSAL_PwrMgr)
                                                   osal_pwrmgr_init::?relay (OSAL_PwrMgr)
                                                   osal_pwrmgr_powerconserve::?relay (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state::?relay (OSAL_PwrMgr)
                                                   osal_rand::?relay (OSAL)
                                                   osal_revmemcpy::?relay (OSAL)
                                                   osal_run_system::?relay (OSAL)
                                                   osal_set_event::?relay (OSAL)
                                                   osal_snv_compact::?relay (osal_snv)
                                                   osal_snv_init::?relay (osal_snv)
                                                   osal_snv_read::?relay (osal_snv)
                                                   osal_snv_write::?relay (osal_snv)
                                                   osal_start_reload_timer::?relay (OSAL_Timers)
                                                   osal_start_system::?relay (OSAL)
                                                   osal_start_timerEx::?relay (OSAL_Timers)
                                                   osal_stop_timerEx::?relay (OSAL_Timers)
                                                   osal_strlen::?relay (OSAL)
                                                   peripheralStateNotificationCB::?relay (simpleBLEPeripheral)
                                                   phyFindWlEntry::?relay (phy)
                                                   reportStatusChange::?relay (linkdb)
                                                   sendAuthEvent::?relay (gap_linkmgr)
                                                   sendEstLinkEvent::?relay (gap_linkmgr)
                                                   sendTerminateEvent::?relay (gap_linkmgr)
                                                   setActivePage::?relay (osal_snv)
                                                   setXferPage::?relay (osal_snv)
                                                   set_code_name::?relay (Simplepasscode)
                                                   set_ddram_line_col::?relay (hal_lcd)
                                                   set_de_passkey::?relay (Simplepasscode)
                                                   set_new_passkey::?relay (Simplepasscode)
                                                   showDate::?relay (hal_ds1307)
                                                   simpleBLEPeripheralPairStateCB::?relay (simpleBLEPeripheral)
                                                   simpleProfileChangeCB::?relay (simpleBLEPeripheral)
                                                   simpleProfile_HandleConnStatusCB::?relay (simpleGATTprofile)
                                                   simpleProfile_ReadAttrCB::?relay (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB::?relay (simpleGATTprofile)
                                                   smAuthReqToUint8::?relay (sm_mgr)
                                                   smDetermineKeySize::?relay (sm_pairing)
                                                   smEncrypt::?relay (sm_mgr)
                                                   smEndPairing::?relay (sm_pairing)
                                                   smFreePairingParams::?relay (sm_pairing)
                                                   smGenerateConfirm::?relay (sm_pairing)
                                                   smGeneratePairingReqRsp::?relay (sm_pairing)
                                                   smGenerateRandBuf::?relay (sm_mgr)
                                                   smGenerateRandMsg::?relay (sm_pairing)
                                                   smLinkCheck::?relay (sm_pairing)
                                                   smNextPairingState::?relay (sm_pairing)
                                                   smPairingSendEncInfo::?relay (sm_pairing)
                                                   smPairingSendIdentityAddrInfo::?relay (sm_pairing)
                                                   smPairingSendIdentityInfo::?relay (sm_pairing)
                                                   smPairingSendMasterID::?relay (sm_pairing)
                                                   smPairingSendSingingInfo::?relay (sm_pairing)
                                                   smProcessDataMsg::?relay (sm_pairing)
                                                   smProcessEncryptChange::?relay (sm_pairing)
                                                   smProcessOSALMsg::?relay (sm_task)
                                                   smProcessPairingReq::?relay (sm_pairing)
                                                   smProcessRandComplete::?relay (sm_mgr)
                                                   smRegisterResponder::?relay (sm_pairing)
                                                   smResponderProcessLTKReq::?relay (sm_rsppairing)
                                                   smResponderSendNextKeyInfo::?relay (sm_rsppairing)
                                                   smSavePairInfo::?relay (sm_pairing)
                                                   smSendFailAndEnd::?relay (sm_pairing)
                                                   smSendSMMsg::?relay (smp)
                                                   smSetPairingReqRsp::?relay (sm_pairing)
                                                   smStartEncryption::?relay (sm_pairing)
                                                   smStartRspTimer::?relay (sm_mgr)
                                                   smStopRspTimer::?relay (sm_mgr)
                                                   smTimedOut::?relay (sm_pairing)
                                                   smUint8ToAuthReq::?relay (sm_mgr)
                                                   sm_CMAC::?relay (sm_mgr)
                                                   sm_ah::?relay (sm_mgr)
                                                   sm_c1::?relay (sm_pairing)
                                                   sm_c1new::?relay (sm_mgr)
                                                   sm_s1::?relay (sm_mgr)
                                                   sm_xor::?relay (sm_mgr)
                                                   smpBuildEncInfo::?relay (smp)
                                                   smpBuildIdentityAddrInfo::?relay (smp)
                                                   smpBuildIdentityInfo::?relay (smp)
                                                   smpBuildMasterID::?relay (smp)
                                                   smpBuildPairingConfirm::?relay (smp)
                                                   smpBuildPairingFailed::?relay (smp)
                                                   smpBuildPairingRandom::?relay (smp)
                                                   smpBuildPairingReq::?relay (smp)
                                                   smpBuildPairingReqRsp::?relay (smp)
                                                   smpBuildPairingRsp::?relay (smp)
                                                   smpBuildSecurityReq::?relay (smp)
                                                   smpBuildSigningInfo::?relay (smp)
                                                   smpParseEncInfo::?relay (smp)
                                                   smpParseIdentityAddrInfo::?relay (smp)
                                                   smpParseIdentityInfo::?relay (smp)
                                                   smpParseMasterID::?relay (smp)
                                                   smpParsePairingConfirm::?relay (smp)
                                                   smpParsePairingFailed::?relay (smp)
                                                   smpParsePairingRandom::?relay (smp)
                                                   smpParsePairingReq::?relay (smp)
                                                   smpParseSecurityReq::?relay (smp)
                                                   smpParseSigningInfo::?relay (smp)
                                                   smpResponderProcessIncoming::?relay (sm_rsppairing)
                                                   smpResponderProcessMasterID::?relay (sm_rsppairing)
                                                   smpResponderProcessPairingRandom::?relay (sm_rsppairing)
                                                   smpResponderProcessPairingReq::?relay (sm_rsppairing)
                                                   strcat::?relay (?strcat)
                                                   strcpy::?relay (?strcpy)
                                                   strlen::?relay (?strlen)
                                                   studyCompletedAndBroadcastData::?relay (SimpleBLESerialUart)
                                                   verifyWordM::?relay (osal_snv)
                                                   writeItem::?relay (osal_snv)
                                                   writeWord::?relay (osal_snv)
                                                   xnvSPIWrite::?relay (SimpleBLESPIFlash)
                                                   xor_128::?relay (sm_mgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EQ_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000150C - 00001520 (0x15 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X                 0000150C        SM_VerifyAuthenSig (sm_mgr)
                                                   findOffset (osal_snv)
                                                   initNV (osal_snv)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001521 - 00001530 (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT                  00001521        HalLedUpdate (hal_led)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_snv_compact (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001531 - 00001540 (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X                00001531        halSleep (hal_sleep)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GE_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001541 - 0000155F (0x1f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GE_X                00001541        GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   halSleep (hal_sleep)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001560 - 00001562 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL                  00001560        HalLedUpdate (hal_led)
                                                   LL_TxData (ll)
                                                   atoi (Simplepasscode)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llScheduleTask (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osal_snv_compact (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001563 - 000015DF (0x7d bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_MUL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL_REW              00001563 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000015E0 - 0000164F (0x70 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIV_MOD             000015E0        HalLedUpdate (hal_led)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   _ltoa (OSAL)
                                                   halSleep (hal_sleep)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001650 - 00001654 (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR                 00001650        GAP_PasscodeUpdate (gap_linkmgr)
                                                   HalSPIRead (SimpleBLESPIFlash)
                                                   HalSPIWrite (SimpleBLESPIFlash)
                                                   LL_TxData (ll)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   _ltoa (OSAL)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001655 - 00001668 (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?UL_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001669 - 0000166E (0x6 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL                  00001669        LL_TimeToNextRfEvent (ll_sleep)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   halSleep (hal_sleep)
                                                   osal_snv_compact (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000166F - 00001673 (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL_REW              0000166F 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001674 - 00001687 (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?L_SHL
                                                   ?L_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001688 - 0000169A (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD                  00001688        HalLedUpdate (hal_led)
                                                   HalSPIWrite (SimpleBLESPIFlash)
                                                   LL_SetAdvControl (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   atoi (Simplepasscode)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000169B - 000016AD (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X                0000169B        HalSPIWrite (SimpleBLESPIFlash)
                                                   LL_TxData (ll)
                                                   halSleepSetTimer (hal_sleep)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000016AE - 000016C0 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X             000016AE        LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   gapIncSignCounter (gap_configmgr)
                                                   halSleepSetTimer (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000016C1 - 000016D4 (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB                  000016C1        LL_TimeToNextRfEvent (ll_sleep)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_FROM_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000016D5 - 000016E8 (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X           000016D5        llAdjustTimeBackward (ll_timer2)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000016E9 - 000016FB (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND                  000016E9        LL_SetAdvControl (ll)
                                                   LL_TxData (ll)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000016FC - 0000170E (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X                000016FC        LL_TimeToNextRfEvent (ll_sleep)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000170F - 00001721 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X             0000170F        Segment part 90 (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001722 - 00001730 (0xf bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                00001722        GAPBondMgr_SetParameter (gapbondmgr)
                                                   HalLedUpdate (hal_led)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   _ltoa (OSAL)
                                                   atoi (Simplepasscode)
                                                   findOffset (osal_snv)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llFindTxPowerSettings (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_snv_compact (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001731 - 0000173F (0xf bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             00001731        GAPBondMgr_SetParameter (gapbondmgr)
                                                   LL_SetAdvControl (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   set_new_passkey (Simplepasscode)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XLOAD_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001740 - 0000174B (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XLOAD_R2345            00001740        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Signable (gap_linkmgr)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_TxData (ll)
                                                   Segment part 30 (ll_timer2)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   gapGetSignCounter (gap_configmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_GetSystemClock (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTORE_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000174C - 00001757 (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTORE_R2345           0000174C        GAPRole_GetParameter (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Signable (gap_linkmgr)
                                                   HalLedBlink (hal_led)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   halSleep (hal_sleep)
                                                   llAllocTask (ll_scheduler)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001758 - 00001764 (0xd bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   00001758        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001765 - 00001785 (0x21 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   00001765        ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GGS_SetParameter (gapgattserver)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   _ltoa (OSAL)
                                                   bdAddr2Str (simpleBLEPeripheral)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   hex2Str (simpleBLEPeripheral)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llFindTxPowerSettings (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   set_code_name (Simplepasscode)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smProcessPairingReq (sm_pairing)
                                                   smSetPairingReqRsp (sm_pairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001786 - 000017C6 (0x41 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_DIV_MOD              000017BF        osal_snv_write (osal_snv)
                                                   sm_CMAC (sm_mgr)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000017C7 - 0000181F (0x59 bytes), align: 0
  Segment part 1.             Intra module refs:   ?S_DIV_MOD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             000017C7        LL_TimeToNextRfEvent (ll_sleep)
                                                   _itoa (OnBoard)
                                                   battMeasure (battservice)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llConvertCtrlProcTimeoutToEvent (ll_common)
                                                   llConvertLstoToEvent (ll_common)
                                                   llGetNextDataChan (ll_common)
                                                   llSetNextDataChan (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osalTimeUpdate (OSAL_ClockBLE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001820 - 00001822 (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR                 00001820        HalAdcRead (hal_adc)
                                                   llProcessChanMap (ll_common)
                                                   phyFindWlEntry (phy)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001823 - 0000182F (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?SS_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001830 - 00001832 (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 00001830        HalFlashWrite (hal_flash)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   battMeasure (battservice)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001833 - 0000183E (0xc bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000183F - 00001841 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL                  0000183F        ATT_BuildFindByTypeValueRsp (att_util)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   GATTServApp_FindAttr (gattservapp)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_InitServer (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HalFlashRead (hal_flash)
                                                   L2CAP_Init (l2cap_task)
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   PHY_AddWlEntry (phy)
                                                   PHY_ClearBlacklistIndex (phy)
                                                   PHY_SetBlacklistIndex (phy)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gattFindServerInfo (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   l2capAllocChannel (l2cap_util)
                                                   l2capFindLocalId (l2cap_util)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_snv_write (osal_snv)
                                                   phyFindWlEntry (phy)
                                                   smSavePairInfo (sm_pairing)
                                                   smUint8ToAuthReq (sm_mgr)
                                                   smpParsePairingReq (smp)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001842 - 00001844 (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_REW              00001842 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001845 - 00001851 (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?S_SHL
                                                   ?S_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001852 - 00001867 (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          00001852        ATT_CompareUUID (att_util)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_LE_AddWhiteListCmd (hci)
                                                   HCI_LE_ClearWhiteListCmd (hci)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetAdvDataCmd (hci)
                                                   HCI_LE_SetAdvEnableCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_LE_SetRandomAddressCmd (hci)
                                                   HCI_LE_SetScanRspDataCmd (hci)
                                                   HCI_ReadBDADDRCmd (hci)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedUpdate (hal_led)
                                                   HalSensorReadReg (hal_sensor)
                                                   HalUARTInitDMA (hal_uart)
                                                   L2CAP_HostNumCompletedPkts (l2cap_if)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback (hci)
                                                   LL_EXT_SetRxGainCback (hci)
                                                   LL_EXT_SetTxPowerCback (hci)
                                                   LL_RandCback (hci)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   Onboard_rand (OnBoard)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTInit (SimpleBLESerialUart)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   bdAddr2Str (simpleBLEPeripheral)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   hex2Str (simpleBLEPeripheral)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   llFindTxPowerSettings (ll_common)
                                                   llGetCurrentTime (ll_timer2)
                                                   llProcessPostRfOps (ll_common)
                                                   llProcessTxData (ll_common)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_snv_write (osal_snv)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   set_code_name (Simplepasscode)
                                                   set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessPairingReq (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSendSMMsg (smp)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001868 - 00001881 (0x1a bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        00001868        ?Subroutine0 (Simplepasscode)
                                                   ?Subroutine0 (gapbondmgr)
                                                   ?Subroutine0 (peripheral)
                                                   ?Subroutine1 (gapbondmgr)
                                                   ?Subroutine1 (osal_snv)
                                                   ?Subroutine2 (gapbondmgr)
                                                   ?Subroutine3 (hal_lcd)
                                                   ?Subroutine3 (osal_snv)
                                                   ?Subroutine5 (gapbondmgr)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   Batt_AddService (battservice)
                                                   DevInfo_AddService (devinfoservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_AddService (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GGS_AddService (gapgattserver)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedUpdate (hal_led)
                                                   HalSensorReadReg (hal_sensor)
                                                   HalUARTInitDMA (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_HostNumCompletedPkts (l2cap_if)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_RandCback (hci)
                                                   LL_SetAdvData (ll)
                                                   LL_SetScanRspData (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   Onboard_rand (OnBoard)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTInit (SimpleBLESerialUart)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   Segment part 118 (gattservapp)
                                                   Segment part 124 (hci)
                                                   Segment part 130 (hci)
                                                   Segment part 145 (hci)
                                                   Segment part 19 (sm_mgr)
                                                   Segment part 22 (l2cap_if)
                                                   Segment part 25 (osal_snv)
                                                   Segment part 32 (ll_timer2)
                                                   Segment part 34 (att_server)
                                                   Segment part 36 (sm_pairing)
                                                   Segment part 46 (sm_mgr)
                                                   Segment part 47 (sm_mgr)
                                                   Segment part 53 (sm_mgr)
                                                   Segment part 54 (ll_enc)
                                                   Segment part 60 (att_util)
                                                   Segment part 62 (ll_enc)
                                                   Segment part 67 (gattservapp)
                                                   Segment part 69 (att_util)
                                                   Segment part 75 (simpleBLEPeripheral)
                                                   Segment part 81 (att_util)
                                                   Segment part 82 (gatt_server)
                                                   Segment part 84 (att_util)
                                                   Segment part 95 (sm_pairing)
                                                   Segment part 96 (gattservapp)
                                                   Segment part 96 (sm_pairing)
                                                   Segment part 97 (att_util)
                                                   SimpleProfile_AddService (simpleGATTprofile)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   battReadAttrCB (battservice)
                                                   battWriteAttrCB (battservice)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llProcessTxData (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llWriteTxData (ll_common)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   set_code_name (Simplepasscode)
                                                   set_de_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smEncrypt (sm_mgr)
                                                   smEndPairing (sm_pairing)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)
                                                   smStartRspTimer (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001882 - 0000189C (0x1b bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     00001882        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000189D - 000018A6 (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         0000189D        ATT_CompareUUID (att_util)
                                                   ATT_ParseExchangeMTUReq (att_util)
                                                   ATT_ParseExecuteWriteReq (att_util)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParseFindInfoReq (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadBlobReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseReadMultiReq (att_util)
                                                   ATT_ParseReadReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_SecParamsInit (gap_configmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GATTServApp_FindAttr (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATTServApp_WriteCharCfg (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_ReadBDADDRCmd (hci)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalSPIRead (SimpleBLESPIFlash)
                                                   HalSPIWrite (SimpleBLESPIFlash)
                                                   L2CAP_HostNumCompletedPkts (l2cap_if)
                                                   L2CAP_ParseParamUpdateReq (l2cap_util)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback (hci)
                                                   LL_EXT_SetRxGainCback (hci)
                                                   LL_EXT_SetTxPowerCback (hci)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_RandCback (hci)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_SetAdvParam (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTInit (SimpleBLESerialUart)
                                                   Segment part 30 (ll_timer2)
                                                   Segment part 46 (sm_mgr)
                                                   Segment part 95 (sm_pairing)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   battReadAttrCB (battservice)
                                                   battWriteAttrCB (battservice)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capParseCmdReject (l2cap_util)
                                                   l2capParseParamUpdateRsp (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessTxData (ll_common)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llWriteTxData (ll_common)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_memcmp (OSAL)
                                                   osal_memcpy (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_revmemcpy (OSAL)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   set_code_name (Simplepasscode)
                                                   set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessPairingReq (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   xor_128 (sm_mgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CALL_IND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000018A7 - 000018A8 (0x2 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CALL_IND               000018A7        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   HalKeyPoll (hal_key)
                                                   HalUARTPollDMA (hal_uart)
                                                   LL_ProcessEvent (ll)
                                                   attSendMsg (att_util)
                                                   battMeasure (battservice)
                                                   battWriteAttrCB (battservice)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   l2capSendCmd (l2cap_util)
                                                   linkDB_PerformFunc (linkdb)
                                                   llScheduleTask (ll_scheduler)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_run_system (OSAL)
                                                   reportStatusChange (linkdb)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smNextPairingState (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessPairingReq (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000018A9 - 00001914 (0x6c bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_ENTER_XDATA     000018A9        ATT_BuildErrorRsp (att_util)
                                                   ATT_BuildFindByTypeValueRsp (att_util)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ErrorRsp (att_server)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_ExecuteWriteRsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_HandleValueInd (att_server)
                                                   ATT_HandleValueNoti (att_server)
                                                   ATT_ParseExchangeMTUReq (att_util)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParseFindInfoReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadBlobReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseReadMultiReq (att_util)
                                                   ATT_ParseReadReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_PrepareWriteRsp (att_server)
                                                   ATT_ReadBlobRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   ATT_ReadMultiRsp (att_server)
                                                   ATT_ReadRsp (att_server)
                                                   ATT_WriteRsp (att_server)
                                                   Batt_AddService (battservice)
                                                   DevInfo_AddService (devinfoservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   DisplayByte_5x7 (hal_lcd)
                                                   GAPBondMgr_Init (gapbondmgr)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_Init (gap_task)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_ParamsInit (gap_configmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SecParamsInit (gap_configmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_AddService (gattservapp)
                                                   GATTServApp_FindAttr (gattservapp)
                                                   GATTServApp_Init (gattservapp)
                                                   GATTServApp_InitCharCfg (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_ReadCharCfg (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   GATTServApp_SendServiceChangedInd (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATTServApp_WriteCharCfg (gattservapp)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Init (gatt_task)
                                                   GATT_InitServer (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ProcessEvent (gatt_task)
                                                   GATT_RegisterService (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GATT_VerifyReadPermissions (gatt_server)
                                                   GATT_VerifyWritePermissions (gatt_server)
                                                   GGS_AddService (gapgattserver)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_DisconnectCmd (hci)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_Init (hci_tl)
                                                   HCI_LE_AddWhiteListCmd (hci)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_SetAdvDataCmd (hci)
                                                   HCI_LE_SetAdvEnableCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_LE_SetScanRspDataCmd (hci)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_ProcessEvent (hci_tl)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HalAdcRead (hal_adc)
                                                   HalDS1307ReadTimeData (hal_ds1307)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalI2CRead (hal_i2c)
                                                   HalI2CWrite (hal_i2c)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalKeyRead (hal_key)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLcd_HW_Clear (hal_lcd)
                                                   HalLcd_HW_WriteChar (hal_lcd)
                                                   HalLcd_HW_WriteLine (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalSPIRead (SimpleBLESPIFlash)
                                                   HalSPIWrite (SimpleBLESPIFlash)
                                                   HalSensorReadReg (hal_sensor)
                                                   HalUARTBusyDMA (hal_uart)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTPollDMA (hal_uart)
                                                   HalUARTRead (hal_uart)
                                                   HalUARTReadDMA (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   Hal_UART_RxBufLen (hal_uart)
                                                   InitBoard (OnBoard)
                                                   L2CAP_BuildCmdReject (l2cap_util)
                                                   L2CAP_CmdReject (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   L2CAP_Init (l2cap_task)
                                                   L2CAP_ParseParamUpdateReq (l2cap_util)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   L2CAP_SendData (l2cap_if)
                                                   L2CAP_bm_alloc (l2cap_util)
                                                   LL_AddWhiteListDevice (ll)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_Disconnect (ll)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_ENC_ReverseBytes (ll_enc)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_PseudoRand (ll)
                                                   LL_RX_bm_alloc (ll)
                                                   LL_Rand (ll)
                                                   LL_RandCback (hci)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_SetAdvControl (ll)
                                                   LL_SetAdvData (ll)
                                                   LL_SetAdvParam (ll)
                                                   LL_SetScanRspData (ll)
                                                   LL_TX_bm_alloc (ll)
                                                   LL_TxData (ll)
                                                   OnBoard_KeyCallback (OnBoard)
                                                   OnBoard_SendKeys (OnBoard)
                                                   PHY_AddWlEntry (phy)
                                                   PHY_ClearBlacklistIndex (phy)
                                                   PHY_SetBlacklistIndex (phy)
                                                   PHY_SetCRCInit (phy)
                                                   PHY_SetSyncWord (phy)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_Init (sm_task)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ProcessEvent (sm_task)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTRead (SimpleBLESerialUart)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   Segment part 69 (att_util)
                                                   Segment part 81 (att_util)
                                                   Segment part 84 (att_util)
                                                   Segment part 97 (att_util)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   SimpleProfile_AddService (simpleGATTprofile)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   atoi (Simplepasscode)
                                                   attSendMsg (att_util)
                                                   battMeasure (battservice)
                                                   battReadAttrCB (battservice)
                                                   battWriteAttrCB (battservice)
                                                   bdAddr2Str (simpleBLEPeripheral)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   disconnectNext (gap_linkmgr)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrBondTotal (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseAllBondings (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrFindCharCfgItem (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrInvertCharCfgItem (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapPeriProcessHCICmdCompleteEvt (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapReadBufSizeCmdStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapSetAdvParamsStatus (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvDataStatus (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattFindServerInfo (gatt_server)
                                                   gattGetServerStatus (gatt_server)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattProcessReadMultiReq (gatt_server)
                                                   gattProcessReadReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattProcessWriteReq (gatt_server)
                                                   gattServApp_FindAuthorizeAttrCB (gattservapp)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattServiceLastHandle (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   gattStopTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   halGetJoyKeyInput (hal_key)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   hex2Str (simpleBLEPeripheral)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capAllocChannel (l2cap_util)
                                                   l2capBuildParamUpdateReq (l2cap_util)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capFindLocalId (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capParseCmdReject (l2cap_util)
                                                   l2capParsePacket (l2cap_util)
                                                   l2capParseParamUpdateRsp (l2cap_util)
                                                   l2capParseSignalHdr (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   l2capStopTimer (l2cap_util)
                                                   leftshift_onebit (sm_mgr)
                                                   linkDB_Add (linkdb)
                                                   linkDB_Authen (linkdb)
                                                   linkDB_Register (linkdb)
                                                   linkDB_Remove (linkdb)
                                                   linkDB_State (linkdb)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocConnId (ll_common)
                                                   llAllocTask (ll_scheduler)
                                                   llConnCleanup (ll_common)
                                                   llConnTerminate (ll_common)
                                                   llConvertCtrlProcTimeoutToEvent (ll_common)
                                                   llConvertLstoToEvent (ll_common)
                                                   llDequeueCtrlPkt (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llEnqueueDataQ (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llMemCopySrc (ll_common)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessChanMap (ll_common)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSave_rxFIFO (ll_scheduler)
                                                   llSave_txFIFO (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupEncRsp (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llStartSlaveSetup (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerInit (osal_cbtimer)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_adjust_header (osal_bufmgr)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_clear_event (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_isbufset (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_memcpy (OSAL)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_enqueue_push (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_push (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_revmemcpy (OSAL)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   phyFindWlEntry (phy)
                                                   reportStatusChange (linkdb)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   set_code_name (Simplepasscode)
                                                   set_ddram_line_col (hal_lcd)
                                                   set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_HandleConnStatusCB (simpleGATTprofile)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smEncrypt (sm_mgr)
                                                   smEndPairing (sm_pairing)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandBuf (sm_mgr)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smLinkCheck (sm_pairing)
                                                   smPairingSendEncInfo (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendIdentityInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smPairingSendSingingInfo (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessPairingReq (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   smStartEncryption (sm_pairing)
                                                   smStartRspTimer (sm_mgr)
                                                   smUint8ToAuthReq (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   sm_xor (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildPairingReqRsp (smp)
                                                   smpBuildSecurityReq (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParsePairingReq (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   strcat (?strcat)
                                                   strcpy (?strcpy)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
                                                   xor_128 (sm_mgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001915 - 0000197A (0x66 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       00001915        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llGetNextDataChan (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llProcessTxData (ll_common)
                                                   llSetNextDataChan (ll_common)
                                                   llT2OVFC1_ISR (ll_isr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000197B - 000019C0 (0x46 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_LEAVE_XDATA     0000197B        ?Subroutine0 (OSAL_Timers)
                                                   ?Subroutine0 (OnBoard)
                                                   ?Subroutine0 (SimpleBLESPIFlash)
                                                   ?Subroutine0 (Simplepasscode)
                                                   ?Subroutine0 (battservice)
                                                   ?Subroutine0 (devinfoservice)
                                                   ?Subroutine0 (hal_ds1307)
                                                   ?Subroutine0 (hal_lcd)
                                                   ?Subroutine0 (hal_sensor)
                                                   ?Subroutine0 (hal_uart)
                                                   ?Subroutine0 (osal_bufmgr)
                                                   ?Subroutine0 (simpleGATTprofile)
                                                   ?Subroutine1 (hal_key)
                                                   ?Subroutine1 (hal_uart)
                                                   ?Subroutine1 (osal_snv)
                                                   ?Subroutine1 (simpleGATTprofile)
                                                   ?Subroutine2 (OSAL)
                                                   ?Subroutine2 (OSAL_Timers)
                                                   ?Subroutine2 (osal_snv)
                                                   ?Subroutine3 (OSAL)
                                                   ?Subroutine3 (OSAL_Timers)
                                                   ?Subroutine3 (hal_lcd)
                                                   ?Subroutine3 (osal_snv)
                                                   ?Subroutine4 (gapbondmgr)
                                                   ?Subroutine5 (gapbondmgr)
                                                   ?Subroutine6 (gapbondmgr)
                                                   ATT_BuildFindByTypeValueRsp (att_util)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   DisplayByte_5x7 (hal_lcd)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_DeviceInit (gap)
                                                   GAP_Init (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_Init (hci_tl)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_ProcessEvent (hci_tl)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HalAdcRead (hal_adc)
                                                   HalDS1307ReadTimeData (hal_ds1307)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalI2CRead (hal_i2c)
                                                   HalI2CWrite (hal_i2c)
                                                   HalKeyConfig (hal_key)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcd_HW_WriteLine (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalUARTReadDMA (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_SetAdvControl (ll)
                                                   LL_TxData (ll)
                                                   OnBoard_SendKeys (OnBoard)
                                                   PHY_AddWlEntry (phy)
                                                   SM_ProcessEvent (sm_task)
                                                   SM_StartPairing (sm_pairing)
                                                   SbpHalUARTRead (SimpleBLESerialUart)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   Segment part 11 (l2cap_task)
                                                   Segment part 11 (sm_mgr)
                                                   Segment part 112 (ll_common)
                                                   Segment part 117 (gapbondmgr)
                                                   Segment part 118 (gattservapp)
                                                   Segment part 12 (sm_rsppairing)
                                                   Segment part 120 (ll)
                                                   Segment part 123 (ll)
                                                   Segment part 124 (hci_event)
                                                   Segment part 125 (hci)
                                                   Segment part 13 (hci_event)
                                                   Segment part 131 (hci)
                                                   Segment part 14 (l2cap_task)
                                                   Segment part 145 (gattservapp)
                                                   Segment part 151 (gattservapp)
                                                   Segment part 16 (hci_event)
                                                   Segment part 16 (ll_scheduler)
                                                   Segment part 162 (att_util)
                                                   Segment part 17 (gatt_server)
                                                   Segment part 17 (gatt_task)
                                                   Segment part 17 (ll_slaveEndCauses)
                                                   Segment part 18 (l2cap_util)
                                                   Segment part 19 (ll_advEndCauses)
                                                   Segment part 20 (gap_task)
                                                   Segment part 20 (sm_mgr)
                                                   Segment part 21 (gap_linkmgr)
                                                   Segment part 22 (l2cap_util)
                                                   Segment part 222 (phy)
                                                   Segment part 23 (l2cap_if)
                                                   Segment part 23 (ll_enc)
                                                   Segment part 24 (gatt_task)
                                                   Segment part 24 (ll_scheduler)
                                                   Segment part 25 (gap_configmgr)
                                                   Segment part 25 (linkdb)
                                                   Segment part 26 (gattservapp)
                                                   Segment part 26 (osal_snv)
                                                   Segment part 29 (gatt_server)
                                                   Segment part 31 (l2cap_util)
                                                   Segment part 31 (sm_pairing)
                                                   Segment part 32 (att_util)
                                                   Segment part 32 (gap_configmgr)
                                                   Segment part 32 (gap_linkmgr)
                                                   Segment part 32 (sm_rsppairing)
                                                   Segment part 34 (gap_peridevmgr)
                                                   Segment part 34 (gatt_server)
                                                   Segment part 35 (att_server)
                                                   Segment part 37 (gapgattserver)
                                                   Segment part 37 (sm_pairing)
                                                   Segment part 38 (hci_event)
                                                   Segment part 45 (phy)
                                                   Segment part 46 (smp)
                                                   Segment part 47 (gap_configmgr)
                                                   Segment part 47 (gapgattserver)
                                                   Segment part 48 (gap_linkmgr)
                                                   Segment part 48 (gapbondmgr)
                                                   Segment part 48 (sm_mgr)
                                                   Segment part 49 (gattservapp)
                                                   Segment part 53 (sm_mgr)
                                                   Segment part 54 (gap_peridevmgr)
                                                   Segment part 55 (ll_enc)
                                                   Segment part 56 (peripheral)
                                                   Segment part 58 (gapbondmgr)
                                                   Segment part 58 (hci_event)
                                                   Segment part 58 (ll_common)
                                                   Segment part 59 (l2cap_util)
                                                   Segment part 60 (gap_peridevmgr)
                                                   Segment part 61 (att_util)
                                                   Segment part 61 (gap_linkmgr)
                                                   Segment part 62 (ll_enc)
                                                   Segment part 63 (OSAL)
                                                   Segment part 63 (ll_common)
                                                   Segment part 65 (sm_mgr)
                                                   Segment part 67 (gattservapp)
                                                   Segment part 71 (gatt_server)
                                                   Segment part 75 (simpleBLEPeripheral)
                                                   Segment part 76 (l2cap_util)
                                                   Segment part 81 (phy)
                                                   Segment part 83 (gatt_server)
                                                   Segment part 86 (att_util)
                                                   Segment part 86 (gattservapp)
                                                   Segment part 9 (att_util)
                                                   Segment part 9 (sm_task)
                                                   Segment part 91 (ll)
                                                   Segment part 95 (ll_common)
                                                   Segment part 97 (gattservapp)
                                                   Segment part 97 (sm_pairing)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   atoi (Simplepasscode)
                                                   battReadAttrCB (battservice)
                                                   battWriteAttrCB (battservice)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   disconnectNext (gap_linkmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessRxData (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capSendReq (l2cap_util)
                                                   leftshift_onebit (sm_mgr)
                                                   linkDB_Add (linkdb)
                                                   linkDB_Authen (linkdb)
                                                   linkDB_Register (linkdb)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llProcessChanMap (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerInit (osal_cbtimer)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   set_de_passkey (Simplepasscode)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_HandleConnStatusCB (simpleGATTprofile)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)
                                                   sm_c1 (sm_pairing)
                                                   smpBuildPairingReqRsp (smp)
                                                   smpBuildSecurityReq (smp)
                                                   smpParsePairingReq (smp)
                                                   strcat (?strcat)
                                                   strcpy (?strcpy)
                                                   writeWord (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000019C1 - 00001A00 (0x40 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       000019C1        LL_TimeToNextRfEvent (ll_sleep)
                                                   Segment part 16 (ll_sleep)
                                                   Segment part 167 (ll_common)
                                                   Segment part 86 (ll_timer2)
                                                   Segment part 90 (ll_timer2)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llProcessRxData (ll_common)
                                                   llT2OVFC1_ISR (ll_isr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_ENTER_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001A01 - 00001A5F (0x5f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_ENTER_XSP    00001A01        RTCInterruptIsr (SimpleRTCInterrupt)
                                                   halDmaIsr (hal_dma)
                                                   halKeyPort0Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   port0Isr (hal_uart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_LEAVE_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001A60 - 00001AB7 (0x58 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_LEAVE_XSP    00001A60        ?Subroutine2 (hal_key)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   halDmaIsr (hal_dma)
                                                   port0Isr (hal_uart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001AB8 - 00001ABB (0x4 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_FOUR     00001AB8        GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalLedUpdate (hal_led)
                                                   LL_ProcessEvent (ll)
                                                   LL_TxData (ll)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halSleep (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smStartRspTimer (sm_mgr)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001ABC - 00001ABF (0x4 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      00001ABC        ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ErrorRsp (att_server)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_ExecuteWriteRsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_HandleValueInd (att_server)
                                                   ATT_HandleValueNoti (att_server)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_PrepareWriteRsp (att_server)
                                                   ATT_ReadBlobRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   ATT_ReadMultiRsp (att_server)
                                                   ATT_ReadRsp (att_server)
                                                   ATT_WriteRsp (att_server)
                                                   Batt_AddService (battservice)
                                                   DevInfo_AddService (devinfoservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_AddService (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GGS_AddService (gapgattserver)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalUARTInitDMA (hal_uart)
                                                   L2CAP_CmdReject (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_RandCback (hci)
                                                   LL_SetAdvData (ll)
                                                   LL_SetScanRspData (ll)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 45 (sm_mgr)
                                                   Segment part 69 (att_util)
                                                   Segment part 81 (att_util)
                                                   Segment part 84 (att_util)
                                                   Segment part 92 (sm_pairing)
                                                   Segment part 95 (sm_pairing)
                                                   Segment part 97 (att_util)
                                                   SimpleProfile_AddService (simpleGATTprofile)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   battReadAttrCB (battservice)
                                                   battWriteAttrCB (battservice)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendReq (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llProcessTxData (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llWriteTxData (ll_common)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   set_code_name (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smEncrypt (sm_mgr)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smStartEncryption (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001AC0 - 00001AC1 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_ONE      00001AC0        ATT_ParsePacket (att_util)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_SendDataPkt (hci)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   LL_ProcessEvent (ll)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   llProcessRxData (ll_common)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   sm_c1 (sm_pairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001AC2 - 00001ACE (0xd bytes), align: 0
  Segment part 4.             Intra module refs:   ?PUSH_XSTACK_I_FOUR
                                                   ?PUSH_XSTACK_I_ONE
                                                   ?PUSH_XSTACK_I_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          00001AC2 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001ACF - 00001AD2 (0x4 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_FOUR    00001ACF        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_TxData (ll)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halSleep (hal_sleep)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001AD3 - 00001AD6 (0x4 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_TWO     00001AD3        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_Bond (gap_linkmgr)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   LL_ProcessEvent (ll)
                                                   LL_TxData (ll)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llScheduleTask (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   smEndPairing (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001AD7 - 00001AFF (0x29 bytes), align: 0
  Segment part 5.             Intra module refs:   ?PUSH_XSTACK8_X_FOUR
                                                   ?PUSH_XSTACK8_X_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X         00001AD7        smpResponderProcessIncoming (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001B00 - 00001B06 (0x7 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE        00001B00        GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   gapPeriProcessHCICmdCompleteEvt (gap_peridevmgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001B07 - 00001B44 (0x3e bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SWITCH_DENSE
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001B45 - 00001B45 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   ?US_SWITCH_DENSE

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001B46 - 00001B4F (0xa bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE       00001B46        GATTServApp_ReadAttr (gattservapp)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessOSALMsg (gap_task)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001B50 - 00001B90 (0x41 bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SWITCH_SPARSE
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE_LEAVE
                                   00001B82        ?US_JMP_IF_IN_RANGE (?US_JMP_IF_IN_RANGE)
                                                   ?US_JMP_IF_VALUE (?US_JMP_IF_VALUE)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001B91 - 00001B91 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   ?US_SWITCH_SPARSE

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001B92 - 00001BD0 (0x3f bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_IN_RANGE     00001B92        ?US_SWITCH_SPARSE_LEAVE (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001BD1 - 00001BFB (0x2b bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_VALUE        00001BD1        ?US_SWITCH_SPARSE_LEAVE (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memset

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB65 - 0001CB90 (0x2c bytes), align: 0
  Segment part 6.             Intra module refs:   memset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  0001CB65 
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014F4 - 000014F9 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset::?relay          000014F4        HalUARTInitDMA (hal_uart)
                                                   osal_memset (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcat

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB2F - 0001CB64 (0x36 bytes), align: 0
  Segment part 6.             Intra module refs:   strcat::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcat                  0001CB2F 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014FA - 000014FF (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcat::?relay          000014FA        _ltoa (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcpy

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB91 - 0001CBB8 (0x28 bytes), align: 0
  Segment part 6.             Intra module refs:   strcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy                  0001CB91 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001500 - 00001505 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy::?relay          00001500        _ltoa (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CBB9 - 0001CBD6 (0x1e bytes), align: 0
  Segment part 6.             Intra module refs:   strlen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  0001CBB9 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001506 - 0000150B (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen::?relay          00001506        _ltoa (OSAL)
                                                   osal_strlen (OSAL)




                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000000
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
  02    PHY_SetRfFreq
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
  02    PHY_GetEndCause
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
  02    PHY_SetEndConnection
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
  02    llDisableT2E1
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
  02    llDisableT2IntsEvts
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
  02    llDisableT2Ints
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
  03      osal_bm_free
          | Stack used (prev) :  0000000A 00000002
          | + function block  :  00000014 00000000
  06            LL_ENC_LoadEmptyIV
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000002B 00000002
  05          LL_ENC_GenerateMIC
              | Stack used (prev) :  0000002B 00000002
              | + function block  :  00000076 00000000
  05          LL_ENC_EncryptMsg
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000044 00000001
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
  03      llWriteTxData
          | Stack used (prev) :  000000DB 00000002
          | + function block  :  00000029 00000000
  06            osal_set_event
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000017 00000000
                |  Already listed
  06            osal_msg_push
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000012 00000000
  06            osal_msg_enqueue
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000012 00000000
  07              osal_mem_free
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  0000000A 00000002
                  |  Already listed
  06            osal_msg_deallocate
                | Stack used (prev) :  0000000A 00000002
                | + function block  :  00000009 00000004
  06            osal_msg_deallocate
                | Stack used (prev) :  0000000A 00000002
                | + function block  :  00000009 00000004
                |  Already listed
  05          osal_msg_enqueue_push
              | Stack used (prev) :  00000017 00000006
              | + function block  :  0000001B 00000000
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
  03      HCI_NumOfCompletedPacketsEvent
          | Stack used (prev) :  00000044 00000006
          | + function block  :  00000024 00000000
  02    llProcessTxData
        | Stack used (prev) :  00000104 00000006
        | + function block  :  00000022 00000000
  03      osal_bm_free
          | Stack used (prev) :  0000000A 00000002
          | + function block  :  00000014 00000000
          |  Already listed
  03      PHY_DeallocateRxFifo
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000000 00000000
  03      PHY_RetryRxFifo
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000000 00000000
  04        LL_ENC_GenDeviceIV
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000000 00000003
  04        LL_ENC_GenDeviceSKD
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000000 00000003
  04        LL_ENC_ReverseBytes
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000001
  04        llMemCopySrc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000009 00000001
  06            ll24BitTimeDelta
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000017 00000000
  06            ll24BitTimeCompare
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000017 00000000
  06            llGetCurrentTime
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000004 00000003
  07              LL_ENC_MoveData
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000002 00000002
  06            llRestoreConnState
                | Stack used (prev) :  00000002 00000002
                | + function block  :  0000003A 00000000
  06            llRestoreConnState
                | Stack used (prev) :  00000002 00000002
                | + function block  :  0000003A 00000000
                |  Already listed
  07              PHY_CommitRxFifo
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000000
  07              PHY_RetryRxFifo
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000000
                  |  Already listed
  06            llSave_rxFIFO
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000002E 00000001
  06            llSave_rxFIFO
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000002E 00000001
                |  Already listed
  07              PHY_RetryTxFifo
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000000
  06            llSave_txFIFO
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000002E 00000001
  06            llSave_txFIFO
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000002E 00000001
                |  Already listed
  07              ll24BitTimeCompare
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000017 00000000
                  |  Already listed
  06            llFindNextSecTask
                | Stack used (prev) :  00000017 00000000
                | + function block  :  00000042 00000000
  06            llFindNextSecTask
                | Stack used (prev) :  00000017 00000000
                | + function block  :  00000042 00000000
                |  Already listed
  06            llFindNextSecTask
                | Stack used (prev) :  00000017 00000000
                | + function block  :  00000042 00000000
                |  Already listed
  09                  osalFindTimer
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000010 00000002
  09                  osal_mem_alloc
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000018 00000000
                      |  Already listed
  08                osalAddTimer
                    | Stack used (prev) :  00000018 00000002
                    | + function block  :  00000032 00000000
  07              osal_start_timerEx
                  | Stack used (prev) :  0000004A 00000002
                  | + function block  :  00000024 00000000
  09                  osal_mem_free
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  0000000A 00000002
                      |  Already listed
  09                  osal_set_event
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000017 00000000
                      |  Already listed
  08                osalTimerUpdate
                    | Stack used (prev) :  00000017 00000002
                    | + function block  :  00000046 00000000
  08                ll_McuPrecisionCount
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000002 00000003
  07              osalTimeUpdate
                  | Stack used (prev) :  0000005D 00000003
                  | + function block  :  0000001C 00000000
  07              PHY_Reset
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000002
  07              ll24BitTimeDelta
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000017 00000000
                  |  Already listed
  07              llGetCurrentTime
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000004 00000003
                  |  Already listed
  07              llSetT2OVFC2Event2
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000010 00000000
  07              llSetT2LongC1Event1
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000006 00000002
  07              llSetT2LongC1Timeout
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000006 00000002
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
                |  Already listed
  06            LL_ENC_MoveData
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000002 00000002
                |  Already listed
  06            llGetNextConn
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000000 00000002
  06            llProcessTxData
                | Stack used (prev) :  00000104 00000006
                | + function block  :  00000022 00000000
                |  Already listed
  07              PHY_ConfigureAppendRfStatus
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000002
  07              PHY_SetSyncWord
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000010 00000000
  07              PHY_SetAdvChans
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000002
  07              PHY_SetCRCInit
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000010 00000000
  07              PHY_SetOwnAddr
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000002
  07              llSetupScannableAdvEvt
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000009 00000000
  07              llSetupNonConnectableAdvEvt
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000009 00000000
  07              llSetupUndirectedAdvEvt
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000009 00000000
  08                PHY_SetPeerAddr
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000000 00000002
  07              llSetupDirectedAdvEvt
                  | Stack used (prev) :  00000000 00000002
                  | + function block  :  00000020 00000000
  06            llSetupAdv
                | Stack used (prev) :  00000020 00000002
                | + function block  :  00000000 00000004
  09                  PHY_ConfigWhitener
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000000 00000002
  08                llRfInit
                    | Stack used (prev) :  00000000 00000002
                    | + function block  :  00000000 00000004
  07              LL_ENC_GenerateTrueRandNum
                  | Stack used (prev) :  00000000 00000006
                  | + function block  :  00000016 00000000
  07              llExtendRfRange
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000008 00000002
  10                    osal_msg_send
                        | Stack used (prev) :  00000032 00000006
                        | + function block  :  00000012 00000000
                        |  Already listed
  10                    osal_msg_allocate
                        | Stack used (prev) :  00000018 00000000
                        | + function block  :  00000014 00000000
                        |  Already listed
  10                    osal_memcpy
                        | Stack used (prev) :  00000000 00000000
                        | + function block  :  00000019 00000001
  09                  HCI_SendCommandCompleteEvent
                      | Stack used (prev) :  00000044 00000006
                      | + function block  :  00000030 00000000
  08                HCI_VendorSpecifcCommandCompleteEvent
                    | Stack used (prev) :  00000074 00000006
                    | + function block  :  00000018 00000000
  07              LL_EXT_ExtendRfRangeCback
                  | Stack used (prev) :  0000008C 00000006
                  | + function block  :  00000006 00000004
  08                HCI_VendorSpecifcCommandCompleteEvent
                    | Stack used (prev) :  00000074 00000006
                    | + function block  :  00000018 00000000
                    |  Already listed
  07              LL_EXT_SetTxPowerCback
                  | Stack used (prev) :  0000008C 00000006
                  | + function block  :  00000006 00000004
  08                HCI_VendorSpecifcCommandCompleteEvent
                    | Stack used (prev) :  00000074 00000006
                    | + function block  :  00000018 00000000
                    |  Already listed
  07              LL_EXT_SetRxGainCback
                  | Stack used (prev) :  0000008C 00000006
                  | + function block  :  00000006 00000004
  08                osal_memcpy
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000019 00000001
                    |  Already listed
  09                  osal_msg_send
                      | Stack used (prev) :  00000032 00000006
                      | + function block  :  00000012 00000000
                      |  Already listed
  09                  osal_msg_allocate
                      | Stack used (prev) :  00000018 00000000
                      | + function block  :  00000014 00000000
                      |  Already listed
  09                  osal_memcpy
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000019 00000001
                      |  Already listed
  09                  HCI_SendCommandCompleteEvent
                      | Stack used (prev) :  00000044 00000006
                      | + function block  :  00000030 00000000
                      |  Already listed
  08                HCI_CommandCompleteEvent
                    | Stack used (prev) :  00000074 00000006
                    | + function block  :  0000002B 00000000
  07              LL_RandCback
                  | Stack used (prev) :  0000009F 00000006
                  | + function block  :  00000026 00000000
  06            llProcessPostRfOps
                | Stack used (prev) :  000000C5 0000000A
                | + function block  :  00000010 00000004
  05          llScheduler
              | Stack used (prev) :  00000126 0000000E
              | + function block  :  00000034 00000000
  06            osal_bm_free
                | Stack used (prev) :  0000000A 00000002
                | + function block  :  00000014 00000000
                |  Already listed
  06            PHY_SetEndConnection
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000000 00000002
                |  Already listed
  06            llFreeTask
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000000 00000002
  05          llConnCleanup
              | Stack used (prev) :  0000001E 00000002
              | + function block  :  00000025 00000000
  06            osal_msg_send
                | Stack used (prev) :  00000032 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  05          LL_DisconnectCback
              | Stack used (prev) :  00000044 00000006
              | + function block  :  00000018 00000000
  04        llConnTerminate
            | Stack used (prev) :  0000015A 0000000E
            | + function block  :  00000012 00000000
  04        llEnqueueCtrlPkt
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000B 00000001
  03      llProcessSlaveControlPacket
          | Stack used (prev) :  0000016C 0000000E
          | + function block  :  00000028 00000000
  03      llScheduler
          | Stack used (prev) :  00000126 0000000E
          | + function block  :  00000034 00000000
          |  Already listed
  04        LL_ENC_GenerateMIC
            | Stack used (prev) :  0000002B 00000002
            | + function block  :  00000076 00000000
            |  Already listed
  04        LL_ENC_DecryptMsg
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000048 00000001
  03      LL_ENC_Decrypt
          | Stack used (prev) :  000000A1 00000002
          | + function block  :  00000042 00000000
  03      LL_ENC_MoveData
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000002 00000002
          |  Already listed
  03      llConnCleanup
          | Stack used (prev) :  0000001E 00000002
          | + function block  :  00000025 00000000
          |  Already listed
  03      llConnCleanup
          | Stack used (prev) :  0000001E 00000002
          | + function block  :  00000025 00000000
          |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  04        osal_bm_alloc
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000018 00000000
  03      LL_RX_bm_alloc
          | Stack used (prev) :  00000030 00000000
          | + function block  :  00000014 00000000
  03      LL_DisconnectCback
          | Stack used (prev) :  00000044 00000006
          | + function block  :  00000018 00000000
          |  Already listed
  04        osal_bm_free
            | Stack used (prev) :  0000000A 00000002
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        LL_CtrlToHostFlowControl
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000000 00000002
  03      LL_RxDataCompleteCback
          | Stack used (prev) :  00000044 00000006
          | + function block  :  0000001E 00000000
  02    llProcessRxData
        | Stack used (prev) :  00000194 0000000E
        | + function block  :  00000022 00000000
  02    llProcessPostRfOps
        | Stack used (prev) :  000000C5 0000000A
        | + function block  :  00000010 00000004
        |  Already listed
  01  RF_NormalIsr
      | Stack used (prev) :  000001B6 0000000E
      | + function block  :  00000000 00000020
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000001B6 0000002E


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000001B6 0000002E
  01  RF_ErrorIsr
      | Stack used (prev) :  000001B6 0000002E
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000001B6 00000032


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000001B6 00000032
  04        osalDeleteTimer
            | Stack used (prev) :  000001B6 00000032
            | + function block  :  0000000C 00000002
  04        osalFindTimer
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000010 00000002
            |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000001C2 00000034
          | + function block  :  00000018 00000000
  03      osal_clear_event
          | Stack used (prev) :  000001B6 00000032
          | + function block  :  00000017 00000000
  03      llSetT2C1Event1
          | Stack used (prev) :  000001B6 00000032
          | + function block  :  00000002 00000002
  03      llGetCurrentTask
          | Stack used (prev) :  000001B6 00000032
          | + function block  :  00000000 00000002
  03      HaltMcuUsingPhyFlag
          | Stack used (prev) :  000001B6 00000032
          | + function block  :  00000000 00000000
  02    llT2OVFC1_ISR
        | Stack used (prev) :  000001DA 00000034
        | + function block  :  00000010 00000000
  01  T2_Isr
      | Stack used (prev) :  000001EA 00000034
      | + function block  :  00000000 00000012
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000001EA 00000046


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000001EA 00000046
  05          i2cMstStrt
              | Stack used (prev) :  000001EA 00000046
              | + function block  :  0000000A 00000002
  04        HalI2CWrite
            | Stack used (prev) :  000001F4 00000048
            | + function block  :  00000012 00000000
  05          i2cMstStrt
              | Stack used (prev) :  000001EA 00000046
              | + function block  :  0000000A 00000002
              |  Already listed
  04        HalI2CRead
            | Stack used (prev) :  000001F4 00000048
            | + function block  :  00000014 00000000
  03      HalSensorReadReg
          | Stack used (prev) :  00000208 00000048
          | + function block  :  00000021 00000000
  03      HalI2CInit
          | Stack used (prev) :  000001EA 00000046
          | + function block  :  00000000 00000002
  08                HalLcd_HW_Write
                    | Stack used (prev) :  000001EA 00000046
                    | + function block  :  0000000D 00000000
  08                HalLcd_HW_Write
                    | Stack used (prev) :  000001EA 00000046
                    | + function block  :  0000000D 00000000
                    |  Already listed
  08                HalLcd_HW_Write
                    | Stack used (prev) :  000001EA 00000046
                    | + function block  :  0000000D 00000000
                    |  Already listed
  09                  HalLcd_HW_WaitUs
                      | Stack used (prev) :  000001EA 00000046
                      | + function block  :  00000009 00000000
  09                  HalLcd_HW_WaitUs
                      | Stack used (prev) :  000001EA 00000046
                      | + function block  :  00000009 00000000
                      |  Already listed
  09                  HalLcd_HW_WaitUs
                      | Stack used (prev) :  000001EA 00000046
                      | + function block  :  00000009 00000000
                      |  Already listed
  09                  HalLcd_HW_Control
                      | Stack used (prev) :  000001EA 00000046
                      | + function block  :  00000009 00000000
  09                  HalLcd_HW_Control
                      | Stack used (prev) :  000001EA 00000046
                      | + function block  :  00000009 00000000
                      |  Already listed
  09                  HalLcd_HW_Control
                      | Stack used (prev) :  000001EA 00000046
                      | + function block  :  00000009 00000000
                      |  Already listed
  08                set_ddram_line_col
                    | Stack used (prev) :  000001F3 00000046
                    | + function block  :  0000001F 00000000
  08                set_ddram_line_col
                    | Stack used (prev) :  000001F3 00000046
                    | + function block  :  0000001F 00000000
                    |  Already listed
  07              DisplayByte_5x7
                  | Stack used (prev) :  00000212 00000046
                  | + function block  :  00000023 00000000
  06            HalLcd_HW_WriteChar
                | Stack used (prev) :  00000235 00000046
                | + function block  :  0000001D 00000000
  06            HalLcd_HW_WriteChar
                | Stack used (prev) :  00000235 00000046
                | + function block  :  0000001D 00000000
                |  Already listed
  07              strlen
                  | Stack used (prev) :  000001EA 00000046
                  | + function block  :  00000000 00000002
  06            osal_strlen
                | Stack used (prev) :  000001EA 00000048
                | + function block  :  00000000 00000004
  05          HalLcd_HW_WriteLine
              | Stack used (prev) :  00000252 0000004C
              | + function block  :  00000028 00000000
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          osal_strlen
              | Stack used (prev) :  000001EA 00000048
              | + function block  :  00000000 00000004
              |  Already listed
  04        Recursive system consisting of
             | HalLcdWriteString
            | Stack used (prev) :  0000027A 0000004C
            | + function block  :  00000051 00000000
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      showDate
          | Stack used (prev) :  000002CB 0000004C
          | + function block  :  0000005F 00000000
  02    HalDS1307ReadTimeData
        | Stack used (prev) :  0000032A 0000004C
        | + function block  :  00000012 00000000
  01  RTCInterruptIsr
      | Stack used (prev) :  0000033C 0000004C
      | + function block  :  00000038 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000374 0000004C


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000374 0000004C
  02    HalUARTIsrDMA
        | Stack used (prev) :  00000374 0000004C
        | + function block  :  00000000 00000000
  01  halDmaIsr
      | Stack used (prev) :  00000374 0000004C
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000390 0000004C


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000390 0000004C
  03      osal_start_timerEx
          | Stack used (prev) :  0000004A 00000002
          | + function block  :  00000024 00000000
          |  Already listed
  02    halProcessKeyInterrupt
        | Stack used (prev) :  00000390 0000004C
        | + function block  :  00000012 00000002
  01  halKeyPort0Isr
      | Stack used (prev) :  000003A2 0000004E
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000003BE 0000004E


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000003BE 0000004E
  02    halProcessKeyInterrupt
        | Stack used (prev) :  00000390 0000004C
        | + function block  :  00000012 00000002
        |  Already listed
  01  halKeyPort2Isr
      | Stack used (prev) :  000003BE 0000004E
      | + function block  :  0000000E 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000003CC 0000004E


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000003CC 0000004E
  01  halSleepTimerIsr
      | Stack used (prev) :  000003CC 0000004E
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000003CC 00000052


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000003CC 00000052
  02    osal_pwrmgr_task_state
        | Stack used (prev) :  000003CC 00000052
        | + function block  :  0000000A 00000000
  01  port0Isr
      | Stack used (prev) :  000003D6 00000052
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000003F2 00000052


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 00000052
  01  halUart0TxIsr
      | Stack used (prev) :  000003F2 00000052
      | + function block  :  00000000 00000008
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000003F2 0000005A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  02    gapWriteAdvDataStatus
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000001
  04        osalAddTimer
            | Stack used (prev) :  00000018 00000002
            | + function block  :  00000032 00000000
            |  Already listed
  03      osal_start_reload_timer
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000016 00000000
  03      osal_start_timerEx
          | Stack used (prev) :  0000004A 00000002
          | + function block  :  00000024 00000000
          |  Already listed
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  05          gapValidADType
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000012 00000000
  04        gapFindADType
            | Stack used (prev) :  00000404 0000005A
            | + function block  :  00000026 00000001
  03      isLimitedDiscoverableMode
          | Stack used (prev) :  0000042A 0000005B
          | + function block  :  0000002E 00000000
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  03      gapFreeAdvertState
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        gapFreeAdvertState
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      gapSendMakeDiscEvent
          | Stack used (prev) :  00000406 0000005C
          | + function block  :  0000002C 00000000
  03      GAP_GetParamValue
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
  02    gapWriteAdvEnableStatus
        | Stack used (prev) :  00000458 0000005C
        | + function block  :  00000032 00000000
  05          osal_stop_timerEx
              | Stack used (prev) :  000001C2 00000034
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_pwrmgr_task_state
              | Stack used (prev) :  000003CC 00000052
              | + function block  :  0000000A 00000000
              |  Already listed
  05          osal_clear_event
              | Stack used (prev) :  000001B6 00000032
              | + function block  :  00000017 00000000
              |  Already listed
  05          llGetCurrentTime
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000004 00000003
              |  Already listed
  05          llDisableT2IntsEvts
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000000 00000000
              |  Already listed
  05          llGetNumTasks
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000000 00000002
  05          llGetActiveTasks
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000000 00000002
  05          llFreeTask
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000000 00000002
              |  Already listed
  06            llGetCurrentTime
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000004 00000003
                |  Already listed
  05          llAllocTask
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000001
  05          llScheduler
              | Stack used (prev) :  00000126 0000000E
              | + function block  :  00000034 00000000
              |  Already listed
  05          llSetupAdv
              | Stack used (prev) :  00000020 00000002
              | + function block  :  00000000 00000004
              |  Already listed
  04        LL_SetAdvControl
            | Stack used (prev) :  000003FC 0000005C
            | + function block  :  00000020 00000000
  04        HCI_CommandCompleteEvent
            | Stack used (prev) :  00000074 00000006
            | + function block  :  0000002B 00000000
            |  Already listed
  03      HCI_LE_SetAdvEnableCmd
          | Stack used (prev) :  0000041C 0000005C
          | + function block  :  00000014 00000000
  03      gapSendMakeDiscEvent
          | Stack used (prev) :  00000406 0000005C
          | + function block  :  0000002C 00000000
          |  Already listed
  02    gapSetAdvParamsStatus
        | Stack used (prev) :  00000432 0000005C
        | + function block  :  0000001C 00000000
  01  gapPeriProcessHCICmdCompleteEvt
      | Stack used (prev) :  0000048A 0000005C
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000049E 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  04        PHY_SetAdvWlPolicy
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000000 00000002
  03      LL_SetAdvParam
          | Stack used (prev) :  000003F2 0000005C
          | + function block  :  0000001A 00000000
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  00000074 00000006
          | + function block  :  0000002B 00000000
          |  Already listed
  02    HCI_LE_SetAdvParamCmd
        | Stack used (prev) :  0000040C 0000005C
        | + function block  :  0000002C 00000000
  03      linkDB_NumActive
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000002
  02    GAP_NumActiveConnections
        | Stack used (prev) :  000003F2 0000005C
        | + function block  :  00000000 00000004
  02    isLimitedDiscoverableMode
        | Stack used (prev) :  0000042A 0000005B
        | + function block  :  0000002E 00000000
        |  Already listed
  02    gapAddAddrAdj
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000A 00000002
  02    GAP_GetParamValue
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000002
        |  Already listed
  01  gapSetAdvParams
      | Stack used (prev) :  00000458 00000060
      | + function block  :  00000028 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000480 00000060


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_stop_timerEx
        | Stack used (prev) :  000001C2 00000034
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_start_timerEx
        | Stack used (prev) :  0000004A 00000002
        | + function block  :  00000024 00000000
        |  Already listed
  02    gapFreeAdvertState
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000002
        |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000001C2 00000034
          | + function block  :  00000018 00000000
          |  Already listed
  03      HCI_LE_SetAdvEnableCmd
          | Stack used (prev) :  0000041C 0000005C
          | + function block  :  00000014 00000000
          |  Already listed
  02    GAP_EndDiscoverable
        | Stack used (prev) :  00000430 0000005C
        | + function block  :  0000001E 00000000
  01  gapProcessAdvertisingEvt
      | Stack used (prev) :  0000044E 0000005C
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000466 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    osal_strlen
        | Stack used (prev) :  000001EA 00000048
        | + function block  :  00000000 00000004
        |  Already listed
  01  ggs_ReadAttrCB
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  0000001A 00000001
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000040C 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    osal_strlen
        | Stack used (prev) :  000001EA 00000048
        | + function block  :  00000000 00000004
        |  Already listed
  01  ggs_WriteAttrCB
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  00000018 00000001
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000040A 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  04        osal_stop_timerEx
            | Stack used (prev) :  000001C2 00000034
            | + function block  :  00000018 00000000
            |  Already listed
  03      osal_CbTimerStop
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000B 00000000
  02    gattStopTimer
        | Stack used (prev) :  000003FD 0000005A
        | + function block  :  00000012 00000000
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  04        memset
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000002 00000002
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    gattNotifyEvent
        | Stack used (prev) :  0000040C 0000005C
        | + function block  :  00000022 00000000
  02    gattFindServerInfo
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000037 00000000
  04        osal_bm_free
            | Stack used (prev) :  0000000A 00000002
            | + function block  :  00000014 00000000
            |  Already listed
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_revmemcpy
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000B 00000001
  06            osal_mem_free
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000000A 00000002
                |  Already listed
  06            osal_mem_alloc
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  06            xor_128
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000037 00000001
  06            xor_128
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000037 00000001
                |  Already listed
  06            xor_128
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000037 00000001
                |  Already listed
  06            xor_128
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000037 00000001
                |  Already listed
  07              osal_mem_free
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  0000000A 00000002
                  |  Already listed
  07              osal_mem_alloc
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_memset
                  | Stack used (prev) :  000003F4 0000005C
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              leftshift_onebit
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000001D 00000001
  07              leftshift_onebit
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000001D 00000001
                  |  Already listed
  07              leftshift_onebit
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000001D 00000001
                  |  Already listed
  07              leftshift_onebit
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000001D 00000001
                  |  Already listed
  07              xor_128
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000037 00000001
                  |  Already listed
  07              xor_128
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000037 00000001
                  |  Already listed
  08                LL_ENC_AES128_Encrypt
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  00000002 00000002
  07              LL_Encrypt
                  | Stack used (prev) :  000003F4 0000005C
                  | + function block  :  0000001A 00000000
  06            generate_subkey
                | Stack used (prev) :  00000429 0000005C
                | + function block  :  00000055 00000000
  06            LL_Encrypt
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  0000001A 00000000
                |  Already listed
  05          sm_CMAC
              | Stack used (prev) :  0000047E 0000005C
              | + function block  :  00000097 00000000
  06            osal_set_event
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000017 00000000
                |  Already listed
  05          gapIncSignCounter
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000C 00000000
  05          gapGetSignCounter
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000000 00000002
  05          gapGetSRK
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000000 00000002
  04        SM_GenerateAuthenSig
            | Stack used (prev) :  00000515 0000005C
            | + function block  :  00000064 00000000
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
  04        linkDB_State
            | Stack used (prev) :  00000406 0000005C
            | + function block  :  00000014 00000000
  06            bm_desc_from_payload
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000C 00000002
  05          osal_bm_adjust_header
              | Stack used (prev) :  000003FE 0000005C
              | + function block  :  00000018 00000000
  07              osal_bm_alloc
                  | Stack used (prev) :  00000018 00000000
                  | + function block  :  00000018 00000000
                  |  Already listed
  06            LL_TX_bm_alloc
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000A 00000000
  05          HCI_bm_alloc
              | Stack used (prev) :  000003FC 0000005A
              | + function block  :  00000000 00000004
  04        L2CAP_bm_alloc
            | Stack used (prev) :  00000416 0000005E
            | + function block  :  0000002A 00000000
  05          linkDB_State
              | Stack used (prev) :  00000406 0000005C
              | + function block  :  00000014 00000000
              |  Already listed
  06            osal_bm_adjust_header
                | Stack used (prev) :  000003FE 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_msg_send
                | Stack used (prev) :  00000032 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  08                ll24BitTimeDelta
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000017 00000000
                    |  Already listed
  08                ll24BitTimeCompare
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000017 00000000
                    |  Already listed
  08                llGetCurrentTime
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000004 00000003
                    |  Already listed
  08                llGetCurrentTask
                    | Stack used (prev) :  000001B6 00000032
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llScheduleTask
                    | Stack used (prev) :  00000079 00000003
                    | + function block  :  0000003A 00000000
                    |  Already listed
  08                llDivide31By16To16
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  00000000 00000000
  08                llEnqueueDataQ
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  00000009 00000000
  08                llProcessTxData
                    | Stack used (prev) :  00000104 00000006
                    | + function block  :  00000022 00000000
                    |  Already listed
  09                  PHY_SetDataChan
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  00000000 00000002
  09                  llProcessChanMap
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  00000018 00000001
  08                llSetNextDataChan
                    | Stack used (prev) :  0000040A 0000005A
                    | + function block  :  00000016 00000002
  07              LL_TxData
                  | Stack used (prev) :  00000420 0000005A
                  | + function block  :  0000002D 00000002
  06            HCI_SendDataPkt
                | Stack used (prev) :  0000044D 0000005C
                | + function block  :  00000018 00000000
  05          l2capEncapSendData
              | Stack used (prev) :  00000465 0000005C
              | + function block  :  00000036 00000000
  04        L2CAP_SendData
            | Stack used (prev) :  0000049B 0000005C
            | + function block  :  00000014 00000000
  03      attSendMsg
          | Stack used (prev) :  00000579 0000005E
          | + function block  :  00000032 00000000
  02    ATT_ErrorRsp
        | Stack used (prev) :  000005AB 0000005E
        | + function block  :  00000018 00000000
  01  gattServerProcessMsgCB
      | Stack used (prev) :  000005C3 0000005E
      | + function block  :  0000005A 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000061D 0000005E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  01  gattProcessExchangeMTUReq
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000003F2 0000005A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  04        osal_memcmp
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000D 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        ATT_ConvertUUIDto128
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000002A 00000001
  04        ATT_ConvertUUIDto128
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000002A 00000001
            |  Already listed
  03      ATT_CompareUUID
          | Stack used (prev) :  0000041C 0000005B
          | + function block  :  0000003C 00000000
  02    GATT_FindHandleUUID
        | Stack used (prev) :  00000458 0000005B
        | + function block  :  00000060 00000000
  03      attSendMsg
          | Stack used (prev) :  00000579 0000005E
          | + function block  :  00000032 00000000
          |  Already listed
  02    ATT_FindInfoRsp
        | Stack used (prev) :  000005AB 0000005E
        | + function block  :  00000018 00000000
  01  gattProcessFindInfoReq
      | Stack used (prev) :  000005C3 0000005E
      | + function block  :  0000004C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000060F 0000005E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATT_FindHandleUUID
        | Stack used (prev) :  00000458 0000005B
        | + function block  :  00000060 00000000
        |  Already listed
  01  gattProcessFindByTypeValueReq
      | Stack used (prev) :  000004B8 0000005B
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004D8 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATT_FindHandleUUID
        | Stack used (prev) :  00000458 0000005B
        | + function block  :  00000060 00000000
        |  Already listed
  01  gattProcessReadByTypeReq
      | Stack used (prev) :  000004B8 0000005B
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004D8 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATT_FindHandle
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000022 00000000
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      linkDB_Authen
          | Stack used (prev) :  00000406 0000005C
          | + function block  :  00000018 00000000
  02    GATT_VerifyReadPermissions
        | Stack used (prev) :  0000041E 0000005C
        | + function block  :  00000022 00000000
  01  gattProcessReadReq
      | Stack used (prev) :  00000440 0000005C
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000454 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATT_FindHandle
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000022 00000000
        |  Already listed
  02    GATT_VerifyReadPermissions
        | Stack used (prev) :  0000041E 0000005C
        | + function block  :  00000022 00000000
        |  Already listed
  01  gattProcessReadMultiReq
      | Stack used (prev) :  00000440 0000005C
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000460 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATT_FindHandleUUID
        | Stack used (prev) :  00000458 0000005B
        | + function block  :  00000060 00000000
        |  Already listed
  02    ATT_CompareUUID
        | Stack used (prev) :  0000041C 0000005B
        | + function block  :  0000003C 00000000
        |  Already listed
  01  gattProcessReadByGrpTypeReq
      | Stack used (prev) :  000004B8 0000005B
      | + function block  :  0000002C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004E4 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATT_FindHandle
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000022 00000000
        |  Already listed
  03      linkDB_Authen
          | Stack used (prev) :  00000406 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  02    GATT_VerifyWritePermissions
        | Stack used (prev) :  0000041E 0000005C
        | + function block  :  0000001E 00000000
  01  gattProcessWriteReq
      | Stack used (prev) :  0000043C 0000005C
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000454 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  01  gattProcessExecuteWriteReq
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000003F2 0000005A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    gattNotifyEvent
        | Stack used (prev) :  0000040C 0000005C
        | + function block  :  00000022 00000000
        |  Already listed
  01  gattServerHandleTimerCB
      | Stack used (prev) :  0000042E 0000005C
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000044A 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    linkDB_State
        | Stack used (prev) :  00000406 0000005C
        | + function block  :  00000014 00000000
        |  Already listed
  02    gattStopTimer
        | Stack used (prev) :  000003FD 0000005A
        | + function block  :  00000012 00000000
        |  Already listed
  02    gattNotifyEvent
        | Stack used (prev) :  0000040C 0000005C
        | + function block  :  00000022 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000037 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000037 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000037 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000037 00000000
        |  Already listed
  01  gattServerHandleConnStatusCB
      | Stack used (prev) :  0000042E 0000005C
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000452 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      GATTServApp_SendCCCUpdatedEvent
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000022 00000000
  04        gattServApp_FindCharCfgItem
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000E 00000002
  04        gattServApp_FindCharCfgItem
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000E 00000002
            |  Already listed
  03      GATTServApp_WriteCharCfg
          | Stack used (prev) :  00000400 0000005C
          | + function block  :  00000030 00000000
  04        gattServApp_FindCharCfgItem
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000E 00000002
            |  Already listed
  03      GATTServApp_ReadCharCfg
          | Stack used (prev) :  00000400 0000005C
          | + function block  :  00000031 00000000
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  00000430 0000005C
        | + function block  :  0000003C 00000000
  01  gattServApp_WriteAttrCB
      | Stack used (prev) :  0000046C 0000005C
      | + function block  :  0000002C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000498 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memset
        | Stack used (prev) :  000003F4 0000005C
        | + function block  :  00000018 00000000
        |  Already listed
  02    linkDB_State
        | Stack used (prev) :  00000406 0000005C
        | + function block  :  00000014 00000000
        |  Already listed
  03      gattServApp_FindCharCfgItem
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000E 00000002
          |  Already listed
  02    GATTServApp_InitCharCfg
        | Stack used (prev) :  00000400 0000005C
        | + function block  :  00000022 00000000
  02    gattServApp_FindPrepareWriteQ
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000002
  01  gattServApp_HandleConnStatusCB
      | Stack used (prev) :  00000422 0000005C
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000043E 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    l2capFreeChannel
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000012 00000002
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    l2capNotifySignal
        | Stack used (prev) :  0000040C 0000005C
        | + function block  :  0000002D 00000000
  01  l2capHandleTimerCB
      | Stack used (prev) :  00000439 0000005C
      | + function block  :  0000001A 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000453 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  01  llStartAdvSetup
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000003F2 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memset
        | Stack used (prev) :  000003F4 0000005C
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcmp
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000D 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    smDetermineKeySize
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  05          osal_stop_timerEx
              | Stack used (prev) :  000001C2 00000034
              | + function block  :  00000018 00000000
              |  Already listed
  04        smStopRspTimer
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000000 00000002
  03      smFreePairingParams
          | Stack used (prev) :  000003F2 0000005C
          | + function block  :  00000012 00000004
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        osal_memdup
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000010 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000032 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  06            osal_mem_free
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000000A 00000002
                |  Already listed
  05          gapFreeAuthLink
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
  05          GAP_GetParamValue
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        sendAuthEvent
            | Stack used (prev) :  0000040C 0000005C
            | + function block  :  00000042 00000000
  03      gapPairingCompleteCB
          | Stack used (prev) :  0000044E 0000005C
          | + function block  :  0000003C 00000000
  02    smEndPairing
        | Stack used (prev) :  0000048A 00000060
        | + function block  :  0000002E 00000000
  03      osal_revmemcpy
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000B 00000001
          |  Already listed
  04        LL_Encrypt
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  0000001A 00000000
            |  Already listed
  03      smEncrypt
          | Stack used (prev) :  0000040E 0000005C
          | + function block  :  00000080 00000000
  02    sm_s1
        | Stack used (prev) :  0000048E 0000005C
        | + function block  :  00000080 00000000
  02    linkDB_Find
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000002
        |  Already listed
  04        llEnqueueCtrlPkt
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000B 00000001
            |  Already listed
  03      LL_EncLtkNegReply
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000002
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  00000074 00000006
          | + function block  :  0000002B 00000000
          |  Already listed
  02    HCI_LE_LtkReqNegReplyCmd
        | Stack used (prev) :  000003F2 0000005C
        | + function block  :  00000018 00000000
  04        llEnqueueCtrlPkt
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000B 00000001
            |  Already listed
  03      LL_EncLtkReply
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000003
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  00000074 00000006
          | + function block  :  0000002B 00000000
          |  Already listed
  02    HCI_LE_LtkReqReplyCmd
        | Stack used (prev) :  000003F2 0000005D
        | + function block  :  00000018 00000000
  01  smResponderProcessLTKReq
      | Stack used (prev) :  0000050E 00000060
      | + function block  :  00000066 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000574 00000060


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_mem_alloc
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smEndPairing
          | Stack used (prev) :  0000048A 00000060
          | + function block  :  0000002E 00000000
          |  Already listed
  02    smpResponderProcessMasterID
        | Stack used (prev) :  000004B8 00000060
        | + function block  :  00000022 00000000
  03      osal_memcmp
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000D 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  05          osal_bm_free
              | Stack used (prev) :  0000000A 00000002
              | + function block  :  00000014 00000000
              |  Already listed
  06            osal_start_timerEx
                | Stack used (prev) :  0000004A 00000002
                | + function block  :  00000024 00000000
                |  Already listed
  06            GAP_GetParamValue
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000014 00000002
                |  Already listed
  05          smStartRspTimer
              | Stack used (prev) :  00000406 0000005C
              | + function block  :  0000001C 00000000
  05          L2CAP_bm_alloc
              | Stack used (prev) :  00000416 0000005E
              | + function block  :  0000002A 00000000
              |  Already listed
  05          L2CAP_SendData
              | Stack used (prev) :  0000049B 0000005C
              | + function block  :  00000014 00000000
              |  Already listed
  04        smSendSMMsg
            | Stack used (prev) :  000004AF 0000005E
            | + function block  :  00000028 00000000
  03      smGenerateRandMsg
          | Stack used (prev) :  000004D7 0000005E
          | + function block  :  00000038 00000000
  06            smAuthReqToUint8
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000000 00000002
  05          smpBuildPairingReqRsp
              | Stack used (prev) :  000003F2 0000005C
              | + function block  :  00000016 00000000
  04        smpBuildPairingRsp
            | Stack used (prev) :  00000408 0000005C
            | + function block  :  00000000 00000004
  05          smpBuildPairingReqRsp
              | Stack used (prev) :  000003F2 0000005C
              | + function block  :  00000016 00000000
              |  Already listed
  04        smpBuildPairingReq
            | Stack used (prev) :  00000408 0000005C
            | + function block  :  00000000 00000004
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          smUint8ToAuthReq
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000000
  04        smSetPairingReqRsp
            | Stack used (prev) :  0000040C 0000005C
            | + function block  :  00000043 00000000
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_revmemcpy
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000B 00000001
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          smEncrypt
              | Stack used (prev) :  0000040E 0000005C
              | + function block  :  00000080 00000000
              |  Already listed
  05          smEncrypt
              | Stack used (prev) :  0000040E 0000005C
              | + function block  :  00000080 00000000
              |  Already listed
  05          sm_xor
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000071 00000000
  05          sm_xor
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000071 00000000
              |  Already listed
  04        sm_c1new
            | Stack used (prev) :  0000048E 0000005C
            | + function block  :  000000DB 00000000
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  04        gapGetDevAddress
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000000 00000002
  04        gapGetDevAddressMode
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000000 00000002
  03      sm_c1
          | Stack used (prev) :  00000569 00000060
          | + function block  :  00000080 00000000
  02    smpResponderProcessPairingRandom
        | Stack used (prev) :  000005E9 00000060
        | + function block  :  00000046 00000000
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      smSavePairInfo
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000012 00000001
  04        smSendSMMsg
            | Stack used (prev) :  000004AF 0000005E
            | + function block  :  00000028 00000000
            |  Already listed
  04        smSetPairingReqRsp
            | Stack used (prev) :  0000040C 0000005C
            | + function block  :  00000043 00000000
            |  Already listed
  03      smGeneratePairingReqRsp
          | Stack used (prev) :  000004D7 0000005E
          | + function block  :  00000038 00000000
  07              LL_ENC_GeneratePseudoRandNum
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000000 00000002
  06            LL_PseudoRand
                | Stack used (prev) :  000003F2 0000005C
                | + function block  :  00000014 00000000
  05          Onboard_rand
              | Stack used (prev) :  00000406 0000005C
              | + function block  :  00000004 00000004
  04        osal_rand
            | Stack used (prev) :  0000040A 00000060
            | + function block  :  00000000 00000004
  03      smGenerateRandBuf
          | Stack used (prev) :  0000040A 00000064
          | + function block  :  00000027 00000000
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  04        GAP_GetParamValue
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      gapPasskeyNeededCB
          | Stack used (prev) :  00000406 0000005C
          | + function block  :  00000024 00000000
  02    smpResponderProcessPairingReq
        | Stack used (prev) :  0000050F 00000064
        | + function block  :  00000022 00000000
  02    smDetermineKeySize
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  02    smEndPairing
        | Stack used (prev) :  0000048A 00000060
        | + function block  :  0000002E 00000000
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  000004AF 0000005E
          | + function block  :  00000028 00000000
          |  Already listed
  02    smGenerateConfirm
        | Stack used (prev) :  000004D7 0000005E
        | + function block  :  00000042 00000000
  02    sm_c1
        | Stack used (prev) :  00000569 00000060
        | + function block  :  00000080 00000000
        |  Already listed
  02    smAuthReqToUint8
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      linkDB_Find
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  02    gapSendPairingReqEvent
        | Stack used (prev) :  0000040C 0000005C
        | + function block  :  0000002C 00000000
  01  smpResponderProcessIncoming
      | Stack used (prev) :  0000062F 00000064
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000064B 00000064


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_start_timerEx
        | Stack used (prev) :  0000004A 00000002
        | + function block  :  00000024 00000000
        |  Already listed
  02    osal_mem_alloc
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_rand
        | Stack used (prev) :  0000040A 00000060
        | + function block  :  00000000 00000004
        |  Already listed
  02    osal_memset
        | Stack used (prev) :  000003F4 0000005C
        | + function block  :  00000018 00000000
        |  Already listed
  02    smDetermineKeySize
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  000004AF 0000005E
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendSingingInfo
        | Stack used (prev) :  000004D7 0000005E
        | + function block  :  00000018 00000000
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  000004AF 0000005E
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendIdentityAddrInfo
        | Stack used (prev) :  000004D7 0000005E
        | + function block  :  0000002A 00000000
  03      smSendSMMsg
          | Stack used (prev) :  000004AF 0000005E
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendIdentityInfo
        | Stack used (prev) :  000004D7 0000005E
        | + function block  :  00000018 00000000
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  000004AF 0000005E
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendMasterID
        | Stack used (prev) :  000004D7 0000005E
        | + function block  :  0000003E 00000000
  03      smSendSMMsg
          | Stack used (prev) :  000004AF 0000005E
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendEncInfo
        | Stack used (prev) :  000004D7 0000005E
        | + function block  :  00000018 00000000
  02    smGenerateRandBuf
        | Stack used (prev) :  0000040A 00000064
        | + function block  :  00000027 00000000
        |  Already listed
  02    linkDB_Find
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000002
        |  Already listed
  02    gapGetIRK
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
  02    gapGetDevAddress
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  02    gapGetDevAddressMode
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  02    gapGetSRK
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  01  smResponderSendNextKeyInfo
      | Stack used (prev) :  00000515 00000064
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000539 00000064


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  03      osal_stop_timerEx
          | Stack used (prev) :  000001C2 00000034
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_set_event
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000017 00000000
          |  Already listed
  02    HalKeyConfig
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000009 00000000
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  02    OnBoard_SendKeys
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000013 00000001
  01  OnBoard_KeyCallback
      | Stack used (prev) :  00000405 0000005B
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000417 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  03      HalUARTRxAvailDMA
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000A 00000002
  02    Hal_UART_RxBufLen
        | Stack used (prev) :  000003FC 0000005C
        | + function block  :  00000012 00000000
  03      Recursive system consisting of
           | HalLcdWriteString
          | Stack used (prev) :  0000027A 0000004C
          | + function block  :  00000051 00000000
          |  Already listed
  04        strlen
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  00000000 00000002
            |  Already listed
  04        strcpy
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000009 00000001
  04        strcat
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000009 00000001
  04        _itoa
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000015 00000001
  03      _ltoa
          | Stack used (prev) :  00000407 0000005A
          | + function block  :  00000074 00000002
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      osal_strlen
          | Stack used (prev) :  000001EA 00000048
          | + function block  :  00000000 00000004
          |  Already listed
  02    HalLcdWriteStringValue
        | Stack used (prev) :  0000047B 0000005C
        | + function block  :  00000057 00000000
  04        HalUARTReadDMA
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000001
  03      HalUARTRead
          | Stack used (prev) :  00000406 0000005B
          | + function block  :  00000012 00000000
  02    SbpHalUARTRead
        | Stack used (prev) :  00000418 0000005B
        | + function block  :  0000001B 00000000
  02    SbpHalUARTRead
        | Stack used (prev) :  00000418 0000005B
        | + function block  :  0000001B 00000000
        |  Already listed
  02    SbpHalUARTRead
        | Stack used (prev) :  00000418 0000005B
        | + function block  :  0000001B 00000000
        |  Already listed
  02    SbpHalUARTRead
        | Stack used (prev) :  00000418 0000005B
        | + function block  :  0000001B 00000000
        |  Already listed
  03      Recursive system consisting of
           | HalLcdWriteString
          | Stack used (prev) :  0000027A 0000004C
          | + function block  :  00000051 00000000
          |  Already listed
  02    studyCompletedAndBroadcastData
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000009 00000002
  02    osal_memset
        | Stack used (prev) :  000003F4 0000005C
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  SbpHalUARTReadCallback
      | Stack used (prev) :  000004D2 0000005C
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004E6 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  03      HalAdcSetReference
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000002
  03      HalAdcRead
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000A 00000000
  02    battMeasure
        | Stack used (prev) :  000003FC 0000005A
        | + function block  :  0000001F 00000002
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  battReadAttrCB
      | Stack used (prev) :  0000041B 0000005C
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000437 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  00000430 0000005C
        | + function block  :  0000003C 00000000
        |  Already listed
  01  battWriteAttrCB
      | Stack used (prev) :  0000046C 0000005C
      | + function block  :  0000002C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000498 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  devInfo_ReadAttrCB
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  0000001F 00000001
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000411 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  03      GATTServApp_ReadCharCfg
          | Stack used (prev) :  00000400 0000005C
          | + function block  :  00000031 00000000
          |  Already listed
  05          linkDB_Authen
              | Stack used (prev) :  00000406 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  07              osal_start_timerEx
                  | Stack used (prev) :  0000004A 00000002
                  | + function block  :  00000024 00000000
                  |  Already listed
  06            osal_CbTimerStart
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000001B 00000001
  05          gattStartTimer
              | Stack used (prev) :  0000040D 0000005B
              | + function block  :  00000024 00000000
  06            gattFindServerInfo
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000037 00000000
                |  Already listed
  05          gattGetServerStatus
              | Stack used (prev) :  00000429 0000005A
              | + function block  :  00000024 00000000
  06            attSendMsg
                | Stack used (prev) :  00000579 0000005E
                | + function block  :  00000032 00000000
                |  Already listed
  05          ATT_HandleValueInd
              | Stack used (prev) :  000005AB 0000005E
              | + function block  :  00000018 00000000
  04        GATT_Indication
            | Stack used (prev) :  000005C3 0000005E
            | + function block  :  00000044 00000000
  04        GATT_FindHandleUUID
            | Stack used (prev) :  00000458 0000005B
            | + function block  :  00000060 00000000
            |  Already listed
  03      GATT_ServiceChangedInd
          | Stack used (prev) :  00000607 0000005E
          | + function block  :  00000048 00000000
  02    GATTServApp_SendServiceChangedInd
        | Stack used (prev) :  0000064F 0000005E
        | + function block  :  00000012 00000000
  01  gapBondMgrSendServiceChange
      | Stack used (prev) :  00000661 0000005E
      | + function block  :  0000000C 00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000066D 00000062


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  06            llReplaceCtrlPkt
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000000 00000003
  06            llEnqueueCtrlPkt
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000000B 00000001
                |  Already listed
  05          LL_Disconnect
              | Stack used (prev) :  000003F2 0000005D
              | + function block  :  00000012 00000000
  06            osal_msg_send
                | Stack used (prev) :  00000032 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  08                osal_msg_send
                    | Stack used (prev) :  00000032 00000006
                    | + function block  :  00000012 00000000
                    |  Already listed
  08                osal_msg_allocate
                    | Stack used (prev) :  00000018 00000000
                    | + function block  :  00000014 00000000
                    |  Already listed
  08                osal_memcpy
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000019 00000001
                    |  Already listed
  07              HCI_SendControllerToHostEvent
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000001D 00000001
  06            HCI_SendCommandStatusEvent
                | Stack used (prev) :  0000040F 0000005A
                | + function block  :  00000025 00000001
  05          HCI_CommandStatusEvent
              | Stack used (prev) :  00000434 0000005A
              | + function block  :  00000016 00000001
  04        HCI_DisconnectCmd
            | Stack used (prev) :  0000044A 0000005D
            | + function block  :  00000012 00000000
  05          linkDB_FindFirst
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000000 00000002
  05          HCI_DisconnectCmd
              | Stack used (prev) :  0000044A 0000005D
              | + function block  :  00000012 00000000
              |  Already listed
  04        disconnectNext
            | Stack used (prev) :  0000045C 0000005D
            | + function block  :  0000002A 00000000
  03      GAP_TerminateLinkReq
          | Stack used (prev) :  00000486 0000005D
          | + function block  :  0000001C 00000000
  02    GAPRole_TerminateConnection
        | Stack used (prev) :  000004A2 0000005D
        | + function block  :  00000016 00000004
  02    HalLcdWriteStringValue
        | Stack used (prev) :  0000047B 0000005C
        | + function block  :  00000057 00000000
        |  Already listed
  02    Recursive system consisting of
         | HalLcdWriteString
        | Stack used (prev) :  0000027A 0000004C
        | + function block  :  00000051 00000000
        |  Already listed
  01  simpleBLEPeripheralPairStateCB
      | Stack used (prev) :  000004D2 00000061
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004EA 00000061


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    bdAddr2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000031 00000002
  02    bdAddr2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000031 00000002
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  02    GAPRole_GetParameter
        | Stack used (prev) :  00000406 0000005C
        | + function block  :  00000018 00000000
  02    Recursive system consisting of
         | HalLcdWriteString
        | Stack used (prev) :  0000027A 0000004C
        | + function block  :  00000051 00000000
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    DevInfo_SetParameter
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000D 00000000
  01  peripheralStateNotificationCB
      | Stack used (prev) :  00000423 0000005C
      | + function block  :  0000002E 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000451 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    SimpleProfile_GetParameter
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000C 00000001
  03      osal_strlen
          | Stack used (prev) :  000001EA 00000048
          | + function block  :  00000000 00000004
          |  Already listed
  02    hex2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000075 00000002
  02    HalLcdWriteStringValue
        | Stack used (prev) :  0000047B 0000005C
        | + function block  :  00000057 00000000
        |  Already listed
  02    Recursive system consisting of
         | HalLcdWriteString
        | Stack used (prev) :  0000027A 0000004C
        | + function block  :  00000051 00000000
        |  Already listed
  03      Recursive system consisting of
           | HalLcdWriteString
          | Stack used (prev) :  0000027A 0000004C
          | + function block  :  00000051 00000000
          |  Already listed
  03      atoi
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000002A 00000000
  08                HalFlashRead
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000E 00000001
  08                osal_memcmp
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000D 00000000
                    |  Already listed
  07              verifyWordM
                  | Stack used (prev) :  00000400 0000005B
                  | + function block  :  00000045 00000000
  07              HalFlashWrite
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000C 00000000
  06            writeWord
                | Stack used (prev) :  00000445 0000005B
                | + function block  :  0000003E 00000000
  07              HalFlashRead
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000E 00000001
                  |  Already listed
  06            findItem
                | Stack used (prev) :  00000400 0000005B
                | + function block  :  00000042 00000000
  07              HalFlashErase
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000000 00000002
  07              HalFlashRead
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000E 00000001
                  |  Already listed
  06            erasePage
                | Stack used (prev) :  00000400 0000005C
                | + function block  :  0000003C 00000000
  07              writeWord
                  | Stack used (prev) :  00000445 0000005B
                  | + function block  :  0000003E 00000000
                  |  Already listed
  06            setActivePage
                | Stack used (prev) :  00000483 0000005B
                | + function block  :  00000038 00000000
  06            HalFlashRead
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000E 00000001
                |  Already listed
  05          compactPage
              | Stack used (prev) :  000004BB 0000005C
              | + function block  :  00000050 00000000
  06            writeWord
                | Stack used (prev) :  00000445 0000005B
                | + function block  :  0000003E 00000000
                |  Already listed
  06            writeWord
                | Stack used (prev) :  00000445 0000005B
                | + function block  :  0000003E 00000000
                |  Already listed
  06            writeWord
                | Stack used (prev) :  00000445 0000005B
                | + function block  :  0000003E 00000000
                |  Already listed
  06            writeWord
                | Stack used (prev) :  00000445 0000005B
                | + function block  :  0000003E 00000000
                |  Already listed
  06            verifyWordM
                | Stack used (prev) :  00000400 0000005B
                | + function block  :  00000045 00000000
                |  Already listed
  06            HalFlashWrite
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000C 00000000
                |  Already listed
  05          writeItem
              | Stack used (prev) :  00000483 0000005B
              | + function block  :  00000045 00000000
  05          findItem
              | Stack used (prev) :  00000400 0000005B
              | + function block  :  00000042 00000000
              |  Already listed
  06            writeWord
                | Stack used (prev) :  00000445 0000005B
                | + function block  :  0000003E 00000000
                |  Already listed
  05          setXferPage
              | Stack used (prev) :  00000483 0000005B
              | + function block  :  0000002E 00000000
  05          HalFlashRead
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000E 00000001
              |  Already listed
  04        osal_snv_write
            | Stack used (prev) :  0000050B 0000005C
            | + function block  :  00000022 00000000
  06            compactPage
                | Stack used (prev) :  000004BB 0000005C
                | + function block  :  00000050 00000000
                |  Already listed
  06            setXferPage
                | Stack used (prev) :  00000483 0000005B
                | + function block  :  0000002E 00000000
                |  Already listed
  05          osal_snv_compact
              | Stack used (prev) :  0000050B 0000005C
              | + function block  :  00000028 00000000
  07              findItem
                  | Stack used (prev) :  00000400 0000005B
                  | + function block  :  00000042 00000000
                  |  Already listed
  07              HalFlashRead
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000E 00000001
                  |  Already listed
  06            osal_snv_read
                | Stack used (prev) :  00000442 0000005B
                | + function block  :  00000018 00000000
  06            osal_snv_write
                | Stack used (prev) :  0000050B 0000005C
                | + function block  :  00000022 00000000
                |  Already listed
  07              osal_msg_deallocate
                  | Stack used (prev) :  0000000A 00000002
                  | + function block  :  00000009 00000004
                  |  Already listed
  06            gapBondFreeAuthEvt
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000042 00000002
  06            osal_isbufset
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000A 00000000
  06            osal_clear_event
                | Stack used (prev) :  000001B6 00000032
                | + function block  :  00000017 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  05          gapBondMgrEraseBonding
              | Stack used (prev) :  0000052D 0000005C
              | + function block  :  000000A8 00000000
  06            gapBondMgrEraseBonding
                | Stack used (prev) :  0000052D 0000005C
                | + function block  :  000000A8 00000000
                |  Already listed
  05          gapBondMgrEraseAllBondings
              | Stack used (prev) :  000005D5 0000005C
              | + function block  :  00000036 00000000
  06            osal_snv_read
                | Stack used (prev) :  00000442 0000005B
                | + function block  :  00000018 00000000
                |  Already listed
  07              osal_isbufset
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000A 00000000
                  |  Already listed
  10                    phyFindWlEntry
                        | Stack used (prev) :  000003F2 0000005A
                        | + function block  :  00000017 00000000
  10                    PHY_ClearBlacklistIndex
                        | Stack used (prev) :  000003F2 0000005A
                        | + function block  :  00000016 00000000
  10                    PHY_SetBlacklistIndex
                        | Stack used (prev) :  000003F2 0000005A
                        | + function block  :  00000016 00000000
  09                  PHY_AddWlEntry
                      | Stack used (prev) :  00000409 0000005A
                      | + function block  :  00000018 00000001
  09                  llCheckWhiteListUsage
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  00000000 00000002
  08                LL_AddWhiteListDevice
                    | Stack used (prev) :  00000421 0000005C
                    | + function block  :  00000012 00000000
  08                HCI_CommandCompleteEvent
                    | Stack used (prev) :  00000074 00000006
                    | + function block  :  0000002B 00000000
                    |  Already listed
  07              HCI_LE_AddWhiteListCmd
                  | Stack used (prev) :  00000433 0000005C
                  | + function block  :  00000014 00000000
  09                  PHY_ClearWhitelist
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  00000000 00000002
  09                  llCheckWhiteListUsage
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  00000000 00000002
                      |  Already listed
  08                LL_ClearWhiteList
                    | Stack used (prev) :  000003F2 0000005C
                    | + function block  :  00000000 00000004
  08                HCI_CommandCompleteEvent
                    | Stack used (prev) :  00000074 00000006
                    | + function block  :  0000002B 00000000
                    |  Already listed
  07              HCI_LE_ClearWhiteListCmd
                  | Stack used (prev) :  000003F2 00000060
                  | + function block  :  00000002 00000004
  06            gapBondMgr_SyncWhiteList
                | Stack used (prev) :  00000447 00000064
                | + function block  :  0000002C 00000000
  08                osal_isbufset
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000A 00000000
                    |  Already listed
  07              gapBondMgrBondTotal
                  | Stack used (prev) :  000003FC 0000005A
                  | + function block  :  0000001E 00000000
  08                osal_memset
                    | Stack used (prev) :  000003F4 0000005C
                    | + function block  :  00000018 00000000
                    |  Already listed
  08                osal_memcpy
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000019 00000001
                    |  Already listed
  08                ggs_SetAttrWPermit
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000E 00000002
  08                ggs_SetAttrWPermit
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000E 00000002
                    |  Already listed
  08                ggs_SetAttrWPermit
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000E 00000002
                    |  Already listed
  07              GGS_SetParameter
                  | Stack used (prev) :  0000040C 0000005C
                  | + function block  :  0000001C 00000000
  06            gapBondSetupPrivFlag
                | Stack used (prev) :  00000428 0000005C
                | + function block  :  0000001C 00000004
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  05          gapBondMgrReadBonds
              | Stack used (prev) :  00000473 00000064
              | + function block  :  00000036 00000000
  05          gapBondMgrReadBonds
              | Stack used (prev) :  00000473 00000064
              | + function block  :  00000036 00000000
              |  Already listed
  05          gapBondMgrReadBonds
              | Stack used (prev) :  00000473 00000064
              | + function block  :  00000036 00000000
              |  Already listed
  07              osal_snv_read
                  | Stack used (prev) :  00000442 0000005B
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_isbufset
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000A 00000000
                  |  Already listed
  09                  osal_memcmp
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  0000000D 00000000
                      |  Already listed
  09                  osal_memcpy
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000019 00000001
                      |  Already listed
  10                    osal_memset
                        | Stack used (prev) :  000003F4 0000005C
                        | + function block  :  00000018 00000000
                        |  Already listed
  10                    osal_revmemcpy
                        | Stack used (prev) :  000003F2 0000005A
                        | + function block  :  0000000B 00000001
                        |  Already listed
  10                    smEncrypt
                        | Stack used (prev) :  0000040E 0000005C
                        | + function block  :  00000080 00000000
                        |  Already listed
  09                  sm_ah
                      | Stack used (prev) :  0000048E 0000005C
                      | + function block  :  00000090 00000000
  08                SM_ResolveRandomAddrs
                    | Stack used (prev) :  0000051E 0000005C
                    | + function block  :  00000028 00000000
  07              GAP_ResolvePrivateAddr
                  | Stack used (prev) :  00000546 0000005C
                  | + function block  :  00000000 00000004
  06            gapBondMgrResolvePrivateAddr
                | Stack used (prev) :  00000546 00000060
                | + function block  :  00000042 00000000
  07              osal_memcmp
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000D 00000000
                  |  Already listed
  06            gapBondMgrFindAddr
                | Stack used (prev) :  000003FF 0000005A
                | + function block  :  00000036 00000000
  07              osal_snv_read
                  | Stack used (prev) :  00000442 0000005B
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_memcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000019 00000001
                  |  Already listed
  06            gapBondMgrGetPublicAddr
                | Stack used (prev) :  0000045A 0000005B
                | + function block  :  00000044 00000000
  06            osal_memcmp
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000D 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  05          GAPBondMgr_ResolveAddr
              | Stack used (prev) :  00000588 00000060
              | + function block  :  00000064 00000000
  05          osal_revmemcpy
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000B 00000001
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          GAP_NumActiveConnections
              | Stack used (prev) :  000003F2 0000005C
              | + function block  :  00000000 00000004
              |  Already listed
  05          GAP_SetParamValue
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000000 00000002
  04        GAPBondMgr_SetParameter
            | Stack used (prev) :  0000060B 00000064
            | + function block  :  0000002C 00000000
  04        osal_strlen
            | Stack used (prev) :  000001EA 00000048
            | + function block  :  00000000 00000004
            |  Already listed
  04        GGS_SetParameter
            | Stack used (prev) :  0000040C 0000005C
            | + function block  :  0000001C 00000000
            |  Already listed
  03      set_new_passkey
          | Stack used (prev) :  00000637 00000064
          | + function block  :  00000040 00000000
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      osal_strlen
          | Stack used (prev) :  000001EA 00000048
          | + function block  :  00000000 00000004
          |  Already listed
  02    set_code_name
        | Stack used (prev) :  00000677 00000064
        | + function block  :  00000030 00000000
  02    delay_nus
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000C 00000000
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  02    HalSPIWrite
        | Stack used (prev) :  00000406 0000005A
        | + function block  :  0000002C 00000000
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  02    HalSPIRead
        | Stack used (prev) :  00000406 0000005A
        | + function block  :  0000002C 00000001
  02    osal_memset
        | Stack used (prev) :  000003F4 0000005C
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    osal_strlen
        | Stack used (prev) :  000001EA 00000048
        | + function block  :  00000000 00000004
        |  Already listed
  01  simpleProfileChangeCB
      | Stack used (prev) :  000006A7 00000064
      | + function block  :  000000B6 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  simpleProfile_ReadAttrCB
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  00000016 00000001
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000408 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memset
        | Stack used (prev) :  000003F4 0000005C
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  00000430 0000005C
        | + function block  :  0000003C 00000000
        |  Already listed
  01  simpleProfile_WriteAttrCB
      | Stack used (prev) :  0000046C 0000005C
      | + function block  :  00000036 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004A2 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    linkDB_State
        | Stack used (prev) :  00000406 0000005C
        | + function block  :  00000014 00000000
        |  Already listed
  02    GATTServApp_InitCharCfg
        | Stack used (prev) :  00000400 0000005C
        | + function block  :  00000022 00000000
        |  Already listed
  01  simpleProfile_HandleConnStatusCB
      | Stack used (prev) :  00000422 0000005C
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000434 0000005C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_ErrorRsp::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_ExchangeMTURsp::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_FindInfoRsp::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_FindByTypeValueRsp::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_ReadByTypeRsp::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_ReadRsp::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_ReadBlobRsp::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_ReadMultiRsp::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_ReadByGrpTypeRsp::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_WriteRsp::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_PrepareWriteRsp::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_ExecuteWriteRsp::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_HandleValueNoti::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_HandleValueInd::?relay
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075D 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000075D 00000064
  01  ATT_BuildErrorRsp
      | Stack used (prev) :  0000075D 00000064
      | + function block  :  00000009 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000766 00000065


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000766 00000065
  01  ATT_ParseExchangeMTUReq
      | Stack used (prev) :  00000766 00000065
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000773 00000065


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000773 00000065
  01  ATT_BuildExchangeMTURsp
      | Stack used (prev) :  00000773 00000065
      | + function block  :  00000000 00000003
  <-Sub-tree of type: Function tree
    | Stack used          :  00000773 00000068


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000773 00000068
  01  ATT_ParseFindInfoReq
      | Stack used (prev) :  00000773 00000068
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000780 00000068


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000780 00000068
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildFindInfoRsp
      | Stack used (prev) :  00000780 00000068
      | + function block  :  00000014 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000794 00000069


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000794 00000069
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_ParseFindByTypeValueReq
      | Stack used (prev) :  00000794 00000069
      | + function block  :  00000014 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000007A8 0000006A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007A8 0000006A
  01  ATT_BuildFindByTypeValueRsp
      | Stack used (prev) :  000007A8 0000006A
      | + function block  :  0000000B 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000007B3 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007B3 0000006B
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_ParseReadByTypeReq
      | Stack used (prev) :  000007B3 0000006B
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007C3 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007C3 0000006B
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadByTypeRsp
      | Stack used (prev) :  000007C3 0000006B
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000007CF 0000006C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007CF 0000006C
  01  ATT_ParseReadReq
      | Stack used (prev) :  000007CF 0000006C
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007DC 0000006C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007DC 0000006C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadRsp
      | Stack used (prev) :  000007DC 0000006C
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007E8 0000006C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007E8 0000006C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_ParseWriteReq
      | Stack used (prev) :  000007E8 0000006C
      | + function block  :  00000012 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000007FA 0000006D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007FA 0000006D
  01  ATT_ParseReadBlobReq
      | Stack used (prev) :  000007FA 0000006D
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000807 0000006D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000807 0000006D
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadBlobRsp
      | Stack used (prev) :  00000807 0000006D
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000813 0000006D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000813 0000006D
  01  ATT_ParseReadMultiReq
      | Stack used (prev) :  00000813 0000006D
      | + function block  :  0000000E 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000821 0000006E


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000821 0000006E
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadMultiRsp
      | Stack used (prev) :  00000821 0000006E
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000082D 0000006E


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000082D 0000006E
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadByGrpTypeRsp
      | Stack used (prev) :  0000082D 0000006E
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000839 0000006F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000839 0000006F
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_ParsePrepareWriteReq
      | Stack used (prev) :  00000839 0000006F
      | + function block  :  00000010 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000849 00000070


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000849 00000070
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildPrepareWriteRsp
      | Stack used (prev) :  00000849 00000070
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000855 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000855 00000071
  01  ATT_ParseExecuteWriteReq
      | Stack used (prev) :  00000855 00000071
      | + function block  :  00000004 00000003
  <-Sub-tree of type: Function tree
    | Stack used          :  00000859 00000074


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000859 00000074
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildHandleValueInd
      | Stack used (prev) :  00000859 00000074
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_ParsePacket::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_BuildErrorRsp::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_ParseExchangeMTUReq::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_BuildExchangeMTURsp::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_ParseFindInfoReq::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_BuildFindInfoRsp::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_ParseFindByTypeValueReq::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_BuildFindByTypeValueRsp::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_ParseReadByTypeReq::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_BuildReadByTypeRsp::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_ParseReadReq::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_BuildReadRsp::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_ParseWriteReq::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_ParseReadBlobReq::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_BuildReadBlobRsp::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_ParseReadMultiReq::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_BuildReadMultiRsp::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_BuildReadByGrpTypeRsp::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_ParsePrepareWriteReq::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_BuildPrepareWriteRsp::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_ParseExecuteWriteReq::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_BuildHandleValueInd::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  attSendMsg::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_CompareUUID::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  ATT_ConvertUUIDto128::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_SetParamValue::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_GetParamValue::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_ParamsInit::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_SecParamsInit::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapReadBD_ADDRStatus::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapReadBufSizeCmdStatus::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapProcessNewAddr::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapAddAddrAdj::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapDetermineAddrType::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapProcessRandomAddrComplete::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapGetSRK::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapGetSignCounter::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapIncSignCounter::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapUpdateConnSignCounter::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapGetDevAddressMode::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapGetDevAddress::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapGetIRK::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapSendDeviceInitDoneEvent::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_ResolvePrivateAddr::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapIsAdvertising::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapValidADType::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapFindADType::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_TerminateLinkReq::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_Signable::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_Authenticate::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_TerminateAuth::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_PasscodeUpdate::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_Bond::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapProcessConnectionCompleteEvt::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapProcessConnUpdateCompleteEvt::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapProcessDisconnectCompleteEvt::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  sendEstLinkEvent::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  sendTerminateEvent::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapSendLinkUpdateEvent::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  disconnectNext::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  sendAuthEvent::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapFreeAuthLink::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapFreeEstLink::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapSendBondCompleteEvent::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapSendPairingReqEvent::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapPasskeyNeededCB::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapPairingCompleteCB::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_MakeDiscoverable::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_UpdateAdvertisingData::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_EndDiscoverable::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_PeriDevMgrInit::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapPeriProcessHCICmdCompleteEvt::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapSetAdvParams::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapSetAdvParamsStatus::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapWriteAdvEnableStatus::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapWriteAdvDataStatus::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapProcessAdvertisingEvt::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapSendMakeDiscEvent::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  gapFreeAdvertState::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  isLimitedDiscoverableMode::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  01  GAP_SendSlaveSecurityRequest::?relay
      | Stack used (prev) :  00000865 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000865 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000865 00000075
  02    osal_stop_timerEx
        | Stack used (prev) :  000001C2 00000034
        | + function block  :  00000018 00000000
        |  Already listed
  03      osal_clear_event
          | Stack used (prev) :  000001B6 00000032
          | + function block  :  00000017 00000000
          |  Already listed
  03      osal_set_event
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000017 00000000
          |  Already listed
  03      osal_msg_extract
          | Stack used (prev) :  00000865 00000075
          | + function block  :  0000001D 00000000
  02    osal_msg_receive
        | Stack used (prev) :  00000882 00000075
        | + function block  :  00000020 00000000
  02    osal_msg_send
        | Stack used (prev) :  00000032 00000006
        | + function block  :  00000012 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smGenerateRandBuf
          | Stack used (prev) :  0000040A 00000064
          | + function block  :  00000027 00000000
          |  Already listed
  03      sm_ah
          | Stack used (prev) :  0000048E 0000005C
          | + function block  :  00000090 00000000
          |  Already listed
  02    SM_CalcRandomAddr
        | Stack used (prev) :  00000865 00000075
        | + function block  :  00000011 00000001
  05          osal_bm_free
              | Stack used (prev) :  0000000A 00000002
              | + function block  :  00000014 00000000
              |  Already listed
  05          L2CAP_bm_alloc
              | Stack used (prev) :  00000416 0000005E
              | + function block  :  0000002A 00000000
              |  Already listed
  05          l2capEncapSendData
              | Stack used (prev) :  00000465 0000005C
              | + function block  :  00000036 00000000
              |  Already listed
  04        l2capSendCmd
            | Stack used (prev) :  00000865 00000075
            | + function block  :  0000002C 00000001
  03      L2CAP_CmdReject
          | Stack used (prev) :  00000891 00000076
          | + function block  :  0000001C 00000000
  05          osal_start_reload_timer
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000016 00000000
              |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000032 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        gapProcessRandomAddrComplete
            | Stack used (prev) :  00000865 00000075
            | + function block  :  00000010 00000001
  06            osal_msg_send
                | Stack used (prev) :  00000032 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  05          gapSendDeviceInitDoneEvent
              | Stack used (prev) :  00000865 00000075
              | + function block  :  00000018 00000001
  04        gapReadBufSizeCmdStatus
            | Stack used (prev) :  0000087D 00000076
            | + function block  :  00000012 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000074 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_LE_ReadBufSizeCmd
              | Stack used (prev) :  00000865 00000075
              | + function block  :  00000004 00000002
  05          gapSendDeviceInitDoneEvent
              | Stack used (prev) :  00000865 00000075
              | + function block  :  00000018 00000001
              |  Already listed
  04        gapReadBD_ADDRStatus
            | Stack used (prev) :  0000087D 00000077
            | + function block  :  00000014 00000000
  03      gapProcessHCICmdCompleteEvt
          | Stack used (prev) :  00000891 00000077
          | + function block  :  00000028 00000000
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          reportStatusChange
              | Stack used (prev) :  00000865 00000075
              | + function block  :  0000001E 00000000
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        linkDB_Remove
            | Stack used (prev) :  00000883 00000075
            | + function block  :  00000014 00000000
  04        gapFreeAuthLink
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  04        disconnectNext
            | Stack used (prev) :  0000045C 0000005D
            | + function block  :  0000002A 00000000
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000032 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  04        sendTerminateEvent
            | Stack used (prev) :  00000865 00000075
            | + function block  :  00000024 00000001
  03      gapProcessDisconnectCompleteEvt
          | Stack used (prev) :  00000897 00000076
          | + function block  :  0000001C 00000000
  05          osal_msg_send
              | Stack used (prev) :  00000032 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        gapSendLinkUpdateEvent
            | Stack used (prev) :  00000865 00000075
            | + function block  :  00000021 00000001
  03      gapProcessConnUpdateCompleteEvt
          | Stack used (prev) :  00000886 00000076
          | + function block  :  0000001A 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          reportStatusChange
              | Stack used (prev) :  00000865 00000075
              | + function block  :  0000001E 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        linkDB_Add
            | Stack used (prev) :  00000883 00000075
            | + function block  :  0000002C 00000001
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  04        gapFreeEstLink
            | Stack used (prev) :  00000865 00000075
            | + function block  :  00000016 00000002
  04        disconnectNext
            | Stack used (prev) :  0000045C 0000005D
            | + function block  :  0000002A 00000000
            |  Already listed
  04        sendTerminateEvent
            | Stack used (prev) :  00000865 00000075
            | + function block  :  00000024 00000001
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000032 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        sendEstLinkEvent
            | Stack used (prev) :  00000865 00000075
            | + function block  :  0000003A 00000001
  04        gapDetermineAddrType
            | Stack used (prev) :  00000865 00000075
            | + function block  :  00000000 00000002
  03      gapProcessConnectionCompleteEvt
          | Stack used (prev) :  000008AF 00000077
          | + function block  :  00000034 00000000
  02    gapProcessOSALMsg
        | Stack used (prev) :  000008E3 00000077
        | + function block  :  00000032 00000000
  02    gapIsAdvertising
        | Stack used (prev) :  00000865 00000075
        | + function block  :  00000000 00000002
  02    gapGetIRK
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  04        LL_SetRandomAddress
            | Stack used (prev) :  00000865 00000075
            | + function block  :  00000000 00000002
  04        HCI_CommandCompleteEvent
            | Stack used (prev) :  00000074 00000006
            | + function block  :  0000002B 00000000
            |  Already listed
  03      HCI_LE_SetRandomAddressCmd
          | Stack used (prev) :  00000865 00000077
          | + function block  :  00000002 00000004
  03      gapAddAddrAdj
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000A 00000002
          |  Already listed
  02    gapProcessNewAddr
        | Stack used (prev) :  00000867 0000007B
        | + function block  :  00000028 00000000
  02    GAP_GetParamValue
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000002
        |  Already listed
  01  GAP_ProcessEvent
      | Stack used (prev) :  00000915 0000007B
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GAP_RegisterForHCIMsgs::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GAP_Init::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GAP_ProcessEvent::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GAP_NumActiveConnections::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gapProcessOSALMsg::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gapProcessHCICmdCompleteEvt::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gapRegisterPeripheral::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GGS_SetParameter::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GGS_AddService::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  ggs_SetAttrWPermit::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  ggs_ReadAttrCB::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  ggs_WriteAttrCB::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GATT_InitServer::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GATT_RegisterService::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GATT_RegisterForReq::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GATT_VerifyReadPermissions::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GATT_VerifyWritePermissions::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GATT_ServiceChangedInd::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GATT_FindHandleUUID::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GATT_FindHandle::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GATT_FindNextAttr::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GATT_ServiceNumAttrs::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GATT_Indication::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  GATT_Notification::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattServiceLastHandle::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattServerProcessMsgCB::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattProcessExchangeMTUReq::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattProcessFindInfoReq::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattProcessFindByTypeValueReq::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattProcessReadByTypeReq::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattProcessReadReq::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattProcessReadMultiReq::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattProcessReadByGrpTypeReq::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattProcessWriteReq::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattProcessExecuteWriteReq::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattGetServerStatus::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattFindServerInfo::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattServerHandleTimerCB::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  01  gattServerHandleConnStatusCB::?relay
      | Stack used (prev) :  00000939 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000939 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000939 0000007B
  02    osal_msg_receive
        | Stack used (prev) :  00000882 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      osal_bm_free
          | Stack used (prev) :  0000000A 00000002
          | + function block  :  00000014 00000000
          |  Already listed
  05          LL_CtrlToHostFlowControl
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000000 00000002
              |  Already listed
  05          HCI_CommandCompleteEvent
              | Stack used (prev) :  00000074 00000006
              | + function block  :  0000002B 00000000
              |  Already listed
  04        HCI_HostNumCompletedPktCmd
            | Stack used (prev) :  00000939 0000007B
            | + function block  :  0000000C 00000000
  03      L2CAP_HostNumCompletedPkts
          | Stack used (prev) :  00000945 0000007B
          | + function block  :  00000008 00000004
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcmp
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000D 00000000
              |  Already listed
  05          osal_revmemcpy
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000B 00000001
              |  Already listed
  05          sm_CMAC
              | Stack used (prev) :  0000047E 0000005C
              | + function block  :  00000097 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  06            osal_msg_send
                | Stack used (prev) :  00000032 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  06            linkDB_Find
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000014 00000002
                |  Already listed
  06            GAP_GetParamValue
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000014 00000002
                |  Already listed
  05          gapUpdateConnSignCounter
              | Stack used (prev) :  00000939 0000007B
              | + function block  :  00000018 00000001
  04        SM_VerifyAuthenSig
            | Stack used (prev) :  00000951 0000007B
            | + function block  :  00000081 00000001
  03      ATT_ParsePacket
          | Stack used (prev) :  000009D2 0000007B
          | + function block  :  00000022 00000001
  03      ATT_ErrorRsp
          | Stack used (prev) :  000005AB 0000005E
          | + function block  :  00000018 00000000
          |  Already listed
  02    gattProcessRxData
        | Stack used (prev) :  000009F4 0000007F
        | + function block  :  00000038 00000000
  01  GATT_ProcessEvent
      | Stack used (prev) :  00000A2C 0000007F
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A44 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A44 0000007F
  01  gattRegisterServer::?relay
      | Stack used (prev) :  00000A44 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A44 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A44 0000007F
  01  GATT_AppCompletedMsg::?relay
      | Stack used (prev) :  00000A44 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A44 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A44 0000007F
  01  GATT_Init::?relay
      | Stack used (prev) :  00000A44 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A44 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A44 0000007F
  01  GATT_ProcessEvent::?relay
      | Stack used (prev) :  00000A44 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A44 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A44 0000007F
  01  gattProcessRxData::?relay
      | Stack used (prev) :  00000A44 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A44 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A44 0000007F
  01  gattNotifyEvent::?relay
      | Stack used (prev) :  00000A44 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A44 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A44 0000007F
  01  gattStartTimer::?relay
      | Stack used (prev) :  00000A44 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A44 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A44 0000007F
  01  gattStopTimer::?relay
      | Stack used (prev) :  00000A44 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A44 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A44 0000007F
  02    osal_msg_receive
        | Stack used (prev) :  00000882 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        osal_strlen
            | Stack used (prev) :  000001EA 00000048
            | + function block  :  00000000 00000004
            |  Already listed
  04        GATTServApp_ReadCharCfg
            | Stack used (prev) :  00000400 0000005C
            | + function block  :  00000031 00000000
            |  Already listed
  05          gattServApp_FindServiceCBs
              | Stack used (prev) :  00000A44 0000007F
              | + function block  :  0000001D 00000002
  04        gattServApp_FindAuthorizeAttrCB
            | Stack used (prev) :  00000A61 00000081
            | + function block  :  00000031 00000000
  04        gattServApp_FindServiceCBs
            | Stack used (prev) :  00000A44 0000007F
            | + function block  :  0000001D 00000002
            |  Already listed
  06            GATT_ServiceNumAttrs
                | Stack used (prev) :  00000A44 0000007F
                | + function block  :  0000000A 00000002
  05          gattServiceLastHandle
              | Stack used (prev) :  00000A4E 00000081
              | + function block  :  00000026 00000000
  05          gattServiceLastHandle
              | Stack used (prev) :  00000A4E 00000081
              | + function block  :  00000026 00000000
              |  Already listed
  05          GATT_FindHandleUUID
              | Stack used (prev) :  00000458 0000005B
              | + function block  :  00000060 00000000
              |  Already listed
  05          ATT_CompareUUID
              | Stack used (prev) :  0000041C 0000005B
              | + function block  :  0000003C 00000000
              |  Already listed
  04        GATT_FindNextAttr
            | Stack used (prev) :  00000A74 00000081
            | + function block  :  00000028 00000000
  04        GATT_FindHandle
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000022 00000000
            |  Already listed
  04        ATT_CompareUUID
            | Stack used (prev) :  0000041C 0000005B
            | + function block  :  0000003C 00000000
            |  Already listed
  03      GATTServApp_ReadAttr
          | Stack used (prev) :  00000A9C 00000081
          | + function block  :  0000007B 00000000
  03      GATTServApp_ReadAttr
          | Stack used (prev) :  00000A9C 00000081
          | + function block  :  0000007B 00000000
          |  Already listed
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  05          gattServApp_FindServiceCBs
              | Stack used (prev) :  00000A44 0000007F
              | + function block  :  0000001D 00000002
              |  Already listed
  05          GATT_FindHandle
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000022 00000000
              |  Already listed
  04        GATTServApp_WriteAttr
            | Stack used (prev) :  00000A61 00000081
            | + function block  :  00000044 00000000
  04        gattServApp_FindPrepareWriteQ
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ExecuteWriteRsp
            | Stack used (prev) :  00000A44 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessExecuteWriteReq
          | Stack used (prev) :  00000AA5 00000081
          | + function block  :  0000004A 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        gattServApp_FindAuthorizeAttrCB
            | Stack used (prev) :  00000A61 00000081
            | + function block  :  00000031 00000000
            |  Already listed
  04        gattServApp_FindPrepareWriteQ
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  04        gattServApp_FindPrepareWriteQ
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  04        GATT_FindHandle
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_PrepareWriteRsp
            | Stack used (prev) :  00000A44 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessPrepareWriteReq
          | Stack used (prev) :  00000A92 00000081
          | + function block  :  0000003E 00000000
  04        GATTServApp_WriteAttr
            | Stack used (prev) :  00000A61 00000081
            | + function block  :  00000044 00000000
            |  Already listed
  04        gattServApp_FindAuthorizeAttrCB
            | Stack used (prev) :  00000A61 00000081
            | + function block  :  00000031 00000000
            |  Already listed
  04        GATT_FindHandle
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_WriteRsp
            | Stack used (prev) :  00000A44 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessWriteReq
          | Stack used (prev) :  00000AA5 00000081
          | + function block  :  0000004E 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  00000A9C 00000081
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindNextAttr
            | Stack used (prev) :  00000A74 00000081
            | + function block  :  00000028 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  00000458 0000005B
            | + function block  :  00000060 00000000
            |  Already listed
  04        GATT_VerifyReadPermissions
            | Stack used (prev) :  0000041E 0000005C
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ReadByGrpTypeRsp
            | Stack used (prev) :  00000A44 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessReadByGrpTypeReq
          | Stack used (prev) :  00000B17 00000081
          | + function block  :  0000005A 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  00000A9C 00000081
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindHandle
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ReadMultiRsp
            | Stack used (prev) :  00000A44 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessReadMultiReq
          | Stack used (prev) :  00000B17 00000081
          | + function block  :  0000004E 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  00000A9C 00000081
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  00000458 0000005B
            | + function block  :  00000060 00000000
            |  Already listed
  04        GATT_VerifyReadPermissions
            | Stack used (prev) :  0000041E 0000005C
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ReadByTypeRsp
            | Stack used (prev) :  00000A44 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessReadByTypeReq
          | Stack used (prev) :  00000B17 00000081
          | + function block  :  00000056 00000000
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcmp
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000D 00000000
            |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  00000A9C 00000081
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindNextAttr
            | Stack used (prev) :  00000A74 00000081
            | + function block  :  00000028 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  00000458 0000005B
            | + function block  :  00000060 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_FindByTypeValueRsp
            | Stack used (prev) :  00000A44 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessFindByTypeValueReq
          | Stack used (prev) :  00000B17 00000081
          | + function block  :  00000052 00000000
  04        L2CAP_HostNumCompletedPkts
            | Stack used (prev) :  00000945 0000007B
            | + function block  :  00000008 00000004
            |  Already listed
  03      GATT_AppCompletedMsg
          | Stack used (prev) :  00000A44 0000007F
          | + function block  :  00000000 00000004
  03      GATT_FindHandle
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000022 00000000
          |  Already listed
  04        attSendMsg
            | Stack used (prev) :  00000579 0000005E
            | + function block  :  00000032 00000000
            |  Already listed
  03      ATT_ReadBlobRsp
          | Stack used (prev) :  00000A44 0000007F
          | + function block  :  0000000C 00000000
  04        attSendMsg
            | Stack used (prev) :  00000579 0000005E
            | + function block  :  00000032 00000000
            |  Already listed
  03      ATT_ReadRsp
          | Stack used (prev) :  00000A44 0000007F
          | + function block  :  0000000C 00000000
  04        attSendMsg
            | Stack used (prev) :  00000579 0000005E
            | + function block  :  00000032 00000000
            |  Already listed
  03      ATT_ExchangeMTURsp
          | Stack used (prev) :  00000A44 0000007F
          | + function block  :  0000000C 00000000
  03      ATT_ErrorRsp
          | Stack used (prev) :  000005AB 0000005E
          | + function block  :  00000018 00000000
          |  Already listed
  02    gattServApp_ProcessMsg
        | Stack used (prev) :  00000B71 00000083
        | + function block  :  00000038 00000000
  01  GATTServApp_ProcessEvent
      | Stack used (prev) :  00000BA9 00000083
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_RegisterForMsg::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_Init::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_ProcessEvent::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_RegisterService::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_SetNumPrepareWrites::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_FindAttr::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_AddService::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_FindServiceCBs::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_ProcessMsg::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_ProcessFindByTypeValueReq::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_ProcessReadByTypeReq::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_ProcessReadMultiReq::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_ProcessReadByGrpTypeReq::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_ProcessWriteReq::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_ProcessPrepareWriteReq::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_ProcessExecuteWriteReq::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_FindPrepareWriteQ::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_FindCharCfgItem::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_FindAuthorizeAttrCB::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_WriteAttrCB::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_ReadAttr::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_WriteAttr::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_UpdateCharCfg::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_SendServiceChangedInd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_InitCharCfg::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_ReadCharCfg::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_WriteCharCfg::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_ProcessCCCWriteReq::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_ProcessCharCfg::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  gattServApp_HandleConnStatusCB::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  GATTServApp_SendCCCUpdatedEvent::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_bm_alloc::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_SendDataPkt::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_DisconnectCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_HostNumCompletedPktCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_ReadBDADDRCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_ReadRssiCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_LE_ReadBufSizeCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_LE_SetRandomAddressCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_LE_SetAdvParamCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_LE_SetAdvDataCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_LE_SetScanRspDataCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_LE_SetAdvEnableCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_LE_ClearWhiteListCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_LE_AddWhiteListCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_LE_RandCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_LE_LtkReqReplyCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_LE_LtkReqNegReplyCmd::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  LL_RandCback::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  LL_EXT_SetRxGainCback::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  LL_EXT_SetTxPowerCback::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  LL_EXT_ExtendRfRangeCback::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  LL_RxDataCompleteCback::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  hciInitEventMasks::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_NumOfCompletedPacketsEvent::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_CommandCompleteEvent::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_VendorSpecifcCommandCompleteEvent::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_CommandStatusEvent::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_SendCommandStatusEvent::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_SendCommandCompleteEvent::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  HCI_SendControllerToHostEvent::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  LL_ConnectionCompleteCback::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  LL_DisconnectCback::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  LL_ConnParamUpdateCback::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  LL_ReadRemoteVersionInfoCback::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  LL_EncLtkReqCback::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  LL_EncChangeCback::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  LL_EncKeyRefreshCback::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  L2CAP_RegisterApp::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  L2CAP_SendData::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  L2CAP_CmdReject::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  L2CAP_ConnParamUpdateReq::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  01  L2CAP_HostNumCompletedPkts::?relay
      | Stack used (prev) :  00000BC1 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC1 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC1 00000083
  02    osal_msg_receive
        | Stack used (prev) :  00000882 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      osal_bm_free
          | Stack used (prev) :  0000000A 00000002
          | + function block  :  00000014 00000000
          |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      l2capNotifyData
          | Stack used (prev) :  00000BC1 00000083
          | + function block  :  00000012 00000000
  04        osal_bm_adjust_header
            | Stack used (prev) :  000003FE 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  03      l2capParsePacket
          | Stack used (prev) :  00000BC1 00000083
          | + function block  :  0000000E 00000000
  04        l2capHandleRxError
            | Stack used (prev) :  00000BC1 00000083
            | + function block  :  00000000 00000000
  04        l2capParseSignalHdr
            | Stack used (prev) :  00000BC1 00000083
            | + function block  :  00000009 00000001
  05          l2capNotifySignal
              | Stack used (prev) :  0000040C 0000005C
              | + function block  :  0000002D 00000000
              |  Already listed
  05          L2CAP_ParseParamUpdateReq
              | Stack used (prev) :  00000BC1 00000083
              | + function block  :  0000000B 00000000
  05          L2CAP_CmdReject
              | Stack used (prev) :  00000891 00000076
              | + function block  :  0000001C 00000000
              |  Already listed
  04        l2capProcessReq
            | Stack used (prev) :  00000BCC 00000083
            | + function block  :  0000005E 00000000
  06            osal_CbTimerStop
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000B 00000000
                |  Already listed
  05          l2capStopTimer
              | Stack used (prev) :  00000BC1 00000083
              | + function block  :  00000009 00000000
  05          l2capFindLocalId
              | Stack used (prev) :  00000BC1 00000083
              | + function block  :  0000000A 00000000
  05          l2capFreeChannel
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000012 00000002
              |  Already listed
  05          l2capNotifySignal
              | Stack used (prev) :  0000040C 0000005C
              | + function block  :  0000002D 00000000
              |  Already listed
  05          l2capParseParamUpdateRsp
              | Stack used (prev) :  00000BC1 00000083
              | + function block  :  0000000B 00000000
  05          l2capParseCmdReject
              | Stack used (prev) :  00000BC1 00000083
              | + function block  :  0000000C 00000000
  04        l2capProcessRsp
            | Stack used (prev) :  00000BCD 00000083
            | + function block  :  00000054 00000000
  04        L2CAP_CmdReject
            | Stack used (prev) :  00000891 00000076
            | + function block  :  0000001C 00000000
            |  Already listed
  03      l2capProcessSignal
          | Stack used (prev) :  00000C2A 00000084
          | + function block  :  00000040 00000000
  03      L2CAP_HostNumCompletedPkts
          | Stack used (prev) :  00000945 0000007B
          | + function block  :  00000008 00000004
          |  Already listed
  02    l2capProcessRxData
        | Stack used (prev) :  00000C6A 00000084
        | + function block  :  0000002C 00000000
  01  L2CAP_ProcessEvent
      | Stack used (prev) :  00000C96 00000084
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CAE 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CAE 00000084
  01  L2CAP_Init::?relay
      | Stack used (prev) :  00000CAE 00000084
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CAE 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CAE 00000084
  01  L2CAP_ProcessEvent::?relay
      | Stack used (prev) :  00000CAE 00000084
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CAE 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CAE 00000084
  01  l2capProcessRxData::?relay
      | Stack used (prev) :  00000CAE 00000084
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CAE 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CAE 00000084
  01  l2capProcessSignal::?relay
      | Stack used (prev) :  00000CAE 00000084
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CAE 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CAE 00000084
  01  l2capProcessRsp::?relay
      | Stack used (prev) :  00000CAE 00000084
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CAE 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CAE 00000084
  01  l2capProcessReq::?relay
      | Stack used (prev) :  00000CAE 00000084
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CAE 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CAE 00000084
  01  L2CAP_BuildCmdReject
      | Stack used (prev) :  00000CAE 00000084
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CBA 00000085


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CBA 00000085
  01  l2capBuildParamUpdateReq
      | Stack used (prev) :  00000CBA 00000085
      | + function block  :  00000009 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capParseSignalHdr::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capSendReq::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capSendCmd::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capEncapSendData::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capParsePacket::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  L2CAP_BuildCmdReject::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capParseCmdReject::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capBuildParamUpdateReq::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  L2CAP_ParseParamUpdateReq::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capParseParamUpdateRsp::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capNotifyData::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capNotifySignal::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capAllocChannel::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capFreeChannel::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capFindLocalId::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capStopTimer::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capHandleTimerCB::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  l2capHandleRxError::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  L2CAP_bm_alloc::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  linkDB_Init::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  linkDB_Register::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  linkDB_Add::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  linkDB_Remove::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  linkDB_Find::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  linkDB_FindFirst::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  linkDB_State::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  linkDB_NumActive::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  linkDB_Authen::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  linkDB_PerformFunc::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  01  reportStatusChange::?relay
      | Stack used (prev) :  00000CC3 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC3 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CC3 00000086
  02    Onboard_soft_reset
        | Stack used (prev) :  00000CC3 00000086
        | + function block  :  00000000 00000000
  02    osal_start_timerEx
        | Stack used (prev) :  0000004A 00000002
        | + function block  :  00000024 00000000
        |  Already listed
  02    osal_pwrmgr_task_state
        | Stack used (prev) :  000003CC 00000052
        | + function block  :  0000000A 00000000
        |  Already listed
  02    osal_pwrmgr_device
        | Stack used (prev) :  00000CC3 00000086
        | + function block  :  00000000 00000002
  02    llConnTerminate
        | Stack used (prev) :  0000015A 0000000E
        | + function block  :  00000012 00000000
        |  Already listed
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    LL_ConnectionCompleteCback
        | Stack used (prev) :  00000CC3 00000086
        | + function block  :  00000023 00000001
  01  LL_ProcessEvent
      | Stack used (prev) :  00000CE6 00000088
      | + function block  :  0000002A 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_Init::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_ProcessEvent::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_TX_bm_alloc::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_RX_bm_alloc::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_Reset::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_ReadBDADDR::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_SetRandomAddress::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_ClearWhiteList::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_AddWhiteListDevice::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_Encrypt::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_Rand::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_PseudoRand::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_CtrlToHostFlowControl::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_ReadRssi::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_Disconnect::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_TxData::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_SetAdvParam::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_SetAdvData::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_SetAdvControl::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_SetScanRspData::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_EncLtkReply::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  01  LL_EncLtkNegReply::?relay
      | Stack used (prev) :  00000D10 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D10 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D10 00000088
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    llDisableT2IntsEvts
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
        |  Already listed
  02    llGetTaskState
        | Stack used (prev) :  00000D10 00000088
        | + function block  :  00000000 00000002
  02    llFreeTask
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  01  llDirectedAdvEvt_TaskEndOk
      | Stack used (prev) :  00000D10 0000008A
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D30 0000008A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D30 0000008A
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    PHY_DeallocateRxFifo
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
        |  Already listed
  02    PHY_ConfigureAppendRfStatus
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_SetMaxNack
        | Stack used (prev) :  00000D30 0000008A
        | + function block  :  00000000 00000002
  02    PHY_SetSyncWord
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000010 00000000
        |  Already listed
  02    PHY_InitSeqStat
        | Stack used (prev) :  00000D30 0000008A
        | + function block  :  00000000 00000002
  02    PHY_SetDataChan
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_SetCRCInit
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000010 00000000
        |  Already listed
  03      llDivide31By16To16
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000000
          |  Already listed
  02    llCalcTimerDrift
        | Stack used (prev) :  00000D30 0000008A
        | + function block  :  00000017 00000000
  03      llDivide31By16To16
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000000
          |  Already listed
  02    llCalcScaFactor
        | Stack used (prev) :  00000D30 0000008A
        | + function block  :  0000000D 00000000
  02    llAdjustTimeBackward
        | Stack used (prev) :  00000D30 0000008A
        | + function block  :  0000000B 00000000
  02    llGetTimer2Capture
        | Stack used (prev) :  00000D30 0000008A
        | + function block  :  00000000 00000003
  02    llGetTaskState
        | Stack used (prev) :  00000D10 00000088
        | + function block  :  00000000 00000002
        |  Already listed
  02    llFreeTask
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    llAllocTask
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000A 00000001
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  02    llConvertCtrlProcTimeoutToEvent
        | Stack used (prev) :  00000D30 0000008A
        | + function block  :  0000000A 00000000
  02    llConvertLstoToEvent
        | Stack used (prev) :  00000D30 0000008A
        | + function block  :  0000000A 00000000
  02    llConnCleanup
        | Stack used (prev) :  0000001E 00000002
        | + function block  :  00000025 00000000
        |  Already listed
  02    llAllocConnId
        | Stack used (prev) :  00000D30 0000008A
        | + function block  :  00000009 00000001
  02    llProcessChanMap
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000018 00000001
        |  Already listed
  02    llGetNextDataChan
        | Stack used (prev) :  00000D30 0000008A
        | + function block  :  0000000B 00000001
  01  llAdvEvt_TaskConnect
      | Stack used (prev) :  00000D47 0000008D
      | + function block  :  00000034 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D7B 0000008D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D7B 0000008D
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    PHY_SetAdvChans
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_GetAdvChans
        | Stack used (prev) :  00000D7B 0000008D
        | + function block  :  00000000 00000002
  02    llGetTaskState
        | Stack used (prev) :  00000D10 00000088
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  01  llUndirectedAdvEvt_TaskEndOk
      | Stack used (prev) :  00000D7B 0000008F
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D9B 0000008F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D9B 0000008F
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    PHY_SetAdvChans
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_GetAdvChans
        | Stack used (prev) :  00000D7B 0000008D
        | + function block  :  00000000 00000002
        |  Already listed
  02    llGetTaskState
        | Stack used (prev) :  00000D10 00000088
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  01  llDiscoverableAdvEvt_TaskEndOk
      | Stack used (prev) :  00000D9B 0000008F
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DAB 0000008F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DAB 0000008F
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    PHY_SetAdvChans
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_GetAdvChans
        | Stack used (prev) :  00000D7B 0000008D
        | + function block  :  00000000 00000002
        |  Already listed
  02    llGetTaskState
        | Stack used (prev) :  00000D10 00000088
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  01  llNonConnAdvEvt_TaskEndOk
      | Stack used (prev) :  00000DAB 0000008F
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DBB 0000008F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DBB 0000008F
  02    llGetTaskState
        | Stack used (prev) :  00000D10 00000088
        | + function block  :  00000000 00000002
        |  Already listed
  02    llFreeTask
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  01  llAdvEvt_TaskAbort
      | Stack used (prev) :  00000DBB 0000008F
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DBB 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DBB 00000091
  01  llDirectedAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000DBB 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DBB 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DBB 00000091
  01  llAdvEvt_TaskConnect::?relay
      | Stack used (prev) :  00000DBB 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DBB 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DBB 00000091
  01  llUndirectedAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000DBB 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DBB 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DBB 00000091
  01  llDiscoverableAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000DBB 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DBB 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DBB 00000091
  01  llNonConnAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000DBB 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DBB 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DBB 00000091
  01  llAdvEvt_TaskAbort::?relay
      | Stack used (prev) :  00000DBB 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DBB 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DBB 00000091
  01  llStartSlaveSetup
      | Stack used (prev) :  00000DBB 00000091
      | + function block  :  00000009 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llRfInit::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetFreqTune::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llClearSetInts::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llProcessPostRfOps::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llFindTxPowerSettings::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llExtendRfRange::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llCheckWhiteListUsage::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupAdv::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupDirectedAdvEvt::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupUndirectedAdvEvt::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupNonConnectableAdvEvt::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupScannableAdvEvt::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llStartAdvSetup::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llStartSlaveSetup::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupEncRsp::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupStartEncReq::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupStartEncRsp::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupPauseEncRsp::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupRejectInd::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupFeatureSetRsp::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupVersionIndReq::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupTermInd::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSetupUnknownRsp::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llEnqueueCtrlPkt::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llDequeueCtrlPkt::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llReplaceCtrlPkt::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llProcessChanMap::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llAllocConnId::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llReleaseAllConnId::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llGetNextConn::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llConnCleanup::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llConnTerminate::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llInitFeatureSet::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llConvertLstoToEvent::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llConvertCtrlProcTimeoutToEvent::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llAdjustForMissedEvent::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llWriteTxData::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llEnqueueDataQ::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llMemCopySrc::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_ReverseBytes::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_GeneratePseudoRandNum::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_GenerateTrueRandNum::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_GenDeviceSKD::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_GenDeviceIV::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_AES128_Encrypt::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_InitAesDMA::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_MoveData::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_LoadEmptyIV::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_EncryptMsg::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_DecryptMsg::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_GenerateMIC::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_Encrypt::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  LL_ENC_Decrypt::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llUnexpectedEndCauseHandler
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llUnexpectedEndCauseHandler::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSchedulerInit::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llScheduler::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llScheduleTask::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llFindNextSecTask::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llAllocTask::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llFreeTask::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llGetCurrentTask::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llGetTaskState::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llGetActiveTasks::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llGetNumTasks::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSave_txFIFO::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llSave_rxFIFO::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  01  llRestoreConnState::?relay
      | Stack used (prev) :  00000DC4 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DC4 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DC4 00000091
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    llGetTimer2Capture
        | Stack used (prev) :  00000D30 0000008A
        | + function block  :  00000000 00000003
        |  Already listed
  03      LL_ENC_AES128_Encrypt
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000002 00000002
          |  Already listed
  03      llConnTerminate
          | Stack used (prev) :  0000015A 0000000E
          | + function block  :  00000012 00000000
          |  Already listed
  03      llReplaceCtrlPkt
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000003
          |  Already listed
  03      llDequeueCtrlPkt
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  0000000A 00000001
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupUnknownRsp
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  0000000C 00000000
  04        PHY_SetMaxNack
            | Stack used (prev) :  00000D30 0000008A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupTermInd
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  0000000C 00000000
  04        PHY_SetMaxNack
            | Stack used (prev) :  00000D30 0000008A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupVersionIndReq
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  0000000C 00000000
  04        PHY_SetMaxNack
            | Stack used (prev) :  00000D30 0000008A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupFeatureSetRsp
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  0000000C 00000001
  04        PHY_SetMaxNack
            | Stack used (prev) :  00000D30 0000008A
            | + function block  :  00000000 00000002
            |  Already listed
  03      llSetupRejectInd
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  00000009 00000000
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupPauseEncRsp
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  0000000C 00000000
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupStartEncRsp
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  0000000C 00000000
  03      llSetupStartEncReq
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  00000000 00000002
  04        LL_ENC_ReverseBytes
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000001
            |  Already listed
  03      llSetupEncRsp
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  00000009 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_EncKeyRefreshCback
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  0000000C 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_EncChangeCback
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  0000000C 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        LL_EncLtkNegReply
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000000 00000002
            |  Already listed
  03      LL_EncLtkReqCback
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  00000018 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_ReadRemoteVersionInfoCback
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  00000010 00000001
  02    llProcessSlaveControlProcedures
        | Stack used (prev) :  00000DDC 00000093
        | + function block  :  00000024 00000000
  03      PHY_SetEndConnection
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000000 00000002
          |  Already listed
  03      llCalcTimerDrift
          | Stack used (prev) :  00000D30 0000008A
          | + function block  :  00000017 00000000
          |  Already listed
  03      llAdjustTimeBackward
          | Stack used (prev) :  00000D30 0000008A
          | + function block  :  0000000B 00000000
          |  Already listed
  04        ll24BitTimeCompare
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000017 00000000
            |  Already listed
  04        llGetCurrentTime
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000004 00000003
            |  Already listed
  03      llAdjustForMissedEvent
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  0000001C 00000002
  03      llConvertCtrlProcTimeoutToEvent
          | Stack used (prev) :  00000D30 0000008A
          | + function block  :  0000000A 00000000
          |  Already listed
  03      llConvertLstoToEvent
          | Stack used (prev) :  00000D30 0000008A
          | + function block  :  0000000A 00000000
          |  Already listed
  03      llConnTerminate
          | Stack used (prev) :  0000015A 0000000E
          | + function block  :  00000012 00000000
          |  Already listed
  03      llEventDelta
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  00000000 00000000
  03      llEventInRange
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  00000002 00000002
  03      llSetNextDataChan
          | Stack used (prev) :  0000040A 0000005A
          | + function block  :  00000016 00000002
          |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_ConnParamUpdateCback
          | Stack used (prev) :  00000DC4 00000091
          | + function block  :  00000014 00000001
  02    llSetupNextSlaveEvent
        | Stack used (prev) :  00000DE0 00000091
        | + function block  :  0000003C 00000002
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  02    llConnTerminate
        | Stack used (prev) :  0000015A 0000000E
        | + function block  :  00000012 00000000
        |  Already listed
  02    llProcessTxData
        | Stack used (prev) :  00000104 00000006
        | + function block  :  00000022 00000000
        |  Already listed
  02    llProcessRxData
        | Stack used (prev) :  00000194 0000000E
        | + function block  :  00000022 00000000
        |  Already listed
  01  llSlaveEvt_TaskEndOk
      | Stack used (prev) :  00000E1C 00000093
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llSlaveEvt_TaskAbort
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llSlaveEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llSlaveEvt_TaskAbort::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llSetupNextSlaveEvent::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llProcessSlaveControlPacket::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llProcessSlaveControlProcedures::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llInitTimer2::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llStopTimer2::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llStartTimer2::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llSetT2LongC1Timeout::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llSetT2C1Event1::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llSetT2LongC1Event1::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llSetT2OVFC2Event2::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llDisableT2Ints::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llDisableT2IntsEvts::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llDisableT2E1::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llGetTimer2Capture::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llGetCurrentTime::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  llGetFullCTandST::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  ll_McuPrecisionCount::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_Init::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_Reset::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_ClearAllRegsAndFifos::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_SetOwnAddr::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_SetPeerAddr::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_SetCRCInit::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_GetAdvChans::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_SetAdvChans::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_SetEndConnection::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_ConfigureMD::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_GetEndCause::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_InitSeqStat::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_SetSyncWord::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_SetMaxNack::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_ClearWhitelist::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_AddWlEntry::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_SetAdvWlPolicy::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_SetBlacklistIndex::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_ClearBlacklistIndex::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_ClearBlacklist::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_ClearSavedWhiteList::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_ConfigureFifoDataProcessing::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_ConfigureAppendRfStatus::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_SetFifoConfig::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_ConfigWhitener::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_RetryTxFifo::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_RetryRxFifo::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_CommitRxFifo::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_DeallocateRxFifo::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  PHY_SetRfFreq::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  phyFindWlEntry::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  SM_CalcRandomAddr::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  SM_ResolveRandomAddrs::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  SM_GenerateAuthenSig::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  SM_VerifyAuthenSig::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  smProcessRandComplete::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  smStartRspTimer::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  smStopRspTimer::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  sm_ah::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  sm_c1new::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  sm_xor::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  sm_s1::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  smGenerateRandBuf::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  smAuthReqToUint8::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  smUint8ToAuthReq::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  smEncrypt::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  sm_CMAC::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  generate_subkey::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  xor_128::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  01  leftshift_onebit::?relay
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E34 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E34 00000093
  02    smFreePairingParams
        | Stack used (prev) :  000003F2 0000005C
        | + function block  :  00000012 00000004
        |  Already listed
  01  smLinkCheck
      | Stack used (prev) :  00000E34 00000093
      | + function block  :  00000009 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  SM_StartPairing::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  SM_PasskeyUpdate::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smRegisterResponder::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smLinkCheck::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smTimedOut::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smProcessDataMsg::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smSendFailAndEnd::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smProcessEncryptChange::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smNextPairingState::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  sm_c1::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smProcessPairingReq::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smStartEncryption::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smGeneratePairingReqRsp::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smGenerateConfirm::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smGenerateRandMsg::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smSavePairInfo::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smPairingSendEncInfo::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smPairingSendMasterID::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smPairingSendIdentityInfo::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smPairingSendIdentityAddrInfo::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smPairingSendSingingInfo::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smFreePairingParams::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smEndPairing::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smDetermineKeySize::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smSetPairingReqRsp::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  SM_ResponderInit::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smResponderProcessLTKReq::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smpResponderProcessIncoming::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smpResponderProcessPairingReq::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smpResponderProcessPairingRandom::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smpResponderProcessMasterID::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  01  smResponderSendNextKeyInfo::?relay
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E3D 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E3D 00000093
  02    osal_msg_receive
        | Stack used (prev) :  00000882 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_send
        | Stack used (prev) :  00000032 00000006
        | + function block  :  00000012 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      osal_bm_free
          | Stack used (prev) :  0000000A 00000002
          | + function block  :  00000014 00000000
          |  Already listed
  04        smEndPairing
            | Stack used (prev) :  0000048A 00000060
            | + function block  :  0000002E 00000000
            |  Already listed
  04        smEndPairing
            | Stack used (prev) :  0000048A 00000060
            | + function block  :  0000002E 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000032 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  05          GAP_GetParamValue
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        gapSendBondCompleteEvent
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  00000010 00000001
  03      smProcessEncryptChange
          | Stack used (prev) :  00000E4D 00000094
          | + function block  :  00000018 00000000
  05          smUint8ToAuthReq
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000000
              |  Already listed
  04        smpParseSecurityReq
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  00000000 00000002
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseSigningInfo
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseIdentityAddrInfo
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  0000000C 00000001
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseIdentityInfo
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseMasterID
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseEncInfo
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  0000000C 00000000
  04        smpParsePairingFailed
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  00000000 00000003
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParsePairingRandom
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParsePairingConfirm
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  0000000C 00000000
  05          smUint8ToAuthReq
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000000
              |  Already listed
  05          GAP_GetParamValue
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        smpParsePairingReq
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  00000013 00000001
  05          smSendSMMsg
              | Stack used (prev) :  000004AF 0000005E
              | + function block  :  00000028 00000000
              |  Already listed
  05          smEndPairing
              | Stack used (prev) :  0000048A 00000060
              | + function block  :  0000002E 00000000
              |  Already listed
  04        smSendFailAndEnd
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  0000002B 00000000
  04        smStartRspTimer
            | Stack used (prev) :  00000406 0000005C
            | + function block  :  0000001C 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      smProcessDataMsg
          | Stack used (prev) :  00000E68 00000096
          | + function block  :  0000003E 00000000
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  06            llGetCurrentTask
                | Stack used (prev) :  000001B6 00000032
                | + function block  :  00000000 00000002
                |  Already listed
  06            LL_ENC_GenerateTrueRandNum
                | Stack used (prev) :  00000000 00000006
                | + function block  :  00000016 00000000
                |  Already listed
  05          LL_Rand
              | Stack used (prev) :  00000E3D 00000093
              | + function block  :  0000000C 00000000
  05          HCI_CommandCompleteEvent
              | Stack used (prev) :  00000074 00000006
              | + function block  :  0000002B 00000000
              |  Already listed
  04        HCI_LE_RandCmd
            | Stack used (prev) :  00000E49 00000093
            | + function block  :  00000012 00000004
  03      smProcessRandComplete
          | Stack used (prev) :  00000E5B 00000097
          | + function block  :  00000018 00000000
  02    smProcessOSALMsg
        | Stack used (prev) :  00000EA6 00000097
        | + function block  :  0000001E 00000000
  03      smEndPairing
          | Stack used (prev) :  0000048A 00000060
          | + function block  :  0000002E 00000000
          |  Already listed
  02    smNextPairingState
        | Stack used (prev) :  00000E3D 00000093
        | + function block  :  00000000 00000002
  03      smEndPairing
          | Stack used (prev) :  0000048A 00000060
          | + function block  :  0000002E 00000000
          |  Already listed
  02    smTimedOut
        | Stack used (prev) :  00000E3D 00000093
        | + function block  :  00000000 00000002
  01  SM_ProcessEvent
      | Stack used (prev) :  00000EC4 00000097
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000EDC 00000097


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000EDC 00000097
  01  SM_Init::?relay
      | Stack used (prev) :  00000EDC 00000097
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000EDC 00000097


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000EDC 00000097
  01  SM_ProcessEvent::?relay
      | Stack used (prev) :  00000EDC 00000097
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000EDC 00000097


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000EDC 00000097
  01  smProcessOSALMsg::?relay
      | Stack used (prev) :  00000EDC 00000097
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000EDC 00000097


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000EDC 00000097
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildPairingConfirm
      | Stack used (prev) :  00000EDC 00000097
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000EE8 00000097


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000EE8 00000097
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildPairingRandom
      | Stack used (prev) :  00000EE8 00000097
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000EF4 00000097


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000EF4 00000097
  01  smpBuildPairingFailed
      | Stack used (prev) :  00000EF4 00000097
      | + function block  :  00000000 00000003
  <-Sub-tree of type: Function tree
    | Stack used          :  00000EF4 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000EF4 0000009A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildEncInfo
      | Stack used (prev) :  00000EF4 0000009A
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F00 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F00 0000009A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildMasterID
      | Stack used (prev) :  00000F00 0000009A
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F0C 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F0C 0000009B
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildIdentityInfo
      | Stack used (prev) :  00000F0C 0000009B
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F18 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F18 0000009B
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildIdentityAddrInfo
      | Stack used (prev) :  00000F18 0000009B
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F24 0000009C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F24 0000009C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildSigningInfo
      | Stack used (prev) :  00000F24 0000009C
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F30 0000009C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F30 0000009C
  02    smAuthReqToUint8
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  01  smpBuildSecurityReq
      | Stack used (prev) :  00000F30 0000009C
      | + function block  :  00000009 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpBuildPairingReq::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpBuildPairingRsp::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpBuildPairingReqRsp::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpParsePairingReq::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpBuildPairingConfirm::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpParsePairingConfirm::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpBuildPairingRandom::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpParsePairingRandom::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpBuildPairingFailed::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpParsePairingFailed::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpBuildEncInfo::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpParseEncInfo::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpBuildMasterID::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpParseMasterID::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpBuildIdentityInfo::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpBuildIdentityAddrInfo::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpParseIdentityInfo::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpParseIdentityAddrInfo::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpBuildSigningInfo::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpParseSigningInfo::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpBuildSecurityReq::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smpParseSecurityReq::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  01  smSendSMMsg::?relay
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009D
  02    osal_bm_free
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000014 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  00000882 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  01  HCI_ProcessEvent
      | Stack used (prev) :  00000F39 0000009D
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  HCI_Init::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  HCI_ProcessEvent::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  HCI_GAPTaskRegister::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  HCI_L2CAPTaskRegister::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  HCI_SMPTaskRegister::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_strlen::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_memcpy::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_revmemcpy::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_memdup::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_memcmp::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_memset::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  _ltoa::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_rand::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_msg_allocate::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_msg_deallocate::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_msg_send::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_msg_enqueue_push::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_msg_receive::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_msg_enqueue::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_msg_push::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_msg_extract::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_set_event::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_clear_event::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_int_disable::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_init_system::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_start_system::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_run_system::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_isbufset::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osalTimeUpdate::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_mem_init::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_mem_kick::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_mem_alloc::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_mem_free::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_pwrmgr_init::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_pwrmgr_device::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_pwrmgr_task_state::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_pwrmgr_powerconserve::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osalInitTasks::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osalTimerInit::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osalAddTimer::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osalFindTimer::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osalDeleteTimer::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_start_timerEx::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_start_reload_timer::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_stop_timerEx::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_get_timeoutEx::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osalTimerUpdate::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_next_timeout::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  osal_GetSystemClock::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  InitBoard::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  Onboard_rand::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  _itoa::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  RegisterForKeys::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  OnBoard_SendKeys::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  OnBoard_KeyCallback::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  xnvSPIWrite::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  HalSPIRead::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  HalSPIWrite::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  SbpHalUART_Init::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  SbpHalUARTInit::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  studyCompletedAndBroadcastData::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  SbpHalUARTReadCallback::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  SbpHalUARTRead::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  delay_nus::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  set_de_passkey::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  set_new_passkey::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  atoi::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  set_code_name::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  Batt_AddService::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  battReadAttrCB::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  battWriteAttrCB::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  battMeasure::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  DevInfo_AddService::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  DevInfo_SetParameter::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  devInfo_ReadAttrCB::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  01  GAP_DeviceInit::?relay
      | Stack used (prev) :  00000F45 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009D
  02    gapBondFreeAuthEvt
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000042 00000002
        |  Already listed
  05          osal_snv_read
              | Stack used (prev) :  00000442 0000005B
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_snv_write
              | Stack used (prev) :  0000050B 0000005C
              | + function block  :  00000022 00000000
              |  Already listed
  05          gapBondMgrInvertCharCfgItem
              | Stack used (prev) :  00000F45 0000009D
              | + function block  :  0000004D 00000001
  05          gapBondMgrInvertCharCfgItem
              | Stack used (prev) :  00000F45 0000009D
              | + function block  :  0000004D 00000001
              |  Already listed
  05          gapBondMgrFindCharCfgItem
              | Stack used (prev) :  00000F45 0000009D
              | + function block  :  00000031 00000000
  05          gapBondMgrFindCharCfgItem
              | Stack used (prev) :  00000F45 0000009D
              | + function block  :  00000031 00000000
              |  Already listed
  05          osal_isbufset
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  04        gapBondMgrUpdateCharCfg
            | Stack used (prev) :  00000F92 0000009D
            | + function block  :  0000005E 00000001
  04        gapBondMgrUpdateCharCfg
            | Stack used (prev) :  00000F92 0000009D
            | + function block  :  0000005E 00000001
            |  Already listed
  04        GAPBondMgr_ResolveAddr
            | Stack used (prev) :  00000588 00000060
            | + function block  :  00000064 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      GAPBondMgr_UpdateCharCfg
          | Stack used (prev) :  00000FF0 0000009E
          | + function block  :  0000002B 00000000
  03      GATTServApp_ReadAttr
          | Stack used (prev) :  00000A9C 00000081
          | + function block  :  0000007B 00000000
          |  Already listed
  03      GATT_FindNextAttr
          | Stack used (prev) :  00000A74 00000081
          | + function block  :  00000028 00000000
          |  Already listed
  03      GATT_FindHandleUUID
          | Stack used (prev) :  00000458 0000005B
          | + function block  :  00000060 00000000
          |  Already listed
  02    gapBondMgr_SyncCharCfg
        | Stack used (prev) :  0000101B 0000009E
        | + function block  :  0000002A 00000000
  03      osal_snv_write
          | Stack used (prev) :  0000050B 0000005C
          | + function block  :  00000022 00000000
          |  Already listed
  03      gapBondMgr_SyncWhiteList
          | Stack used (prev) :  00000447 00000064
          | + function block  :  0000002C 00000000
          |  Already listed
  03      gapBondSetupPrivFlag
          | Stack used (prev) :  00000428 0000005C
          | + function block  :  0000001C 00000004
          |  Already listed
  03      gapBondMgrFindAddr
          | Stack used (prev) :  000003FF 0000005A
          | + function block  :  00000036 00000000
          |  Already listed
  03      osal_isbufset
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000A 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    gapBondMgrAddBond
        | Stack used (prev) :  00000F45 0000009D
        | + function block  :  00000040 00000000
  03      osal_snv_compact
          | Stack used (prev) :  0000050B 0000005C
          | + function block  :  00000028 00000000
          |  Already listed
  03      osal_snv_write
          | Stack used (prev) :  0000050B 0000005C
          | + function block  :  00000022 00000000
          |  Already listed
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  06            smSendFailAndEnd
                | Stack used (prev) :  00000E3D 00000093
                | + function block  :  0000002B 00000000
                |  Already listed
  06            smUint8ToAuthReq
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000A 00000000
                |  Already listed
  05          smProcessPairingReq
              | Stack used (prev) :  00000F45 0000009D
              | + function block  :  00000013 00000002
  06            osal_mem_alloc
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  06            smFreePairingParams
                | Stack used (prev) :  000003F2 0000005C
                | + function block  :  00000012 00000004
                |  Already listed
  06            smGeneratePairingReqRsp
                | Stack used (prev) :  000004D7 0000005E
                | + function block  :  00000038 00000000
                |  Already listed
  06            GAP_GetParamValue
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000014 00000002
                |  Already listed
  05          SM_StartPairing
              | Stack used (prev) :  00000F45 0000009D
              | + function block  :  00000014 00000001
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  05          gapFreeAuthLink
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        GAP_Authenticate
            | Stack used (prev) :  00000F59 0000009F
            | + function block  :  00000020 00000000
  03      gapBondMgrAuthenticate
          | Stack used (prev) :  00000F79 0000009F
          | + function block  :  00000070 00000000
  03      gapBondMgrEraseBonding
          | Stack used (prev) :  0000052D 0000005C
          | + function block  :  000000A8 00000000
          |  Already listed
  03      gapBondMgrEraseAllBondings
          | Stack used (prev) :  000005D5 0000005C
          | + function block  :  00000036 00000000
          |  Already listed
  03      gapBondMgrReadBonds
          | Stack used (prev) :  00000473 00000064
          | + function block  :  00000036 00000000
          |  Already listed
  03      gapBondMgrAddBond
          | Stack used (prev) :  00000F45 0000009D
          | + function block  :  00000040 00000000
          |  Already listed
  03      GAPBondMgr_ResolveAddr
          | Stack used (prev) :  00000588 00000060
          | + function block  :  00000064 00000000
          |  Already listed
  03      GAPBondMgr_ResolveAddr
          | Stack used (prev) :  00000588 00000060
          | + function block  :  00000064 00000000
          |  Already listed
  03      osal_set_event
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000017 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      linkDB_Find
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  03      GAP_NumActiveConnections
          | Stack used (prev) :  000003F2 0000005C
          | + function block  :  00000000 00000004
          |  Already listed
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          smGenerateConfirm
              | Stack used (prev) :  000004D7 0000005E
              | + function block  :  00000042 00000000
              |  Already listed
  05          sm_c1
              | Stack used (prev) :  00000569 00000060
              | + function block  :  00000080 00000000
              |  Already listed
  05          smGenerateRandBuf
              | Stack used (prev) :  0000040A 00000064
              | + function block  :  00000027 00000000
              |  Already listed
  04        SM_PasskeyUpdate
            | Stack used (prev) :  00000F45 0000009D
            | + function block  :  0000000C 00000000
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      GAP_PasscodeUpdate
          | Stack used (prev) :  00000F51 0000009D
          | + function block  :  00000056 00000001
  04        smSendFailAndEnd
            | Stack used (prev) :  00000E3D 00000093
            | + function block  :  0000002B 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      GAP_TerminateAuth
          | Stack used (prev) :  00000F45 0000009D
          | + function block  :  0000000D 00000001
  02    GAPBondMgr_ProcessGAPMsg
        | Stack used (prev) :  00000FE9 0000009F
        | + function block  :  00000054 00000000
  02    GAPBondMgr_UpdateCharCfg
        | Stack used (prev) :  00000FF0 0000009E
        | + function block  :  0000002B 00000000
        |  Already listed
  03      gapBondMgrSendServiceChange
          | Stack used (prev) :  00000661 0000005E
          | + function block  :  0000000C 00000004
          |  Already listed
  04        osal_snv_read
            | Stack used (prev) :  00000442 0000005B
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_snv_write
            | Stack used (prev) :  0000050B 0000005C
            | + function block  :  00000022 00000000
            |  Already listed
  04        osal_isbufset
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000A 00000000
            |  Already listed
  03      gapBondMgrChangeState
          | Stack used (prev) :  00000F45 0000009D
          | + function block  :  00000026 00000000
  03      gapBondMgrChangeState
          | Stack used (prev) :  00000F45 0000009D
          | + function block  :  00000026 00000000
          |  Already listed
  03      GAPBondMgr_ResolveAddr
          | Stack used (prev) :  00000588 00000060
          | + function block  :  00000064 00000000
          |  Already listed
  03      linkDB_PerformFunc
          | Stack used (prev) :  00000F45 0000009D
          | + function block  :  00000000 00000002
  03      linkDB_Find
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  02    GAPBondMgr_ServiceChangeInd
        | Stack used (prev) :  00000F6B 0000009F
        | + function block  :  00000024 00000000
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  00000882 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  01  GAPBondMgr_ProcessEvent
      | Stack used (prev) :  00001045 0000009F
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  GAPBondMgr_SetParameter::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  GAPBondMgr_LinkEst::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  GAPBondMgr_ResolveAddr::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  GAPBondMgr_ServiceChangeInd::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  GAPBondMgr_UpdateCharCfg::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  GAPBondMgr_Register::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  GAPBondMgr_ProcessGAPMsg::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrChangeState::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrUpdateCharCfg::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrFindCharCfgItem::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrInvertCharCfgItem::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrAddBond::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrGetPublicAddr::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrFindAddr::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrResolvePrivateAddr::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrReadBonds::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrBondTotal::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrEraseAllBondings::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrEraseBonding::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  GAPBondMgr_Init::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  GAPBondMgr_ProcessEvent::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrSendServiceChange::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondSetupPrivFlag::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrAuthenticate::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgrBondReq::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgr_SyncWhiteList::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondMgr_SyncCharCfg::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  gapBondFreeAuthEvt::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  HalAdcInit::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  HalAdcRead::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  HalAdcSetReference::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  aesDmaInit::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  HalAesInit::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  01  HalDmaInit::?relay
      | Stack used (prev) :  0000105D 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000105D 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000105D 0000009F
  02    halRestoreSleepLevel
        | Stack used (prev) :  0000105D 0000009F
        | + function block  :  00000000 00000000
  03      HalLedOnOff
          | Stack used (prev) :  0000105D 0000009F
          | + function block  :  00000019 00000002
  03      HalLedOnOff
          | Stack used (prev) :  0000105D 0000009F
          | + function block  :  00000019 00000002
          |  Already listed
  04        osal_GetSystemClock
            | Stack used (prev) :  0000105D 0000009F
            | + function block  :  00000000 00000002
  04        osal_stop_timerEx
            | Stack used (prev) :  000001C2 00000034
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_set_event
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000017 00000000
            |  Already listed
  04        HalLedOnOff
            | Stack used (prev) :  0000105D 0000009F
            | + function block  :  00000019 00000002
            |  Already listed
  03      Recursive system consisting of
           | HalLedBlink
           | HalLedSet
          | Stack used (prev) :  00001076 0000009F
          | + function block  :  0000003A 00000002
  03      osal_GetSystemClock
          | Stack used (prev) :  0000105D 0000009F
          | + function block  :  00000000 00000002
          |  Already listed
  03      osal_start_timerEx
          | Stack used (prev) :  0000004A 00000002
          | + function block  :  00000024 00000000
          |  Already listed
  02    HalLedUpdate
        | Stack used (prev) :  000010B0 000000A1
        | + function block  :  00000032 00000000
  04        HalAdcRead
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000A 00000000
            |  Already listed
  03      halGetJoyKeyInput
          | Stack used (prev) :  0000105D 0000009F
          | + function block  :  00000012 00000000
  02    HalKeyPoll
        | Stack used (prev) :  0000106F 0000009F
        | + function block  :  00000012 00000000
  02    osal_stop_timerEx
        | Stack used (prev) :  000001C2 00000034
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_start_timerEx
        | Stack used (prev) :  0000004A 00000002
        | + function block  :  00000024 00000000
        |  Already listed
  02    osal_pwrmgr_task_state
        | Stack used (prev) :  000003CC 00000052
        | + function block  :  0000000A 00000000
        |  Already listed
  02    osal_clear_event
        | Stack used (prev) :  000001B6 00000032
        | + function block  :  00000017 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  00000882 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  01  Hal_ProcessEvent
      | Stack used (prev) :  000010E2 000000A1
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  Hal_Init::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalDriverInit::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  Hal_ProcessEvent::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  Hal_ProcessPoll::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalDS1307ReadTimeData::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  showDate::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  hex2char::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalFlashRead::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalFlashWrite::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalFlashErase::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  i2cMstStrt::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalI2CInit::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalI2CRead::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalI2CWrite::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalKeyInit::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalKeyConfig::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalKeyRead::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalKeyPoll::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  halGetJoyKeyInput::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  halProcessKeyInterrupt::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalKeyEnterSleep::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalKeyExitSleep::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  set_ddram_line_col::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  DisplayByte_5x7::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLcdInit::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLcdWriteString::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLcdWriteStringValue::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLcd_HW_Init::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLcd_HW_Control::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLcd_HW_Write::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLcd_HW_Clear::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLcd_HW_WriteChar::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLcd_HW_WriteLine::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLcd_HW_WaitUs::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLedInit::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLedSet::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLedBlink::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLedUpdate::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLedOnOff::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLedEnterSleep::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalLedExitSleep::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalSensorReadReg::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  halSetSleepMode::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  halSleep::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  halSleepSetTimer::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  halSleepReadTimer::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  halRestoreSleepLevel::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalUARTInitDMA::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalUARTReadDMA::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalUARTPollDMA::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalUARTRxAvailDMA::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalUARTBusyDMA::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalUARTInit::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalUARTOpen::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalUARTRead::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalUARTPoll::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  Hal_UART_RxBufLen::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  HalUARTIsrDMA::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  osal_bm_alloc::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  osal_bm_free::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  osal_bm_adjust_header::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  bm_desc_from_payload::?relay
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000010F6 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000010F6 000000A1
  01  osal_CbTimerProcessEvent
      | Stack used (prev) :  000010F6 000000A1
      | + function block  :  0000000F 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  osal_CbTimerInit::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  osal_CbTimerProcessEvent::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  osal_CbTimerStart::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  osal_CbTimerStop::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  initNV::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  setActivePage::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  setXferPage::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  erasePage::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  cleanErasedPage::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  findOffset::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  findItem::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  writeItem::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  compactPage::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  verifyWordM::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  writeWord::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  osal_snv_init::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  osal_snv_write::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  osal_snv_read::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  01  osal_snv_compact::?relay
      | Stack used (prev) :  00001105 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001105 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001105 000000A1
  04        osal_start_timerEx
            | Stack used (prev) :  0000004A 00000002
            | + function block  :  00000024 00000000
            |  Already listed
  06            osal_CbTimerStart
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000001B 00000001
                |  Already listed
  06            linkDB_State
                | Stack used (prev) :  00000406 0000005C
                | + function block  :  00000014 00000000
                |  Already listed
  06            l2capFreeChannel
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000012 00000002
                |  Already listed
  06            l2capAllocChannel
                | Stack used (prev) :  00001105 000000A1
                | + function block  :  0000001E 00000001
  06            l2capSendCmd
                | Stack used (prev) :  00000865 00000075
                | + function block  :  0000002C 00000001
                |  Already listed
  05          l2capSendReq
              | Stack used (prev) :  00001123 000000A1
              | + function block  :  00000028 00000001
  04        L2CAP_ConnParamUpdateReq
            | Stack used (prev) :  0000114B 000000A2
            | + function block  :  0000001C 00000000
  04        GAP_GetParamValue
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      gapRole_startConnUpdate
          | Stack used (prev) :  00001167 000000A1
          | + function block  :  0000003E 00000002
  03      osal_stop_timerEx
          | Stack used (prev) :  000001C2 00000034
          | + function block  :  00000018 00000000
          |  Already listed
  02    GAPRole_SendUpdateParam
        | Stack used (prev) :  000011A5 000000A3
        | + function block  :  00000032 00000000
  02    gapRole_startConnUpdate
        | Stack used (prev) :  00001167 000000A1
        | + function block  :  0000003E 00000002
        |  Already listed
  04        osal_snv_write
            | Stack used (prev) :  0000050B 0000005C
            | + function block  :  00000022 00000000
            |  Already listed
  04        GAPBondMgr_ProcessGAPMsg
            | Stack used (prev) :  00000FE9 0000009F
            | + function block  :  00000054 00000000
            |  Already listed
  05          osal_snv_read
              | Stack used (prev) :  00000442 0000005B
              | + function block  :  00000018 00000000
              |  Already listed
  06            osal_snv_read
                | Stack used (prev) :  00000442 0000005B
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  07              osal_mem_free
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  0000000A 00000002
                  |  Already listed
  07              osal_memdup
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000010 00000000
                  |  Already listed
  07              smStartEncryption
                  | Stack used (prev) :  00001105 000000A1
                  | + function block  :  00000016 00000000
  07              linkDB_Find
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000014 00000002
                  |  Already listed
  06            GAP_Bond
                | Stack used (prev) :  0000111B 000000A1
                | + function block  :  00000029 00000000
  05          gapBondMgrBondReq
              | Stack used (prev) :  00001144 000000A1
              | + function block  :  00000097 00000000
  05          gapBondMgrInvertCharCfgItem
              | Stack used (prev) :  00000F45 0000009D
              | + function block  :  0000004D 00000001
              |  Already listed
  05          GAPBondMgr_ResolveAddr
              | Stack used (prev) :  00000588 00000060
              | + function block  :  00000064 00000000
              |  Already listed
  05          osal_isbufset
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          GATTServApp_SendServiceChangedInd
              | Stack used (prev) :  0000064F 0000005E
              | + function block  :  00000012 00000000
              |  Already listed
  06            GATTServApp_WriteAttr
                | Stack used (prev) :  00000A61 00000081
                | + function block  :  00000044 00000000
                |  Already listed
  05          GATTServApp_UpdateCharCfg
              | Stack used (prev) :  00001105 000000A1
              | + function block  :  00000014 00000001
  06            smSendSMMsg
                | Stack used (prev) :  000004AF 0000005E
                | + function block  :  00000028 00000000
                |  Already listed
  06            smUint8ToAuthReq
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000A 00000000
                |  Already listed
  06            linkDB_Find
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000014 00000002
                |  Already listed
  05          GAP_SendSlaveSecurityRequest
              | Stack used (prev) :  00001105 000000A1
              | + function block  :  00000010 00000000
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  06            linkDB_Find
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000014 00000002
                |  Already listed
  05          GAP_Signable
              | Stack used (prev) :  00001105 000000A1
              | + function block  :  00000010 00000000
  04        GAPBondMgr_LinkEst
            | Stack used (prev) :  000011DB 000000A1
            | + function block  :  0000008B 00000002
  05          osalFindTimer
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000010 00000002
              |  Already listed
  04        osal_get_timeoutEx
            | Stack used (prev) :  00001105 000000A1
            | + function block  :  0000000E 00000000
  04        osal_stop_timerEx
            | Stack used (prev) :  000001C2 00000034
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_start_timerEx
            | Stack used (prev) :  0000004A 00000002
            | + function block  :  00000024 00000000
            |  Already listed
  04        osal_set_event
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000017 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GAP_EndDiscoverable
            | Stack used (prev) :  00000430 0000005C
            | + function block  :  0000001E 00000000
            |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  07              osal_memcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000019 00000001
                  |  Already listed
  06            LL_SetScanRspData
                | Stack used (prev) :  00001105 000000A1
                | + function block  :  0000000C 00000000
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000074 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_LE_SetScanRspDataCmd
              | Stack used (prev) :  00001111 000000A1
              | + function block  :  00000014 00000001
  07              osal_memcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000019 00000001
                  |  Already listed
  06            LL_SetAdvData
                | Stack used (prev) :  00001105 000000A1
                | + function block  :  0000000C 00000000
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000074 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_LE_SetAdvDataCmd
              | Stack used (prev) :  00001111 000000A1
              | + function block  :  00000014 00000001
  04        GAP_UpdateAdvertisingData
            | Stack used (prev) :  00001125 000000A1
            | + function block  :  00000024 00000001
  04        GAP_GetParamValue
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      gapRole_ProcessGAPMsg
          | Stack used (prev) :  00001266 000000A3
          | + function block  :  00000036 00000000
  03      GAPRole_TerminateConnection
          | Stack used (prev) :  000004A2 0000005D
          | + function block  :  00000016 00000004
          |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000001C2 00000034
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_start_timerEx
          | Stack used (prev) :  0000004A 00000002
          | + function block  :  00000024 00000000
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  02    gapRole_ProcessOSALMsg
        | Stack used (prev) :  0000129C 000000A3
        | + function block  :  0000002E 00000000
  02    GAPRole_TerminateConnection
        | Stack used (prev) :  000004A2 0000005D
        | + function block  :  00000016 00000004
        |  Already listed
  02    osal_snv_write
        | Stack used (prev) :  0000050B 0000005C
        | + function block  :  00000022 00000000
        |  Already listed
  02    osal_start_timerEx
        | Stack used (prev) :  0000004A 00000002
        | + function block  :  00000024 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  00000882 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  03      LL_ReadRssi
          | Stack used (prev) :  00001105 000000A1
          | + function block  :  00000000 00000003
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  00000074 00000006
          | + function block  :  0000002B 00000000
          |  Already listed
  02    HCI_ReadRssiCmd
        | Stack used (prev) :  00001105 000000A4
        | + function block  :  0000001A 00000000
  03      osal_start_reload_timer
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000016 00000000
          |  Already listed
  03      osal_mem_alloc
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      GAP_NumActiveConnections
          | Stack used (prev) :  000003F2 0000005C
          | + function block  :  00000000 00000004
          |  Already listed
  03      gapFreeAdvertState
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  03      gapSetAdvParams
          | Stack used (prev) :  00000458 00000060
          | + function block  :  00000028 00000000
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  02    GAP_MakeDiscoverable
        | Stack used (prev) :  00001105 000000A1
        | + function block  :  00000010 00000001
  01  GAPRole_ProcessEvent
      | Stack used (prev) :  000012CA 000000A4
      | + function block  :  0000002C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012F6 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012F6 000000A4
  01  GAPRole_SetParameter::?relay
      | Stack used (prev) :  000012F6 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012F6 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012F6 000000A4
  01  GAPRole_GetParameter::?relay
      | Stack used (prev) :  000012F6 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012F6 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012F6 000000A4
  01  GAPRole_StartDevice::?relay
      | Stack used (prev) :  000012F6 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012F6 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012F6 000000A4
  01  GAPRole_TerminateConnection::?relay
      | Stack used (prev) :  000012F6 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012F6 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012F6 000000A4
  01  GAPRole_Init::?relay
      | Stack used (prev) :  000012F6 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012F6 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012F6 000000A4
  01  GAPRole_ProcessEvent::?relay
      | Stack used (prev) :  000012F6 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012F6 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012F6 000000A4
  01  gapRole_ProcessOSALMsg::?relay
      | Stack used (prev) :  000012F6 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012F6 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012F6 000000A4
  01  gapRole_ProcessGAPMsg::?relay
      | Stack used (prev) :  000012F6 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012F6 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012F6 000000A4
  01  gapRole_startConnUpdate::?relay
      | Stack used (prev) :  000012F6 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012F6 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012F6 000000A4
  01  GAPRole_SendUpdateParam::?relay
      | Stack used (prev) :  000012F6 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012F6 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012F6 000000A4
  05          smRegisterResponder
              | Stack used (prev) :  000012F6 000000A4
              | + function block  :  00000000 00000002
  04        SM_ResponderInit
            | Stack used (prev) :  000012F6 000000A6
            | + function block  :  00000000 00000004
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          gapRegisterPeripheral
              | Stack used (prev) :  000012F6 000000A4
              | + function block  :  00000000 00000002
  04        GAP_PeriDevMgrInit
            | Stack used (prev) :  000012F6 000000A6
            | + function block  :  00000012 00000000
  05          osal_isbufset
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000000
              |  Already listed
  05          smGenerateRandBuf
              | Stack used (prev) :  0000040A 00000064
              | + function block  :  00000027 00000000
              |  Already listed
  04        GAP_SecParamsInit
            | Stack used (prev) :  000012F6 000000A4
            | + function block  :  0000000B 00000000
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  06            LL_ReadBDADDR
                | Stack used (prev) :  000012F6 000000A4
                | + function block  :  00000000 00000003
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000074 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_ReadBDADDRCmd
              | Stack used (prev) :  000012F6 000000A7
              | + function block  :  0000000E 00000004
  04        GAP_ParamsInit
            | Stack used (prev) :  00001304 000000AB
            | + function block  :  00000012 00000000
  03      GAP_DeviceInit
          | Stack used (prev) :  00001316 000000AB
          | + function block  :  00000022 00000000
  02    GAPRole_StartDevice
        | Stack used (prev) :  00001338 000000AB
        | + function block  :  0000001C 00000000
  02    Recursive system consisting of
         | HalLcdWriteString
        | Stack used (prev) :  0000027A 0000004C
        | + function block  :  00000051 00000000
        |  Already listed
  03      GATTServApp_RegisterForMsg
          | Stack used (prev) :  000012F6 000000A4
          | + function block  :  00000000 00000002
  03      GAP_SetParamValue
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000002
          |  Already listed
  02    GAPBondMgr_Register
        | Stack used (prev) :  000012F6 000000A6
        | + function block  :  00000000 00000004
  03      osal_snv_write
          | Stack used (prev) :  0000050B 0000005C
          | + function block  :  00000022 00000000
          |  Already listed
  03      GAPBondMgr_SetParameter
          | Stack used (prev) :  0000060B 00000064
          | + function block  :  0000002C 00000000
          |  Already listed
  03      GGS_SetParameter
          | Stack used (prev) :  0000040C 0000005C
          | + function block  :  0000001C 00000000
          |  Already listed
  02    set_de_passkey
        | Stack used (prev) :  000012F6 000000A4
        | + function block  :  0000001B 00000000
  02    osal_msg_receive
        | Stack used (prev) :  00000882 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  01  SimpleBLEPeripheral_ProcessEvent
      | Stack used (prev) :  00001354 000000AB
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  simpleBLEPeripheralPairStateCB::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  SimpleBLEPeripheral_Init::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  SimpleBLEPeripheral_ProcessEvent::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  peripheralStateNotificationCB::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  simpleProfileChangeCB::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  bdAddr2Str::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  hex2Str::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  SimpleProfile_AddService::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  SimpleProfile_RegisterAppCBs::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  SimpleProfile_SetParameter::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  SimpleProfile_GetParameter::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  simpleProfile_ReadAttrCB::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  simpleProfile_WriteAttrCB::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  01  simpleProfile_HandleConnStatusCB::?relay
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  02    exit
        | Stack used (prev) :  0000136C 000000AB
        | + function block  :  00000000 00000000
  01  ?cmain
      | Stack used (prev) :  0000136C 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000136C 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000136C 000000AB
  02    __low_level_init
        | Stack used (prev) :  0000136C 000000AB
        | + function block  :  00000000 00000000
  05          compactPage
              | Stack used (prev) :  000004BB 0000005C
              | + function block  :  00000050 00000000
              |  Already listed
  06            HalFlashRead
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000E 00000001
                |  Already listed
  05          findOffset
              | Stack used (prev) :  0000136C 000000AB
              | + function block  :  00000022 00000000
  05          findOffset
              | Stack used (prev) :  0000136C 000000AB
              | + function block  :  00000022 00000000
              |  Already listed
  06            erasePage
                | Stack used (prev) :  00000400 0000005C
                | + function block  :  0000003C 00000000
                |  Already listed
  06            HalFlashRead
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000E 00000001
                |  Already listed
  05          cleanErasedPage
              | Stack used (prev) :  0000136C 000000AB
              | + function block  :  0000001F 00000000
  05          cleanErasedPage
              | Stack used (prev) :  0000136C 000000AB
              | + function block  :  0000001F 00000000
              |  Already listed
  05          cleanErasedPage
              | Stack used (prev) :  0000136C 000000AB
              | + function block  :  0000001F 00000000
              |  Already listed
  05          erasePage
              | Stack used (prev) :  00000400 0000005C
              | + function block  :  0000003C 00000000
              |  Already listed
  05          setActivePage
              | Stack used (prev) :  00000483 0000005B
              | + function block  :  00000038 00000000
              |  Already listed
  05          HalFlashRead
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000E 00000001
              |  Already listed
  04        initNV
            | Stack used (prev) :  0000138E 000000AB
            | + function block  :  00000020 00000000
  03      osal_snv_init
          | Stack used (prev) :  000013AE 000000AB
          | + function block  :  00000000 00000004
  06            memset
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000002 00000002
                |  Already listed
  05          HalUARTInitDMA
              | Stack used (prev) :  0000136C 000000AB
              | + function block  :  0000000D 00000001
  04        HalUARTInit
            | Stack used (prev) :  00001379 000000AC
            | + function block  :  00000000 00000004
  05          Recursive system consisting of
               | HalLedBlink
               | HalLedSet
              | Stack used (prev) :  00001076 0000009F
              | + function block  :  0000003A 00000002
              |  Already listed
  04        HalLedInit
            | Stack used (prev) :  0000136C 000000AB
            | + function block  :  00000000 00000002
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  07              HalLcd_HW_Write
                  | Stack used (prev) :  000001EA 00000046
                  | + function block  :  0000000D 00000000
                  |  Already listed
  07              set_ddram_line_col
                  | Stack used (prev) :  000001F3 00000046
                  | + function block  :  0000001F 00000000
                  |  Already listed
  06            HalLcd_HW_Clear
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000009 00000000
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  05          HalLcd_HW_Init
              | Stack used (prev) :  00001375 000000AB
              | + function block  :  00000000 00000004
  04        HalLcdInit
            | Stack used (prev) :  00001375 000000AF
            | + function block  :  00000000 00000004
  04        HalKeyInit
            | Stack used (prev) :  0000136C 000000AB
            | + function block  :  00000000 00000002
  04        HalDmaInit
            | Stack used (prev) :  0000136C 000000AB
            | + function block  :  00000000 00000000
  05          aesDmaInit
              | Stack used (prev) :  0000136C 000000AB
              | + function block  :  00000000 00000002
  04        HalAesInit
            | Stack used (prev) :  0000136C 000000AD
            | + function block  :  00000000 00000004
  04        HalAdcInit
            | Stack used (prev) :  0000136C 000000AB
            | + function block  :  00000000 00000002
  03      HalDriverInit
          | Stack used (prev) :  00001379 000000B3
          | + function block  :  00000000 00000004
  04        Recursive system consisting of
             | HalLedBlink
             | HalLedSet
            | Stack used (prev) :  00001076 0000009F
            | + function block  :  0000003A 00000002
            |  Already listed
  04        HalKeyConfig
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000009 00000000
            |  Already listed
  04        osal_int_disable
            | Stack used (prev) :  0000136C 000000AB
            | + function block  :  00000000 00000000
  03      InitBoard
          | Stack used (prev) :  0000136C 000000AB
          | + function block  :  00000012 00000000
  03      osal_pwrmgr_device
          | Stack used (prev) :  00000CC3 00000086
          | + function block  :  00000000 00000002
          |  Already listed
  09                  HalUARTRxAvailDMA
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  0000000A 00000002
                      |  Already listed
  08                HalUARTBusyDMA
                    | Stack used (prev) :  0000136C 000000AB
                    | + function block  :  00000014 00000000
  08                HalUARTBusyDMA
                    | Stack used (prev) :  0000136C 000000AB
                    | + function block  :  00000014 00000000
                    |  Already listed
  08                HalUARTRxAvailDMA
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000A 00000002
                    |  Already listed
  08                osal_set_event
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000017 00000000
                    |  Already listed
  07              HalUARTPollDMA
                  | Stack used (prev) :  00001380 000000AB
                  | + function block  :  00000014 00000000
  06            HalUARTPoll
                | Stack used (prev) :  00001394 000000AB
                | + function block  :  00000000 00000004
  05          Hal_ProcessPoll
              | Stack used (prev) :  00001394 000000AF
              | + function block  :  00000000 00000004
  07              halSleepReadTimer
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  0000001C 00000003
  07              halSleepSetTimer
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  0000002C 00000000
  07              halSleepSetTimer
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  0000002C 00000000
                  |  Already listed
  07              halSetSleepMode
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000018 00000000
  08                HalLedOnOff
                    | Stack used (prev) :  0000105D 0000009F
                    | + function block  :  00000019 00000002
                    |  Already listed
  08                HalLedUpdate
                    | Stack used (prev) :  000010B0 000000A1
                    | + function block  :  00000032 00000000
                    |  Already listed
  07              HalLedExitSleep
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  08                HalLedOnOff
                    | Stack used (prev) :  0000105D 0000009F
                    | + function block  :  00000019 00000002
                    |  Already listed
  07              HalLedEnterSleep
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  09                  halGetJoyKeyInput
                      | Stack used (prev) :  0000105D 0000009F
                      | + function block  :  00000012 00000000
                      |  Already listed
  08                HalKeyRead
                    | Stack used (prev) :  0000136C 000000AB
                    | + function block  :  00000009 00000000
  07              HalKeyExitSleep
                  | Stack used (prev) :  00001375 000000AB
                  | + function block  :  00000000 00000004
  07              HalKeyEnterSleep
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000000
  08                osal_pwrmgr_task_state
                    | Stack used (prev) :  000003CC 00000052
                    | + function block  :  0000000A 00000000
                    |  Already listed
  08                osal_set_event
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000017 00000000
                    |  Already listed
  08                PHY_Reset
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llStartTimer2
                    | Stack used (prev) :  0000136C 000000AB
                    | + function block  :  00000000 00000000
  08                llGetCurrentTask
                    | Stack used (prev) :  000001B6 00000032
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llExtendRfRange
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000008 00000002
                    |  Already listed
  08                llSetFreqTune
                    | Stack used (prev) :  0000136C 000000AB
                    | + function block  :  00000000 00000002
  07              LL_PowerOnReq
                  | Stack used (prev) :  0000136C 000000AD
                  | + function block  :  00000012 00000000
  08                PHY_Reset
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llStopTimer2
                    | Stack used (prev) :  0000136C 000000AB
                    | + function block  :  00000000 00000000
  07              LL_PowerOffReq
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000012 00000000
  08                llGetFullCTandST
                    | Stack used (prev) :  0000136C 000000AB
                    | + function block  :  00000000 00000003
  08                llGetCurrentTask
                    | Stack used (prev) :  000001B6 00000032
                    | + function block  :  00000000 00000002
                    |  Already listed
  07              LL_TimeToNextRfEvent
                  | Stack used (prev) :  0000136C 000000AE
                  | + function block  :  0000003E 00000000
  06            halSleep
                | Stack used (prev) :  000013AA 000000AF
                | + function block  :  00000030 00000000
  06            osal_next_timeout
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000010 00000000
  05          osal_pwrmgr_powerconserve
              | Stack used (prev) :  000013DA 000000AF
              | + function block  :  00000018 00000000
  05          osalTimeUpdate
              | Stack used (prev) :  0000005D 00000003
              | + function block  :  0000001C 00000000
              |  Already listed
  04        osal_run_system
            | Stack used (prev) :  000013F2 000000B3
            | + function block  :  00000018 00000000
  03      osal_start_system
          | Stack used (prev) :  0000140A 000000B3
          | + function block  :  00000000 00000004
  04        osalTimerInit
            | Stack used (prev) :  0000136C 000000AB
            | + function block  :  00000009 00000000
  07              osal_memcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000019 00000001
                  |  Already listed
  08                GATTServApp_ReadAttr
                    | Stack used (prev) :  00000A9C 00000081
                    | + function block  :  0000007B 00000000
                    |  Already listed
  08                GATTServApp_FindAttr
                    | Stack used (prev) :  0000136C 000000AB
                    | + function block  :  0000003F 00000000
  09                  linkDB_Authen
                      | Stack used (prev) :  00000406 0000005C
                      | + function block  :  00000018 00000000
                      |  Already listed
  09                  gattGetServerStatus
                      | Stack used (prev) :  00000429 0000005A
                      | + function block  :  00000024 00000000
                      |  Already listed
  10                    attSendMsg
                        | Stack used (prev) :  00000579 0000005E
                        | + function block  :  00000032 00000000
                        |  Already listed
  09                  ATT_HandleValueNoti
                      | Stack used (prev) :  0000136C 000000AB
                      | + function block  :  0000000C 00000000
  08                GATT_Notification
                    | Stack used (prev) :  00001378 000000AB
                    | + function block  :  0000001A 00000000
  08                GATT_Indication
                    | Stack used (prev) :  000005C3 0000005E
                    | + function block  :  00000044 00000000
                    |  Already listed
  07              GATTServApp_ProcessCharCfg
                  | Stack used (prev) :  000013AB 000000AB
                  | + function block  :  0000006B 00000000
  06            SimpleProfile_SetParameter
                | Stack used (prev) :  00001416 000000AB
                | + function block  :  00000022 00000000
  06            SimpleProfile_RegisterAppCBs
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000002
  07              linkDB_Register
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000009 00000000
  07              GATTServApp_InitCharCfg
                  | Stack used (prev) :  00000400 0000005C
                  | + function block  :  00000022 00000000
                  |  Already listed
  08                osal_mem_alloc
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000018 00000000
                    |  Already listed
  09                  osal_mem_alloc
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000018 00000000
                      |  Already listed
  09                  osal_memcpy
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000019 00000001
                      |  Already listed
  09                  ATT_CompareUUID
                      | Stack used (prev) :  0000041C 0000005B
                      | + function block  :  0000003C 00000000
                      |  Already listed
  08                GATT_RegisterService
                    | Stack used (prev) :  0000136C 000000AB
                    | + function block  :  00000012 00000000
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  0000137E 000000AB
                  | + function block  :  00000032 00000000
  06            SimpleProfile_AddService
                | Stack used (prev) :  000013B0 000000AB
                | + function block  :  0000001C 00000000
  07              gapRole_startConnUpdate
                  | Stack used (prev) :  00001167 000000A1
                  | + function block  :  0000003E 00000002
                  |  Already listed
  07              osal_get_timeoutEx
                  | Stack used (prev) :  00001105 000000A1
                  | + function block  :  0000000E 00000000
                  |  Already listed
  07              osal_stop_timerEx
                  | Stack used (prev) :  000001C2 00000034
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_start_timerEx
                  | Stack used (prev) :  0000004A 00000002
                  | + function block  :  00000024 00000000
                  |  Already listed
  07              osal_set_event
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000017 00000000
                  |  Already listed
  07              osal_memset
                  | Stack used (prev) :  000003F4 0000005C
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_memcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000019 00000001
                  |  Already listed
  07              GAP_EndDiscoverable
                  | Stack used (prev) :  00000430 0000005C
                  | + function block  :  0000001E 00000000
                  |  Already listed
  07              GAP_UpdateAdvertisingData
                  | Stack used (prev) :  00001125 000000A1
                  | + function block  :  00000024 00000001
                  |  Already listed
  07              GAP_SetParamValue
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000000 00000002
                  |  Already listed
  06            GAPRole_SetParameter
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000014 00000000
  06            Recursive system consisting of
                 | HalLcdWriteString
                | Stack used (prev) :  0000027A 0000004C
                | + function block  :  00000051 00000000
                |  Already listed
  06            HalAdcInit
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000002
                |  Already listed
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  0000137E 000000AB
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            DevInfo_AddService
                | Stack used (prev) :  000013B0 000000AB
                | + function block  :  00000018 00000000
  07              GATTServApp_InitCharCfg
                  | Stack used (prev) :  00000400 0000005C
                  | + function block  :  00000022 00000000
                  |  Already listed
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  0000137E 000000AB
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            Batt_AddService
                | Stack used (prev) :  000013B0 000000AB
                | + function block  :  00000018 00000000
  08                HalUARTOpen
                    | Stack used (prev) :  0000136C 000000AB
                    | + function block  :  00000000 00000002
  07              SbpHalUARTInit
                  | Stack used (prev) :  0000136C 000000AD
                  | + function block  :  0000003A 00000004
  06            SbpHalUART_Init
                | Stack used (prev) :  000013A6 000000B1
                | + function block  :  00000000 00000004
  06            RegisterForKeys
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000002
  06            osal_set_event
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000017 00000000
                |  Already listed
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  0000137E 000000AB
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            GATTServApp_AddService
                | Stack used (prev) :  000013B0 000000AB
                | + function block  :  0000001C 00000000
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  0000137E 000000AB
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            GGS_AddService
                | Stack used (prev) :  000013B0 000000AB
                | + function block  :  0000001C 00000000
  06            GAP_SetParamValue
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000000 00000002
                |  Already listed
  05          SimpleBLEPeripheral_Init
              | Stack used (prev) :  00001438 000000B5
              | + function block  :  0000011C 00000000
  06            osal_snv_read
                | Stack used (prev) :  00000442 0000005B
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  06            GAP_RegisterForHCIMsgs
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000002
  05          GAPRole_Init
              | Stack used (prev) :  0000136C 000000AD
              | + function block  :  00000012 00000000
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  05          osal_CbTimerInit
              | Stack used (prev) :  0000136C 000000AB
              | + function block  :  00000009 00000000
  05          Hal_Init
              | Stack used (prev) :  0000136C 000000AB
              | + function block  :  00000000 00000002
  06            gapBondMgrReadBonds
                | Stack used (prev) :  00000473 00000064
                | + function block  :  00000036 00000000
                |  Already listed
  05          GAPBondMgr_Init
              | Stack used (prev) :  0000136C 000000AB
              | + function block  :  00000009 00000000
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  06            hciInitEventMasks
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000002
  05          HCI_Init
              | Stack used (prev) :  0000136C 000000AD
              | + function block  :  00000012 00000000
  06            HCI_SMPTaskRegister
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000002
  06            linkDB_Register
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000009 00000000
                |  Already listed
  06            L2CAP_RegisterApp
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000003
  05          SM_Init
              | Stack used (prev) :  00001375 000000AE
              | + function block  :  00000012 00000000
  06            HalFlashRead
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000E 00000001
                |  Already listed
  06            osal_pwrmgr_task_state
                | Stack used (prev) :  000003CC 00000052
                | + function block  :  0000000A 00000000
                |  Already listed
  06            osal_set_event
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000017 00000000
                |  Already listed
  07              PHY_ClearAllRegsAndFifos
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  07              PHY_Reset
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000002
                  |  Already listed
  06            PHY_Init
                | Stack used (prev) :  0000136C 000000AD
                | + function block  :  00000000 00000004
  06            llInitTimer2
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000000
  06            LL_ENC_InitAesDMA
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000002
  06            LL_ENC_GenerateTrueRandNum
                | Stack used (prev) :  00000000 00000006
                | + function block  :  00000016 00000000
                |  Already listed
  07              HalFlashWrite
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000C 00000000
                  |  Already listed
  06            llFindTxPowerSettings
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000022 00000002
  07              PHY_SetFifoConfig
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  07              PHY_ConfigureAppendRfStatus
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              PHY_ConfigureFifoDataProcessing
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  07              PHY_ClearSavedWhiteList
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  07              PHY_ClearBlacklist
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  07              PHY_ClearWhitelist
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              PHY_ConfigureMD
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  07              PHY_SetCRCInit
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000010 00000000
                  |  Already listed
  07              PHY_ClearAllRegsAndFifos
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              llDisableT2IntsEvts
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000000
                  |  Already listed
  07              llSchedulerInit
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  07              llInitFeatureSet
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  07              llReleaseAllConnId
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  07              llClearSetInts
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  07              llRfInit
                  | Stack used (prev) :  00000000 00000002
                  | + function block  :  00000000 00000004
                  |  Already listed
  06            LL_Reset
                | Stack used (prev) :  0000136C 000000AD
                | + function block  :  0000000C 00000004
  05          LL_Init
              | Stack used (prev) :  0000138E 000000B1
              | + function block  :  00000018 00000000
  06            HCI_L2CAPTaskRegister
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000002
  05          L2CAP_Init
              | Stack used (prev) :  0000136C 000000AD
              | + function block  :  00000014 00000000
  06            linkDB_Register
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000009 00000000
                |  Already listed
  06            GATTServApp_InitCharCfg
                | Stack used (prev) :  00000400 0000005C
                | + function block  :  00000022 00000000
                |  Already listed
  07              osal_mem_free
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  0000000A 00000002
                  |  Already listed
  07              osal_mem_alloc
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_memset
                  | Stack used (prev) :  000003F4 0000005C
                  | + function block  :  00000018 00000000
                  |  Already listed
  06            gattServApp_SetNumPrepareWrites
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000017 00000000
  06            GATT_RegisterForReq
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000002
  05          GATTServApp_Init
              | Stack used (prev) :  00001383 000000AD
              | + function block  :  00000012 00000000
  06            L2CAP_RegisterApp
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000003
                |  Already listed
  07              linkDB_Register
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000009 00000000
                  |  Already listed
  07              gattRegisterServer
                  | Stack used (prev) :  0000136C 000000AB
                  | + function block  :  00000000 00000002
  06            GATT_InitServer
                | Stack used (prev) :  00001375 000000AD
                | + function block  :  00000014 00000000
  05          GATT_Init
              | Stack used (prev) :  00001389 000000AE
              | + function block  :  00000012 00000000
  06            HCI_GAPTaskRegister
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000002
  06            linkDB_Init
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000002
  06            L2CAP_RegisterApp
                | Stack used (prev) :  0000136C 000000AB
                | + function block  :  00000000 00000003
                |  Already listed
  05          GAP_Init
              | Stack used (prev) :  0000136C 000000AE
              | + function block  :  00000012 00000000
  04        osalInitTasks
            | Stack used (prev) :  00001554 000000B5
            | + function block  :  00000000 00000004
  04        osal_pwrmgr_init
            | Stack used (prev) :  0000136C 000000AB
            | + function block  :  00000000 00000002
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  04        osal_mem_kick
            | Stack used (prev) :  0000136C 000000AB
            | + function block  :  0000000A 00000000
  04        osal_mem_init
            | Stack used (prev) :  0000136C 000000AB
            | + function block  :  00000000 00000002
  03      osal_init_system
          | Stack used (prev) :  00001554 000000B9
          | + function block  :  00000000 00000004
  02    main
        | Stack used (prev) :  00001554 000000BD
        | + function block  :  00000000 00000000
  01  ?call_main
      | Stack used (prev) :  00001554 000000BD
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001554 000000BD


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001554 000000BD
  01  __program_start
      | Stack used (prev) :  00001554 000000BD
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001554 000000BD


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001554 000000BD
  01  memset::?relay
      | Stack used (prev) :  00001554 000000BD
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001554 000000BD


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001554 000000BD
  01  strcat::?relay
      | Stack used (prev) :  00001554 000000BD
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001554 000000BD


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001554 000000BD
  01  strcpy::?relay
      | Stack used (prev) :  00001554 000000BD
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001554 000000BD


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001554 000000BD
  01  strlen::?relay
      | Stack used (prev) :  00001554 000000BD
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001554 000000BD




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000085          86   com    0
CSTART               CODE          00000086 - 0000014C          C7   rel    0
BDATA_ID             CODE               0000014D                     dse    0
BIT_ID               CODE               0000014D                     dse    0
DATA_ID              CODE          0000014D - 0000014D           1   rel    0
PDATA_ID             CODE               0000014E                     dse    0
IXDATA_ID            CODE               0000014E                     dse    0
IDATA_ID             CODE               0000014E                     dse    0
XDATA_ID             CODE          0000014E - 000004D3         386   rel    0
BANK_RELAYS          CODE          000004D4 - 0000150B        1038   rel    0
RCODE                CODE          0000150C - 00001BFB         6F0   rel    0
CODE_N               CODE               00001BFC                     dse    0
DIFUNCT              CODE               00001BFC                     dse    0
NEAR_CODE            CODE          00001BFC - 00002BF5         FFA   rel    2
<BANKED_CODE,CODE_C> 1
                     CODE          00002BF8 - 00007FF0        53F9   rel    2
SLEEP_CODE           CODE          00007FF8 - 00007FFF           8   rel    0
<BANKED_CODE,XDATA_ROM_C_FLASH> 1
                     CODE          00008000 - 0000FFFC        7FFD   rel    2
<BANKED_CODE> 1      CODE          00010000 - 00017FEF        7FF0   rel    0
<BANKED_CODE> 2      CODE          00018000 - 0001CC01        4C02   rel    0
BLENV_ADDRESS_SPACE
                     CODE          0003E800 - 0003F7FF        1000   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 00000017          10   rel    0
PSP                  DATA               00000018                     dse    0
XSP                  DATA          00000018 - 00000019           2   rel    0
DATA_I               DATA          0000001A - 0000001A           1   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
DATA_Z               DATA          00000021 - 00000028           8   rel    0
SFR_AN               DATA          00000080 - 00000080           1   rel    0
                     DATA          00000086 - 0000008D           8 
                     DATA          00000090 - 00000091           2 
                     DATA          00000094 - 00000097           4 
                     DATA          0000009A - 000000A9          10 
                     DATA          000000AB - 000000AF           5 
                     DATA          000000B3 - 000000B4           2 
                     DATA          000000B6 - 000000B6           1 
                     DATA          000000B8 - 000000C7          10 
                     DATA          000000C9 - 000000C9           1 
                     DATA          000000D1 - 000000D7           7 
                     DATA          000000D9 - 000000DB           3 
                     DATA          000000E1 - 000000E5           5 
                     DATA          000000E8 - 000000E9           2 
                     DATA          000000F1 - 000000F2           2 
                     DATA          000000F2 - 000000F5           4 
                     DATA          000000F7 - 000000FF           9 
XSTACK               XDATA         00000001 - 00000300         300   rel    0
XDATA_Z              XDATA         00000301 - 00000F10         C10   rel    0
XDATA_I              XDATA         00000F11 - 00001296         386   rel    0
<XDATA_N> 1          XDATA         00001297 - 00001E9A         C04   rel    0
<XDATA_ROM_C> 1      CONST         00008000 - 000085CA         5CB   rel    2
IDATA_I              IDATA              00000029                     dse    0
IDATA_Z              IDATA         00000029 - 0000002A           2   rel    0
ISTACK               IDATA         00000038 - 000000FF          C8   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 121 830 bytes of CODE  memory
      35 bytes of DATA  memory (+ 88 absolute )
   7 834 bytes of XDATA memory
     202 bytes of IDATA memory
       8 bits  of BIT   memory
   1 483 bytes of CONST memory

Errors: none
Warnings: 2

