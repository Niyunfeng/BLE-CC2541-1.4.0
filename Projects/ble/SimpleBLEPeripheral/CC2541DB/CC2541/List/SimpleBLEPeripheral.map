Warning[w6]: Type conflict for external/entry "strcpy", in module SimpleDS18B20 against external/entry in module ?strcpy; prototyped function vs K&R function
  /* In module SimpleDS18B20: */
  /* K&R Function, args 0, attr 0 */
  int (__xdata_reentrant strcpy)();
  /* In module ?strcpy: */
  /* Function, args 2, attr 0 */
  char * (__xdata_reentrant strcpy)(char *,
                                    char const *);
Warning[w52]: More than one definition for the byte at address 0x6b in common segment INTVEC. It is defined in module "hal_uart" as well as in module "hal_key"
################################################################################
#                                                                              #
#      IAR Universal Linker V5.4.1.30                                          #
#                                                                              #
#           Link time     =  25/Mar/2014  17:51:24                             #
#           Target CPU    =  x51                                               #
#           List file     =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\List\SimpleB #
#                            LEPeripheral.map                                  #
#           Output file 1 =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Exe\SimpleBL #
#                            EPeripheral.hex                                   #
#                            Format: intel-extended                            #
#           Output file 2 =  E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Exe\SimpleBL #
#                            EPeripheral.d51                                   #
#                            Format: debug                                     #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 6.4\8051\CONFIG\"                               #
#                            -D_NR_OF_BANKS=0x07 -D_CODEBANK_END=0xFFFF        #
#                            -D_CODEBANK_START=0x8000 -D?CBANK_MASK=0xFF       #
#                            -D?CBANK=0x9F                                     #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \Libraries\CC2541DB\bin\CC2541_BLE_peri.lib       #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \Libraries\Common\bin\CC254x_BLE_HCI_TL_None.lib  #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL.r51 #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Clo #
#                            ckBLE.r51                                         #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Mem #
#                            ory.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Pwr #
#                            Mgr.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Sim #
#                            pleBLEPeripheral.r51                              #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Tim #
#                            ers.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OnBoard. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleBL #
#                            EPeripheral_Main.r51                              #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleBL #
#                            ESPIFlash.r51                                     #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleBL #
#                            ESerialUart.r51                                   #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleDS #
#                            18B20.r51                                         #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleEe #
#                            promUtils.r51                                     #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleRT #
#                            CInterrupt.r51                                    #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleTe #
#                            mperature.r51                                     #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\Simplepa #
#                            sscode.r51                                        #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\battserv #
#                            ice.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\devinfos #
#                            ervice.r51                                        #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\gap.r51  #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\gapbondm #
#                            gr.r51                                            #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\gatt_uui #
#                            d.r51                                             #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_adc. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_aes. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_at24 #
#                            c32.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_crc. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_dma. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_driv #
#                            ers.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_ds13 #
#                            07.r51                                            #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_eepr #
#                            om.r51                                            #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_flas #
#                            h.r51                                             #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_i2c. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_key. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_lcd. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_led. #
#                            r51                                               #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_sens #
#                            or.r51                                            #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_slee #
#                            p.r51                                             #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_star #
#                            tup.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_time #
#                            r.r51                                             #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_uart #
#                            .r51                                              #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\npi.r51  #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\osal_buf #
#                            mgr.r51                                           #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\osal_cbt #
#                            imer.r51                                          #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\osal_snv #
#                            .r51                                              #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\peripher #
#                            al.r51                                            #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\simpleBL #
#                            EPeripheral.r51                                   #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Obj\simpleGA #
#                            TTprofile.r51                                     #
#                            -o                                                #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\Exe\SimpleBL #
#                            EPeripheral.d51                                   #
#                            -l                                                #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\CC2541\List\SimpleB #
#                            LEPeripheral.map                                  #
#                            -xmso -f                                          #
#                            E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble #
#                            \SimpleBLEPeripheral\CC2541DB\..\..\common\cc2540 #
#                            \ti_51ew_cc2540b.xcl                              #
#                            (-D_IDATA_END=0xFF -D_PDATA_START=0x1E00          #
#                            -D_PDATA_END=0x1EFF -D_IXDATA_START=0x0001        #
#                            -D_IXDATA_END=0x1EFF                              #
#                            -D_XDATA_START=_IXDATA_START                      #
#                            -D_XDATA_END=_IXDATA_END -D_CODE_START=0x0000     #
#                            -D_CODE_END=0x7FFF -D_FIRST_BANK_ADDR=0x10000     #
#                            -D_NEAR_CODE_END=_CODE_END -D?REGISTER_BANK=0     #
#                            -D_REGISTER_BANK_START=0 -D?PBANK_NUMBER=0x1E     #
#                            -D_BREG_START=0x00 -D?VB=0x20                     #
#                            -D_FAR_DATA_NR_OF_BANKS=0x0E                      #
#                            -D_FAR_DATA_START=0x010001                        #
#                            -D_FAR_DATA_END=0xFFFFFF                          #
#                            -D_FAR_CODE_START=_CODE_START                     #
#                            -D_FAR_CODE_END=_CODE_END                         #
#                            -Z(BIT)BREG=_BREG_START -Z(BIT)BIT_N=0-7F         #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA_END    #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA_END   #
#                            -Z(IDATA)IOVERLAY=08-FF                           #
#                            -Z(CODE)INTVEC=_CODE_START                        #
#                            -Z(CODE)CSTART=_CODE_START-_CODE_END              #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE_START-_CODE_END         #
#                            -Z(CODE)HUGE_ID=_FAR_CODE_START-_FAR_CODE_END     #
#                            -D_SLEEP_CODE_SPACE_START=(_CODE_END-7)           #
#                            -D_SLEEP_CODE_SPACE_END=(_CODE_END)               #
#                            -Z(CODE)SLEEP_CODE=_SLEEP_CODE_SPACE_START-_SLEEP #
#                            _CODE_SPACE_END                                   #
#                            -Z(CODE)BANK_RELAYS,RCODE,DIFUNCT,CODE_N,NEAR_COD #
#                            E=_CODE_START-_CODE_END                           #
#                            -P(CODE)CODE_C=_CODE_START-_CODE_END              #
#                            -P(CONST)XDATA_ROM_C=0x8000-0xFFFF                #
#                            -P(CODE)XDATA_ROM_C_FLASH=0x18000-0x1FFFF         #
#                            -QXDATA_ROM_C=XDATA_ROM_C_FLASH                   #
#                            -P(CODE)BANKED_CODE=_CODE_START-_CODE_END,[(_CODE #
#                            BANK_START+_FIRST_BANK_ADDR)-(_CODEBANK_END+_FIRS #
#                            T_BANK_ADDR)]*_NR_OF_BANKS+10000                  #
#                            -P(CODE)FAR_CODE_C,FAR_CODE_N,FAR_CODE=[_FAR_CODE #
#                            _START-_FAR_CODE_END]/10000                       #
#                            -P(CODE)HUGE_CODE_C=_FAR_CODE_START-_FAR_CODE_END #
#                            -Z(CODE)CHECKSUM#_CODE_END                        #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START                                      #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA_START-_P #
#                            DATA_END                                          #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_START-_X #
#                            DATA_END                                          #
#                            -Z(XDATA)PDATA_Z,PDATA_I=_PDATA_START-_PDATA_END  #
#                            -P(XDATA)PDATA_N=_PDATA_START-_PDATA_END          #
#                            -Z(XDATA)IXDATA_Z,IXDATA_I=_IXDATA_START-_IXDATA_ #
#                            END                                               #
#                            -P(XDATA)IXDATA_N=_IXDATA_START-_IXDATA_END       #
#                            -Z(XDATA)XDATA_Z,XDATA_I=_XDATA_START-_XDATA_END  #
#                            -P(XDATA)XDATA_N=_XDATA_START-_XDATA_END          #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA_START #
#                            -_XDATA_END                                       #
#                            -Z(XDATA)FAR_Z=[_FAR_DATA_START-_FAR_DATA_END]/10 #
#                            000                                               #
#                            -Z(XDATA)FAR_I=[_FAR_DATA_START-_FAR_DATA_END]/10 #
#                            000                                               #
#                            -Z(CODE)FAR_ID=[_FAR_CODE_START-_FAR_CODE_END]/10 #
#                            000                                               #
#                            -Z(XDATA)FAR_HEAP+_FAR_HEAP_SIZE=[_FAR_DATA_START #
#                            -_FAR_DATA_END]/10000                             #
#                            -P(XDATA)FAR_N=[_FAR_DATA_START-_FAR_DATA_END]*_F #
#                            AR_DATA_NR_OF_BANKS+10000                         #
#                            -P(CONST)FAR_ROM_C=[_FAR_DATA_START-_FAR_DATA_END #
#                            ]*_FAR_DATA_NR_OF_BANKS+10000                     #
#                            -Z(XDATA)HUGE_Z,HUGE_I=_FAR_DATA_START-_FAR_DATA_ #
#                            END                                               #
#                            -P(XDATA)HUGE_N=_FAR_DATA_START-_FAR_DATA_END     #
#                            -Z(XDATA)HUGE_HEAP+_HUGE_HEAP_SIZE=_FAR_DATA_STAR #
#                            T-_FAR_DATA_END                                   #
#                            -Z(CONST)HUGE_ROM_C=_FAR_DATA_START-_FAR_DATA_END #
#                            -cx51 -D_BLENV_ADDRESS_SPACE_START=0x7E800        #
#                            -D_BLENV_ADDRESS_SPACE_END=0x7F7FF                #
#                            -Z(CODE)BLENV_ADDRESS_SPACE=_BLENV_ADDRESS_SPACE_ #
#                            START-_BLENV_ADDRESS_SPACE_END                    #
#                            -D_BANK0_START=0x00000 -D_BANK0_END=0x07FFF       #
#                            -D_BANK1_START=0x18000 -D_BANK1_END=0x1FFFF       #
#                            -D_BANK2_START=0x28000 -D_BANK2_END=0x2FFFF       #
#                            -D_BANK3_START=0x38000 -D_BANK3_END=0x3FFFF       #
#                            -D_BANK4_START=0x48000 -D_BANK4_END=0x4FFFF       #
#                            -D_BANK5_START=0x58000 -D_BANK5_END=0x5FFFF       #
#                            -D_BANK6_START=0x68000 -D_BANK6_END=0x6FFFF       #
#                            -D_BANK7_START=0x78000                            #
#                            -D_BANK7_END=(_BLENV_ADDRESS_SPACE_START-1)       #
#                            -P(CODE)BANK0=_BANK0_START-_BANK0_END             #
#                            -P(CODE)BANK1=_BANK1_START-_BANK1_END             #
#                            -P(CODE)BANK2=_BANK2_START-_BANK2_END             #
#                            -P(CODE)BANK3=_BANK3_START-_BANK3_END             #
#                            -P(CODE)BANK4=_BANK4_START-_BANK4_END             #
#                            -P(CODE)BANK5=_BANK5_START-_BANK5_END             #
#                            -P(CODE)BANK6=_BANK6_START-_BANK6_END             #
#                            -P(CODE)BANK7=_BANK7_START-_BANK7_END             #
#                            -M(CODE)[(_CODEBANK_START+_FIRST_BANK_ADDR)-(_COD #
#                            EBANK_END+_FIRST_BANK_ADDR)]*_NR_OF_BANKS+0x10000 #
#                            =0x8000                                           #
#                            -ww69=i                                           #
#                            -D_FLASH_LOCK_BITS_START=((_NR_OF_BANKS*_FIRST_BA #
#                            NK_ADDR)+0xFFF0)                                  #
#                            -D_FLASH_LOCK_BITS_END=((_NR_OF_BANKS*_FIRST_BANK #
#                            _ADDR)+0xFFFF)                                    #
#                            -Z(CODE)FLASH_LOCK_BITS=_FLASH_LOCK_BITS_START-_F #
#                            LASH_LOCK_BITS_END                                #
#                            -U(CODE)0x0000=(CODE)_FLASH_LOCK_BITS_START-_FLAS #
#                            H_LOCK_BITS_END)                                  #
#                            -D_NR_OF_VIRTUAL_REGISTERS=10 -D?PBANK=0x93       #
#                            -e?BCALL_FF=?BCALL -e?BRET_FF=?BRET               #
#                            -e?BDISPATCH_FF=?BDISPATCH                        #
#                            -e_large_write=_formatted_write                   #
#                            -e_large_read=_formatted_read -rt                 #
#                            -Ointel-extended=E:\TexasInstruments\BLE-CC254x-1 #
#                            .4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC #
#                            2541\Exe\SimpleBLEPeripheral.hex                  #
#                            -s __program_start                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            6.4\8051\LIB\CLIB\cl-pli-blxd-1e16x01.r51"        #
#                            -D_IDATA_STACK_SIZE=0xC8                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0x00                          #
#                            -D_XDATA_STACK_SIZE=0x300                         #
#                            -D_XDATA_HEAP_SIZE=0xFF -D_FAR_HEAP_SIZE=0xFFF    #
#                            -D_HUGE_HEAP_SIZE=0xFFF -D_FAR22_HEAP_SIZE=0xFF   #
#                                                                              #
#                           Copyright (C) 1987-2012 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      0000011D  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __SystemLibrary          = CLib
  __calling_convention     = xdata_reentrant
  __code_model             = banked
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FAR22_HEAP_SIZE        000000FF 
           _HUGE_HEAP_SIZE         00000FFF 
           _FAR_HEAP_SIZE          00000FFF 
           _XDATA_HEAP_SIZE        000000FF 
           _XDATA_STACK_SIZE       00000300 
           _PDATA_STACK_SIZE       00000000 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_START   00000000 
           _IDATA_STACK_SIZE       000000C8 
           ?PBANK                  00000093 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000010 
           _FLASH_LOCK_BITS_END    0003FFFF 
           _FLASH_LOCK_BITS_START
                                   0003FFF0 
           _BANK7_END              0003E7FF 
           _BANK7_START            00038000 
           _BANK6_END              00037FFF 
           _BANK6_START            00030000 
           _BANK5_END              0002FFFF 
           _BANK5_START            00028000 
           _BANK4_END              00027FFF 
           _BANK4_START            00020000 
           _BANK3_END              0001FFFF 
           _BANK3_START            00018000 
           _BANK2_END              00017FFF 
           _BANK2_START            00010000 
           _BANK1_END              0000FFFF 
           _BANK1_START            00008000 
           _BANK0_END              00007FFF 
           _BANK0_START            00000000 
           _BLENV_ADDRESS_SPACE_END
                                   0003F7FF 
           _BLENV_ADDRESS_SPACE_START
                                   0003E800 
           _SLEEP_CODE_SPACE_END   00007FFF 
           _SLEEP_CODE_SPACE_START
                                   00007FF8 
           _FAR_CODE_END           00007FFF 
           _FAR_CODE_START         00000000 
           _FAR_DATA_END           00FFFFFF 
           _FAR_DATA_START         00010001 
           _FAR_DATA_NR_OF_BANKS   0000000E 
           ?VB                     00000020        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
           _BREG_START             00000000 
           ?PBANK_NUMBER           0000001E 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _NEAR_CODE_END          00007FFF 
           _FIRST_BANK_ADDR        00010000 
           _CODE_END               00007FFF 
           _CODE_START             00000000 
           _XDATA_END              00001EFF 
           _XDATA_START            00000001 
           _IXDATA_END             00001EFF 
           _IXDATA_START           00000001 
           _PDATA_END              00001EFF 
           _PDATA_START            00001E00 
           _IDATA_END              000000FF 
           ?CBANK                  0000009F        ?RESET_CODE_BANK (CSTARTUP)
                                                   Segment part 0 (?BANKED_CODE_SUPPORT)
           ?CBANK_MASK             000000FF 
           _CODEBANK_START         00008000 
           _CODEBANK_END           0000FFFF 
           _NR_OF_BANKS            00000007 
    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\Libraries\CC2541DB\bin\CC2541_BLE_peri.lib
  LIBRARY MODULE, NAME : att_server

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C6F9 - 0001C70F (0x17 bytes), align: 0
  Segment part 6.             Intra module refs:   ATT_ErrorRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ErrorRsp            0001C6F9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C710 - 0001C740 (0x31 bytes), align: 0
  Segment part 8.             Intra module refs:   ATT_ExchangeMTURsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExchangeMTURsp      0001C710 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C741 - 0001C77B (0x3b bytes), align: 0
  Segment part 10.            Intra module refs:   ATT_FindInfoRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindInfoRsp         0001C741 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C77C - 0001C7A5 (0x2a bytes), align: 0
  Segment part 12.            Intra module refs:   ATT_FindByTypeValueRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindByTypeValueRsp
                                   0001C77C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C7A6 - 0001C7CF (0x2a bytes), align: 0
  Segment part 14.            Intra module refs:   ATT_ReadByTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByTypeRsp       0001C7A6 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C7D0 - 0001C7E6 (0x17 bytes), align: 0
  Segment part 16.            Intra module refs:   ATT_ReadRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadRsp             0001C7D0 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C7E7 - 0001C7FD (0x17 bytes), align: 0
  Segment part 18.            Intra module refs:   ATT_ReadBlobRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadBlobRsp         0001C7E7 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C7FE - 0001C814 (0x17 bytes), align: 0
  Segment part 20.            Intra module refs:   ATT_ReadMultiRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadMultiRsp        0001C7FE 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C815 - 0001C83D (0x29 bytes), align: 0
  Segment part 22.            Intra module refs:   ATT_ReadByGrpTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByGrpTypeRsp    0001C815 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C83E - 0001C850 (0x13 bytes), align: 0
  Segment part 24.            Intra module refs:   ATT_WriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_WriteRsp            0001C83E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C851 - 0001C866 (0x16 bytes), align: 0
  Segment part 26.            Intra module refs:   ATT_PrepareWriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_PrepareWriteRsp     0001C851 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C867 - 0001C879 (0x13 bytes), align: 0
  Segment part 28.            Intra module refs:   ATT_ExecuteWriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExecuteWriteRsp     0001C867 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C87A - 0001C889 (0x10 bytes), align: 0
  Segment part 30.            Intra module refs:   ATT_HandleValueNoti::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueNoti     0001C87A 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C88A - 0001C88F (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   ATT_HandleValueInd
                                                   ATT_HandleValueNoti
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C890 - 0001C893 (0x4 bytes), align: 0
  Segment part 33.            Intra module refs:   ATT_ExecuteWriteRsp
                                                   ATT_WriteRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C894 - 0001C89B (0x8 bytes), align: 0
  Segment part 34.            Intra module refs:   ATT_ErrorRsp
                                                   ATT_PrepareWriteRsp
                                                   ATT_ReadBlobRsp
                                                   ATT_ReadMultiRsp
                                                   ATT_ReadRsp
                                                   Segment part 32
                                                   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C89C - 0001C8A0 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   ATT_ExchangeMTURsp
                                                   ATT_FindByTypeValueRsp
                                                   ATT_FindInfoRsp
                                                   ATT_ReadByGrpTypeRsp
                                                   ATT_ReadByTypeRsp
                                                   Segment part 34
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C8A1 - 0001C8B2 (0x12 bytes), align: 0
  Segment part 36.            Intra module refs:   ATT_HandleValueInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueInd      0001C8A1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000510 - 00000515 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ErrorRsp::?relay    00000510        gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000516 - 0000051B (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExchangeMTURsp::?relay
                                   00000516        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000051C - 00000521 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindInfoRsp::?relay
                                   0000051C        gattProcessFindInfoReq (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000522 - 00000527 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindByTypeValueRsp::?relay
                                   00000522        gattServApp_ProcessFindByTypeValueReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000528 - 0000052D (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByTypeRsp::?relay
                                   00000528        gattServApp_ProcessReadByTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000052E - 00000533 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadRsp::?relay     0000052E        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000534 - 00000539 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadBlobRsp::?relay
                                   00000534        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000053A - 0000053F (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadMultiRsp::?relay
                                   0000053A        gattServApp_ProcessReadMultiReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000540 - 00000545 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByGrpTypeRsp::?relay
                                   00000540        gattServApp_ProcessReadByGrpTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000546 - 0000054B (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_WriteRsp::?relay    00000546        gattServApp_ProcessWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000054C - 00000551 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_PrepareWriteRsp::?relay
                                   0000054C        gattServApp_ProcessPrepareWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000552 - 00000557 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExecuteWriteRsp::?relay
                                   00000552        gattServApp_ProcessExecuteWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000558 - 0000055D (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueNoti::?relay
                                   00000558        GATT_Notification (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000055E - 00000563 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueInd::?relay
                                   0000055E        GATT_Indication (gatt_server)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : att_util

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008463 - 00008472 (0x10 bytes), align: 0
  Segment part 6.             Intra module refs:   ATT_ConvertUUIDto128
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           btBaseUUID              00008463 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F18 - 00015016 (0xff bytes), align: 0
  Segment part 7.             Intra module refs:   ATT_ParsePacket::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePacket         00014F18 
               calls direct
               XSTACK = 00000000 ( 00000011 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015017 - 0001501B (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   ATT_ParseFindByTypeValueReq
                                                   ATT_ParsePacket
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001501C - 00015043 (0x28 bytes), align: 0
  Segment part 10.            Intra module refs:   ATT_BuildErrorRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildErrorRsp       0001501C 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015044 - 00015044 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   ATT_BuildErrorRsp
                                                   Segment part 117
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015045 - 00015048 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   Segment part 56
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015049 - 00015053 (0xb bytes), align: 0
  Segment part 18.            Intra module refs:   ATT_BuildExchangeMTURsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015054 - 00015076 (0x23 bytes), align: 0
  Segment part 19.            Intra module refs:   ATT_ParseExchangeMTUReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExchangeMTUReq
                                   00015054 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015077 - 00015078 (0x2 bytes), align: 0
  Segment part 21.            Intra module refs:   ATT_BuildExchangeMTURsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExchangeMTURsp
                                   00015077 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015079 - 0001507A (0x2 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001507B - 00015081 (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   ATT_ParseExecuteWriteReq
                                                   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015082 - 0001509F (0x1e bytes), align: 0
  Segment part 30.            Intra module refs:   ATT_ParseFindInfoReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindInfoReq    00015082 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000150A0 - 000150A4 (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   ATT_BuildErrorRsp
                                                   ATT_ParseExchangeMTUReq
                                                   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000150A5 - 00015165 (0xc1 bytes), align: 0
  Segment part 33.            Intra module refs:   ATT_BuildFindInfoRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindInfoRsp    000150A5 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015166 - 00015171 (0xc bytes), align: 0
  Segment part 35.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015172 - 0001518D (0x1c bytes), align: 0
  Segment part 36.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001518E - 0001518E (0x1 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 36
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001518F - 00015192 (0x4 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015193 - 0001519A (0x8 bytes), align: 0
  Segment part 39.            Intra module refs:   ATT_BuildFindByTypeValueRsp
                                                   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001519B - 0001519B (0x1 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001519C - 000151A3 (0x8 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000151A4 - 000151AA (0x7 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 36
                                                   Segment part 41
                                                   Segment part 50
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000151AB - 000151B3 (0x9 bytes), align: 0
  Segment part 50.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000151B4 - 00015282 (0xcf bytes), align: 0
  Segment part 51.            Intra module refs:   ATT_ParseFindByTypeValueReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindByTypeValueReq
                                   000151B4 
               calls direct
               XSTACK = 00000004 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015283 - 00015288 (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   ATT_CompareUUID
                                                   ATT_ParseFindByTypeValueReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015289 - 000152E8 (0x60 bytes), align: 0
  Segment part 54.            Intra module refs:   ATT_BuildFindByTypeValueRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindByTypeValueRsp
                                   00015289 
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000152E9 - 000152F1 (0x9 bytes), align: 0
  Segment part 56.            Intra module refs:   ATT_BuildErrorRsp
                                                   ATT_BuildFindByTypeValueRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000152F2 - 000152F9 (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   ATT_BuildErrorRsp
                                                   ATT_BuildFindByTypeValueRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000152FA - 000152FE (0x5 bytes), align: 0
  Segment part 60.            Intra module refs:   ATT_CompareUUID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000152FF - 00015303 (0x5 bytes), align: 0
  Segment part 61.            Intra module refs:   ATT_ConvertUUIDto128
                                                   ATT_ParseWriteReq
                                                   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015304 - 00015384 (0x81 bytes), align: 0
  Segment part 64.            Intra module refs:   ATT_ParseReadByTypeReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByTypeReq
                                   00015304 
               calls direct
               XSTACK = 00000004 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015385 - 0001538B (0x7 bytes), align: 0
  Segment part 66.            Intra module refs:   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001538C, align: 0
  Segment part 67.            Intra module refs:   ATT_BuildReadByTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByTypeRsp
                                   0001538C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001538C - 000153C6 (0x3b bytes), align: 0
  Segment part 69.            Intra module refs:   ATT_BuildReadByGrpTypeRsp
                                                   ATT_BuildReadByTypeRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000153C7 - 000153EA (0x24 bytes), align: 0
  Segment part 74.            Intra module refs:   ATT_ParseReadReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadReq        000153C7 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000153EB - 000153F1 (0x7 bytes), align: 0
  Segment part 76.            Intra module refs:   ATT_ParseExchangeMTUReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000153F2 - 000153F7 (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   ATT_ParseExchangeMTUReq
                                                   ATT_ParseExecuteWriteReq
                                                   ATT_ParsePacket
                                                   ATT_ParseReadByTypeReq
                                                   ATT_ParseReadReq
                                                   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000153F8 - 000153FD (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   ATT_ParseExchangeMTUReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000153FE, align: 0
  Segment part 79.            Intra module refs:   ATT_BuildReadRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadRsp        000153FE 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000153FE - 00015426 (0x29 bytes), align: 0
  Segment part 81.            Intra module refs:   ATT_BuildReadBlobRsp
                                                   ATT_BuildReadMultiRsp
                                                   ATT_BuildReadRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015427 - 00015452 (0x2c bytes), align: 0
  Segment part 84.            Intra module refs:   ATT_BuildPrepareWriteRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015453 - 00015457 (0x5 bytes), align: 0
  Segment part 85.            Intra module refs:   Segment part 69
                                                   Segment part 84
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015458 - 0001545C (0x5 bytes), align: 0
  Segment part 86.            Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
                                                   ATT_ParseReadMultiReq
                                                   Segment part 81
                                                   Segment part 85
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001545D - 00015460 (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 84
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015461 - 0001546E (0xe bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 81
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001546F - 0001547C (0xe bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001547D - 0001548B (0xf bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 57
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001548C - 0001550B (0x80 bytes), align: 0
  Segment part 91.            Intra module refs:   ATT_ParseWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseWriteReq       0001548C 
               calls direct
               XSTACK = 00000004 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001550C - 0001550F (0x4 bytes), align: 0
  Segment part 93.            Intra module refs:   ATT_CompareUUID
                                                   ATT_ParseExecuteWriteReq
                                                   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015510 - 00015515 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 108
                                                   Segment part 109
                                                   Segment part 121
                                                   Segment part 76
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015516 - 00015544 (0x2f bytes), align: 0
  Segment part 97.            Intra module refs:   ATT_BuildHandleValueInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015545 - 00015548 (0x4 bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 18
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015549 - 0001555C (0x14 bytes), align: 0
  Segment part 99.            Intra module refs:   Segment part 89
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001555D - 0001555D (0x1 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 90
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001555E - 00015564 (0x7 bytes), align: 0
  Segment part 101.           Intra module refs:   Segment part 100
                                                   Segment part 13
                                                   Segment part 90
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015565 - 00015585 (0x21 bytes), align: 0
  Segment part 106.           Intra module refs:   ATT_ParseReadBlobReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadBlobReq    00015565 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015586 - 0001558C (0x7 bytes), align: 0
  Segment part 108.           Intra module refs:   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001558D - 000155B1 (0x25 bytes), align: 0
  Segment part 109.           Intra module refs:   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000155B2 - 000155C4 (0x13 bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 109
                                                   Segment part 78
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000155C5 - 000155C7 (0x3 bytes), align: 0
  Segment part 111.           Intra module refs:   ATT_BuildReadBlobRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadBlobRsp    000155C5 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000155C8 - 000155CF (0x8 bytes), align: 0
  Segment part 117.           Intra module refs:   ATT_BuildFindByTypeValueRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000155D0 - 00015640 (0x71 bytes), align: 0
  Segment part 118.           Intra module refs:   ATT_ParseReadMultiReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadMultiReq   000155D0 
               XSTACK = 00000004 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015641 - 00015649 (0x9 bytes), align: 0
  Segment part 120.           Intra module refs:   ATT_ParseReadMultiReq
                                                   Segment part 154
                                                   Segment part 69
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001564A - 0001564E (0x5 bytes), align: 0
  Segment part 121.           Intra module refs:   ATT_ParsePacket
                                                   ATT_ParseReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001564F - 00015651 (0x3 bytes), align: 0
  Segment part 122.           Intra module refs:   ATT_BuildReadMultiRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadMultiRsp   0001564F 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015652 - 00015654 (0x3 bytes), align: 0
  Segment part 127.           Intra module refs:   ATT_BuildReadByGrpTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByGrpTypeRsp
                                   00015652 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015655 - 000156BF (0x6b bytes), align: 0
  Segment part 134.           Intra module refs:   ATT_ParsePrepareWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePrepareWriteReq
                                   00015655 
               calls direct
               XSTACK = 00000004 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000156C0 - 000156D0 (0x11 bytes), align: 0
  Segment part 136.           Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000156D1 - 000156E3 (0x13 bytes), align: 0
  Segment part 137.           Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000156E4 - 000156E6 (0x3 bytes), align: 0
  Segment part 138.           Intra module refs:   ATT_BuildPrepareWriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildPrepareWriteRsp
                                   000156E4 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000156E7 - 00015716 (0x30 bytes), align: 0
  Segment part 146.           Intra module refs:   ATT_ParseExecuteWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExecuteWriteReq
                                   000156E7 
               XSTACK = 00000004 ( 00000000 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015717 - 00015719 (0x3 bytes), align: 0
  Segment part 150.           Intra module refs:   ATT_BuildHandleValueInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildHandleValueInd
                                   00015717 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001571A - 00015725 (0xc bytes), align: 0
  Segment part 154.           Intra module refs:   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015726 - 00015730 (0xb bytes), align: 0
  Segment part 155.           Intra module refs:   ATT_ParsePrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015731 - 00015736 (0x6 bytes), align: 0
  Segment part 156.           Intra module refs:   Segment part 155
                                                   Segment part 53
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015737 - 00015740 (0xa bytes), align: 0
  Segment part 157.           Intra module refs:   Segment part 155
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015741 - 00015829 (0xe9 bytes), align: 0
  Segment part 160.           Intra module refs:   attSendMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           attSendMsg              00015741 
               calls direct
               XSTACK = 00000002 ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001582A - 0001582E (0x5 bytes), align: 0
  Segment part 162.           Intra module refs:   ATT_BuildFindInfoRsp
                                                   attSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001582F - 000158E0 (0xb2 bytes), align: 0
  Segment part 163.           Intra module refs:   ATT_CompareUUID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_CompareUUID         0001582F 
               calls direct
               XSTACK = 00000004 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000158E1 - 00015940 (0x60 bytes), align: 0
  Segment part 165.           Intra module refs:   ATT_ConvertUUIDto128::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ConvertUUIDto128    000158E1 
               calls direct
               XSTACK = 0000001C ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015941 - 00015949 (0x9 bytes), align: 0
  Segment part 167.           Intra module refs:   ATT_ConvertUUIDto128
                                                   ATT_ParseFindByTypeValueReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001594A - 0001594C (0x3 bytes), align: 0
  Segment part 168.           Intra module refs:   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001594D - 00015951 (0x5 bytes), align: 0
  Segment part 169.           Intra module refs:   ATT_ConvertUUIDto128
                                                   ATT_ParseReadMultiReq
                                                   Segment part 168
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000564 - 00000569 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePacket::?relay
                                   00000564        gattProcessRxData (gatt_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000056A - 0000056F (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildErrorRsp::?relay
                                   0000056A        ATT_ErrorRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000570 - 00000575 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExchangeMTUReq::?relay
                                   00000570        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000576 - 0000057B (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExchangeMTURsp::?relay
                                   00000576        ATT_ExchangeMTURsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000057C - 00000581 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindInfoReq::?relay
                                   0000057C        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000582 - 00000587 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindInfoRsp::?relay
                                   00000582        ATT_FindInfoRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000588 - 0000058D (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindByTypeValueReq::?relay
                                   00000588        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000058E - 00000593 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindByTypeValueRsp::?relay
                                   0000058E        ATT_FindByTypeValueRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000594 - 00000599 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByTypeReq::?relay
                                   00000594        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000059A - 0000059F (0x6 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByTypeRsp::?relay
                                   0000059A        ATT_ReadByTypeRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005A0 - 000005A5 (0x6 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadReq::?relay
                                   000005A0        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005A6 - 000005AB (0x6 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadRsp::?relay
                                   000005A6        ATT_ReadRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005AC - 000005B1 (0x6 bytes), align: 0
  Segment part 92.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseWriteReq::?relay
                                   000005AC        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005B2 - 000005B7 (0x6 bytes), align: 0
  Segment part 107.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadBlobReq::?relay
                                   000005B2        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005B8 - 000005BD (0x6 bytes), align: 0
  Segment part 112.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadBlobRsp::?relay
                                   000005B8        ATT_ReadBlobRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005BE - 000005C3 (0x6 bytes), align: 0
  Segment part 119.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadMultiReq::?relay
                                   000005BE        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005C4 - 000005C9 (0x6 bytes), align: 0
  Segment part 123.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadMultiRsp::?relay
                                   000005C4        ATT_ReadMultiRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005CA - 000005CF (0x6 bytes), align: 0
  Segment part 128.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByGrpTypeRsp::?relay
                                   000005CA        ATT_ReadByGrpTypeRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005D0 - 000005D5 (0x6 bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePrepareWriteReq::?relay
                                   000005D0        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005D6 - 000005DB (0x6 bytes), align: 0
  Segment part 139.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildPrepareWriteRsp::?relay
                                   000005D6        ATT_PrepareWriteRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005DC - 000005E1 (0x6 bytes), align: 0
  Segment part 147.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExecuteWriteReq::?relay
                                   000005DC        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005E2 - 000005E7 (0x6 bytes), align: 0
  Segment part 151.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildHandleValueInd::?relay
                                   000005E2        Segment part 32 (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005E8 - 000005ED (0x6 bytes), align: 0
  Segment part 161.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           attSendMsg::?relay      000005E8        ATT_ExchangeMTURsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   Segment part 34 (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005EE - 000005F3 (0x6 bytes), align: 0
  Segment part 164.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_CompareUUID::?relay
                                   000005EE        GATTServApp_ReadAttr (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005F4 - 000005F9 (0x6 bytes), align: 0
  Segment part 166.           Intra module refs:   ATT_CompareUUID
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ConvertUUIDto128::?relay
                                   000005F4 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008463 - 00008472 (0x10 bytes), align: 0
  Segment part 177.           Intra module refs:   btBaseUUID

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_configmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000EBE - 00000EBE (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_ParamsInit
                                                   gapIncSignCounter
                                                   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAppTaskID            00000EBE        gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000301 - 00000301 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   GAP_ParamsInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProfileRole          00000301        GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   SM_ResponderInit (sm_rsppairing)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000302 - 00000302 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   gapGetDevAddress
                                                   gapGetDevAddressMode
                                                   gapProcessNewAddr
                                                   gapProcessRandomAddrComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDeviceAddrMode       00000302        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000303 - 00000304 (0x2 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPrivateAddrChangeTimeout
                                   00000303        GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000305 - 00000305 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   gapProcessRandomAddrComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAutoAdvPrivateAddrChange
                                   00000305        GAP_ProcessEvent (gap_task)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000306 - 00000315 (0x10 bytes), align: 0
  Segment part 12.            Intra module refs:   GAP_ParamsInit
                                                   GAP_SecParamsInit
                                                   Segment part 41
                                                   Segment part 58
                                                   gapGetDevAddress
                                                   gapGetIRK
                                                   gapGetSRK
                                                   gapReadBD_ADDRStatus
                                                   gapReadBufSizeCmdStatus
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000EBF - 00000F0C (0x4e bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000316 - 0000031B (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   gapGetDevAddress
                                                   gapProcessNewAddr
                                                   gapProcessRandomAddrComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000179D5 - 000179FC (0x28 bytes), align: 0
  Segment part 18.            Intra module refs:   GAP_SetParamValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SetParamValue       000179D5 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000179FD - 00017A18 (0x1c bytes), align: 0
  Segment part 20.            Intra module refs:   GAP_GetParamValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_GetParamValue       000179FD 
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017A19 - 00017A2A (0x12 bytes), align: 0
  Segment part 22.            Intra module refs:   GAP_GetParamValue
                                                   GAP_SetParamValue
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017A2B - 00017A5C (0x32 bytes), align: 0
  Segment part 23.            Intra module refs:   GAP_ParamsInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ParamsInit          00017A2B 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017A5D - 00017A61 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   GAP_ParamsInit
                                                   GAP_SecParamsInit
                                                   gapReadBufSizeCmdStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017A62 - 00017ABF (0x5e bytes), align: 0
  Segment part 26.            Intra module refs:   GAP_SecParamsInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SecParamsInit       00017A62 
               calls direct
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017AC0 - 00017B05 (0x46 bytes), align: 0
  Segment part 30.            Intra module refs:   gapReadBD_ADDRStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBD_ADDRStatus    00017AC0 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B06 - 00017B0A (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   gapProcessNewAddr
                                                   gapReadBD_ADDRStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B0B - 00017B55 (0x4b bytes), align: 0
  Segment part 33.            Intra module refs:   gapReadBufSizeCmdStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBufSizeCmdStatus
                                   00017B0B 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B56 - 00017B95 (0x40 bytes), align: 0
  Segment part 35.            Intra module refs:   gapProcessNewAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessNewAddr       00017B56 
               calls direct
               XSTACK = 00000014 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017B96 - 00017BC8 (0x33 bytes), align: 0
  Segment part 37.            Intra module refs:   gapAddAddrAdj::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAddAddrAdj           00017B96 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BC9 - 00017BCB (0x3 bytes), align: 0
  Segment part 39.            Intra module refs:   gapGetIRK
                                                   gapGetSRK
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BCC - 00017BD2 (0x7 bytes), align: 0
  Segment part 40.            Intra module refs:   GAP_GetParamValue
                                                   GAP_SetParamValue
                                                   Segment part 39
                                                   gapAddAddrAdj
                                                   gapDetermineAddrType
                                                   gapGetDevAddress
                                                   gapGetDevAddressMode
                                                   gapGetSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BD3 - 00017BD5 (0x3 bytes), align: 0
  Segment part 41.            Intra module refs:   GAP_SecParamsInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BD6 - 00017BDB (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   GAP_GetParamValue
                                                   GAP_SecParamsInit
                                                   Segment part 39
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BDC - 00017C09 (0x2e bytes), align: 0
  Segment part 43.            Intra module refs:   gapDetermineAddrType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDetermineAddrType    00017BDC 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017C0A - 00017CA8 (0x9f bytes), align: 0
  Segment part 45.            Intra module refs:   gapProcessRandomAddrComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessRandomAddrComplete
                                   00017C0A 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CA9 - 00017CAD (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   gapIncSignCounter
                                                   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CAE - 00017CAE (0x1 bytes), align: 0
  Segment part 48.            Intra module refs:   gapProcessRandomAddrComplete
                                                   gapReadBufSizeCmdStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CAF - 00017CB4 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   GAP_SecParamsInit
                                                   Segment part 48
                                                   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CB5 - 00017CBE (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CBF - 00017CC6 (0x8 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 50
                                                   gapUpdateConnSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CC7 - 00017CD0 (0xa bytes), align: 0
  Segment part 52.            Intra module refs:   gapGetSRK::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSRK               00017CC7 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CD1 - 00017CDD (0xd bytes), align: 0
  Segment part 54.            Intra module refs:   gapGetSignCounter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSignCounter       00017CD1 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CDE - 00017D04 (0x27 bytes), align: 0
  Segment part 56.            Intra module refs:   gapIncSignCounter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIncSignCounter       00017CDE 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D05 - 00017D10 (0xc bytes), align: 0
  Segment part 58.            Intra module refs:   gapGetSignCounter
                                                   gapIncSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D11 - 00017DDC (0xcc bytes), align: 0
  Segment part 59.            Intra module refs:   gapUpdateConnSignCounter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapUpdateConnSignCounter
                                   00017D11 
               calls direct
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017DDD - 00017DE8 (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   gapGetDevAddressMode::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddressMode    00017DDD 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017DE9 - 00017E00 (0x18 bytes), align: 0
  Segment part 63.            Intra module refs:   gapGetDevAddress::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddress        00017DE9 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E01 - 00017E0A (0xa bytes), align: 0
  Segment part 65.            Intra module refs:   gapGetIRK::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetIRK               00017E01 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E0B - 00017E88 (0x7e bytes), align: 0
  Segment part 67.            Intra module refs:   gapSendDeviceInitDoneEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendDeviceInitDoneEvent
                                   00017E0B 
               calls direct
               XSTACK = 0000000A ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E89 - 00017E91 (0x9 bytes), align: 0
  Segment part 71.            Intra module refs:   gapReadBufSizeCmdStatus
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000014E - 0000014E (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   gapAppTaskID
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000014F - 0000019C (0x4e bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085D9 - 000085DC (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapProcessRandomAddrComplete
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ea60         000085D9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005FA - 000005FF (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SetParamValue::?relay
                                   000005FA        GAPBondMgr_Register (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_SetParameter (peripheral)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000600 - 00000605 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   gapUpdateConnSignCounter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_GetParamValue::?relay
                                   00000600        GAPRole_GetParameter (peripheral)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   SM_StartPairing (sm_pairing)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   sendAuthEvent (gap_linkmgr)
                                                   smStartRspTimer (sm_mgr)
                                                   smpParsePairingReq (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000606 - 0000060B (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ParamsInit::?relay
                                   00000606        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000060C - 00000611 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SecParamsInit::?relay
                                   0000060C        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000612 - 00000617 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBD_ADDRStatus::?relay
                                   00000612        gapProcessHCICmdCompleteEvt (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000618 - 0000061D (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBufSizeCmdStatus::?relay
                                   00000618        gapProcessHCICmdCompleteEvt (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000061E - 00000623 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessNewAddr::?relay
                                   0000061E        GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000624 - 00000629 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   gapProcessNewAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAddAddrAdj::?relay   00000624        gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000062A - 0000062F (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDetermineAddrType::?relay
                                   0000062A        gapProcessConnectionCompleteEvt (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000630 - 00000635 (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessRandomAddrComplete::?relay
                                   00000630        gapProcessHCICmdCompleteEvt (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000636 - 0000063B (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSRK::?relay       00000636        SM_GenerateAuthenSig (sm_mgr)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000063C - 00000641 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSignCounter::?relay
                                   0000063C        SM_GenerateAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000642 - 00000647 (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIncSignCounter::?relay
                                   00000642        SM_GenerateAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000648 - 0000064D (0x6 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapUpdateConnSignCounter::?relay
                                   00000648        SM_VerifyAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000064E - 00000653 (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddressMode::?relay
                                   0000064E        smResponderSendNextKeyInfo (sm_rsppairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000654 - 00000659 (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddress::?relay
                                   00000654        smResponderSendNextKeyInfo (sm_rsppairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000065A - 0000065F (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetIRK::?relay       0000065A        GAP_ProcessEvent (gap_task)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000660 - 00000665 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   gapReadBD_ADDRStatus
                                                   gapReadBufSizeCmdStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendDeviceInitDoneEvent::?relay
                                   00000660 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085D9 - 000085DC (0x4 bytes), align: 0
  Segment part 72.            Intra module refs:   __Constant_ea60

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_devmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000031C - 0000031D (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   gapIsAdvertising
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pGapAdvertState         0000031C        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   Segment part 47 (gap_peridevmgr)
                                                   Segment part 49 (gap_peridevmgr)
                                                   Segment part 91 (gap_peridevmgr)
                                                   gapFreeAdvertState (gap_peridevmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D440 - 0001D446 (0x7 bytes), align: 0
  Segment part 8.             Intra module refs:   GAP_ResolvePrivateAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ResolvePrivateAddr
                                   0001D440 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D447 - 0001D44D (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   GAP_ResolvePrivateAddr
                                                   gapIsAdvertising
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D44E - 0001D465 (0x18 bytes), align: 0
  Segment part 11.            Intra module refs:   gapIsAdvertising::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIsAdvertising        0001D44E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D466 - 0001D47D (0x18 bytes), align: 0
  Segment part 15.            Intra module refs:   gapValidADType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapValidADType          0001D466 
               XSTACK = 00000012 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D47E - 0001D516 (0x99 bytes), align: 0
  Segment part 17.            Intra module refs:   gapFindADType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFindADType           0001D47E 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000666 - 0000066B (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ResolvePrivateAddr::?relay
                                   00000666        gapBondMgrResolvePrivateAddr (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000066C - 00000671 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIsAdvertising::?relay
                                   0000066C        GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000672 - 00000677 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   gapFindADType
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapValidADType::?relay
                                   00000672 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000678 - 0000067D (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFindADType::?relay   00000678        isLimitedDiscoverableMode (gap_peridevmgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_linkmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000031E - 0000031F (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   gapFreeEstLink
                                                   gapProcessConnectionCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pEstLink                0000031E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000320 - 00000321 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   GAP_Authenticate
                                                   Segment part 22
                                                   Segment part 95
                                                   gapFreeAuthLink
                                                   gapPairingCompleteCB
                                                   gapProcessDisconnectCompleteEvt
                                                   sendAuthEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAuthLink               00000320        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000322 - 00000323 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   GAP_TerminateLinkReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pfnCentralConnCBs       00000322        gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000324 - 00000324 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   GAP_TerminateLinkReq
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000325 - 00000325 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   GAP_TerminateLinkReq
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CEDC - 0000CF74 (0x99 bytes), align: 0
  Segment part 13.            Intra module refs:   GAP_TerminateLinkReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateLinkReq    0000CEDC 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF75 - 0000CF79 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   GAP_TerminateLinkReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF7A - 0000CF87 (0xe bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 15
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF88 - 0000D002 (0x7b bytes), align: 0
  Segment part 17.            Intra module refs:   GAP_Signable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Signable            0000CF88 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D003 - 0000D106 (0x104 bytes), align: 0
  Segment part 19.            Intra module refs:   GAP_Authenticate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Authenticate        0000D003 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D107 - 0000D10B (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   GAP_Authenticate
                                                   GAP_Signable
                                                   GAP_TerminateLinkReq
                                                   gapProcessDisconnectCompleteEvt
                                                   sendTerminateEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D10C - 0000D111 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   GAP_Authenticate
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D112 - 0000D117 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D118 - 0000D11D (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   GAP_Authenticate
                                                   GAP_Bond
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D11E - 0000D123 (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   gapProcessConnUpdateCompleteEvt
                                                   gapProcessConnectionCompleteEvt
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D124 - 0000D15F (0x3c bytes), align: 0
  Segment part 26.            Intra module refs:   GAP_TerminateAuth::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateAuth       0000D124 
               calls direct
               XSTACK = 00000000 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D160 - 0000D203 (0xa4 bytes), align: 0
  Segment part 30.            Intra module refs:   GAP_PasscodeUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PasscodeUpdate      0000D160 
               calls direct
               XSTACK = 00000016 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D204 - 0000D208 (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   GAP_Bond
                                                   GAP_PasscodeUpdate
                                                   gapSendBondCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D209 - 0000D2DB (0xd3 bytes), align: 0
  Segment part 33.            Intra module refs:   GAP_Bond::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Bond                0000D209 
               calls direct
               XSTACK = 00000001 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D2DC - 0000D2E0 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   gapFreeAuthLink
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D2E1 - 0000D2E5 (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
                                                   gapFreeAuthLink
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D2E6 - 0000D2E7 (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   GAP_Bond
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D2E8 - 0000D2EF (0x8 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 37
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D2F0 - 0000D44E (0x15f bytes), align: 0
  Segment part 39.            Intra module refs:   gapProcessConnectionCompleteEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnectionCompleteEvt
                                   0000D2F0 
               calls direct
               XSTACK = 00000000 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D44F - 0000D453 (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   GAP_Bond
                                                   gapPairingCompleteCB
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D454 - 0000D4AA (0x57 bytes), align: 0
  Segment part 42.            Intra module refs:   gapProcessConnUpdateCompleteEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnUpdateCompleteEvt
                                   0000D454 
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D4AB - 0000D52B (0x81 bytes), align: 0
  Segment part 44.            Intra module refs:   gapProcessDisconnectCompleteEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessDisconnectCompleteEvt
                                   0000D4AB 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D52C - 0000D60F (0xe4 bytes), align: 0
  Segment part 46.            Intra module refs:   sendEstLinkEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendEstLinkEvent        0000D52C 
               calls direct
               XSTACK = 00000020 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D610 - 0000D614 (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   gapPairingCompleteCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D615 - 0000D61B (0x7 bytes), align: 0
  Segment part 49.            Intra module refs:   GAP_Signable
                                                   gapPairingCompleteCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D61C - 0000D65F (0x44 bytes), align: 0
  Segment part 50.            Intra module refs:   sendTerminateEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sendTerminateEvent      0000D61C 
               calls direct
               XSTACK = 00000016 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D660 - 0000D668 (0x9 bytes), align: 0
  Segment part 52.            Intra module refs:   sendTerminateEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D669 - 0000D6EE (0x86 bytes), align: 0
  Segment part 53.            Intra module refs:   gapSendLinkUpdateEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendLinkUpdateEvent
                                   0000D669 
               calls direct
               XSTACK = 0000000D ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D6EF - 0000D714 (0x26 bytes), align: 0
  Segment part 55.            Intra module refs:   disconnectNext::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           disconnectNext          0000D6EF 
               calls direct
               XSTACK = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D715 - 0000D71A (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   GAP_Authenticate
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D71B - 0000D720 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   GAP_Authenticate
                                                   Segment part 57
                                                   disconnectNext
                                                   gapFreeAuthLink
                                                   gapFreeEstLink
                                                   gapProcessConnUpdateCompleteEvt
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D721 - 0000D8C4 (0x1a4 bytes), align: 0
  Segment part 59.            Intra module refs:   sendAuthEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sendAuthEvent           0000D721 
               calls direct
               XSTACK = 0000001A ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D8C5 - 0000D8C9 (0x5 bytes), align: 0
  Segment part 61.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D8CA - 0000D8D0 (0x7 bytes), align: 0
  Segment part 62.            Intra module refs:   sendAuthEvent
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D8D1 - 0000D8D5 (0x5 bytes), align: 0
  Segment part 63.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D8D6 - 0000D8D9 (0x4 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 62
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D8DA - 0000D8E2 (0x9 bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 64
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D8E3 - 0000D8ED (0xb bytes), align: 0
  Segment part 66.            Intra module refs:   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D8EE - 0000D8F5 (0x8 bytes), align: 0
  Segment part 67.            Intra module refs:   gapPairingCompleteCB
                                                   gapSendLinkUpdateEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D8F6 - 0000D921 (0x2c bytes), align: 0
  Segment part 68.            Intra module refs:   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D922 - 0000D926 (0x5 bytes), align: 0
  Segment part 69.            Intra module refs:   gapPairingCompleteCB
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D927 - 0000D92C (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   gapPairingCompleteCB
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D92D - 0000D934 (0x8 bytes), align: 0
  Segment part 71.            Intra module refs:   GAP_Authenticate
                                                   GAP_TerminateLinkReq
                                                   Segment part 70
                                                   gapFreeAuthLink
                                                   gapFreeEstLink
                                                   gapPairingCompleteCB
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D935 - 0000D96F (0x3b bytes), align: 0
  Segment part 72.            Intra module refs:   gapFreeAuthLink::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAuthLink         0000D935 
               calls direct
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D970 - 0000D976 (0x7 bytes), align: 0
  Segment part 74.            Intra module refs:   gapFreeAuthLink
                                                   gapFreeEstLink
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D977 - 0000D994 (0x1e bytes), align: 0
  Segment part 75.            Intra module refs:   gapFreeEstLink::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFreeEstLink          0000D977 
               calls direct
               XSTACK = 00000016 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D995 - 0000DA0C (0x78 bytes), align: 0
  Segment part 77.            Intra module refs:   gapSendBondCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendBondCompleteEvent
                                   0000D995 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DA0D - 0000DA0F (0x3 bytes), align: 0
  Segment part 79.            Intra module refs:   gapPasskeyNeededCB
                                                   gapSendBondCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DA10 - 0000DA11 (0x2 bytes), align: 0
  Segment part 80.            Intra module refs:   Segment part 79
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DA12 - 0000DA17 (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 80
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DA18 - 0000DACC (0xb5 bytes), align: 0
  Segment part 82.            Intra module refs:   gapSendPairingReqEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendPairingReqEvent
                                   0000DA18 
               calls direct
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DACD - 0000DAD4 (0x8 bytes), align: 0
  Segment part 84.            Intra module refs:   gapPasskeyNeededCB
                                                   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DAD5 - 0000DADE (0xa bytes), align: 0
  Segment part 85.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DADF - 0000DAE4 (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DAE5 - 0000DAEB (0x7 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 85
                                                   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DAEC - 0000DBA3 (0xb8 bytes), align: 0
  Segment part 88.            Intra module refs:   gapPasskeyNeededCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPasskeyNeededCB      0000DAEC 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DBA4 - 0000DBAB (0x8 bytes), align: 0
  Segment part 90.            Intra module refs:   gapPasskeyNeededCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DBAC - 0000DBAE (0x3 bytes), align: 0
  Segment part 91.            Intra module refs:   Segment part 49
                                                   Segment part 90
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DBAF - 0000DBB3 (0x5 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 102
                                                   Segment part 41
                                                   Segment part 70
                                                   Segment part 91
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DBB4 - 0000DDA4 (0x1f1 bytes), align: 0
  Segment part 93.            Intra module refs:   gapPairingCompleteCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPairingCompleteCB    0000DBB4 
               calls direct
               XSTACK = 00000008 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDA5 - 0000DDAD (0x9 bytes), align: 0
  Segment part 95.            Intra module refs:   Segment part 35
                                                   Segment part 69
                                                   Segment part 98
                                                   Segment part 99
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDAE - 0000DDB0 (0x3 bytes), align: 0
  Segment part 96.            Intra module refs:   gapPasskeyNeededCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDB1 - 0000DDB4 (0x4 bytes), align: 0
  Segment part 97.            Intra module refs:   GAP_Bond
                                                   GAP_Signable
                                                   Segment part 96
                                                   gapPairingCompleteCB
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDB5 - 0000DDBA (0x6 bytes), align: 0
  Segment part 98.            Intra module refs:   gapFreeAuthLink
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDBB - 0000DDC0 (0x6 bytes), align: 0
  Segment part 99.            Intra module refs:   gapPairingCompleteCB
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDC1 - 0000DDC6 (0x6 bytes), align: 0
  Segment part 102.           Intra module refs:   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDC7 - 0000DDCC (0x6 bytes), align: 0
  Segment part 103.           Intra module refs:   GAP_Authenticate
                                                   GAP_Bond
                                                   Segment part 102
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000067E - 00000683 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateLinkReq::?relay
                                   0000067E        GAPRole_TerminateConnection (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000684 - 00000689 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Signable::?relay    00000684        GAPBondMgr_LinkEst (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000068A - 0000068F (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Authenticate::?relay
                                   0000068A        gapBondMgrAuthenticate (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000690 - 00000695 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateAuth::?relay
                                   00000690        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000696 - 0000069B (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PasscodeUpdate::?relay
                                   00000696        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000069C - 000006A1 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Bond::?relay        0000069C        gapBondMgrBondReq (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006A2 - 000006A7 (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnectionCompleteEvt::?relay
                                   000006A2        gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006A8 - 000006AD (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnUpdateCompleteEvt::?relay
                                   000006A8        gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006AE - 000006B3 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessDisconnectCompleteEvt::?relay
                                   000006AE        gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006B4 - 000006B9 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   gapProcessConnectionCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendEstLinkEvent::?relay
                                   000006B4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006BA - 000006BF (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
           LOCAL                   ADDRESS         
           =====                   =======         
           sendTerminateEvent::?relay
                                   000006BA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006C0 - 000006C5 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   gapProcessConnUpdateCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendLinkUpdateEvent::?relay
                                   000006C0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006C6 - 000006CB (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   GAP_TerminateLinkReq
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
           LOCAL                   ADDRESS         
           =====                   =======         
           disconnectNext::?relay
                                   000006C6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006CC - 000006D1 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   gapPairingCompleteCB
           LOCAL                   ADDRESS         
           =====                   =======         
           sendAuthEvent::?relay   000006CC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006D2 - 000006D7 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   GAP_Authenticate
                                                   gapProcessDisconnectCompleteEvt
                                                   sendAuthEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAuthLink::?relay
                                   000006D2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006D8 - 000006DD (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   gapProcessConnectionCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFreeEstLink::?relay
                                   000006D8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006DE - 000006E3 (0x6 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendBondCompleteEvent::?relay
                                   000006DE        smProcessEncryptChange (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006E4 - 000006E9 (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendPairingReqEvent::?relay
                                   000006E4        smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006EA - 000006EF (0x6 bytes), align: 0
  Segment part 89.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPasskeyNeededCB::?relay
                                   000006EA        smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006F0 - 000006F5 (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPairingCompleteCB::?relay
                                   000006F0        smEndPairing (sm_pairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_peridevmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000F0D - 00000F0D (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_UpdateAdvertisingData
                                                   gapWriteAdvDataStatus
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000326 - 00000327 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   GAP_MakeDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   GAP_UpdateAdvertisingData
                                                   Segment part 35
                                                   Segment part 65
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000328 - 00000329 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   GAP_PeriDevMgrInit
                                                   GAP_UpdateAdvertisingData
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000032A - 0000032B (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   GAP_EndDiscoverable
                                                   gapProcessAdvertisingEvt
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F0E - 00000F13 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018000 - 000180D2 (0xd3 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_MakeDiscoverable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_MakeDiscoverable    00018000 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000180D3 - 0001817B (0xa9 bytes), align: 0
  Segment part 18.            Intra module refs:   GAP_UpdateAdvertisingData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_UpdateAdvertisingData
                                   000180D3 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001817C - 000181C7 (0x4c bytes), align: 0
  Segment part 20.            Intra module refs:   GAP_EndDiscoverable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_EndDiscoverable     0001817C 
               calls direct
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000181C8 - 000181CE (0x7 bytes), align: 0
  Segment part 31.            Intra module refs:   gapFreeAdvertState
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000181CF - 00018270 (0xa2 bytes), align: 0
  Segment part 32.            Intra module refs:   GAP_PeriDevMgrInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PeriDevMgrInit      000181CF 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018271 - 00018275 (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   gapSetAdvParamsStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018276 - 00018278 (0x3 bytes), align: 0
  Segment part 35.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018279 - 0001827E (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   GAP_MakeDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001827F - 0001830A (0x8c bytes), align: 0
  Segment part 37.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapPeriProcessHCICmdCompleteEvt
                                   0001827F 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001830B - 000183E9 (0xdf bytes), align: 0
  Segment part 39.            Intra module refs:   gapSetAdvParams::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParams         0001830B 
               calls direct, is indirectly called
               XSTACK = 0000000C ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000183EA - 000183F6 (0xd bytes), align: 0
  Segment part 41.            Intra module refs:   gapSetAdvParams
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000183F7 - 00018425 (0x2f bytes), align: 0
  Segment part 42.            Intra module refs:   gapSetAdvParamsStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParamsStatus   000183F7 
               calls direct
               XSTACK = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018426 - 00018519 (0xf4 bytes), align: 0
  Segment part 44.            Intra module refs:   gapWriteAdvEnableStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvEnableStatus
                                   00018426 
               calls direct
               XSTACK = 0000000A ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001851A - 0001851A (0x1 bytes), align: 0
  Segment part 46.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_MakeDiscoverable
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001851B - 00018520 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 46
                                                   gapSetAdvParams
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018521 - 00018525 (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 47
                                                   gapSetAdvParams
                                                   gapSetAdvParamsStatus
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018526 - 00018529 (0x4 bytes), align: 0
  Segment part 49.            Intra module refs:   gapSendMakeDiscEvent
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001852A - 00018532 (0x9 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   gapPeriProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018533 - 00018538 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   GAP_MakeDiscoverable
                                                   Segment part 48
                                                   Segment part 50
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018539 - 00018573 (0x3b bytes), align: 0
  Segment part 52.            Intra module refs:   gapWriteAdvDataStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvDataStatus   00018539 
               calls direct
               XSTACK = 0000000A ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018574 - 00018578 (0x5 bytes), align: 0
  Segment part 54.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
                                                   gapWriteAdvDataStatus
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018579 - 00018580 (0x8 bytes), align: 0
  Segment part 55.            Intra module refs:   gapSendMakeDiscEvent
                                                   gapWriteAdvDataStatus
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018581 - 00018641 (0xc1 bytes), align: 0
  Segment part 56.            Intra module refs:   gapProcessAdvertisingEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessAdvertisingEvt
                                   00018581 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018642 - 00018646 (0x5 bytes), align: 0
  Segment part 60.            Intra module refs:   GAP_MakeDiscoverable
                                                   gapProcessAdvertisingEvt
                                                   gapSendMakeDiscEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018647 - 00018649 (0x3 bytes), align: 0
  Segment part 65.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001864A - 0001864F (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   GAP_PeriDevMgrInit
                                                   Segment part 65
                                                   gapFreeAdvertState
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018650 - 00018655 (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 92
                                                   gapPeriProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018656 - 00018691 (0x3c bytes), align: 0
  Segment part 80.            Intra module refs:   gapSendMakeDiscEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendMakeDiscEvent    00018656 
               calls direct
               XSTACK = 00000014 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018692 - 000186AD (0x1c bytes), align: 0
  Segment part 82.            Intra module refs:   gapFreeAdvertState::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAdvertState      00018692 
               calls direct
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000186AE - 00018709 (0x5c bytes), align: 0
  Segment part 84.            Intra module refs:   isLimitedDiscoverableMode::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           isLimitedDiscoverableMode
                                   000186AE 
               calls direct
               XSTACK = 00000014 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001870A - 0001870B (0x2 bytes), align: 0
  Segment part 86.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001870C - 0001870E (0x3 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001870F - 00018713 (0x5 bytes), align: 0
  Segment part 88.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_MakeDiscoverable
                                                   Segment part 87
                                                   gapProcessAdvertisingEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018714 - 00018715 (0x2 bytes), align: 0
  Segment part 89.            Intra module refs:   GAP_MakeDiscoverable
                                                   gapSendMakeDiscEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018716 - 00018719 (0x4 bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 89
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001871A - 0001871C (0x3 bytes), align: 0
  Segment part 91.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_MakeDiscoverable
                                                   Segment part 90
                                                   gapFreeAdvertState
                                                   gapProcessAdvertisingEvt
                                                   gapSetAdvParams
                                                   gapSetAdvParamsStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001871D - 00018722 (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   GAP_MakeDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   GAP_UpdateAdvertisingData
                                                   Segment part 91
                                                   gapProcessAdvertisingEvt
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000019D - 0000019D (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000019E - 000001A3 (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000862D - 00008630 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   gapWriteAdvEnableStatus
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e8          0000862D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006F6 - 000006FB (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_MakeDiscoverable::?relay
                                   000006F6        GAPRole_ProcessEvent (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006FC - 00000701 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_UpdateAdvertisingData::?relay
                                   000006FC        GAPRole_SetParameter (peripheral)
                                                   gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000702 - 00000707 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   gapProcessAdvertisingEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_EndDiscoverable::?relay
                                   00000702        GAPRole_SetParameter (peripheral)
                                                   gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000708 - 0000070D (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PeriDevMgrInit::?relay
                                   00000708        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000070E - 00000713 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 13
           LOCAL                   ADDRESS         
           =====                   =======         
           gapPeriProcessHCICmdCompleteEvt::?relay
                                   0000070E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000714 - 00000719 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   GAP_MakeDiscoverable
                                                   Segment part 13
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParams::?relay
                                   00000714 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000071A - 0000071F (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParamsStatus::?relay
                                   0000071A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000720 - 00000725 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvEnableStatus::?relay
                                   00000720 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000726 - 0000072B (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvDataStatus::?relay
                                   00000726 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000072C - 00000731 (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   Segment part 13
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessAdvertisingEvt::?relay
                                   0000072C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000732 - 00000737 (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   gapSetAdvParamsStatus
                                                   gapWriteAdvEnableStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendMakeDiscEvent::?relay
                                   00000732 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000738 - 0000073D (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   GAP_MakeDiscoverable
                                                   gapProcessAdvertisingEvt
                                                   gapSendMakeDiscEvent
                                                   gapWriteAdvEnableStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAdvertState::?relay
                                   00000738 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000073E - 00000743 (0x6 bytes), align: 0
  Segment part 85.            Intra module refs:   gapSetAdvParams
                                                   gapWriteAdvEnableStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           isLimitedDiscoverableMode::?relay
                                   0000073E 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000862D - 00008630 (0x4 bytes), align: 0
  Segment part 94.            Intra module refs:   __Constant_3e8

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_perilinkmgr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D71B - 0001D79E (0x84 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_SendSlaveSecurityRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SendSlaveSecurityRequest
                                   0001D71B 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000744 - 00000749 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SendSlaveSecurityRequest::?relay
                                   00000744        GAPBondMgr_LinkEst (gapbondmgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000032C - 0000032C (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_Init
                                                   GAP_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapTaskID               0000032C        GAP_Authenticate (gap_linkmgr)
                                                   GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F14 - 00000F14 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GAP_ProcessEvent
                                                   GAP_RegisterForHCIMsgs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapUnwantedTaskID       00000F14        SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000032D - 0000032E (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
                                                   gapRegisterPeripheral
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pfnPeripheralCBs        0000032D        gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000032F - 00000330 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A524 - 0001A52D (0xa bytes), align: 0
  Segment part 11.            Intra module refs:   GAP_RegisterForHCIMsgs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_RegisterForHCIMsgs
                                   0001A524 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A52E - 0001A531 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   gapRegisterPeripheral
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A532 - 0001A532 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   GAP_RegisterForHCIMsgs
                                                   Segment part 13
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A533 - 0001A539 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   GAP_NumActiveConnections
                                                   Segment part 14
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A53A - 0001A55F (0x26 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Init                0001A53A 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A560 - 0001A676 (0x117 bytes), align: 0
  Segment part 18.            Intra module refs:   GAP_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ProcessEvent        0001A560 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A677 - 0001A67B (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A67C - 0001A685 (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   GAP_NumActiveConnections::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_NumActiveConnections
                                   0001A67C 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A686 - 0001A7A4 (0x11f bytes), align: 0
  Segment part 23.            Intra module refs:   gapProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessOSALMsg       0001A686 
               calls direct
               XSTACK = 00000012 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7A5 - 0001A7A7 (0x3 bytes), align: 0
  Segment part 25.            Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
                                                   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7A8 - 0001A7AF (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   GAP_ProcessEvent
                                                   Segment part 25
                                                   gapProcessHCICmdCompleteEvt
                                                   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7B0 - 0001A7BA (0xb bytes), align: 0
  Segment part 27.            Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
                                                   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7BB - 0001A884 (0xca bytes), align: 0
  Segment part 28.            Intra module refs:   gapProcessHCICmdCompleteEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessHCICmdCompleteEvt
                                   0001A7BB 
               calls direct
               XSTACK = 00000010 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A885 - 0001A897 (0x13 bytes), align: 0
  Segment part 30.            Intra module refs:   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A898 - 0001A8A0 (0x9 bytes), align: 0
  Segment part 31.            Intra module refs:   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A8A1 - 0001A8A8 (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 27
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A8A9 - 0001A8B2 (0xa bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
                                                   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A8B3 - 0001A8BC (0xa bytes), align: 0
  Segment part 36.            Intra module refs:   gapRegisterPeripheral::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterPeripheral   0001A8B3 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001A4 - 000001A4 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   gapUnwantedTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000074A - 0000074F (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_RegisterForHCIMsgs::?relay
                                   0000074A        GAPRole_Init (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000750 - 00000755 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Init::?relay        00000750        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000756 - 0000075B (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ProcessEvent::?relay
                                   00000756        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000075C - 00000761 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_NumActiveConnections::?relay
                                   0000075C        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000762 - 00000767 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   GAP_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessOSALMsg::?relay
                                   00000762 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000768 - 0000076D (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   gapProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessHCICmdCompleteEvt::?relay
                                   00000768 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000076E - 00000773 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterPeripheral::?relay
                                   0000076E        GAP_PeriDevMgrInit (gap_peridevmgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gapgattserver

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000331 - 00000332 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   Segment part 61
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008635 - 00008637 (0x3 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F15 - 00000F15 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000333 - 00000348 (0x16 bytes), align: 0
  Segment part 10.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F16 - 00000F16 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000349 - 0000034A (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F17 - 00000F17 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000034B - 0000034B (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F18 - 00000F18 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000034C - 00000351 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F19 - 00000F19 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F1A - 00000F21 (0x8 bytes), align: 0
  Segment part 22.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F22 - 00000F79 (0x58 bytes), align: 0
  Segment part 24.            Intra module refs:   GGS_AddService
                                                   GGS_SetParameter
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085BB - 000085C0 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   GGS_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapServiceCBs           000085BB 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FAA5 - 0000FBD4 (0x130 bytes), align: 0
  Segment part 27.            Intra module refs:   GGS_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_SetParameter        0000FAA5 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FBD5 - 0000FBFB (0x27 bytes), align: 0
  Segment part 35.            Intra module refs:   GGS_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_AddService          0000FBD5 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FBFC - 0000FC00 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   GGS_AddService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC01 - 0000FC07 (0x7 bytes), align: 0
  Segment part 42.            Intra module refs:   ggs_SetAttrWPermit
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC08 - 0000FC51 (0x4a bytes), align: 0
  Segment part 43.            Intra module refs:   ggs_SetAttrWPermit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_SetAttrWPermit      0000FC08 
               XSTACK = 0000000E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC52 - 0000FDD1 (0x180 bytes), align: 0
  Segment part 45.            Intra module refs:   ggs_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_ReadAttrCB          0000FC52 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FDD2 - 0000FDD6 (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   ggs_ReadAttrCB
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FDD7 - 0000FDDC (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FDDD - 0000FDE0 (0x4 bytes), align: 0
  Segment part 49.            Intra module refs:   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FDE1 - 0000FDEA (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FDEB - 0000FDF0 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FDF1 - 0000FDF6 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FDF7 - 0000FDFC (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   GGS_SetParameter
                                                   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FDFD - 0000FE02 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE03 - 0000FE08 (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE09 - 0000FE11 (0x9 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 55
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE12 - 0000FE12 (0x1 bytes), align: 0
  Segment part 57.            Intra module refs:   ggs_ReadAttrCB
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE13 - 0000FE18 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   GGS_SetParameter
                                                   Segment part 57
                                                   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE19 - 0000FFAC (0x194 bytes), align: 0
  Segment part 59.            Intra module refs:   ggs_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_WriteAttrCB         0000FE19 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FFAD - 0000FFB0 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FFB1 - 0000FFB8 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 61
                                                   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FFB9 - 0000FFCB (0x13 bytes), align: 0
  Segment part 63.            Intra module refs:   ggs_WriteAttrCB
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001A5 - 000001A5 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001A6 - 000001A6 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001A7 - 000001A7 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001A8 - 000001A8 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 17
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001A9 - 000001A9 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001AA - 000001B1 (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001B2 - 00000209 (0x58 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000774 - 00000779 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_SetParameter::?relay
                                   00000774        gapBondSetupPrivFlag (gapbondmgr)
                                                   set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000077A - 0000077F (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_AddService::?relay
                                   0000077A        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000780 - 00000785 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   GGS_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_SetAttrWPermit::?relay
                                   00000780 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000786 - 0000078B (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   gapServiceCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_ReadAttrCB::?relay
                                   00000786 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000078C - 00000791 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   gapServiceCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_WriteAttrCB::?relay
                                   0000078C 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008635 - 00008637 (0x3 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085BB - 000085C0 (0x6 bytes), align: 0
  Segment part 65.            Intra module refs:   gapServiceCBs

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gatt_server

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000352 - 00000359 (0x8 bytes), align: 0
  Segment part 6.             Intra module refs:   GATT_InitServer
                                                   gattFindServerInfo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           serverInfoTbl           00000352 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F7A - 00000F7A (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GATT_RegisterForReq
                                                   gattServerProcessMsgCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reqTaskId               00000F7A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000035A - 0000035B (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   GATT_FindHandle
                                                   GATT_FindHandleUUID
                                                   GATT_RegisterService
                                                   GATT_ServiceNumAttrs
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F7B - 00000F7C (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   GATT_RegisterService
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081DB - 0000820A (0x30 bytes), align: 0
  Segment part 12.            Intra module refs:   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AFB5 - 0000B01E (0x6a bytes), align: 0
  Segment part 13.            Intra module refs:   GATT_InitServer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_InitServer         0000AFB5 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B01F - 0000B14E (0x130 bytes), align: 0
  Segment part 15.            Intra module refs:   GATT_RegisterService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterService    0000B01F 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B14F - 0000B153 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   GATT_Indication
                                                   GATT_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B154 - 0000B159 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   GATT_RegisterService
                                                   gattProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B15A - 0000B163 (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
                                                   gattServerHandleTimerCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B164 - 0000B172 (0xf bytes), align: 0
  Segment part 20.            Intra module refs:   GATT_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B173 - 0000B17D (0xb bytes), align: 0
  Segment part 21.            Intra module refs:   GATT_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B17E - 0000B186 (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   GATT_RegisterForReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterForReq     0000B17E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B187 - 0000B18D (0x7 bytes), align: 0
  Segment part 26.            Intra module refs:   GATT_RegisterForReq
                                                   GATT_ServiceNumAttrs
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B18E - 0000B1B5 (0x28 bytes), align: 0
  Segment part 27.            Intra module refs:   GATT_VerifyReadPermissions::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyReadPermissions
                                   0000B18E 
               calls direct
               XSTACK = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B1B6 - 0000B1BA (0x5 bytes), align: 0
  Segment part 29.            Intra module refs:   GATT_VerifyReadPermissions
                                                   GATT_VerifyWritePermissions
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B1BB - 0000B211 (0x57 bytes), align: 0
  Segment part 30.            Intra module refs:   GATT_VerifyWritePermissions::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyWritePermissions
                                   0000B1BB 
               calls direct
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B212 - 0000B2B5 (0xa4 bytes), align: 0
  Segment part 32.            Intra module refs:   GATT_ServiceChangedInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceChangedInd
                                   0000B212 
               calls direct
               XSTACK = 00000000 ( 00000029 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B2B6 - 0000B2BA (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   GATT_ServiceChangedInd
                                                   gattProcessWriteReq
                                                   gattServerHandleTimerCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B2BB - 0000B3C1 (0x107 bytes), align: 0
  Segment part 35.            Intra module refs:   GATT_FindHandleUUID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandleUUID     0000B2BB 
               calls direct
               XSTACK = 0000002C ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B3C2 - 0000B48B (0xca bytes), align: 0
  Segment part 37.            Intra module refs:   GATT_FindHandle::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandle         0000B3C2 
               XSTACK = 00000010 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B48C - 0000B5EB (0x160 bytes), align: 0
  Segment part 39.            Intra module refs:   GATT_FindNextAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindNextAttr       0000B48C 
               calls direct
               XSTACK = 00000004 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B5EC - 0000B626 (0x3b bytes), align: 0
  Segment part 41.            Intra module refs:   GATT_ServiceNumAttrs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceNumAttrs    0000B5EC 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B627 - 0000B62E (0x8 bytes), align: 0
  Segment part 43.            Intra module refs:   GATT_FindHandleUUID
                                                   GATT_RegisterService
                                                   GATT_ServiceNumAttrs
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B62F - 0000B6CD (0x9f bytes), align: 0
  Segment part 44.            Intra module refs:   GATT_Indication::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Indication         0000B62F 
               calls direct
               XSTACK = 00000024 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B6CE - 0000B6D3 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   GATT_Indication
                                                   Segment part 73
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B6D4 - 0000B720 (0x4d bytes), align: 0
  Segment part 47.            Intra module refs:   GATT_Notification::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Notification       0000B6D4 
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B721 - 0000B746 (0x26 bytes), align: 0
  Segment part 49.            Intra module refs:   gattServiceLastHandle::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServiceLastHandle   0000B721 
               calls direct
               XSTACK = 00000012 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B747 - 0000B940 (0x1fa bytes), align: 0
  Segment part 51.            Intra module refs:   gattServerProcessMsgCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerProcessMsgCB
                                   0000B747 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000031 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B941 - 0000B94B (0xb bytes), align: 0
  Segment part 53.            Intra module refs:   GATT_RegisterService
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B94C - 0000B954 (0x9 bytes), align: 0
  Segment part 54.            Intra module refs:   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B955, align: 0
  Segment part 55.            Intra module refs:   gattProcessExchangeMTUReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExchangeMTUReq
                                   0000B955 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B955 - 0000B959 (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   gattProcessExchangeMTUReq
                                                   gattProcessExecuteWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B95A - 0000BB26 (0x1cd bytes), align: 0
  Segment part 58.            Intra module refs:   gattProcessFindInfoReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindInfoReq
                                   0000B95A 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000002C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB27 - 0000BB33 (0xd bytes), align: 0
  Segment part 60.            Intra module refs:   gattProcessFindInfoReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB34 - 0000BB37 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   gattProcessFindInfoReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB38 - 0000BB3D (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   GATT_RegisterService
                                                   Segment part 61
                                                   gattProcessFindInfoReq
                                                   gattProcessReadByGrpTypeReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB3E - 0000BB50 (0x13 bytes), align: 0
  Segment part 63.            Intra module refs:   gattProcessFindInfoReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB51 - 0000BB54 (0x4 bytes), align: 0
  Segment part 64.            Intra module refs:   gattProcessReadByGrpTypeReq
                                                   gattProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB55 - 0000BB58 (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   GATT_FindHandleUUID
                                                   GATT_FindNextAttr
                                                   GATT_ServiceNumAttrs
                                                   Segment part 64
                                                   gattProcessFindInfoReq
                                                   gattProcessReadMultiReq
                                                   gattProcessReadReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB59 - 0000BB5E (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 21
                                                   Segment part 65
                                                   Segment part 73
                                                   Segment part 81
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BB5F - 0000BBAB (0x4d bytes), align: 0
  Segment part 67.            Intra module refs:   gattProcessFindByTypeValueReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindByTypeValueReq
                                   0000BB5F 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BBAC - 0000BBF6 (0x4b bytes), align: 0
  Segment part 69.            Intra module refs:   gattProcessReadByTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByTypeReq
                                   0000BBAC 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BBF7 - 0000BBFB (0x5 bytes), align: 0
  Segment part 71.            Intra module refs:   GATT_InitServer
                                                   gattFindServerInfo
                                                   gattGetServerStatus
                                                   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
                                                   gattProcessReadReq
                                                   gattServiceLastHandle
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BBFC - 0000BC08 (0xd bytes), align: 0
  Segment part 72.            Intra module refs:   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC09 - 0000BC1E (0x16 bytes), align: 0
  Segment part 73.            Intra module refs:   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC1F - 0000BC51 (0x33 bytes), align: 0
  Segment part 74.            Intra module refs:   gattProcessReadReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadReq      0000BC1F 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC52 - 0000BCD9 (0x88 bytes), align: 0
  Segment part 76.            Intra module refs:   gattProcessReadMultiReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadMultiReq
                                   0000BC52 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BCDA - 0000BCDB (0x2 bytes), align: 0
  Segment part 78.            Intra module refs:   GATT_FindHandle
                                                   GATT_FindHandleUUID
                                                   GATT_ServiceChangedInd
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BCDC - 0000BCDD (0x2 bytes), align: 0
  Segment part 79.            Intra module refs:   GATT_FindHandleUUID
                                                   Segment part 78
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BCDE - 0000BCE3 (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   GATT_FindHandle
                                                   GATT_FindNextAttr
                                                   Segment part 79
                                                   gattProcessReadByGrpTypeReq
                                                   gattProcessReadMultiReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BCE4 - 0000BCEB (0x8 bytes), align: 0
  Segment part 81.            Intra module refs:   GATT_FindNextAttr
                                                   gattProcessReadMultiReq
                                                   gattServerHandleTimerCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BCEC - 0000BCEE (0x3 bytes), align: 0
  Segment part 82.            Intra module refs:   GATT_FindNextAttr
                                                   gattProcessFindInfoReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BCEF - 0000BCF3 (0x5 bytes), align: 0
  Segment part 83.            Intra module refs:   Segment part 82
                                                   gattProcessReadByGrpTypeReq
                                                   gattProcessReadMultiReq
                                                   gattServerHandleConnStatusCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BCF4 - 0000BD93 (0xa0 bytes), align: 0
  Segment part 84.            Intra module refs:   gattProcessReadByGrpTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByGrpTypeReq
                                   0000BCF4 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BD94 - 0000BD9C (0x9 bytes), align: 0
  Segment part 86.            Intra module refs:   GATT_FindNextAttr
                                                   gattProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BD9D - 0000BDD4 (0x38 bytes), align: 0
  Segment part 87.            Intra module refs:   gattProcessWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessWriteReq     0000BD9D 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BDD5 - 0000BDD7 (0x3 bytes), align: 0
  Segment part 89.            Intra module refs:   gattProcessExecuteWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExecuteWriteReq
                                   0000BDD5 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BDD8 - 0000BE1F (0x48 bytes), align: 0
  Segment part 91.            Intra module refs:   gattGetServerStatus::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattGetServerStatus     0000BDD8 
               calls direct
               XSTACK = 00000010 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BE20 - 0000BE5F (0x40 bytes), align: 0
  Segment part 93.            Intra module refs:   gattFindServerInfo::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattFindServerInfo      0000BE20 
               XSTACK = 0000002D ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BE60 - 0000BEB6 (0x57 bytes), align: 0
  Segment part 95.            Intra module refs:   gattServerHandleTimerCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleTimerCB
                                   0000BE60 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BEB7 - 0000BFA3 (0xed bytes), align: 0
  Segment part 97.            Intra module refs:   gattServerHandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleConnStatusCB
                                   0000BEB7 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000020A - 0000020A (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   reqTaskId
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000020B - 0000020C (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000792 - 00000797 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_InitServer::?relay
                                   00000792        GATT_Init (gatt_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000798 - 0000079D (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterService::?relay
                                   00000798        GATTServApp_RegisterService (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000079E - 000007A3 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterForReq::?relay
                                   0000079E        GATTServApp_Init (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007A4 - 000007A9 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   gattProcessReadMultiReq
                                                   gattProcessReadReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyReadPermissions::?relay
                                   000007A4        gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007AA - 000007AF (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   gattProcessWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyWritePermissions::?relay
                                   000007AA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007B0 - 000007B5 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceChangedInd::?relay
                                   000007B0        GATTServApp_SendServiceChangedInd (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007B6 - 000007BB (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   GATT_FindNextAttr
                                                   GATT_ServiceChangedInd
                                                   gattProcessFindByTypeValueReq
                                                   gattProcessFindInfoReq
                                                   gattProcessReadByGrpTypeReq
                                                   gattProcessReadByTypeReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandleUUID::?relay
                                   000007B6        gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007BC - 000007C1 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   gattProcessReadMultiReq
                                                   gattProcessReadReq
                                                   gattProcessWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandle::?relay
                                   000007BC        GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007C2 - 000007C7 (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindNextAttr::?relay
                                   000007C2        GATTServApp_ReadAttr (gattservapp)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007C8 - 000007CD (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   gattServiceLastHandle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceNumAttrs::?relay
                                   000007C8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007CE - 000007D3 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   GATT_ServiceChangedInd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Indication::?relay
                                   000007CE        GATTServApp_ProcessCharCfg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007D4 - 000007D9 (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Notification::?relay
                                   000007D4        GATTServApp_ProcessCharCfg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007DA - 000007DF (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   GATT_FindNextAttr
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServiceLastHandle::?relay
                                   000007DA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007E0 - 000007E5 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   GATT_InitServer
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerProcessMsgCB::?relay
                                   000007E0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007E6 - 000007EB (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExchangeMTUReq::?relay
                                   000007E6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007EC - 000007F1 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindInfoReq::?relay
                                   000007EC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007F2 - 000007F7 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindByTypeValueReq::?relay
                                   000007F2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007F8 - 000007FD (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByTypeReq::?relay
                                   000007F8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007FE - 00000803 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadReq::?relay
                                   000007FE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000804 - 00000809 (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadMultiReq::?relay
                                   00000804 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000080A - 0000080F (0x6 bytes), align: 0
  Segment part 85.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByGrpTypeReq::?relay
                                   0000080A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000810 - 00000815 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessWriteReq::?relay
                                   00000810 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000816 - 0000081B (0x6 bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExecuteWriteReq::?relay
                                   00000816 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000081C - 00000821 (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   GATT_Indication
                                                   GATT_Notification
           LOCAL                   ADDRESS         
           =====                   =======         
           gattGetServerStatus::?relay
                                   0000081C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000822 - 00000827 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   gattGetServerStatus
                                                   gattServerHandleConnStatusCB
                                                   gattServerProcessMsgCB
           LOCAL                   ADDRESS         
           =====                   =======         
           gattFindServerInfo::?relay
                                   00000822 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000828 - 0000082D (0x6 bytes), align: 0
  Segment part 96.            Intra module refs:   GATT_Indication
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleTimerCB::?relay
                                   00000828 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000082E - 00000833 (0x6 bytes), align: 0
  Segment part 98.            Intra module refs:   GATT_InitServer
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleConnStatusCB::?relay
                                   0000082E 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000081DB - 0000820A (0x30 bytes), align: 0
  Segment part 101.           Intra module refs:   Segment part 12

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gatt_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000035C - 0000035C (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GATT_Init
                                                   GATT_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattTaskID              0000035C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000035D - 0000035E (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   gattProcessRxData
                                                   gattRegisterServer
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000035F - 00000360 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B248 - 0001B24E (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   gattRegisterServer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattRegisterServer      0001B248 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B24F - 0001B253 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   gattRegisterServer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B254 - 0001B25A (0x7 bytes), align: 0
  Segment part 12.            Intra module refs:   GATT_AppCompletedMsg
                                                   Segment part 11
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B25B - 0001B25F (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   GATT_Init
                                                   gattStopTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B260 - 0001B2A7 (0x48 bytes), align: 0
  Segment part 18.            Intra module refs:   GATT_AppCompletedMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_AppCompletedMsg    0001B260 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B2A8 - 0001B2BD (0x16 bytes), align: 0
  Segment part 20.            Intra module refs:   GATT_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Init               0001B2A8 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B2BE - 0001B2FF (0x42 bytes), align: 0
  Segment part 22.            Intra module refs:   GATT_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ProcessEvent       0001B2BE 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B300 - 0001B304 (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   GATT_ProcessEvent
                                                   gattStartTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B305 - 0001B408 (0x104 bytes), align: 0
  Segment part 25.            Intra module refs:   gattProcessRxData::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessRxData       0001B305 
               calls direct
               XSTACK = 0000000C ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B409 - 0001B40C (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B40D - 0001B412 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
                                                   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B413 - 0001B418 (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   GATT_AppCompletedMsg
                                                   Segment part 28
                                                   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B419 - 0001B4A5 (0x8d bytes), align: 0
  Segment part 30.            Intra module refs:   gattNotifyEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattNotifyEvent         0001B419 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B4A6 - 0001B4F0 (0x4b bytes), align: 0
  Segment part 32.            Intra module refs:   gattStartTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStartTimer          0001B4A6 
               calls direct
               XSTACK = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B4F1 - 0001B51A (0x2a bytes), align: 0
  Segment part 34.            Intra module refs:   gattStopTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStopTimer           0001B4F1 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000834 - 00000839 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattRegisterServer::?relay
                                   00000834        GATT_InitServer (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000083A - 0000083F (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_AppCompletedMsg::?relay
                                   0000083A        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000840 - 00000845 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Init::?relay       00000840        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000846 - 0000084B (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ProcessEvent::?relay
                                   00000846        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000084C - 00000851 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   GATT_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessRxData::?relay
                                   0000084C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000852 - 00000857 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattNotifyEvent::?relay
                                   00000852        gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000858 - 0000085D (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStartTimer::?relay
                                   00000858        GATT_Indication (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000085E - 00000863 (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStopTimer::?relay   0000085E        gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gattservapp

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000361 - 00000361 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GATTServApp_Init
                                                   GATTServApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_TaskID      00000361 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F7D - 00000F7D (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GATTServApp_RegisterForMsg
                                                   GATTServApp_SendCCCUpdatedEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           appTaskID               00000F7D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000362 - 00000365 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   GATTServApp_Init
                                                   Segment part 43
                                                   gattServApp_FindPrepareWriteQ
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000366 - 00000366 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   gattServApp_HandleConnStatusCB
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000367 - 00000368 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   GATTServApp_RegisterService
                                                   gattServApp_FindServiceCBs
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000369 - 00000369 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000036A - 0000037F (0x16 bytes), align: 0
  Segment part 13.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000380 - 00000398 (0x19 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 62
                                                   Segment part 68
                                                   Segment part 69
                                                   Segment part 82
                                                   Segment part 87
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008641 - 00008643 (0x3 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F7E - 00000F7E (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000399 - 0000039E (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   GATTServApp_Init
                                                   GATTServApp_SendServiceChangedInd
                                                   Segment part 20
                                                   gattServApp_HandleConnStatusCB
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F7F - 00000F9E (0x20 bytes), align: 0
  Segment part 19.            Intra module refs:   GATTServApp_AddService
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085A9 - 000085AE (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   GATTServApp_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattServiceCBs          000085A9 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003198 - 000031A3 (0xc bytes), align: 0
  Segment part 22.            Intra module refs:   GATTServApp_RegisterForMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterForMsg
                                   00003198 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000031A4 - 000031D9 (0x36 bytes), align: 0
  Segment part 24.            Intra module refs:   GATTServApp_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_Init        000031A4 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000031DA - 000031DE (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   GATTServApp_Init
                                                   GATTServApp_SendServiceChangedInd
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000031DF - 00003223 (0x45 bytes), align: 0
  Segment part 27.            Intra module refs:   GATTServApp_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessEvent
                                   000031DF 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003224 - 000032D1 (0xae bytes), align: 0
  Segment part 29.            Intra module refs:   GATTServApp_RegisterService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterService
                                   00003224 
               calls direct
               XSTACK = 0000000E ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000032D2 - 000032D5 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000032D6 - 000032DB (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000032DC - 000032DD (0x2 bytes), align: 0
  Segment part 33.            Intra module refs:   GATTServApp_InitCharCfg
                                                   GATTServApp_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000032DE - 000032E3 (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000032E4 - 0000334D (0x6a bytes), align: 0
  Segment part 41.            Intra module refs:   gattServApp_SetNumPrepareWrites::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_SetNumPrepareWrites
                                   000032E4 
               calls direct
               XSTACK = 00000009 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000334E - 00003363 (0x16 bytes), align: 0
  Segment part 43.            Intra module refs:   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003364 - 00003369 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   GATTServApp_RegisterService
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000336A - 000033CE (0x65 bytes), align: 0
  Segment part 45.            Intra module refs:   GATTServApp_FindAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_FindAttr    0000336A 
               XSTACK = 00000033 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000033CF - 000033F5 (0x27 bytes), align: 0
  Segment part 47.            Intra module refs:   GATTServApp_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_AddService
                                   000033CF 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000033F6 - 000033FA (0x5 bytes), align: 0
  Segment part 49.            Intra module refs:   GATTServApp_AddService
                                                   GATTServApp_FindAttr
                                                   GATTServApp_ProcessEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000033FB - 00003426 (0x2c bytes), align: 0
  Segment part 52.            Intra module refs:   gattServApp_FindServiceCBs::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindServiceCBs
                                   000033FB 
               XSTACK = 0000001D ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003427 - 0000342D (0x7 bytes), align: 0
  Segment part 54.            Intra module refs:   GATTServApp_RegisterForMsg
                                                   gattServApp_FindCharCfgItem
                                                   gattServApp_FindPrepareWriteQ
                                                   gattServApp_FindServiceCBs
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000342E - 00003433 (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   gattServApp_FindServiceCBs
                                                   gattServApp_HandleConnStatusCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003434 - 00003648 (0x215 bytes), align: 0
  Segment part 56.            Intra module refs:   gattServApp_ProcessMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessMsg
                                   00003434 
               calls direct
               XSTACK = 0000000C ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003649 - 0000364B (0x3 bytes), align: 0
  Segment part 58.            Intra module refs:   GATTServApp_ReadAttr
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000364C - 00003650 (0x5 bytes), align: 0
  Segment part 59.            Intra module refs:   Segment part 58
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003651 - 0000365A (0xa bytes), align: 0
  Segment part 60.            Intra module refs:   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000365B - 00003662 (0x8 bytes), align: 0
  Segment part 61.            Intra module refs:   GATTServApp_RegisterService
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003663 - 00003671 (0xf bytes), align: 0
  Segment part 62.            Intra module refs:   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003672 - 00003855 (0x1e4 bytes), align: 0
  Segment part 63.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessFindByTypeValueReq
                                   00003672 
               calls direct
               XSTACK = 00000016 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003856 - 00003A15 (0x1c0 bytes), align: 0
  Segment part 65.            Intra module refs:   gattServApp_ProcessReadByTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByTypeReq
                                   00003856 
               calls direct
               XSTACK = 00000016 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A16 - 00003A1D (0x8 bytes), align: 0
  Segment part 67.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A1E - 00003A24 (0x7 bytes), align: 0
  Segment part 68.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A25 - 00003A28 (0x4 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 68
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A29 - 00003A2D (0x5 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A2E - 00003A37 (0xa bytes), align: 0
  Segment part 71.            Intra module refs:   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A38 - 00003A3B (0x4 bytes), align: 0
  Segment part 72.            Intra module refs:   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A3C - 00003B5F (0x124 bytes), align: 0
  Segment part 73.            Intra module refs:   gattServApp_ProcessReadMultiReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadMultiReq
                                   00003A3C 
               calls direct
               XSTACK = 00000016 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B60 - 00003B64 (0x5 bytes), align: 0
  Segment part 75.            Intra module refs:   GATTServApp_WriteAttr
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B65 - 00003B6C (0x8 bytes), align: 0
  Segment part 76.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B6D - 00003B75 (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B76 - 00003B7E (0x9 bytes), align: 0
  Segment part 78.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B7F - 00003DA6 (0x228 bytes), align: 0
  Segment part 79.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByGrpTypeReq
                                   00003B7F 
               calls direct
               XSTACK = 00000016 ( 00000022 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003DA7 - 00003DB0 (0xa bytes), align: 0
  Segment part 81.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003DB1 - 00003DC2 (0x12 bytes), align: 0
  Segment part 82.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003DC3 - 00003DCC (0xa bytes), align: 0
  Segment part 83.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003DCD - 00003EB6 (0xea bytes), align: 0
  Segment part 84.            Intra module refs:   gattServApp_ProcessWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessWriteReq
                                   00003DCD 
               calls direct
               XSTACK = 00000016 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003EB7 - 00003EBB (0x5 bytes), align: 0
  Segment part 86.            Intra module refs:   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003EBC - 00003EBF (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003EC0 - 00003EC5 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 87
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003EC6 - 00003EC9 (0x4 bytes), align: 0
  Segment part 89.            Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   GATTServApp_ProcessCharCfg
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_WriteAttr
                                                   Segment part 88
                                                   gattServApp_FindAuthorizeAttrCB
                                                   gattServApp_FindServiceCBs
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003ECA - 00003ECF (0x6 bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 44
                                                   Segment part 62
                                                   Segment part 89
                                                   Segment part 91
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003ED0 - 00003EDE (0xf bytes), align: 0
  Segment part 91.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003EDF - 00004008 (0x12a bytes), align: 0
  Segment part 92.            Intra module refs:   gattServApp_ProcessPrepareWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessPrepareWriteReq
                                   00003EDF 
               calls direct
               XSTACK = 00000016 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004009 - 0000401F (0x17 bytes), align: 0
  Segment part 94.            Intra module refs:   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004020 - 00004021 (0x2 bytes), align: 0
  Segment part 95.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004022 - 00004024 (0x3 bytes), align: 0
  Segment part 96.            Intra module refs:   Segment part 75
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004025 - 00004029 (0x5 bytes), align: 0
  Segment part 97.            Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000402A - 00004117 (0xee bytes), align: 0
  Segment part 98.            Intra module refs:   gattServApp_ProcessExecuteWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessExecuteWriteReq
                                   0000402A 
               calls direct
               XSTACK = 00000016 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004118 - 0000411A (0x3 bytes), align: 0
  Segment part 100.           Intra module refs:   gattServApp_ProcessMsg
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000411B - 0000411F (0x5 bytes), align: 0
  Segment part 101.           Intra module refs:   Segment part 100
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004120 - 00004120 (0x1 bytes), align: 0
  Segment part 102.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004121 - 00004126 (0x6 bytes), align: 0
  Segment part 103.           Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 102
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004127 - 0000412A (0x4 bytes), align: 0
  Segment part 104.           Intra module refs:   gattServApp_ProcessReadMultiReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000412B - 00004133 (0x9 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 104
                                                   gattServApp_ProcessFindByTypeValueReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004134 - 00004139 (0x6 bytes), align: 0
  Segment part 106.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_RegisterService
                                                   Segment part 105
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000413A - 00004156 (0x1d bytes), align: 0
  Segment part 107.           Intra module refs:   gattServApp_FindPrepareWriteQ::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindPrepareWriteQ
                                   0000413A 
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004157 - 00004191 (0x3b bytes), align: 0
  Segment part 109.           Intra module refs:   gattServApp_FindCharCfgItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindCharCfgItem
                                   00004157 
               XSTACK = 0000000E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004192 - 000041B3 (0x22 bytes), align: 0
  Segment part 111.           Intra module refs:   gattServApp_FindAuthorizeAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindAuthorizeAttrCB
                                   00004192 
               calls direct
               XSTACK = 0000001D ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000041B4 - 0000420E (0x5b bytes), align: 0
  Segment part 113.           Intra module refs:   gattServApp_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_WriteAttrCB
                                   000041B4 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000420F - 00004216 (0x8 bytes), align: 0
  Segment part 115.           Intra module refs:   GATTServApp_FindAttr
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_RegisterService
                                                   GATTServApp_SendCCCUpdatedEvent
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004217 - 0000465E (0x448 bytes), align: 0
  Segment part 116.           Intra module refs:   GATTServApp_ReadAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadAttr    00004217 
               calls direct
               XSTACK = 00000039 ( 00000023 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000465F - 00004666 (0x8 bytes), align: 0
  Segment part 118.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004667 - 0000466F (0x9 bytes), align: 0
  Segment part 119.           Intra module refs:   GATTServApp_ReadAttr
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004670 - 00004677 (0x8 bytes), align: 0
  Segment part 120.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004678 - 0000467B (0x4 bytes), align: 0
  Segment part 121.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000467C - 00004680 (0x5 bytes), align: 0
  Segment part 122.           Intra module refs:   GATTServApp_FindAttr
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_UpdateCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004681 - 00004686 (0x6 bytes), align: 0
  Segment part 123.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004687 - 0000468E (0x8 bytes), align: 0
  Segment part 124.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_WriteAttr
                                                   gattServApp_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000468F - 0000469E (0x10 bytes), align: 0
  Segment part 125.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000469F - 000046A0 (0x2 bytes), align: 0
  Segment part 126.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_SendCCCUpdatedEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000046A1 - 000046A7 (0x7 bytes), align: 0
  Segment part 127.           Intra module refs:   GATTServApp_SendCCCUpdatedEvent
                                                   Segment part 126
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000046A8 - 000046B1 (0xa bytes), align: 0
  Segment part 128.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000046B2 - 000046BA (0x9 bytes), align: 0
  Segment part 129.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000046BB - 000046C3 (0x9 bytes), align: 0
  Segment part 130.           Intra module refs:   Segment part 129
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000046C4 - 000046CD (0xa bytes), align: 0
  Segment part 131.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000046CE - 000046D7 (0xa bytes), align: 0
  Segment part 132.           Intra module refs:   Segment part 121
                                                   Segment part 123
                                                   Segment part 131
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000046D8 - 0000476C (0x95 bytes), align: 0
  Segment part 133.           Intra module refs:   GATTServApp_WriteAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteAttr   000046D8 
               calls direct
               XSTACK = 0000001C ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000476D - 000047BD (0x51 bytes), align: 0
  Segment part 139.           Intra module refs:   GATTServApp_UpdateCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_UpdateCharCfg
                                   0000476D 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000047BE - 000047E4 (0x27 bytes), align: 0
  Segment part 141.           Intra module refs:   GATTServApp_SendServiceChangedInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendServiceChangedInd
                                   000047BE 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000047E5 - 00004825 (0x41 bytes), align: 0
  Segment part 143.           Intra module refs:   GATTServApp_InitCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_InitCharCfg
                                   000047E5 
               calls direct
               XSTACK = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004826 - 0000482A (0x5 bytes), align: 0
  Segment part 145.           Intra module refs:   GATTServApp_InitCharCfg
                                                   GATTServApp_ReadCharCfg
                                                   GATTServApp_UpdateCharCfg
                                                   gattServApp_FindAuthorizeAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000482B - 00004836 (0xc bytes), align: 0
  Segment part 146.           Intra module refs:   GATTServApp_InitCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004837 - 00004854 (0x1e bytes), align: 0
  Segment part 147.           Intra module refs:   GATTServApp_ReadCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadCharCfg
                                   00004837 
               calls direct
               XSTACK = 0000001D ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004855 - 000048A9 (0x55 bytes), align: 0
  Segment part 149.           Intra module refs:   GATTServApp_WriteCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteCharCfg
                                   00004855 
               calls direct
               XSTACK = 00000014 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000048AA - 000048AE (0x5 bytes), align: 0
  Segment part 151.           Intra module refs:   GATTServApp_RegisterService
                                                   GATTServApp_SendCCCUpdatedEvent
                                                   GATTServApp_WriteCharCfg
                                                   gattServApp_HandleConnStatusCB
                                                   gattServApp_SetNumPrepareWrites
                                                   gattServApp_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000048AF - 00004974 (0xc6 bytes), align: 0
  Segment part 152.           Intra module refs:   GATTServApp_ProcessCCCWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCCCWriteReq
                                   000048AF 
               calls direct
               XSTACK = 00000014 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004975 - 00004978 (0x4 bytes), align: 0
  Segment part 154.           Intra module refs:   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004979 - 0000497C (0x4 bytes), align: 0
  Segment part 155.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   GATTServApp_ProcessCharCfg
                                                   GATTServApp_ReadAttr
                                                   Segment part 154
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000497D - 00004982 (0x6 bytes), align: 0
  Segment part 156.           Intra module refs:   Segment part 105
                                                   Segment part 122
                                                   Segment part 155
                                                   Segment part 157
                                                   Segment part 55
                                                   Segment part 60
                                                   Segment part 81
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004983 - 0000498B (0x9 bytes), align: 0
  Segment part 157.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   gattServApp_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000498C - 0000498D (0x2 bytes), align: 0
  Segment part 158.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000498E - 00004997 (0xa bytes), align: 0
  Segment part 159.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   Segment part 158
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004998 - 00004AF7 (0x160 bytes), align: 0
  Segment part 160.           Intra module refs:   GATTServApp_ProcessCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCharCfg
                                   00004998 
               calls direct
               XSTACK = 00000005 ( 00000039 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004AF8 - 00004B01 (0xa bytes), align: 0
  Segment part 162.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004B02 - 00004B0D (0xc bytes), align: 0
  Segment part 163.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   gattServApp_ProcessExecuteWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004B0E - 00004B91 (0x84 bytes), align: 0
  Segment part 164.           Intra module refs:   gattServApp_HandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_HandleConnStatusCB
                                   00004B0E 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004B92 - 00004BED (0x5c bytes), align: 0
  Segment part 166.           Intra module refs:   GATTServApp_SendCCCUpdatedEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendCCCUpdatedEvent
                                   00004B92 
               calls direct
               XSTACK = 00000014 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004BEE - 00004BF8 (0xb bytes), align: 0
  Segment part 168.           Intra module refs:   GATTServApp_SendCCCUpdatedEvent
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000020D - 0000020D (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   appTaskID
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000020E - 0000020E (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000020F - 0000022E (0x20 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000864 - 00000869 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterForMsg::?relay
                                   00000864        GAPBondMgr_Register (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000086A - 0000086F (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_Init::?relay
                                   0000086A        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000870 - 00000875 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessEvent::?relay
                                   00000870        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000876 - 0000087B (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   GATTServApp_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterService::?relay
                                   00000876        Batt_AddService (battservice)
                                                   DevInfo_AddService (devinfoservice)
                                                   GGS_AddService (gapgattserver)
                                                   SimpleProfile_AddService (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000087C - 00000881 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   GATTServApp_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_SetNumPrepareWrites::?relay
                                   0000087C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000882 - 00000887 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   GATTServApp_ProcessCharCfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_FindAttr::?relay
                                   00000882 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000888 - 0000088D (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_AddService::?relay
                                   00000888        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000088E - 00000893 (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_WriteAttr
                                                   gattServApp_FindAuthorizeAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindServiceCBs::?relay
                                   0000088E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000894 - 00000899 (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   GATTServApp_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessMsg::?relay
                                   00000894 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000089A - 0000089F (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessFindByTypeValueReq::?relay
                                   0000089A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008A0 - 000008A5 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByTypeReq::?relay
                                   000008A0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008A6 - 000008AB (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadMultiReq::?relay
                                   000008A6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008AC - 000008B1 (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByGrpTypeReq::?relay
                                   000008AC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008B2 - 000008B7 (0x6 bytes), align: 0
  Segment part 85.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessWriteReq::?relay
                                   000008B2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008B8 - 000008BD (0x6 bytes), align: 0
  Segment part 93.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessPrepareWriteReq::?relay
                                   000008B8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008BE - 000008C3 (0x6 bytes), align: 0
  Segment part 99.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessExecuteWriteReq::?relay
                                   000008BE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008C4 - 000008C9 (0x6 bytes), align: 0
  Segment part 108.           Intra module refs:   gattServApp_HandleConnStatusCB
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindPrepareWriteQ::?relay
                                   000008C4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008CA - 000008CF (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   GATTServApp_InitCharCfg
                                                   GATTServApp_ReadCharCfg
                                                   GATTServApp_WriteCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindCharCfgItem::?relay
                                   000008CA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008D0 - 000008D5 (0x6 bytes), align: 0
  Segment part 112.           Intra module refs:   GATTServApp_ReadAttr
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessWriteReq
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindAuthorizeAttrCB::?relay
                                   000008D0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008D6 - 000008DB (0x6 bytes), align: 0
  Segment part 114.           Intra module refs:   gattServiceCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_WriteAttrCB::?relay
                                   000008D6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008DC - 000008E1 (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadAttr::?relay
                                   000008DC        gapBondMgr_SyncCharCfg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008E2 - 000008E7 (0x6 bytes), align: 0
  Segment part 134.           Intra module refs:   GATTServApp_UpdateCharCfg
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteAttr::?relay
                                   000008E2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008E8 - 000008ED (0x6 bytes), align: 0
  Segment part 140.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_UpdateCharCfg::?relay
                                   000008E8        GAPBondMgr_LinkEst (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008EE - 000008F3 (0x6 bytes), align: 0
  Segment part 142.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendServiceChangedInd::?relay
                                   000008EE        GAPBondMgr_LinkEst (gapbondmgr)
                                                   gapBondMgrSendServiceChange (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008F4 - 000008F9 (0x6 bytes), align: 0
  Segment part 144.           Intra module refs:   GATTServApp_Init
                                                   gattServApp_HandleConnStatusCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_InitCharCfg::?relay
                                   000008F4        Batt_AddService (battservice)
                                                   SimpleProfile_AddService (simpleGATTprofile)
                                                   simpleProfile_HandleConnStatusCB (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008FA - 000008FF (0x6 bytes), align: 0
  Segment part 148.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_SendServiceChangedInd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadCharCfg::?relay
                                   000008FA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000900 - 00000905 (0x6 bytes), align: 0
  Segment part 150.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteCharCfg::?relay
                                   00000900 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000906 - 0000090B (0x6 bytes), align: 0
  Segment part 153.           Intra module refs:   gattServApp_WriteAttrCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCCCWriteReq::?relay
                                   00000906        battWriteAttrCB (battservice)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000090C - 00000911 (0x6 bytes), align: 0
  Segment part 161.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCharCfg::?relay
                                   0000090C        SimpleProfile_SetParameter (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000912 - 00000917 (0x6 bytes), align: 0
  Segment part 165.           Intra module refs:   GATTServApp_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_HandleConnStatusCB::?relay
                                   00000912 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000918 - 0000091D (0x6 bytes), align: 0
  Segment part 167.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendCCCUpdatedEvent::?relay
                                   00000918 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008641 - 00008643 (0x3 bytes), align: 0
  Segment part 169.           Intra module refs:   Segment part 15
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085A9 - 000085AE (0x6 bytes), align: 0
  Segment part 170.           Intra module refs:   gattServiceCBs

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : hci

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000039F - 0000039F (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HCI_SendDataPkt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciPTMenabled           0000039F        HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_Init (hci_tl)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003A0 - 000003A0 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   HCI_HostNumCompletedPktCmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ctrlToHostEnable        000003A0        LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003A1 - 000003A2 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   HCI_HostNumCompletedPktCmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numHostBufs             000003A1        LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003A3 - 000003A3 (0x1 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciCtrlCmdToken         000003A3        Segment part 35 (hci_event)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018BBD - 00018BC6 (0xa bytes), align: 0
  Segment part 13.            Intra module refs:   HCI_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_bm_alloc            00018BBD 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018BC7 - 00018C09 (0x43 bytes), align: 0
  Segment part 18.            Intra module refs:   HCI_SendDataPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendDataPkt         00018BC7 
               calls direct
               XSTACK = 00000002 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C0A - 00018C1D (0x14 bytes), align: 0
  Segment part 20.            Intra module refs:   HCI_DisconnectCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_DisconnectCmd       00018C0A 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C1E - 00018C1E (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   HCI_ReadRssiCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C1F - 00018C24 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   HCI_LE_ReadBufSizeCmd
                                                   Segment part 30
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C25 - 00018CAD (0x89 bytes), align: 0
  Segment part 37.            Intra module refs:   HCI_HostNumCompletedPktCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HostNumCompletedPktCmd
                                   00018C25 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018CAE - 00018CB4 (0x7 bytes), align: 0
  Segment part 48.            Intra module refs:   HCI_LE_RandCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018CB5 - 00018CDC (0x28 bytes), align: 0
  Segment part 49.            Intra module refs:   HCI_ReadBDADDRCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadBDADDRCmd       00018CB5 
               calls direct
               XSTACK = 00000000 ( 00000007 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018CDD - 00018D14 (0x38 bytes), align: 0
  Segment part 51.            Intra module refs:   HCI_ReadRssiCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadRssiCmd         00018CDD 
               calls direct
               XSTACK = 00000000 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D15 - 00018D19 (0x5 bytes), align: 0
  Segment part 55.            Intra module refs:   HCI_LE_ClearWhiteListCmd
                                                   HCI_LE_SetRandomAddressCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D1A - 00018D49 (0x30 bytes), align: 0
  Segment part 57.            Intra module refs:   HCI_LE_ReadBufSizeCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadBufSizeCmd   00018D1A 
               calls direct
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D4A - 00018D50 (0x7 bytes), align: 0
  Segment part 59.            Intra module refs:   HCI_LE_ReadBufSizeCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D51 - 00018D79 (0x29 bytes), align: 0
  Segment part 62.            Intra module refs:   HCI_LE_SetRandomAddressCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetRandomAddressCmd
                                   00018D51 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D7A - 00018DEE (0x75 bytes), align: 0
  Segment part 64.            Intra module refs:   HCI_LE_SetAdvParamCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvParamCmd   00018D7A 
               calls direct
               XSTACK = 00000006 ( 00000013 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018DEF - 00018E03 (0x15 bytes), align: 0
  Segment part 66.            Intra module refs:   HCI_LE_SetAdvDataCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvDataCmd    00018DEF 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E04 - 00018E18 (0x15 bytes), align: 0
  Segment part 68.            Intra module refs:   HCI_LE_SetScanRspDataCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetScanRspDataCmd
                                   00018E04 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E19 - 00018E2D (0x15 bytes), align: 0
  Segment part 70.            Intra module refs:   HCI_LE_SetAdvEnableCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvEnableCmd
                                   00018E19 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E2E - 00018E34 (0x7 bytes), align: 0
  Segment part 72.            Intra module refs:   HCI_LE_AddWhiteListCmd
                                                   HCI_LE_ClearWhiteListCmd
                                                   HCI_LE_SetAdvDataCmd
                                                   HCI_LE_SetAdvEnableCmd
                                                   HCI_LE_SetAdvParamCmd
                                                   HCI_LE_SetScanRspDataCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E35 - 00018E3C (0x8 bytes), align: 0
  Segment part 73.            Intra module refs:   HCI_HostNumCompletedPktCmd
                                                   HCI_LE_SetRandomAddressCmd
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E3D - 00018E49 (0xd bytes), align: 0
  Segment part 77.            Intra module refs:   HCI_ReadBDADDRCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E4A - 00018E5D (0x14 bytes), align: 0
  Segment part 80.            Intra module refs:   HCI_LE_ClearWhiteListCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ClearWhiteListCmd
                                   00018E4A 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E5E - 00018E72 (0x15 bytes), align: 0
  Segment part 82.            Intra module refs:   HCI_LE_AddWhiteListCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_AddWhiteListCmd
                                   00018E5E 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E73 - 00018E76 (0x4 bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E77 - 00018E82 (0xc bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 155
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E83 - 00018EBC (0x3a bytes), align: 0
  Segment part 93.            Intra module refs:   HCI_LE_RandCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_RandCmd          00018E83 
               calls direct
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018EBD - 00018EE8 (0x2c bytes), align: 0
  Segment part 95.            Intra module refs:   HCI_LE_LtkReqReplyCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqReplyCmd   00018EBD 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018EE9 - 00018F16 (0x2e bytes), align: 0
  Segment part 97.            Intra module refs:   HCI_LE_LtkReqNegReplyCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqNegReplyCmd
                                   00018EE9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F17 - 00018F19 (0x3 bytes), align: 0
  Segment part 109.           Intra module refs:   HCI_ReadRssiCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F1A - 00018F20 (0x7 bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 109
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F21 - 00018F22 (0x2 bytes), align: 0
  Segment part 121.           Intra module refs:   HCI_LE_AddWhiteListCmd
                                                   HCI_LE_SetAdvDataCmd
                                                   HCI_LE_SetAdvEnableCmd
                                                   HCI_LE_SetScanRspDataCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F23 - 00018F25 (0x3 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 121
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F26 - 00018F29 (0x4 bytes), align: 0
  Segment part 123.           Intra module refs:   Segment part 122
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F2A - 00018F2C (0x3 bytes), align: 0
  Segment part 124.           Intra module refs:   Segment part 110
                                                   Segment part 123
                                                   Segment part 150
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F2D - 00018F31 (0x5 bytes), align: 0
  Segment part 125.           Intra module refs:   HCI_DisconnectCmd
                                                   Segment part 124
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F32 - 00018F34 (0x3 bytes), align: 0
  Segment part 130.           Intra module refs:   LL_RandCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F35 - 00018F39 (0x5 bytes), align: 0
  Segment part 131.           Intra module refs:   HCI_SendDataPkt
                                                   Segment part 130
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F3A - 00018F3F (0x6 bytes), align: 0
  Segment part 138.           Intra module refs:   HCI_LE_LtkReqReplyCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F40 - 00018F46 (0x7 bytes), align: 0
  Segment part 144.           Intra module refs:   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F47 - 00018F49 (0x3 bytes), align: 0
  Segment part 145.           Intra module refs:   HCI_ReadBDADDRCmd
                                                   Segment part 144
                                                   Segment part 179
                                                   Segment part 48
                                                   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F4A - 00018F50 (0x7 bytes), align: 0
  Segment part 146.           Intra module refs:   HCI_bm_alloc
                                                   Segment part 145
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F51 - 00018F55 (0x5 bytes), align: 0
  Segment part 149.           Intra module refs:   HCI_LE_LtkReqNegReplyCmd
                                                   HCI_LE_LtkReqReplyCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F56 - 00018F5C (0x7 bytes), align: 0
  Segment part 150.           Intra module refs:   Segment part 149
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F5D - 00018F60 (0x4 bytes), align: 0
  Segment part 154.           Intra module refs:   HCI_LE_LtkReqNegReplyCmd
                                                   LL_EXT_ExtendRfRangeCback
                                                   LL_EXT_SetRxGainCback
                                                   LL_EXT_SetTxPowerCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F61 - 00018F66 (0x6 bytes), align: 0
  Segment part 155.           Intra module refs:   Segment part 138
                                                   Segment part 154
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F67 - 00018F6B (0x5 bytes), align: 0
  Segment part 179.           Intra module refs:   Segment part 203
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F6C - 00018FB4 (0x49 bytes), align: 0
  Segment part 199.           Intra module refs:   LL_RandCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RandCback            00018F6C 
               calls direct
               XSTACK = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018FB5 - 00018FD6 (0x22 bytes), align: 0
  Segment part 201.           Intra module refs:   LL_EXT_SetRxGainCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetRxGainCback   00018FB5 
               calls direct
               XSTACK = 00000000 ( 00000003 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018FD7 - 00018FDE (0x8 bytes), align: 0
  Segment part 203.           Intra module refs:   LL_EXT_ExtendRfRangeCback
                                                   LL_EXT_SetRxGainCback
                                                   LL_EXT_SetTxPowerCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018FDF - 00019003 (0x25 bytes), align: 0
  Segment part 204.           Intra module refs:   LL_EXT_SetTxPowerCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetTxPowerCback
                                   00018FDF 
               calls direct
               XSTACK = 00000000 ( 00000003 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019004 - 00019009 (0x6 bytes), align: 0
  Segment part 208.           Intra module refs:   HCI_HostNumCompletedPktCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001900A - 00019031 (0x28 bytes), align: 0
  Segment part 209.           Intra module refs:   LL_EXT_ExtendRfRangeCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ExtendRfRangeCback
                                   0001900A 
               calls direct
               XSTACK = 00000000 ( 00000003 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000091E - 00000923 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_bm_alloc::?relay    0000091E        L2CAP_bm_alloc (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000924 - 00000929 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendDataPkt::?relay
                                   00000924        l2capEncapSendData (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000092A - 0000092F (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_DisconnectCmd::?relay
                                   0000092A        GAP_TerminateLinkReq (gap_linkmgr)
                                                   disconnectNext (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000930 - 00000935 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HostNumCompletedPktCmd::?relay
                                   00000930        L2CAP_HostNumCompletedPkts (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000936 - 0000093B (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadBDADDRCmd::?relay
                                   00000936        GAP_ParamsInit (gap_configmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000093C - 00000941 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadRssiCmd::?relay
                                   0000093C        GAPRole_ProcessEvent (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000942 - 00000947 (0x6 bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadBufSizeCmd::?relay
                                   00000942        gapReadBD_ADDRStatus (gap_configmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000948 - 0000094D (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetRandomAddressCmd::?relay
                                   00000948        gapProcessNewAddr (gap_configmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000094E - 00000953 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvParamCmd::?relay
                                   0000094E        gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000954 - 00000959 (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvDataCmd::?relay
                                   00000954        GAP_UpdateAdvertisingData (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000095A - 0000095F (0x6 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetScanRspDataCmd::?relay
                                   0000095A        GAP_UpdateAdvertisingData (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000960 - 00000965 (0x6 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvEnableCmd::?relay
                                   00000960        GAP_EndDiscoverable (gap_peridevmgr)
                                                   gapSetAdvParamsStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000966 - 0000096B (0x6 bytes), align: 0
  Segment part 81.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ClearWhiteListCmd::?relay
                                   00000966        gapBondMgr_SyncWhiteList (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000096C - 00000971 (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_AddWhiteListCmd::?relay
                                   0000096C        gapBondMgr_SyncWhiteList (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000972 - 00000977 (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_RandCmd::?relay
                                   00000972        smProcessRandComplete (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000978 - 0000097D (0x6 bytes), align: 0
  Segment part 96.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqReplyCmd::?relay
                                   00000978        smResponderProcessLTKReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000097E - 00000983 (0x6 bytes), align: 0
  Segment part 98.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqNegReplyCmd::?relay
                                   0000097E        smResponderProcessLTKReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000984 - 00000989 (0x6 bytes), align: 0
  Segment part 200.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RandCback::?relay    00000984        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000098A - 0000098F (0x6 bytes), align: 0
  Segment part 202.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetRxGainCback::?relay
                                   0000098A        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000990 - 00000995 (0x6 bytes), align: 0
  Segment part 205.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetTxPowerCback::?relay
                                   00000990        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000996 - 0000099B (0x6 bytes), align: 0
  Segment part 210.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ExtendRfRangeCback::?relay
                                   00000996        llProcessPostRfOps (ll_common)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : hci_data

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D040 - 0001D130 (0xf1 bytes), align: 0
  Segment part 8.             Intra module refs:   LL_RxDataCompleteCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RxDataCompleteCback
                                   0001D040 
               calls direct
               XSTACK = 00000002 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D131 - 0001D134 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   LL_RxDataCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D135 - 0001D142 (0xe bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
                                                   Segment part 14
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D143 - 0001D147 (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   LL_RxDataCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D148 - 0001D151 (0xa bytes), align: 0
  Segment part 13.            Intra module refs:   LL_RxDataCompleteCback
                                                   Segment part 12
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D152 - 0001D158 (0x7 bytes), align: 0
  Segment part 14.            Intra module refs:   LL_RxDataCompleteCback
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000099C - 000009A1 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RxDataCompleteCback::?relay
                                   0000099C        llProcessRxData (ll_common)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : hci_event

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000003A4 - 000003A4 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_EncLtkReqCback
                                                   hciInitEventMasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bleEvtMask              000003A4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003A5 - 000003AC (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_DisconnectCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
                                                   LL_EncLtkReqCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   hciInitEventMasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pHciEvtMask             000003A5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013717 - 00013738 (0x22 bytes), align: 0
  Segment part 8.             Intra module refs:   hciInitEventMasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciInitEventMasks       00013717 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013739 - 0001373F (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   hciInitEventMasks
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013740 - 00013744 (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   HCI_VendorSpecifcCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013745 - 0001385C (0x118 bytes), align: 0
  Segment part 14.            Intra module refs:   HCI_NumOfCompletedPacketsEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_NumOfCompletedPacketsEvent
                                   00013745 
               calls direct
               XSTACK = 00000000 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001385D - 00013861 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   HCI_CommandCompleteEvent
                                                   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013862 - 00013866 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013867 - 0001387D (0x17 bytes), align: 0
  Segment part 18.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
                                                   Segment part 17
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001387E - 00013881 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013882 - 0001388C (0xb bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001388D - 00013892 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013893 - 00013972 (0xe0 bytes), align: 0
  Segment part 22.            Intra module refs:   HCI_CommandCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandCompleteEvent
                                   00013893 
               calls direct
               XSTACK = 00000003 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013973 - 00013991 (0x1f bytes), align: 0
  Segment part 24.            Intra module refs:   HCI_VendorSpecifcCommandCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_VendorSpecifcCommandCompleteEvent
                                   00013973 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013992 - 000139F2 (0x61 bytes), align: 0
  Segment part 26.            Intra module refs:   HCI_CommandStatusEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandStatusEvent
                                   00013992 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000139F3 - 00013A0A (0x18 bytes), align: 0
  Segment part 31.            Intra module refs:   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A0B - 00013A0E (0x4 bytes), align: 0
  Segment part 32.            Intra module refs:   LL_EncLtkReqCback
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A0F - 00013A4B (0x3d bytes), align: 0
  Segment part 33.            Intra module refs:   HCI_SendCommandStatusEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandStatusEvent
                                   00013A0F 
               calls direct
               XSTACK = 0000000B ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A4C - 00013A51 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   HCI_CommandCompleteEvent
                                                   HCI_CommandStatusEvent
                                                   HCI_SendCommandCompleteEvent
                                                   HCI_SendCommandStatusEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A52 - 00013B73 (0x122 bytes), align: 0
  Segment part 36.            Intra module refs:   HCI_SendCommandCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandCompleteEvent
                                   00013A52 
               calls direct
               XSTACK = 00000014 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B74 - 00013B78 (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   HCI_SendControllerToHostEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B79 - 00013B7C (0x4 bytes), align: 0
  Segment part 39.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B7D - 00013B81 (0x5 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 39
                                                   Segment part 42
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B82 - 00013B8C (0xb bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B8D - 00013B91 (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B92 - 00013B94 (0x3 bytes), align: 0
  Segment part 43.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B95 - 00013B9B (0x7 bytes), align: 0
  Segment part 44.            Intra module refs:   LL_ConnectionCompleteCback
                                                   Segment part 43
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B9C - 00013BA0 (0x5 bytes), align: 0
  Segment part 45.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013BA1 - 00013BA7 (0x7 bytes), align: 0
  Segment part 46.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013BA8 - 00013C1B (0x74 bytes), align: 0
  Segment part 47.            Intra module refs:   HCI_SendControllerToHostEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendControllerToHostEvent
                                   00013BA8 
               calls direct
               XSTACK = 0000000D ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C1C - 00013C1F (0x4 bytes), align: 0
  Segment part 49.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
                                                   HCI_SendCommandCompleteEvent
                                                   HCI_SendControllerToHostEvent
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C20 - 00013C25 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 100
                                                   Segment part 131
                                                   Segment part 49
                                                   Segment part 77
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C26 - 00013C35 (0x10 bytes), align: 0
  Segment part 51.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   HCI_SendControllerToHostEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C36 - 00013C41 (0xc bytes), align: 0
  Segment part 52.            Intra module refs:   HCI_CommandCompleteEvent
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C42 - 00013C45 (0x4 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 45
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C46 - 00013C4E (0x9 bytes), align: 0
  Segment part 54.            Intra module refs:   Segment part 53
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C4F - 00013C57 (0x9 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 46
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C58 - 00013C5C (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C5D - 00013C60 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   HCI_SendControllerToHostEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C61 - 00013C68 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 20
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C69 - 00013E76 (0x20e bytes), align: 0
  Segment part 66.            Intra module refs:   LL_ConnectionCompleteCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnectionCompleteCback
                                   00013C69 
               calls direct
               XSTACK = 00000009 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E77 - 00013E7C (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E7D - 00013E85 (0x9 bytes), align: 0
  Segment part 69.            Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E86 - 00013E93 (0xe bytes), align: 0
  Segment part 70.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E94 - 00013E9B (0x8 bytes), align: 0
  Segment part 71.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013E9C - 00013E9F (0x4 bytes), align: 0
  Segment part 72.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EA0 - 00013EA9 (0xa bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 72
                                                   Segment part 74
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EAA - 00013EAF (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EB0 - 00013EB9 (0xa bytes), align: 0
  Segment part 75.            Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EBA - 00013EBD (0x4 bytes), align: 0
  Segment part 76.            Intra module refs:   Segment part 131
                                                   Segment part 75
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EBE - 00013EC3 (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 76
                                                   Segment part 87
                                                   Segment part 94
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EC4 - 00013EC7 (0x4 bytes), align: 0
  Segment part 78.            Intra module refs:   HCI_SendControllerToHostEvent
                                                   LL_ConnectionCompleteCback
                                                   LL_EncLtkReqCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EC8 - 00013ED6 (0xf bytes), align: 0
  Segment part 79.            Intra module refs:   Segment part 126
                                                   Segment part 78
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013ED7 - 00013EDB (0x5 bytes), align: 0
  Segment part 80.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EDC - 00013EDF (0x4 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 71
                                                   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EE0 - 00013EEA (0xb bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 73
                                                   Segment part 81
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EEB - 00013EEF (0x5 bytes), align: 0
  Segment part 83.            Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   Segment part 109
                                                   Segment part 119
                                                   Segment part 54
                                                   Segment part 62
                                                   Segment part 82
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013EF0 - 00013F6B (0x7c bytes), align: 0
  Segment part 84.            Intra module refs:   LL_DisconnectCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DisconnectCback      00013EF0 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F6C - 00013F75 (0xa bytes), align: 0
  Segment part 86.            Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F76 - 00013F79 (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   HCI_CommandStatusEvent
                                                   LL_ConnParamUpdateCback
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F7A - 00013F7D (0x4 bytes), align: 0
  Segment part 88.            Intra module refs:   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F7E - 00013F8A (0xd bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 88
                                                   Segment part 90
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F8B - 00013F90 (0x6 bytes), align: 0
  Segment part 90.            Intra module refs:   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F91 - 00014049 (0xb9 bytes), align: 0
  Segment part 91.            Intra module refs:   LL_ConnParamUpdateCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnParamUpdateCback
                                   00013F91 
               calls direct
               XSTACK = 00000004 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001404A - 00014051 (0x8 bytes), align: 0
  Segment part 93.            Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_EncLtkReqCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014052 - 00014057 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   HCI_CommandStatusEvent
                                                   LL_ConnParamUpdateCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014058 - 00014059 (0x2 bytes), align: 0
  Segment part 95.            Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_EncLtkReqCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001405A - 0001405A (0x1 bytes), align: 0
  Segment part 96.            Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_EncLtkReqCback
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001405B - 00014062 (0x8 bytes), align: 0
  Segment part 97.            Intra module refs:   LL_ConnectionCompleteCback
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014063 - 00014066 (0x4 bytes), align: 0
  Segment part 98.            Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014067 - 0001406D (0x7 bytes), align: 0
  Segment part 99.            Intra module refs:   Segment part 131
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001406E - 00014076 (0x9 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 131
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014077 - 0001407B (0x5 bytes), align: 0
  Segment part 101.           Intra module refs:   LL_ConnParamUpdateCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001407C - 0001407D (0x2 bytes), align: 0
  Segment part 102.           Intra module refs:   HCI_CommandCompleteEvent
                                                   Segment part 101
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001407E - 0001407E (0x1 bytes), align: 0
  Segment part 103.           Intra module refs:   LL_ConnParamUpdateCback
                                                   Segment part 102
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001407F - 00014080 (0x2 bytes), align: 0
  Segment part 104.           Intra module refs:   LL_ConnectionCompleteCback
                                                   Segment part 103
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014081 - 00014086 (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   LL_EncChangeCback
                                                   Segment part 104
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014087 - 0001413E (0xb8 bytes), align: 0
  Segment part 106.           Intra module refs:   LL_ReadRemoteVersionInfoCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRemoteVersionInfoCback
                                   00014087 
               calls direct
               XSTACK = 00000004 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001413F - 00014144 (0x6 bytes), align: 0
  Segment part 108.           Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014145 - 00014149 (0x5 bytes), align: 0
  Segment part 109.           Intra module refs:   LL_DisconnectCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   Segment part 108
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001414A - 0001414B (0x2 bytes), align: 0
  Segment part 110.           Intra module refs:   HCI_SendCommandCompleteEvent
                                                   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001414C - 0001414E (0x3 bytes), align: 0
  Segment part 111.           Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   Segment part 110
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001414F - 00014153 (0x5 bytes), align: 0
  Segment part 112.           Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_EncLtkReqCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   Segment part 111
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014154 - 0001415B (0x8 bytes), align: 0
  Segment part 113.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001415C - 0001415F (0x4 bytes), align: 0
  Segment part 114.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014160 - 00014169 (0xa bytes), align: 0
  Segment part 115.           Intra module refs:   Segment part 114
                                                   Segment part 116
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001416A - 0001416F (0x6 bytes), align: 0
  Segment part 116.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014170 - 00014174 (0x5 bytes), align: 0
  Segment part 117.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014175 - 00014178 (0x4 bytes), align: 0
  Segment part 118.           Intra module refs:   Segment part 113
                                                   Segment part 117
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014179 - 00014183 (0xb bytes), align: 0
  Segment part 119.           Intra module refs:   Segment part 115
                                                   Segment part 118
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014184 - 000142DD (0x15a bytes), align: 0
  Segment part 120.           Intra module refs:   LL_EncLtkReqCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReqCback       00014184 
               calls direct
               XSTACK = 00000002 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000142DE - 00014330 (0x53 bytes), align: 0
  Segment part 122.           Intra module refs:   LL_EncChangeCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncChangeCback       000142DE 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014331 - 00014335 (0x5 bytes), align: 0
  Segment part 124.           Intra module refs:   LL_DisconnectCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014336 - 00014345 (0x10 bytes), align: 0
  Segment part 125.           Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014346 - 00014361 (0x1c bytes), align: 0
  Segment part 126.           Intra module refs:   Segment part 125
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014362 - 00014368 (0x7 bytes), align: 0
  Segment part 127.           Intra module refs:   Segment part 126
                                                   Segment part 32
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014369 - 000143BA (0x52 bytes), align: 0
  Segment part 128.           Intra module refs:   LL_EncKeyRefreshCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncKeyRefreshCback   00014369 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000143BB - 000143C5 (0xb bytes), align: 0
  Segment part 130.           Intra module refs:   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000143C6 - 000143DD (0x18 bytes), align: 0
  Segment part 131.           Intra module refs:   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000143DE - 000143E9 (0xc bytes), align: 0
  Segment part 134.           Intra module refs:   HCI_SendCommandStatusEvent
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009A2 - 000009A7 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciInitEventMasks::?relay
                                   000009A2        HCI_Init (hci_tl)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009A8 - 000009AD (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_NumOfCompletedPacketsEvent::?relay
                                   000009A8        llProcessTxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009AE - 000009B3 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandCompleteEvent::?relay
                                   000009AE        HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_ReadBDADDRCmd (hci)
                                                   LL_RandCback (hci)
                                                   Segment part 109 (hci)
                                                   Segment part 122 (hci)
                                                   Segment part 144 (hci)
                                                   Segment part 149 (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009B4 - 000009B9 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_VendorSpecifcCommandCompleteEvent::?relay
                                   000009B4        Segment part 203 (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009BA - 000009BF (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandStatusEvent::?relay
                                   000009BA        HCI_DisconnectCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009C0 - 000009C5 (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   HCI_CommandStatusEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandStatusEvent::?relay
                                   000009C0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009C6 - 000009CB (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   HCI_CommandCompleteEvent
                                                   HCI_VendorSpecifcCommandCompleteEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandCompleteEvent::?relay
                                   000009C6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009CC - 000009D1 (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   HCI_SendCommandStatusEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendControllerToHostEvent::?relay
                                   000009CC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009D2 - 000009D7 (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnectionCompleteCback::?relay
                                   000009D2        LL_ProcessEvent (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009D8 - 000009DD (0x6 bytes), align: 0
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DisconnectCback::?relay
                                   000009D8        llConnTerminate (ll_common)
                                                   llProcessRxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009DE - 000009E3 (0x6 bytes), align: 0
  Segment part 92.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnParamUpdateCback::?relay
                                   000009DE        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009E4 - 000009E9 (0x6 bytes), align: 0
  Segment part 107.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRemoteVersionInfoCback::?relay
                                   000009E4        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009EA - 000009EF (0x6 bytes), align: 0
  Segment part 121.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReqCback::?relay
                                   000009EA        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009F0 - 000009F5 (0x6 bytes), align: 0
  Segment part 123.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncChangeCback::?relay
                                   000009F0        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009F6 - 000009FB (0x6 bytes), align: 0
  Segment part 129.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncKeyRefreshCback::?relay
                                   000009F6        llProcessSlaveControlProcedures (ll_slaveEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : l2cap_if

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000003AD - 000003AD (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   L2CAP_HostNumCompletedPkts
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E92 - 00017EF3 (0x62 bytes), align: 0
  Segment part 7.             Intra module refs:   L2CAP_RegisterApp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_RegisterApp       00017E92 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017EF4 - 00017EFA (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   L2CAP_HostNumCompletedPkts
                                                   L2CAP_RegisterApp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017EFB - 00017F4E (0x54 bytes), align: 0
  Segment part 10.            Intra module refs:   L2CAP_SendData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_SendData          00017EFB 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F4F - 00017F70 (0x22 bytes), align: 0
  Segment part 12.            Intra module refs:   L2CAP_CmdReject::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_CmdReject         00017F4F 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F71 - 00017F75 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   L2CAP_ConnParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F76 - 00017F99 (0x24 bytes), align: 0
  Segment part 19.            Intra module refs:   L2CAP_ConnParamUpdateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ConnParamUpdateReq
                                   00017F76 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F9A - 00017F9C (0x3 bytes), align: 0
  Segment part 21.            Intra module refs:   L2CAP_CmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F9D - 00017FA1 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 18
                                                   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FA2 - 00017FA6 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   L2CAP_SendData
                                                   Segment part 22
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FA7 - 00017FEC (0x46 bytes), align: 0
  Segment part 28.            Intra module refs:   L2CAP_HostNumCompletedPkts::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_HostNumCompletedPkts
                                   00017FA7 
               calls direct
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009FC - 00000A01 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_RegisterApp::?relay
                                   000009FC        GAP_Init (gap_task)
                                                   GATT_Init (gatt_task)
                                                   SM_Init (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A02 - 00000A07 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_SendData::?relay
                                   00000A02        attSendMsg (att_util)
                                                   smSendSMMsg (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A08 - 00000A0D (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_CmdReject::?relay
                                   00000A08        gapProcessOSALMsg (gap_task)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A0E - 00000A13 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ConnParamUpdateReq::?relay
                                   00000A0E        gapRole_startConnUpdate (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A14 - 00000A19 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_HostNumCompletedPkts::?relay
                                   00000A14        GATT_AppCompletedMsg (gatt_task)
                                                   gattProcessRxData (gatt_task)
                                                   l2capProcessRxData (l2cap_task)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : l2cap_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000003AE - 000003AE (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   L2CAP_Init
                                                   L2CAP_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capTaskID             000003AE        l2capEncapSendData (l2cap_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003AF - 000003BA (0xc bytes), align: 0
  Segment part 7.             Intra module refs:   L2CAP_Init
                                                   l2capProcessReq
                                                   l2capProcessRxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFixedChannels      000003AF        L2CAP_RegisterApp (l2cap_if)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003BB - 000003D2 (0x18 bytes), align: 0
  Segment part 8.             Intra module refs:   L2CAP_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capChannels           000003BB        Segment part 103 (l2cap_util)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019032 - 00019099 (0x68 bytes), align: 0
  Segment part 9.             Intra module refs:   L2CAP_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_Init              00019032 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001909A - 0001909E (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   L2CAP_Init
                                                   l2capProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001909F - 000190E0 (0x42 bytes), align: 0
  Segment part 12.            Intra module refs:   L2CAP_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ProcessEvent      0001909F 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190E1 - 000190E5 (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   L2CAP_ProcessEvent
                                                   l2capProcessSignal
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190E6 - 000191FD (0x118 bytes), align: 0
  Segment part 15.            Intra module refs:   l2capProcessRxData::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRxData      000190E6 
               calls direct
               XSTACK = 0000000C ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000191FE - 000192F9 (0xfc bytes), align: 0
  Segment part 17.            Intra module refs:   l2capProcessSignal::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessSignal      000191FE 
               calls direct
               XSTACK = 00000010 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000192FA - 000193DC (0xe3 bytes), align: 0
  Segment part 19.            Intra module refs:   l2capProcessRsp::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRsp         000192FA 
               calls direct
               XSTACK = 00000018 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000193DD - 00019497 (0xbb bytes), align: 0
  Segment part 21.            Intra module refs:   l2capProcessReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessReq         000193DD 
               calls direct
               XSTACK = 00000018 ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019498 - 0001949E (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   l2capProcessReq
                                                   l2capProcessRxData
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A1A - 00000A1F (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_Init::?relay      00000A1A        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A20 - 00000A25 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ProcessEvent::?relay
                                   00000A20        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A26 - 00000A2B (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   L2CAP_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRxData::?relay
                                   00000A26 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A2C - 00000A31 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   l2capProcessRxData
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessSignal::?relay
                                   00000A2C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A32 - 00000A37 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   l2capProcessSignal
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRsp::?relay
                                   00000A32 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A38 - 00000A3D (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   l2capProcessSignal
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessReq::?relay
                                   00000A38 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : l2cap_util

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000003D3 - 000003D3 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   l2capSendReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015952 - 00015979 (0x28 bytes), align: 0
  Segment part 7.             Intra module refs:   l2capParseSignalHdr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseSignalHdr     00015952 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001597A - 0001597A (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   l2capParsePacket
                                                   l2capParseSignalHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001597B - 00015982 (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015983 - 00015984 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   l2capParseCmdReject
                                                   l2capParseSignalHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015985 - 00015988 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   Segment part 11
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015989 - 00015993 (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015994 - 00015A65 (0xd2 bytes), align: 0
  Segment part 14.            Intra module refs:   l2capSendReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendReq            00015994 
               calls direct
               XSTACK = 00000004 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A66 - 00015B31 (0xcc bytes), align: 0
  Segment part 16.            Intra module refs:   l2capSendCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendCmd            00015A66 
               calls direct
               XSTACK = 00000016 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B32 - 00015B36 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   l2capNotifyData
                                                   l2capNotifySignal
                                                   l2capSendCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B37 - 00015B3E (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   l2capSendCmd
                                                   l2capSendReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B3F - 00015C1B (0xdd bytes), align: 0
  Segment part 20.            Intra module refs:   l2capEncapSendData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capEncapSendData      00015B3F 
               calls direct
               XSTACK = 00000016 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C1C - 00015C20 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   l2capEncapSendData
                                                   l2capParsePacket
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C21 - 00015C2F (0xf bytes), align: 0
  Segment part 23.            Intra module refs:   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C30 - 00015C38 (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
                                                   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C39 - 00015D10 (0xd8 bytes), align: 0
  Segment part 25.            Intra module refs:   l2capParsePacket::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParsePacket        00015C39 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D11 - 00015D12 (0x2 bytes), align: 0
  Segment part 27.            Intra module refs:   l2capParsePacket
                                                   l2capStopTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D13 - 00015D1A (0x8 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D1B - 00015D6A (0x50 bytes), align: 0
  Segment part 29.            Intra module refs:   L2CAP_BuildCmdReject::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildCmdReject    00015D1B 
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D6B - 00015D6F (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   L2CAP_BuildCmdReject
                                                   l2capAllocChannel
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D70 - 00015D70 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   L2CAP_BuildCmdReject
                                                   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D71 - 00015D74 (0x4 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
                                                   l2capEncapSendData
                                                   l2capParseSignalHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D75 - 00015D83 (0xf bytes), align: 0
  Segment part 34.            Intra module refs:   L2CAP_BuildCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D84 - 00015E03 (0x80 bytes), align: 0
  Segment part 35.            Intra module refs:   l2capParseCmdReject::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseCmdReject     00015D84 
               XSTACK = 00000002 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E04 - 00015E0E (0xb bytes), align: 0
  Segment part 37.            Intra module refs:   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E0F - 00015E14 (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   l2capFindLocalId
                                                   l2capNotifySignal
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E15 - 00015E1A (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E1B - 00015E21 (0x7 bytes), align: 0
  Segment part 50.            Intra module refs:   l2capFreeChannel
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E22 - 00015E2A (0x9 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 69
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E2B - 00015E2F (0x5 bytes), align: 0
  Segment part 59.            Intra module refs:   L2CAP_bm_alloc
                                                   l2capFindLocalId
                                                   l2capHandleTimerCB
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E30 - 00015E39 (0xa bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E3A - 00015E5D (0x24 bytes), align: 0
  Segment part 65.            Intra module refs:   l2capBuildParamUpdateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildParamUpdateReq
                                   00015E3A 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E5E - 00015E61 (0x4 bytes), align: 0
  Segment part 67.            Intra module refs:   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E62 - 00015E72 (0x11 bytes), align: 0
  Segment part 68.            Intra module refs:   Segment part 67
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E73 - 00015E81 (0xf bytes), align: 0
  Segment part 69.            Intra module refs:   L2CAP_BuildCmdReject
                                                   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E82 - 00015E86 (0x5 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E87 - 00015E8E (0x8 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 68
                                                   Segment part 70
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E8F - 00015E9C (0xe bytes), align: 0
  Segment part 72.            Intra module refs:   L2CAP_BuildCmdReject
                                                   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E9D - 00015EA0 (0x4 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 33
                                                   Segment part 34
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EA1 - 00015EA7 (0x7 bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 56
                                                   Segment part 71
                                                   Segment part 73
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EA8 - 00015EA8 (0x1 bytes), align: 0
  Segment part 75.            Intra module refs:   l2capParseSignalHdr
                                                   l2capStopTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EA9 - 00015EAD (0x5 bytes), align: 0
  Segment part 76.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   Segment part 75
                                                   l2capBuildParamUpdateReq
                                                   l2capParseParamUpdateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EAE - 00015EEA (0x3d bytes), align: 0
  Segment part 77.            Intra module refs:   L2CAP_ParseParamUpdateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ParseParamUpdateReq
                                   00015EAE 
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EEB - 00015EF0 (0x6 bytes), align: 0
  Segment part 79.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   Segment part 42
                                                   Segment part 87
                                                   l2capHandleTimerCB
                                                   l2capSendCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EF1 - 00015F02 (0x12 bytes), align: 0
  Segment part 80.            Intra module refs:   L2CAP_ParseParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F03 - 00015F06 (0x4 bytes), align: 0
  Segment part 81.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F07 - 00015F19 (0x13 bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 81
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F1A - 00015F35 (0x1c bytes), align: 0
  Segment part 85.            Intra module refs:   l2capParseParamUpdateRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseParamUpdateRsp
                                   00015F1A 
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F36 - 00015F3C (0x7 bytes), align: 0
  Segment part 87.            Intra module refs:   l2capParseParamUpdateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F3D - 00015F42 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   l2capParseParamUpdateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F43 - 00015FB4 (0x72 bytes), align: 0
  Segment part 89.            Intra module refs:   l2capNotifyData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifyData         00015F43 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015FB5 - 00015FBC (0x8 bytes), align: 0
  Segment part 91.            Intra module refs:   l2capEncapSendData
                                                   l2capNotifyData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015FBD - 00016041 (0x85 bytes), align: 0
  Segment part 92.            Intra module refs:   l2capNotifySignal::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifySignal       00015FBD 
               calls direct
               XSTACK = 0000000D ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016042 - 0001604B (0xa bytes), align: 0
  Segment part 94.            Intra module refs:   l2capNotifySignal
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001604C - 00016055 (0xa bytes), align: 0
  Segment part 95.            Intra module refs:   l2capNotifySignal
                                                   l2capSendReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016056 - 000160AE (0x59 bytes), align: 0
  Segment part 96.            Intra module refs:   l2capAllocChannel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capAllocChannel       00016056 
               XSTACK = 00000012 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000160AF - 000160BA (0xc bytes), align: 0
  Segment part 98.            Intra module refs:   l2capAllocChannel
                                                   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000160BB - 000160CF (0x15 bytes), align: 0
  Segment part 99.            Intra module refs:   l2capFreeChannel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFreeChannel        000160BB 
               XSTACK = 00000012 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000160D0 - 00016105 (0x36 bytes), align: 0
  Segment part 101.           Intra module refs:   l2capFindLocalId::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFindLocalId        000160D0 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016106 - 00016115 (0x10 bytes), align: 0
  Segment part 103.           Intra module refs:   l2capAllocChannel
                                                   l2capFindLocalId
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016116 - 0001612E (0x19 bytes), align: 0
  Segment part 104.           Intra module refs:   l2capStopTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capStopTimer          00016116 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001612F - 00016193 (0x65 bytes), align: 0
  Segment part 106.           Intra module refs:   l2capHandleTimerCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capHandleTimerCB      0001612F 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016194 - 00016196 (0x3 bytes), align: 0
  Segment part 108.           Intra module refs:   l2capHandleRxError::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capHandleRxError      00016194 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016197 - 000161BA (0x24 bytes), align: 0
  Segment part 110.           Intra module refs:   L2CAP_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_bm_alloc          00016197 
               calls direct
               XSTACK = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A3E - 00000A43 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseSignalHdr::?relay
                                   00000A3E        l2capProcessSignal (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A44 - 00000A49 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendReq::?relay    00000A44        Segment part 18 (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A4A - 00000A4F (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   l2capSendReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendCmd::?relay    00000A4A        Segment part 21 (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A50 - 00000A55 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   l2capSendCmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capEncapSendData::?relay
                                   00000A50        L2CAP_SendData (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A56 - 00000A5B (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParsePacket::?relay
                                   00000A56        l2capProcessRxData (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A5C - 00000A61 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildCmdReject::?relay
                                   00000A5C        L2CAP_CmdReject (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A62 - 00000A67 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseCmdReject::?relay
                                   00000A62        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A68 - 00000A6D (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildParamUpdateReq::?relay
                                   00000A68        L2CAP_ConnParamUpdateReq (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A6E - 00000A73 (0x6 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ParseParamUpdateReq::?relay
                                   00000A6E        l2capProcessReq (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A74 - 00000A79 (0x6 bytes), align: 0
  Segment part 86.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseParamUpdateRsp::?relay
                                   00000A74        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A7A - 00000A7F (0x6 bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifyData::?relay
                                   00000A7A        l2capProcessRxData (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A80 - 00000A85 (0x6 bytes), align: 0
  Segment part 93.            Intra module refs:   l2capHandleTimerCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifySignal::?relay
                                   00000A80        l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A86 - 00000A8B (0x6 bytes), align: 0
  Segment part 97.            Intra module refs:   l2capSendReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capAllocChannel::?relay
                                   00000A86 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A8C - 00000A91 (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   l2capHandleTimerCB
                                                   l2capSendReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFreeChannel::?relay
                                   00000A8C        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A92 - 00000A97 (0x6 bytes), align: 0
  Segment part 102.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFindLocalId::?relay
                                   00000A92        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A98 - 00000A9D (0x6 bytes), align: 0
  Segment part 105.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capStopTimer::?relay
                                   00000A98        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A9E - 00000AA3 (0x6 bytes), align: 0
  Segment part 107.           Intra module refs:   l2capSendReq
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capHandleTimerCB::?relay
                                   00000A9E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AA4 - 00000AA9 (0x6 bytes), align: 0
  Segment part 109.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capHandleRxError::?relay
                                   00000AA4        l2capProcessSignal (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AAA - 00000AAF (0x6 bytes), align: 0
  Segment part 111.           Intra module refs:   l2capSendCmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_bm_alloc::?relay
                                   00000AAA        attSendMsg (att_util)
                                                   smSendSMMsg (smp)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : linkdb

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000003D4 - 000003F6 (0x23 bytes), align: 0
  Segment part 6.             Intra module refs:   linkDB_Find
                                                   linkDB_FindFirst
                                                   linkDB_Init
                                                   linkDB_NumActive
                                                   linkDB_PerformFunc
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003F7 - 0000040E (0x18 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 36
                                                   linkDB_Register
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF4F - 0001AF76 (0x28 bytes), align: 0
  Segment part 8.             Intra module refs:   linkDB_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Init             0001AF4F 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF77 - 0001AFB4 (0x3e bytes), align: 0
  Segment part 10.            Intra module refs:   linkDB_Register::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Register         0001AF77 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFB5 - 0001B072 (0xbe bytes), align: 0
  Segment part 12.            Intra module refs:   linkDB_Add::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Add              0001AFB5 
               calls direct
               XSTACK = 00000004 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B073 - 0001B0D9 (0x67 bytes), align: 0
  Segment part 14.            Intra module refs:   linkDB_Remove::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Remove           0001B073 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0DA - 0001B0F5 (0x1c bytes), align: 0
  Segment part 18.            Intra module refs:   linkDB_Find::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Find             0001B0DA 
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0F6 - 0001B116 (0x21 bytes), align: 0
  Segment part 20.            Intra module refs:   linkDB_FindFirst::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_FindFirst        0001B0F6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B117 - 0001B11D (0x7 bytes), align: 0
  Segment part 22.            Intra module refs:   linkDB_Find
                                                   linkDB_FindFirst
                                                   linkDB_Init
                                                   linkDB_NumActive
                                                   linkDB_PerformFunc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B11E - 0001B148 (0x2b bytes), align: 0
  Segment part 23.            Intra module refs:   linkDB_State::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_State            0001B11E 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B149 - 0001B14D (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   linkDB_Remove
                                                   linkDB_State
                                                   reportStatusChange
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B14E - 0001B15C (0xf bytes), align: 0
  Segment part 26.            Intra module refs:   linkDB_NumActive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_NumActive        0001B14E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B15D - 0001B1D0 (0x74 bytes), align: 0
  Segment part 28.            Intra module refs:   linkDB_Authen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Authen           0001B15D 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B1D1 - 0001B1D4 (0x4 bytes), align: 0
  Segment part 30.            Intra module refs:   linkDB_Add
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B1D5 - 0001B1D9 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 30
                                                   linkDB_Authen
                                                   linkDB_Remove
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B1DA - 0001B1FF (0x26 bytes), align: 0
  Segment part 32.            Intra module refs:   linkDB_PerformFunc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_PerformFunc      0001B1DA 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B200 - 0001B236 (0x37 bytes), align: 0
  Segment part 34.            Intra module refs:   reportStatusChange::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           reportStatusChange      0001B200 
               XSTACK = 00000014 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B237 - 0001B247 (0x11 bytes), align: 0
  Segment part 36.            Intra module refs:   linkDB_Init
                                                   reportStatusChange
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AB0 - 00000AB5 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Init::?relay     00000AB0        GAP_Init (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AB6 - 00000ABB (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Register::?relay
                                   00000AB6        GATTServApp_Init (gattservapp)
                                                   GATT_InitServer (gatt_server)
                                                   SM_Init (sm_task)
                                                   SimpleProfile_AddService (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ABC - 00000AC1 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Add::?relay      00000ABC        gapProcessConnectionCompleteEvt (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AC2 - 00000AC7 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Remove::?relay   00000AC2        gapProcessDisconnectCompleteEvt (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AC8 - 00000ACD (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   linkDB_Add
                                                   linkDB_Authen
                                                   linkDB_Remove
                                                   linkDB_State
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Find::?relay     00000AC8        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt (gap_linkmgr)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   sendAuthEvent (gap_linkmgr)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ACE - 00000AD3 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_FindFirst::?relay
                                   00000ACE        disconnectNext (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AD4 - 00000AD9 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_State::?relay    00000AD4        L2CAP_SendData (l2cap_if)
                                                   attSendMsg (att_util)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   l2capSendReq (l2cap_util)
                                                   simpleProfile_HandleConnStatusCB (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ADA - 00000ADF (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_NumActive::?relay
                                   00000ADA        GAP_NumActiveConnections (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AE0 - 00000AE5 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Authen::?relay   00000AE0        GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_VerifyReadPermissions (gatt_server)
                                                   GATT_VerifyWritePermissions (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AE6 - 00000AEB (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_PerformFunc::?relay
                                   00000AE6        GAPBondMgr_ServiceChangeInd (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AEC - 00000AF1 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   linkDB_Add
                                                   linkDB_Remove
           LOCAL                   ADDRESS         
           =====                   =======         
           reportStatusChange::?relay
                                   00000AEC 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000AE - 000000AE (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PMUX                    000000AE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDCTL                   000000C9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D9 - 000000D9 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessRxData (ll_common)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupEncRsp (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncReq (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     000000D9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E1 - 000000E1 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_Reset
                                                   LL_SetAdvControl
                                                   PHY_CommitRxFifo (phy)
                                                   PHY_DeallocateRxFifo (phy)
                                                   PHY_RetryRxFifo (phy)
                                                   PHY_RetryTxFifo (phy)
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llReleaseAllConnId (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSave_rxFIFO (ll_scheduler)
                                                   llSave_txFIFO (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llSetupAdv (ll_common)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupEncRsp (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncReq (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    000000E1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APCFG                   000000F2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000040F - 00000414 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   LL_Init
                                                   LL_ReadBDADDR
                                                   LL_SetAdvParam
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ownPublicAddr           0000040F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000415 - 0000041A (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   LL_Init
                                                   LL_SetAdvParam
                                                   LL_SetRandomAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ownRandomAddr           00000415 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000041B - 00000420 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ownSavedPublicAddr      0000041B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000421 - 00000421 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   LL_Init
                                                   LL_ProcessEvent
                                                   LL_SetAdvControl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TaskID               00000421        LL_PowerOnReq (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduleTask (ll_scheduler)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000422 - 00000422 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   LL_EncLtkNegReply
                                                   LL_EncLtkReply
                                                   LL_ProcessEvent
                                                   LL_Rand
                                                   LL_ReadRssi
                                                   LL_Reset
                                                   LL_SetAdvControl
                                                   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llState                 00000422        LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llFreeTask (ll_scheduler)
                                                   llProcessRxData (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000423 - 00000423 (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskEndCause            00000423        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000424 - 00000425 (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   LL_Rand
                                                   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           postRfOperations        00000424        llProcessPostRfOps (ll_common)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000426 - 00000426 (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   LL_ReadRssi
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rssiCorrection          00000426        llExtendRfRange (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000427 - 00000427 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clkDivOnHalt            00000427        llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000428 - 00000428 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   LL_ProcessEvent
                                                   LL_Reset
                                                   LL_SetAdvControl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nvInUse                 00000428        llScheduleTask (ll_scheduler)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000429 - 00000434 (0xc bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rfCounters              00000429        llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000435 - 0000043D (0x9 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deviceFeatureSet        00000435        llAllocConnId (ll_common)
                                                   llInitFeatureSet (ll_common)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000043E - 0000043E (0x1 bytes), align: 0
  Segment part 36.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maxTxPwrForDTM          0000043E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000043F - 00000443 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           verInfo                 0000043F        llSetupVersionIndReq (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000444 - 0000044B (0x8 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dtmInfo                 00000444        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000044C - 0000044D (0x2 bytes), align: 0
  Segment part 39.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           buildInfo               0000044C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000044E - 00000554 (0x107 bytes), align: 0
  Segment part 40.            Intra module refs:   LL_Disconnect
                                                   LL_EncLtkNegReply
                                                   LL_EncLtkReply
                                                   LL_ProcessEvent
                                                   LL_ReadRssi
                                                   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConns                 0000044E        RF_NormalIsr (ll_isr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocConnId (ll_common)
                                                   llConnCleanup (ll_common)
                                                   llGetNextConn (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llReleaseAllConnId (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llStartSlaveSetup (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000555 - 0000055B (0x7 bytes), align: 0
  Segment part 41.            Intra module refs:   LL_ProcessEvent
                                                   LL_Reset
                                                   LL_SetAdvParam
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           peerInfo                00000555        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupDirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000055C - 00000560 (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           chanMapUpdate           0000055C        llAllocConnId (ll_common)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llSetNextDataChan (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000561 - 00000561 (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           onePktPerEvt            00000561        llConnCleanup (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000562 - 00000562 (0x1 bytes), align: 0
  Segment part 44.            Intra module refs:   LL_Reset
                                                   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numTxDataBufs           00000562        llConnCleanup (ll_common)
                                                   llProcessTxData (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000563 - 00000563 (0x1 bytes), align: 0
  Segment part 45.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numComplPkts            00000563        llConnCleanup (ll_common)
                                                   llProcessTxData (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000564 - 00000564 (0x1 bytes), align: 0
  Segment part 46.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numComplPktsLimit       00000564        llProcessTxData (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000565 - 00000565 (0x1 bytes), align: 0
  Segment part 47.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numComplPktsFlush       00000565        llProcessTxData (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000566 - 00000566 (0x1 bytes), align: 0
  Segment part 48.            Intra module refs:   LL_Reset
                                                   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fastTxRespTime          00000566 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000567 - 00000567 (0x1 bytes), align: 0
  Segment part 49.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           slOverride              00000567        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000568 - 000005BC (0x55 bytes), align: 0
  Segment part 50.            Intra module refs:   LL_Init
                                                   LL_Reset
                                                   LL_SetAdvControl
                                                   LL_SetAdvData
                                                   LL_SetAdvParam
                                                   LL_SetScanRspData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           advInfo                 00000568        llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCheckWhiteListUsage (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llStartAdvSetup (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005BD - 000005BE (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dcdcData                000005BD        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005BF - 000005BF (0x1 bytes), align: 0
  Segment part 52.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           extendRfRange           000005BF        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llExtendRfRange (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005C0 - 000005C0 (0x1 bytes), align: 0
  Segment part 53.            Intra module refs:   LL_CtrlToHostFlowControl
                                                   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rxFifoFlowCtrl          000005C0        llProcessRxData (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005C1 - 000005C1 (0x1 bytes), align: 0
  Segment part 54.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           haltDuringRf            000005C1        llScheduleTask (ll_scheduler)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005C2 - 000005C3 (0x2 bytes), align: 0
  Segment part 55.            Intra module refs:   LL_Init
                                                   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sleepDelay              000005C2 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F9F - 00000FAC (0xe bytes), align: 0
  Segment part 56.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskEndCauses           00000F9F        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FAD - 00000FB8 (0xc bytes), align: 0
  Segment part 58.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskErrorEndCauses      00000FAD        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005C4 - 000005C4 (0x1 bytes), align: 0
  Segment part 61.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           trngCounter             000005C4        RF_NormalIsr (ll_isr)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
IDATA_Z
  Relative segment, address: IDATA 00000029 - 0000002A (0x2 bytes), align: 0
  Segment part 62. ROOT.      Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           myPC                    00000029        RF_NormalIsr (ll_isr)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BFA4 - 0000C181 (0x1de bytes), align: 0
  Segment part 63.            Intra module refs:   LL_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Init                 0000BFA4 
               calls direct
               XSTACK = 00000000 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C182 - 0000C3B3 (0x232 bytes), align: 0
  Segment part 65.            Intra module refs:   LL_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ProcessEvent         0000C182 
               calls direct
               XSTACK = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3B4 - 0000C3EF (0x3c bytes), align: 0
  Segment part 67.            Intra module refs:   LL_TX_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TX_bm_alloc          0000C3B4 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3F0 - 0000C41C (0x2d bytes), align: 0
  Segment part 69.            Intra module refs:   LL_RX_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RX_bm_alloc          0000C3F0 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C41D - 0000C506 (0xea bytes), align: 0
  Segment part 71.            Intra module refs:   LL_Reset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Reset                0000C41D 
               calls direct
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C507 - 0000C551 (0x4b bytes), align: 0
  Segment part 73.            Intra module refs:   LL_ReadBDADDR::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadBDADDR           0000C507 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C552 - 0000C59C (0x4b bytes), align: 0
  Segment part 75.            Intra module refs:   LL_SetRandomAddress::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetRandomAddress     0000C552 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C59D - 0000C5AE (0x12 bytes), align: 0
  Segment part 77.            Intra module refs:   LL_ClearWhiteList::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ClearWhiteList       0000C59D 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C5AF - 0000C5EE (0x40 bytes), align: 0
  Segment part 79.            Intra module refs:   LL_AddWhiteListDevice::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_AddWhiteListDevice   0000C5AF 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C5EF - 0000C623 (0x35 bytes), align: 0
  Segment part 87.            Intra module refs:   LL_Encrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Encrypt              0000C5EF 
               calls direct
               XSTACK = 00000002 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C624 - 0000C66C (0x49 bytes), align: 0
  Segment part 89.            Intra module refs:   LL_Rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Rand                 0000C624 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C66D - 0000C671 (0x5 bytes), align: 0
  Segment part 91.            Intra module refs:   LL_Init
                                                   LL_ProcessEvent
                                                   LL_Rand
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C672 - 0000C6A0 (0x2f bytes), align: 0
  Segment part 92.            Intra module refs:   LL_PseudoRand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PseudoRand           0000C672 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C6A1 - 0000C6C3 (0x23 bytes), align: 0
  Segment part 100.           Intra module refs:   LL_CtrlToHostFlowControl::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_CtrlToHostFlowControl
                                   0000C6A1 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C6C4 - 0000C710 (0x4d bytes), align: 0
  Segment part 108.           Intra module refs:   LL_ReadRssi::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRssi             0000C6C4 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C711 - 0000C795 (0x85 bytes), align: 0
  Segment part 110.           Intra module refs:   LL_Disconnect::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Disconnect           0000C711 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C796 - 0000C9A5 (0x210 bytes), align: 0
  Segment part 112.           Intra module refs:   LL_TxData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TxData               0000C796 
               calls direct
               XSTACK = 00000001 ( 0000001A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C9A6 - 0000C9AA (0x5 bytes), align: 0
  Segment part 120.           Intra module refs:   LL_AddWhiteListDevice
                                                   LL_Disconnect
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C9AB - 0000C9AF (0x5 bytes), align: 0
  Segment part 123.           Intra module refs:   LL_Encrypt
                                                   LL_PseudoRand
                                                   LL_RX_bm_alloc
                                                   LL_SetAdvData
                                                   LL_SetAdvParam
                                                   LL_SetScanRspData
                                                   LL_TX_bm_alloc
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C9B0 - 0000CBEE (0x23f bytes), align: 0
  Segment part 124.           Intra module refs:   LL_SetAdvParam::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvParam          0000C9B0 
               calls direct
               XSTACK = 00000006 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CBEF - 0000CC2F (0x41 bytes), align: 0
  Segment part 126.           Intra module refs:   LL_SetAdvData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvData           0000CBEF 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CC30 - 0000CDD1 (0x1a2 bytes), align: 0
  Segment part 128.           Intra module refs:   LL_SetAdvControl::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvControl        0000CC30 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CDD2 - 0000CE12 (0x41 bytes), align: 0
  Segment part 132.           Intra module refs:   LL_SetScanRspData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetScanRspData       0000CDD2 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE13 - 0000CE85 (0x73 bytes), align: 0
  Segment part 134.           Intra module refs:   LL_EncLtkReply::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReply          0000CE13 
               calls direct
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE86 - 0000CED1 (0x4c bytes), align: 0
  Segment part 136.           Intra module refs:   LL_EncLtkNegReply::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkNegReply       0000CE86 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CED2 - 0000CED2 (0x1 bytes), align: 0
  Segment part 147.           Intra module refs:   LL_ReadBDADDR
                                                   LL_SetRandomAddress
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CED3 - 0000CED4 (0x2 bytes), align: 0
  Segment part 148.           Intra module refs:   Segment part 147
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CED5 - 0000CEDB (0x7 bytes), align: 0
  Segment part 149.           Intra module refs:   LL_ClearWhiteList
                                                   LL_CtrlToHostFlowControl
                                                   LL_EncLtkNegReply
                                                   LL_EncLtkReply
                                                   LL_ReadRssi
                                                   LL_Reset
                                                   Segment part 148
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000022F - 0000023C (0xe bytes), align: 0
  Segment part 57.            Intra module refs:   taskEndCauses
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000023D - 00000248 (0xc bytes), align: 0
  Segment part 59.            Intra module refs:   taskErrorEndCauses
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AF2 - 00000AF7 (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Init::?relay         00000AF2        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AF8 - 00000AFD (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ProcessEvent::?relay
                                   00000AF8        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AFE - 00000B03 (0x6 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TX_bm_alloc::?relay
                                   00000AFE        HCI_bm_alloc (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B04 - 00000B09 (0x6 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RX_bm_alloc::?relay
                                   00000B04        llProcessRxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B0A - 00000B0F (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Reset::?relay        00000B0A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B10 - 00000B15 (0x6 bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadBDADDR::?relay   00000B10        HCI_ReadBDADDRCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B16 - 00000B1B (0x6 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetRandomAddress::?relay
                                   00000B16        HCI_LE_SetRandomAddressCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B1C - 00000B21 (0x6 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ClearWhiteList::?relay
                                   00000B1C        HCI_LE_ClearWhiteListCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B22 - 00000B27 (0x6 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_AddWhiteListDevice::?relay
                                   00000B22        HCI_LE_AddWhiteListCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B28 - 00000B2D (0x6 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Encrypt::?relay      00000B28        generate_subkey (sm_mgr)
                                                   smEncrypt (sm_mgr)
                                                   sm_CMAC (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B2E - 00000B33 (0x6 bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Rand::?relay         00000B2E        HCI_LE_RandCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B34 - 00000B39 (0x6 bytes), align: 0
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PseudoRand::?relay   00000B34        Onboard_rand (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B3A - 00000B3F (0x6 bytes), align: 0
  Segment part 101.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_CtrlToHostFlowControl::?relay
                                   00000B3A        HCI_HostNumCompletedPktCmd (hci)
                                                   LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B40 - 00000B45 (0x6 bytes), align: 0
  Segment part 109.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRssi::?relay     00000B40        HCI_ReadRssiCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B46 - 00000B4B (0x6 bytes), align: 0
  Segment part 111.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Disconnect::?relay   00000B46        HCI_DisconnectCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B4C - 00000B51 (0x6 bytes), align: 0
  Segment part 113.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TxData::?relay       00000B4C        HCI_SendDataPkt (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B52 - 00000B57 (0x6 bytes), align: 0
  Segment part 125.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvParam::?relay
                                   00000B52        HCI_LE_SetAdvParamCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B58 - 00000B5D (0x6 bytes), align: 0
  Segment part 127.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvData::?relay   00000B58        HCI_LE_SetAdvDataCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B5E - 00000B63 (0x6 bytes), align: 0
  Segment part 129.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvControl::?relay
                                   00000B5E        HCI_LE_SetAdvEnableCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B64 - 00000B69 (0x6 bytes), align: 0
  Segment part 133.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetScanRspData::?relay
                                   00000B64        HCI_LE_SetScanRspDataCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B6A - 00000B6F (0x6 bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReply::?relay
                                   00000B6A        HCI_LE_LtkReqReplyCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B70 - 00000B75 (0x6 bytes), align: 0
  Segment part 137.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkNegReply::?relay
                                   00000B70        HCI_LE_LtkReqNegReplyCmd (hci)
                                                   LL_EncLtkReqCback (hci_event)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_advEndCauses

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012A02 - 00012AFF (0xfe bytes), align: 0
  Segment part 11.            Intra module refs:   llDirectedAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDirectedAdvEvt_TaskEndOk
                                   00012A02 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012B00 - 00013198 (0x699 bytes), align: 0
  Segment part 13.            Intra module refs:   llAdvEvt_TaskConnect::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskConnect    00012B00 
               calls direct
               XSTACK = 00000000 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013199 - 000133B9 (0x221 bytes), align: 0
  Segment part 15.            Intra module refs:   llUndirectedAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUndirectedAdvEvt_TaskEndOk
                                   00013199 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000133BA - 0001357C (0x1c3 bytes), align: 0
  Segment part 17.            Intra module refs:   llDiscoverableAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDiscoverableAdvEvt_TaskEndOk
                                   000133BA 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001357D - 00013584 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   llDirectedAdvEvt_TaskEndOk
                                                   llDiscoverableAdvEvt_TaskEndOk
                                                   llNonConnAdvEvt_TaskEndOk
                                                   llUndirectedAdvEvt_TaskEndOk
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013585 - 000136EC (0x168 bytes), align: 0
  Segment part 20.            Intra module refs:   llNonConnAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llNonConnAdvEvt_TaskEndOk
                                   00013585 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000136ED - 00013716 (0x2a bytes), align: 0
  Segment part 22.            Intra module refs:   llAdvEvt_TaskAbort::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskAbort      000136ED 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B76 - 00000B7B (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDirectedAdvEvt_TaskEndOk::?relay
                                   00000B76        llSetupDirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B7C - 00000B81 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskConnect::?relay
                                   00000B7C        llSetupDirectedAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B82 - 00000B87 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUndirectedAdvEvt_TaskEndOk::?relay
                                   00000B82        llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B88 - 00000B8D (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDiscoverableAdvEvt_TaskEndOk::?relay
                                   00000B88        llSetupScannableAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B8E - 00000B93 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llNonConnAdvEvt_TaskEndOk::?relay
                                   00000B8E        llSetupNonConnectableAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B94 - 00000B99 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskAbort::?relay
                                   00000B94        llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_common

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A9 - 000000A9 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   llClearSetInts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP0                     000000A9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AF - 000000AF (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1STAT                  000000AF 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B9 - 000000B9 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   llClearSetInts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP1                     000000B9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DA - 000000DA (0x1 bytes), align: 0
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CC0L                  000000DA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DB - 000000DB (0x1 bytes), align: 0
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CC0H                  000000DB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E2 - 000000E2 (0x1 bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CNTL                  000000E2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E3 - 000000E3 (0x1 bytes), align: 0
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CNTH                  000000E3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E4 - 000000E4 (0x1 bytes), align: 0
  Segment part 21. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CTL                   000000E4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E5 - 000000E5 (0x1 bytes), align: 0
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL0                 000000E5 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004BF9 - 00004CA7 (0xaf bytes), align: 0
  Segment part 33.            Intra module refs:   llRfInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRfInit                00004BF9 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004CA8 - 00004CD4 (0x2d bytes), align: 0
  Segment part 35.            Intra module refs:   llSetFreqTune::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetFreqTune           00004CA8 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004CD5 - 00004D1A (0x46 bytes), align: 0
  Segment part 37.            Intra module refs:   llClearSetInts::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llClearSetInts          00004CD5 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004D1B - 00004E50 (0x136 bytes), align: 0
  Segment part 45.            Intra module refs:   llProcessPostRfOps::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessPostRfOps      00004D1B 
               calls direct
               XSTACK = 00000000 ( 00000008 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004E51 - 00004E52 (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   llStartAdvSetup
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004E53 - 00004E53 (0x1 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   llExtendRfRange
                                                   llInitFeatureSet
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004E54 - 00004E5A (0x7 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 123
                                                   Segment part 52
                                                   llCheckWhiteListUsage
                                                   llClearSetInts
                                                   llGetNextConn
                                                   llProcessPostRfOps
                                                   llReleaseAllConnId
                                                   llRfInit
                                                   llSetFreqTune
                                                   llSetupAdv
                                                   llSetupStartEncReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004E5B - 00004FEB (0x191 bytes), align: 0
  Segment part 56.            Intra module refs:   llFindTxPowerSettings::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindTxPowerSettings   00004E5B 
               calls direct
               XSTACK = 00000000 ( 00000022 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004FEC - 00004FF0 (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   llAdjustForMissedEvent
                                                   llFindTxPowerSettings
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004FF1 - 00005065 (0x75 bytes), align: 0
  Segment part 59.            Intra module refs:   llExtendRfRange::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llExtendRfRange         00004FF1 
               XSTACK = 00000008 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005066 - 0000506A (0x5 bytes), align: 0
  Segment part 63.            Intra module refs:   llSetupDirectedAdvEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000506B - 00005085 (0x1b bytes), align: 0
  Segment part 64.            Intra module refs:   llCheckWhiteListUsage::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCheckWhiteListUsage   0000506B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005086 - 00005100 (0x7b bytes), align: 0
  Segment part 66.            Intra module refs:   llSetupAdv::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupAdv              00005086 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005101 - 0000525A (0x15a bytes), align: 0
  Segment part 68.            Intra module refs:   llSetupDirectedAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupDirectedAdvEvt   00005101 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000525B - 000053BA (0x160 bytes), align: 0
  Segment part 70.            Intra module refs:   llSetupUndirectedAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUndirectedAdvEvt
                                   0000525B 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000053BB - 000054C0 (0x106 bytes), align: 0
  Segment part 72.            Intra module refs:   llSetupNonConnectableAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNonConnectableAdvEvt
                                   000053BB 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000054C1 - 00005621 (0x161 bytes), align: 0
  Segment part 74.            Intra module refs:   llSetupScannableAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupScannableAdvEvt
                                   000054C1 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005622 - 0000563A (0x19 bytes), align: 0
  Segment part 80.            Intra module refs:   llStartAdvSetup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartAdvSetup         00005622 
               is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000563B - 00005698 (0x5e bytes), align: 0
  Segment part 82.            Intra module refs:   llStartSlaveSetup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartSlaveSetup       0000563B 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005699 - 00005779 (0xe1 bytes), align: 0
  Segment part 92.            Intra module refs:   llSetupEncRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupEncRsp           00005699 
               calls direct
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002194 - 0000224C (0xb9 bytes), align: 0
  Segment part 166.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNextDataChan       00002194        llAdvEvt_TaskConnect (ll_advEndCauses)
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000224D - 00002251 (0x5 bytes), align: 0
  Segment part 167.           Intra module refs:   llGetNextDataChan
                                                   llProcessTxData
                                                   llSetNextDataChan
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002252 - 000023D1 (0x180 bytes), align: 0
  Segment part 168.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetNextDataChan       00002252        LL_TxData (ll)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000023D2 - 00002410 (0x3f bytes), align: 0
  Segment part 169.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEventInRange          000023D2        llSetupNextSlaveEvent (ll_slaveEndCauses)
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002411 - 00002418 (0x8 bytes), align: 0
  Segment part 170.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEventDelta            00002411        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002419 - 000025C5 (0x1ad bytes), align: 0
  Segment part 171.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessRxData         00002419        RF_NormalIsr (ll_isr)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
               calls direct
               XSTACK = 00000000 ( 00000013 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000025C6 - 00002710 (0x14b bytes), align: 0
  Segment part 172.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessTxData         000025C6        LL_TxData (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   llScheduler (ll_scheduler)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
               calls direct
               XSTACK = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000577A - 00005781 (0x8 bytes), align: 0
  Segment part 94.            Intra module refs:   llEnqueueDataQ
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005782 - 00005786 (0x5 bytes), align: 0
  Segment part 95.            Intra module refs:   Segment part 94
                                                   llAllocConnId
                                                   llConnTerminate
                                                   llMemCopySrc
                                                   llSetupEncRsp
                                                   llSetupNonConnectableAdvEvt
                                                   llSetupRejectInd
                                                   llSetupScannableAdvEvt
                                                   llStartSlaveSetup
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005787 - 000057B9 (0x33 bytes), align: 0
  Segment part 96.            Intra module refs:   llSetupStartEncReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncReq      00005787 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000057BA - 00005829 (0x70 bytes), align: 0
  Segment part 98.            Intra module refs:   llSetupStartEncRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncRsp      000057BA 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000582A - 000058A3 (0x7a bytes), align: 0
  Segment part 102.           Intra module refs:   llSetupPauseEncRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupPauseEncRsp      0000582A 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000058A4 - 000058ED (0x4a bytes), align: 0
  Segment part 104.           Intra module refs:   llSetupRejectInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupRejectInd        000058A4 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000058EE - 000059B7 (0xca bytes), align: 0
  Segment part 108.           Intra module refs:   llSetupFeatureSetRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupFeatureSetRsp    000058EE 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000059B8 - 00005A87 (0xd0 bytes), align: 0
  Segment part 110.           Intra module refs:   llSetupVersionIndReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupVersionIndReq    000059B8 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A88 - 00005A8C (0x5 bytes), align: 0
  Segment part 112.           Intra module refs:   llConnCleanup
                                                   llConvertCtrlProcTimeoutToEvent
                                                   llConvertLstoToEvent
                                                   llDequeueCtrlPkt
                                                   llSetupFeatureSetRsp
                                                   llSetupPauseEncRsp
                                                   llSetupStartEncRsp
                                                   llSetupTermInd
                                                   llSetupUnknownRsp
                                                   llSetupVersionIndReq
                                                   llWriteTxData
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A8D - 00005B6B (0xdf bytes), align: 0
  Segment part 113.           Intra module refs:   llSetupTermInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupTermInd          00005A8D 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005B6C - 00005BF6 (0x8b bytes), align: 0
  Segment part 115.           Intra module refs:   llSetupUnknownRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUnknownRsp       00005B6C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005BF7 - 00005C64 (0x6e bytes), align: 0
  Segment part 117.           Intra module refs:   llEnqueueCtrlPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnqueueCtrlPkt        00005BF7 
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005C65 - 00005CD8 (0x74 bytes), align: 0
  Segment part 119.           Intra module refs:   llDequeueCtrlPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDequeueCtrlPkt        00005C65 
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005CD9 - 00005CFE (0x26 bytes), align: 0
  Segment part 121.           Intra module refs:   llReplaceCtrlPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReplaceCtrlPkt        00005CD9 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005CFF - 00005D03 (0x5 bytes), align: 0
  Segment part 123.           Intra module refs:   llReplaceCtrlPkt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005D04 - 00005DC2 (0xbf bytes), align: 0
  Segment part 124.           Intra module refs:   llProcessChanMap::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessChanMap        00005D04 
               XSTACK = 0000000B ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005DC3 - 00005F27 (0x165 bytes), align: 0
  Segment part 128.           Intra module refs:   llAllocConnId::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocConnId           00005DC3 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005F28 - 00005F44 (0x1d bytes), align: 0
  Segment part 132.           Intra module refs:   llReleaseAllConnId::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReleaseAllConnId      00005F28 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005F45 - 00005F63 (0x1f bytes), align: 0
  Segment part 134.           Intra module refs:   llGetNextConn::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNextConn           00005F45 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005F64 - 00006054 (0xf1 bytes), align: 0
  Segment part 136.           Intra module refs:   llConnCleanup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnCleanup           00005F64 
               calls direct
               XSTACK = 00000011 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006055 - 00006079 (0x25 bytes), align: 0
  Segment part 138.           Intra module refs:   llConnTerminate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnTerminate         00006055 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000607A - 000060A3 (0x2a bytes), align: 0
  Segment part 142.           Intra module refs:   llInitFeatureSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitFeatureSet        0000607A 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000060A4 - 0000611E (0x7b bytes), align: 0
  Segment part 146.           Intra module refs:   llConvertLstoToEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertLstoToEvent    000060A4 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000611F - 00006178 (0x5a bytes), align: 0
  Segment part 148.           Intra module refs:   llConvertCtrlProcTimeoutToEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertCtrlProcTimeoutToEvent
                                   0000611F 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006179 - 000062E1 (0x169 bytes), align: 0
  Segment part 150.           Intra module refs:   llAdjustForMissedEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustForMissedEvent
                                   00006179 
               calls direct
               XSTACK = 00000004 ( 00000018 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062E2 - 0000638F (0xae bytes), align: 0
  Segment part 152.           Intra module refs:   llWriteTxData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llWriteTxData           000062E2 
               calls direct
               XSTACK = 00000011 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006390 - 000063D0 (0x41 bytes), align: 0
  Segment part 154.           Intra module refs:   llEnqueueDataQ::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnqueueDataQ          00006390 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063D1 - 00006400 (0x30 bytes), align: 0
  Segment part 162.           Intra module refs:   llMemCopySrc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llMemCopySrc            000063D1 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B9A - 00000B9F (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRfInit::?relay        00000B9A        LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BA0 - 00000BA5 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetFreqTune::?relay   00000BA0        LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BA6 - 00000BAB (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llClearSetInts::?relay
                                   00000BA6        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BAC - 00000BB1 (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessPostRfOps::?relay
                                   00000BAC        RF_NormalIsr (ll_isr)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BB2 - 00000BB7 (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindTxPowerSettings::?relay
                                   00000BB2        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BB8 - 00000BBD (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   llProcessPostRfOps
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llExtendRfRange::?relay
                                   00000BB8        LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BBE - 00000BC3 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCheckWhiteListUsage::?relay
                                   00000BBE        LL_AddWhiteListDevice (ll)
                                                   LL_ClearWhiteList (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BC4 - 00000BC9 (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupAdv::?relay      00000BC4        LL_SetAdvControl (ll)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BCA - 00000BCF (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupDirectedAdvEvt::?relay
                                   00000BCA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BD0 - 00000BD5 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUndirectedAdvEvt::?relay
                                   00000BD0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BD6 - 00000BDB (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNonConnectableAdvEvt::?relay
                                   00000BD6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BDC - 00000BE1 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupScannableAdvEvt::?relay
                                   00000BDC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BE2 - 00000BE7 (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartAdvSetup::?relay
                                   00000BE2        llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BE8 - 00000BED (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartSlaveSetup::?relay
                                   00000BE8        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BEE - 00000BF3 (0x6 bytes), align: 0
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupEncRsp::?relay   00000BEE        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BF4 - 00000BF9 (0x6 bytes), align: 0
  Segment part 97.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncReq::?relay
                                   00000BF4        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BFA - 00000BFF (0x6 bytes), align: 0
  Segment part 99.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncRsp::?relay
                                   00000BFA        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C00 - 00000C05 (0x6 bytes), align: 0
  Segment part 103.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupPauseEncRsp::?relay
                                   00000C00        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C06 - 00000C0B (0x6 bytes), align: 0
  Segment part 105.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupRejectInd::?relay
                                   00000C06        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C0C - 00000C11 (0x6 bytes), align: 0
  Segment part 109.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupFeatureSetRsp::?relay
                                   00000C0C        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C12 - 00000C17 (0x6 bytes), align: 0
  Segment part 111.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupVersionIndReq::?relay
                                   00000C12        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C18 - 00000C1D (0x6 bytes), align: 0
  Segment part 114.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupTermInd::?relay
                                   00000C18        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C1E - 00000C23 (0x6 bytes), align: 0
  Segment part 116.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUnknownRsp::?relay
                                   00000C1E        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C24 - 00000C29 (0x6 bytes), align: 0
  Segment part 118.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnqueueCtrlPkt::?relay
                                   00000C24        LL_Disconnect (ll)
                                                   LL_EncLtkNegReply (ll)
                                                   LL_EncLtkReply (ll)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C2A - 00000C2F (0x6 bytes), align: 0
  Segment part 120.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDequeueCtrlPkt::?relay
                                   00000C2A        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C30 - 00000C35 (0x6 bytes), align: 0
  Segment part 122.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReplaceCtrlPkt::?relay
                                   00000C30        LL_Disconnect (ll)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C36 - 00000C3B (0x6 bytes), align: 0
  Segment part 125.           Intra module refs:   llSetNextDataChan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessChanMap::?relay
                                   00000C36        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C3C - 00000C41 (0x6 bytes), align: 0
  Segment part 129.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocConnId::?relay   00000C3C        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C42 - 00000C47 (0x6 bytes), align: 0
  Segment part 133.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReleaseAllConnId::?relay
                                   00000C42        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C48 - 00000C4D (0x6 bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNextConn::?relay   00000C48        llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C4E - 00000C53 (0x6 bytes), align: 0
  Segment part 137.           Intra module refs:   llConnTerminate
                                                   llProcessRxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnCleanup::?relay   00000C4E        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C54 - 00000C59 (0x6 bytes), align: 0
  Segment part 139.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnTerminate::?relay
                                   00000C54        LL_ProcessEvent (ll)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C5A - 00000C5F (0x6 bytes), align: 0
  Segment part 143.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitFeatureSet::?relay
                                   00000C5A        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C60 - 00000C65 (0x6 bytes), align: 0
  Segment part 147.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertLstoToEvent::?relay
                                   00000C60        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C66 - 00000C6B (0x6 bytes), align: 0
  Segment part 149.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertCtrlProcTimeoutToEvent::?relay
                                   00000C66        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C6C - 00000C71 (0x6 bytes), align: 0
  Segment part 151.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustForMissedEvent::?relay
                                   00000C6C        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C72 - 00000C77 (0x6 bytes), align: 0
  Segment part 153.           Intra module refs:   llProcessTxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llWriteTxData::?relay   00000C72 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C78 - 00000C7D (0x6 bytes), align: 0
  Segment part 155.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnqueueDataQ::?relay
                                   00000C78        LL_TxData (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C7E - 00000C83 (0x6 bytes), align: 0
  Segment part 163.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llMemCopySrc::?relay    00000C7E        llProcessSlaveControlPacket (ll_slaveEndCauses)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085DD - 000085E0 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   llFindTxPowerSettings
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008583 - 0000858A (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   llFindTxPowerSettings
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085DD - 000085E0 (0x4 bytes), align: 0
  Segment part 173.           Intra module refs:   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008583 - 0000858A (0x8 bytes), align: 0
  Segment part 174.           Intra module refs:   Segment part 32

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_constData

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,CODE_C> 1 (was CODE_C)
  Relative segment, address: CODE 00003194 - 00003197 (0x4 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           savedTxPowerSetting     00003194        llFindTxPowerSettings (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was CODE_C)
  Relative segment, address: CODE 00003190 - 00003193 (0x4 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ptmFreqTune             00003190        LL_PowerOnReq (ll_sleep)
                                                   llRfInit (ll_common)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_enc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D7 - 000000D7 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_DecryptMsg
                                                   LL_ENC_Encrypt
                                                   LL_ENC_EncryptMsg
                                                   LL_ENC_GenerateMIC
                                                   LL_ENC_MoveData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAREQ                  000000D7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005C5 - 000005E4 (0x20 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dataPkt                 000005C5        llProcessRxData (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005E5 - 000005F0 (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   LL_ENC_GenDeviceIV
                                                   LL_ENC_GenDeviceSKD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cachedTRNGdata          000005E5        LL_Init (ll)
                                                   llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000820B - 0000822A (0x20 bytes), align: 0
  Segment part 16.            Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_DecryptMsg
                                                   LL_ENC_Encrypt
                                                   LL_ENC_EncryptMsg
                                                   LL_ENC_GenerateMIC
                                                   LL_ENC_LoadEmptyIV
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zeroBlock               0000820B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011C2E - 00011C7B (0x4e bytes), align: 0
  Segment part 17.            Intra module refs:   LL_ENC_ReverseBytes::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_ReverseBytes     00011C2E 
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011C7C - 00011C87 (0xc bytes), align: 0
  Segment part 19.            Intra module refs:   LL_ENC_GeneratePseudoRandNum::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GeneratePseudoRandNum
                                   00011C7C 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011C88 - 00011D60 (0xd9 bytes), align: 0
  Segment part 21.            Intra module refs:   LL_ENC_GenerateTrueRandNum::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateTrueRandNum
                                   00011C88 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011D61 - 00011D65 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   LL_ENC_GenerateTrueRandNum
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011D66 - 00011D96 (0x31 bytes), align: 0
  Segment part 24.            Intra module refs:   LL_ENC_GenDeviceSKD::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceSKD     00011D66 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011D97 - 00011DC7 (0x31 bytes), align: 0
  Segment part 26.            Intra module refs:   LL_ENC_GenDeviceIV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceIV      00011D97 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011DC8 - 00011E3F (0x78 bytes), align: 0
  Segment part 30.            Intra module refs:   LL_ENC_AES128_Encrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_AES128_Encrypt   00011DC8 
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011E40 - 00011E40 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   LL_ENC_InitAesDMA
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011E41 - 00011E47 (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   LL_ENC_AES128_Encrypt
                                                   LL_ENC_GenDeviceIV
                                                   LL_ENC_GenDeviceSKD
                                                   LL_ENC_GeneratePseudoRandNum
                                                   LL_ENC_LoadEmptyIV
                                                   LL_ENC_MoveData
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011E48 - 00011E7F (0x38 bytes), align: 0
  Segment part 36.            Intra module refs:   LL_ENC_InitAesDMA::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_InitAesDMA       00011E48 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011E80 - 00011ED1 (0x52 bytes), align: 0
  Segment part 40.            Intra module refs:   LL_ENC_MoveData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_MoveData         00011E80 
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011ED2 - 00011F0E (0x3d bytes), align: 0
  Segment part 48.            Intra module refs:   LL_ENC_LoadEmptyIV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_LoadEmptyIV      00011ED2 
               XSTACK = 0000002B ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011F0F - 00012121 (0x213 bytes), align: 0
  Segment part 52.            Intra module refs:   LL_ENC_EncryptMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_EncryptMsg       00011F0F 
               XSTACK = 0000001A ( 0000002A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012122 - 00012126 (0x5 bytes), align: 0
  Segment part 54.            Intra module refs:   LL_ENC_DecryptMsg
                                                   LL_ENC_EncryptMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012127 - 0001212B (0x5 bytes), align: 0
  Segment part 55.            Intra module refs:   LL_ENC_ReverseBytes
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001212C - 00012351 (0x226 bytes), align: 0
  Segment part 56.            Intra module refs:   LL_ENC_DecryptMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_DecryptMsg       0001212C 
               XSTACK = 0000001E ( 0000002A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012352 - 0001253C (0x1eb bytes), align: 0
  Segment part 58.            Intra module refs:   LL_ENC_GenerateMIC::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateMIC      00012352 
               calls direct
               XSTACK = 00000020 ( 0000002B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001253D - 0001271E (0x1e2 bytes), align: 0
  Segment part 60.            Intra module refs:   LL_ENC_Encrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Encrypt          0001253D 
               calls direct
               XSTACK = 00000002 ( 0000001C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001271F - 00012726 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_Encrypt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012727 - 00012A01 (0x2db bytes), align: 0
  Segment part 63.            Intra module refs:   LL_ENC_Decrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Decrypt          00012727 
               calls direct
               XSTACK = 00000002 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C84 - 00000C89 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_ReverseBytes::?relay
                                   00000C84        llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llSetupEncRsp (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C8A - 00000C8F (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GeneratePseudoRandNum::?relay
                                   00000C8A        LL_PseudoRand (ll)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C90 - 00000C95 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateTrueRandNum::?relay
                                   00000C90        LL_Init (ll)
                                                   LL_Rand (ll)
                                                   llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C96 - 00000C9B (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceSKD::?relay
                                   00000C96        llProcessSlaveControlPacket (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C9C - 00000CA1 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceIV::?relay
                                   00000C9C        llProcessSlaveControlPacket (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CA2 - 00000CA7 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_AES128_Encrypt::?relay
                                   00000CA2        LL_Encrypt (ll)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CA8 - 00000CAD (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_InitAesDMA::?relay
                                   00000CA8        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CAE - 00000CB3 (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_MoveData::?relay
                                   00000CAE        llProcessRxData (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CB4 - 00000CB9 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   LL_ENC_GenerateMIC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_LoadEmptyIV::?relay
                                   00000CB4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CBA - 00000CBF (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   LL_ENC_Encrypt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_EncryptMsg::?relay
                                   00000CBA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CC0 - 00000CC5 (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   LL_ENC_Decrypt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_DecryptMsg::?relay
                                   00000CC0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CC6 - 00000CCB (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_Encrypt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateMIC::?relay
                                   00000CC6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CCC - 00000CD1 (0x6 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Encrypt::?relay
                                   00000CCC        llSetupFeatureSetRsp (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llWriteTxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CD2 - 00000CD7 (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Decrypt::?relay
                                   00000CD2        llProcessRxData (ll_common)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000820B - 0000822A (0x20 bytes), align: 0
  Segment part 65.            Intra module refs:   zeroBlock

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_errorEndCauses

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FFF8 - 0000FFFA (0x3 bytes), align: 0
  Segment part 6.             Intra module refs:   llUnexpectedEndCauseHandler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUnexpectedEndCauseHandler
                                   0000FFF8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CD8 - 00000CDD (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUnexpectedEndCauseHandler::?relay
                                   00000CD8        Segment part 57 (ll)
                                                   Segment part 59 (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : ll_halt

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00002714 - 0000271A (0x7 bytes), align: 2
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HaltMcuUsingPhyFlag     00002714        llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: DATA 00000021 - 00000022 (0x2 bytes), align: 0
  Segment part 1.             Intra module refs:   HaltMcuUsingPhyFlag
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           phyState                00000021        LL_Reset (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   llT2OVFC1_ISR (ll_isr)
           clkState                00000022        llT2OVFC1_ISR (ll_isr)

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : ll_isr

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000091 - 00000091 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   LL_SetAdvControl (ll)
                                                   RF_NormalIsr
                                                   llClearSetInts (ll_common)
                                                   llScheduleTask (ll_scheduler)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF1                 00000091 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009B - 0000009B (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   RF_NormalIsr
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   0000009B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009F - 0000009F (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   LL_Init (ll)
                                                   RF_NormalIsr
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FMAP                    0000009F 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A1 - 000000A1 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   T2_Isr
                                                   llDisableT2Ints (ll_timer2)
                                                   llDisableT2IntsEvts (ll_timer2)
                                                   llInitTimer2 (ll_timer2)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2IRQF                  000000A1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A7 - 000000A7 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   T2_Isr
                                                   llDisableT2Ints (ll_timer2)
                                                   llDisableT2IntsEvts (ll_timer2)
                                                   llInitTimer2 (ll_timer2)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2IRQM                  000000A7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalFlashRead (hal_flash)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_Reset (ll)
                                                   LL_SetAdvControl (ll)
                                                   LL_TxData (ll)
                                                   Onboard_soft_reset (OnBoard)
                                                   RF_NormalIsr
                                                   halDmaIsr (hal_dma)
                                                   halKeyPort0Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   halSetSleepMode (hal_sleep)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   halSleepTimerIsr (hal_sleep)
                                                   halUart0TxIsr (hal_uart)
                                                   llClearSetInts (ll_common)
                                                   llConnCleanup (ll_common)
                                                   llDequeueCtrlPkt (ll_common)
                                                   llDisableT2E1 (ll_timer2)
                                                   llDisableT2Ints (ll_timer2)
                                                   llDisableT2IntsEvts (ll_timer2)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llEnqueueDataQ (ll_common)
                                                   llGetCurrentTime (ll_timer2)
                                                   llGetFullCTandST (ll_timer2)
                                                   llGetTimer2Capture (ll_timer2)
                                                   llInitTimer2 (ll_timer2)
                                                   llProcessTxData (ll_common)
                                                   llReplaceCtrlPkt (ll_common)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llStartTimer2 (ll_timer2)
                                                   llStopTimer2 (ll_timer2)
                                                   llT2OVFC1_ISR
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   main (SimpleBLEPeripheral_Main)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_clear_event (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_int_disable (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_push (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   port0Isr (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   halSleep (hal_sleep)
                                                   llT2OVFC1_ISR
                                                   main (SimpleBLEPeripheral_Main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPCMD                000000BE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BF - 000000BF (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   RF_ErrorIsr
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llClearSetInts (ll_common)
                                                   llSlaveEvt_TaskAbort (ll_slaveEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFERRF                  000000BF 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llRfInit (ll_common)
                                                   llSetFreqTune (ll_common)
                                                   llT2OVFC1_ISR
                                                   main (SimpleBLEPeripheral_Main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               000000C6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E9 - 000000E9 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   RF_NormalIsr
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF0                 000000E9 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000271B - 00002897 (0x17d bytes), align: 0
  Segment part 19.            Intra module refs:   RF_NormalIsr::??INTVEC 131
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_NormalIsr            0000271B 
               interrupt function
               calls direct
               ISTACK = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002898 - 000028A9 (0x12 bytes), align: 0
  Segment part 20.            Intra module refs:   RF_NormalIsr
                                                   T2_Isr
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000028AA - 000028AE (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   RF_ErrorIsr
                                                   Segment part 20
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000028AF - 00002921 (0x73 bytes), align: 0
  Segment part 22.            Intra module refs:   RF_ErrorIsr::??INTVEC 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_ErrorIsr             000028AF 
               interrupt function
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002922 - 00002986 (0x65 bytes), align: 0
  Segment part 23.            Intra module refs:   T2_Isr::??INTVEC 83
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2_Isr                  00002922 
               interrupt function
               calls direct
               ISTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002987 - 00002A0A (0x84 bytes), align: 0
  Segment part 24.            Intra module refs:   T2_Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llT2OVFC1_ISR           00002987 
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000005 (0x6 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_ErrorIsr::??INTVEC 3
                                   00000003 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000055 (0x56 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2_Isr::??INTVEC 83     00000053 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000085 (0x86 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_NormalIsr::??INTVEC 131
                                   00000083 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_math

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: DATA 00000023 - 00000028 (0x6 bytes), align: 0
  Segment part 0.             Intra module refs:   llDivide31By16To16
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002A0C - 00002A5C (0x51 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDivide31By16To16      00002A0C        LL_TxData (ll)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_scheduler

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000005F1 - 00000625 (0x35 bytes), align: 0
  Segment part 8.             Intra module refs:   llAllocTask
                                                   llFindNextSecTask
                                                   llFreeTask
                                                   llGetActiveTasks
                                                   llGetCurrentTask
                                                   llGetNumTasks
                                                   llGetTaskState
                                                   llScheduleTask
                                                   llScheduler
                                                   llSchedulerInit
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000626 - 000007AF (0x18a bytes), align: 0
  Segment part 9.             Intra module refs:   llRestoreConnState
                                                   llScheduler
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009BA2 - 00009BD1 (0x30 bytes), align: 0
  Segment part 10.            Intra module refs:   llSchedulerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSchedulerInit         00009BA2 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009BD2 - 0000A2AA (0x6d9 bytes), align: 0
  Segment part 12.            Intra module refs:   llScheduler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduler             00009BD2 
               calls direct
               XSTACK = 00000000 ( 0000001E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A2AB - 0000A42A (0x180 bytes), align: 0
  Segment part 14.            Intra module refs:   llScheduleTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduleTask          0000A2AB 
               calls direct
               XSTACK = 0000001A ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A42B - 0000A42F (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   llFindNextSecTask
                                                   llScheduleTask
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A430 - 0000AA2C (0x5fd bytes), align: 0
  Segment part 19.            Intra module refs:   llFindNextSecTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindNextSecTask       0000A430 
               calls direct
               XSTACK = 0000001A ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AA2D - 0000AB0F (0xe3 bytes), align: 0
  Segment part 21.            Intra module refs:   llAllocTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocTask             0000AA2D 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AB10 - 0000AB14 (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   llAllocTask
                                                   llSave_rxFIFO
                                                   llSave_txFIFO
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AB15 - 0000AB51 (0x3d bytes), align: 0
  Segment part 25.            Intra module refs:   llFreeTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFreeTask              0000AB15 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AB52 - 0000AB6B (0x1a bytes), align: 0
  Segment part 27.            Intra module refs:   llGetCurrentTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTask        0000AB52 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AB6C - 0000AB6D (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   llGetActiveTasks
                                                   llGetNumTasks
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AB6E - 0000AB74 (0x7 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 29
                                                   llFreeTask
                                                   llGetCurrentTask
                                                   llGetTaskState
                                                   llSchedulerInit
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AB75 - 0000ABA5 (0x31 bytes), align: 0
  Segment part 31.            Intra module refs:   llGetTaskState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTaskState          0000AB75 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ABA6 - 0000ABAE (0x9 bytes), align: 0
  Segment part 33.            Intra module refs:   llGetActiveTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetActiveTasks        0000ABA6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ABAF - 0000ABB8 (0xa bytes), align: 0
  Segment part 37.            Intra module refs:   llGetNumTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNumTasks           0000ABAF 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ABB9 - 0000ACA6 (0xee bytes), align: 0
  Segment part 39.            Intra module refs:   llSave_txFIFO::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_txFIFO           0000ABB9 
               calls direct
               XSTACK = 0000001A ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ACA7 - 0000AD9C (0xf6 bytes), align: 0
  Segment part 41.            Intra module refs:   llSave_rxFIFO::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_rxFIFO           0000ACA7 
               calls direct
               XSTACK = 0000001A ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AD9D - 0000AFB4 (0x218 bytes), align: 0
  Segment part 53.            Intra module refs:   llRestoreConnState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestoreConnState      0000AD9D 
               calls direct
               XSTACK = 0000001A ( 00000010 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CDE - 00000CE3 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSchedulerInit::?relay
                                   00000CDE        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CE4 - 00000CE9 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduler::?relay     00000CE4        LL_SetAdvControl (ll)
                                                   Segment part 19 (ll_advEndCauses)
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llConnTerminate (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CEA - 00000CEF (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduleTask::?relay
                                   00000CEA        LL_TxData (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CF0 - 00000CF5 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindNextSecTask::?relay
                                   00000CF0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CF6 - 00000CFB (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocTask::?relay     00000CF6        LL_SetAdvControl (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CFC - 00000D01 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFreeTask::?relay      00000CFC        LL_SetAdvControl (ll)
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llConnCleanup (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D02 - 00000D07 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTask::?relay
                                   00000D02        LL_PowerOnReq (ll_sleep)
                                                   LL_Rand (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D08 - 00000D0D (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTaskState::?relay
                                   00000D08        llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D0E - 00000D13 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetActiveTasks::?relay
                                   00000D0E        LL_SetAdvControl (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D14 - 00000D19 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNumTasks::?relay   00000D14        LL_SetAdvControl (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D1A - 00000D1F (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_txFIFO::?relay   00000D1A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D20 - 00000D25 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_rxFIFO::?relay   00000D20 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D26 - 00000D2B (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestoreConnState::?relay
                                   00000D26 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_slaveEndCauses

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008693 - 00008A91 (0x3ff bytes), align: 0
  Segment part 9.             Intra module refs:   llSlaveEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskEndOk    00008693 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008A92 - 00008A97 (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   llSlaveEvt_TaskAbort::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskAbort    00008A92 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008A98 - 000091D2 (0x73b bytes), align: 0
  Segment part 13.            Intra module refs:   llSetupNextSlaveEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNextSlaveEvent   00008A98 
               calls direct
               XSTACK = 0000000C ( 0000001A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000091D3 - 000096E6 (0x514 bytes), align: 0
  Segment part 15.            Intra module refs:   llProcessSlaveControlPacket::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessSlaveControlPacket
                                   000091D3 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000096E7 - 000096EB (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   llProcessSlaveControlPacket
                                                   llSetupNextSlaveEvent
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000096EC - 00009BA1 (0x4b6 bytes), align: 0
  Segment part 18.            Intra module refs:   llProcessSlaveControlProcedures::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessSlaveControlProcedures
                                   000096EC 
               calls direct
               XSTACK = 0000000C ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D2C - 00000D31 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskEndOk::?relay
                                   00000D2C        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D32 - 00000D37 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskAbort::?relay
                                   00000D32        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D38 - 00000D3D (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   llSlaveEvt_TaskEndOk
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNextSlaveEvent::?relay
                                   00000D38 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D3E - 00000D43 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessSlaveControlPacket::?relay
                                   00000D3E        llProcessRxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D44 - 00000D49 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   llSlaveEvt_TaskEndOk
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessSlaveControlProcedures::?relay
                                   00000D44 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_sleep

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00002A5D - 00002C19 (0x1bd bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TimeToNextRfEvent    00002A5D        halSleep (hal_sleep)
               calls direct
               XSTACK = 00000000 ( 0000001F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002C1A - 00002CAD (0x94 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PowerOffReq          00002C1A        halSleep (hal_sleep)
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002CAE - 00002CB2 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   LL_PowerOffReq
                                                   LL_PowerOnReq
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002CB3 - 00002D82 (0xd0 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PowerOnReq           00002CB3        halSleep (hal_sleep)
               calls direct
               XSTACK = 00000000 ( 00000009 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_timer2

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000094 - 00000094 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   llInitTimer2
                                                   llStartTimer2
                                                   llStopTimer2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CTRL                  00000094 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009C - 0000009C (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   llDisableT2E1
                                                   llDisableT2IntsEvts
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2OVFC2Event2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CSPCFG                0000009C 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A2 - 000000A2 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2M0                    000000A2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A3 - 000000A3 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2M1                    000000A3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A4 - 000000A4 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MOVF0                 000000A4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A5 - 000000A5 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MOVF1                 000000A5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A6 - 000000A6 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MOVF2                 000000A6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C3 - 000000C3 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MSEL                  000000C3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A156 - 0001A1EB (0x96 bytes), align: 0
  Segment part 20.            Intra module refs:   llInitTimer2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitTimer2            0001A156 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A1EC - 0001A1FB (0x10 bytes), align: 0
  Segment part 22.            Intra module refs:   llStopTimer2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStopTimer2            0001A1EC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A1FC - 0001A201 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   llStartTimer2
                                                   llStopTimer2
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A202 - 0001A213 (0x12 bytes), align: 0
  Segment part 25.            Intra module refs:   llStartTimer2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartTimer2           0001A202 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A214 - 0001A21D (0xa bytes), align: 0
  Segment part 29.            Intra module refs:   llSetT2C1Event1
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A21E - 0001A255 (0x38 bytes), align: 0
  Segment part 30.            Intra module refs:   llGetCurrentTime
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A256 - 0001A257 (0x2 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 30
                                                   Segment part 45
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A258 - 0001A25A (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A25B - 0001A261 (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
                                                   Segment part 70
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A262 - 0001A273 (0x12 bytes), align: 0
  Segment part 36.            Intra module refs:   ll_McuPrecisionCount
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A274 - 0001A277 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 29
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A278 - 0001A2E2 (0x6b bytes), align: 0
  Segment part 42.            Intra module refs:   llSetT2LongC1Timeout::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Timeout    0001A278 
               XSTACK = 00000002 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A2E3 - 0001A2EB (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A2EC - 0001A329 (0x3e bytes), align: 0
  Segment part 48.            Intra module refs:   llSetT2C1Event1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C1Event1         0001A2EC 
               XSTACK = 00000000 ( 00000002 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A32A - 0001A39D (0x74 bytes), align: 0
  Segment part 52.            Intra module refs:   llSetT2LongC1Event1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Event1     0001A32A 
               XSTACK = 00000002 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A39E - 0001A416 (0x79 bytes), align: 0
  Segment part 54.            Intra module refs:   llSetT2OVFC2Event2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC2Event2      0001A39E 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A417 - 0001A41F (0x9 bytes), align: 0
  Segment part 58.            Intra module refs:   llDisableT2Ints::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2Ints         0001A417 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A420 - 0001A42B (0xc bytes), align: 0
  Segment part 60.            Intra module refs:   llDisableT2IntsEvts::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2IntsEvts     0001A420 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A42C - 0001A434 (0x9 bytes), align: 0
  Segment part 62.            Intra module refs:   llDisableT2E1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2E1           0001A42C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A435 - 0001A437 (0x3 bytes), align: 0
  Segment part 64.            Intra module refs:   llDisableT2Ints
                                                   llDisableT2IntsEvts
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A438 - 0001A43B (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 64
                                                   llDisableT2E1
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A43C - 0001A440 (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 24
                                                   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A441 - 0001A44C (0xc bytes), align: 0
  Segment part 67.            Intra module refs:   llGetTimer2Capture::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTimer2Capture      0001A441 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A44D - 0001A46F (0x23 bytes), align: 0
  Segment part 69.            Intra module refs:   llGetTimer2Capture
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A470 - 0001A47E (0xf bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   llGetFullCTandST
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A47F - 0001A494 (0x16 bytes), align: 0
  Segment part 71.            Intra module refs:   llGetCurrentTime::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTime        0001A47F 
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A495 - 0001A4F3 (0x5f bytes), align: 0
  Segment part 77.            Intra module refs:   llGetFullCTandST::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetFullCTandST        0001A495 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002D83 - 00002DD6 (0x54 bytes), align: 0
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll24BitTimeCompare      00002D83        LL_TxData (ll)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
               XSTACK = 00000004 ( 00000013 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002DD7 - 00002DDB (0x5 bytes), align: 0
  Segment part 86.            Intra module refs:   ll24BitTimeCompare
                                                   ll24BitTimeDelta
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002DDC - 00002E30 (0x55 bytes), align: 0
  Segment part 87.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll24BitTimeDelta        00002DDC        LL_TxData (ll)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
               XSTACK = 00000004 ( 00000013 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002E31 - 00002E4A (0x1a bytes), align: 0
  Segment part 90.            Intra module refs:   llAdjustTimeBackward
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002E4B - 00002EB9 (0x6f bytes), align: 0
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustTimeBackward    00002E4B        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
               XSTACK = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4F4 - 0001A523 (0x30 bytes), align: 0
  Segment part 83.            Intra module refs:   ll_McuPrecisionCount::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll_McuPrecisionCount    0001A4F4 
               XSTACK = 00000000 ( 00000002 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D4A - 00000D4F (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitTimer2::?relay    00000D4A        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D50 - 00000D55 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStopTimer2::?relay    00000D50        LL_PowerOffReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D56 - 00000D5B (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartTimer2::?relay   00000D56        LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D5C - 00000D61 (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Timeout::?relay
                                   00000D5C        llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D62 - 00000D67 (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C1Event1::?relay
                                   00000D62        llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D68 - 00000D6D (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Event1::?relay
                                   00000D68        llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D6E - 00000D73 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC2Event2::?relay
                                   00000D6E        llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D74 - 00000D79 (0x6 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2Ints::?relay
                                   00000D74        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D7A - 00000D7F (0x6 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2IntsEvts::?relay
                                   00000D7A        LL_Reset (ll)
                                                   LL_SetAdvControl (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D80 - 00000D85 (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2E1::?relay   00000D80        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D86 - 00000D8B (0x6 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTimer2Capture::?relay
                                   00000D86        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D8C - 00000D91 (0x6 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTime::?relay
                                   00000D8C        LL_SetAdvControl (ll)
                                                   LL_TxData (ll)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAllocTask (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D92 - 00000D97 (0x6 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetFullCTandST::?relay
                                   00000D92        LL_TimeToNextRfEvent (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D98 - 00000D9D (0x6 bytes), align: 0
  Segment part 84.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll_McuPrecisionCount::?relay
                                   00000D98        osalTimeUpdate (OSAL_ClockBLE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_timerDrift

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008413 - 00008422 (0x10 bytes), align: 0
  Segment part 6.             Intra module refs:   llCalcScaFactor
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SCA                     00008413 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000859C - 000085A1 (0x6 bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OverheadJitter          0000859C        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002EBA - 00002F0F (0x56 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCalcScaFactor         00002EBA        llAdvEvt_TaskConnect (ll_advEndCauses)
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002F10 - 00002FCE (0xbf bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCalcTimerDrift        00002F10        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
               calls direct
               XSTACK = 00000006 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008413 - 00008422 (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   SCA
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000859C - 000085A1 (0x6 bytes), align: 2
  Segment part 11.            Intra module refs:   OverheadJitter

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : phy

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007B0 - 000007B0 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   PHY_AddWlEntry
                                                   PHY_ClearWhitelist
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numWLEntries            000007B0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000198ED - 000198F9 (0xd bytes), align: 0
  Segment part 12.            Intra module refs:   PHY_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Init                000198ED 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000198FA - 00019913 (0x1a bytes), align: 0
  Segment part 18.            Intra module refs:   PHY_Reset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Reset               000198FA 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019914 - 00019942 (0x2f bytes), align: 0
  Segment part 25.            Intra module refs:   PHY_ClearAllRegsAndFifos::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearAllRegsAndFifos
                                   00019914 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019943 - 00019947 (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   PHY_ClearAllRegsAndFifos
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019948 - 00019952 (0xb bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019953 - 00019990 (0x3e bytes), align: 0
  Segment part 33.            Intra module refs:   PHY_SetOwnAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetOwnAddr          00019953 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019991 - 000199CE (0x3e bytes), align: 0
  Segment part 35.            Intra module refs:   PHY_SetPeerAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetPeerAddr         00019991 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000199CF - 000199D7 (0x9 bytes), align: 0
  Segment part 37.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000199D8 - 000199DC (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000199DD - 000199E1 (0x5 bytes), align: 0
  Segment part 39.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000199E2 - 000199E7 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000199E8 - 000199EC (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 39
                                                   Segment part 40
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000199ED - 000199F5 (0x9 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 38
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000199F6 - 00019A03 (0xe bytes), align: 0
  Segment part 43.            Intra module refs:   PHY_SetCRCInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetCRCInit          000199F6 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A04 - 00019A0A (0x7 bytes), align: 0
  Segment part 45.            Intra module refs:   PHY_SetCRCInit
                                                   PHY_SetSyncWord
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A0B - 00019A15 (0xb bytes), align: 0
  Segment part 46.            Intra module refs:   PHY_GetAdvChans::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetAdvChans         00019A0B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A16 - 00019A22 (0xd bytes), align: 0
  Segment part 48.            Intra module refs:   PHY_SetAdvChans::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvChans         00019A16 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002FCF - 00002FD7 (0x9 bytes), align: 0
  Segment part 238.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetDataChan         00002FCF        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetNextDataChan (ll_common)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002FD8 - 00002FDC (0x5 bytes), align: 0
  Segment part 239.           Intra module refs:   PHY_SetDataChan
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A23 - 00019A39 (0x17 bytes), align: 0
  Segment part 50.            Intra module refs:   PHY_SetEndConnection::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetEndConnection    00019A23 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A3A - 00019A47 (0xe bytes), align: 0
  Segment part 52.            Intra module refs:   PHY_ConfigureMD::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureMD         00019A3A 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A48 - 00019A52 (0xb bytes), align: 0
  Segment part 60.            Intra module refs:   PHY_GetEndCause::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetEndCause         00019A48 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A53 - 00019A5E (0xc bytes), align: 0
  Segment part 64.            Intra module refs:   PHY_InitSeqStat::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_InitSeqStat         00019A53 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A5F - 00019A6D (0xf bytes), align: 0
  Segment part 70.            Intra module refs:   PHY_SetSyncWord::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetSyncWord         00019A5F 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A6E - 00019A78 (0xb bytes), align: 0
  Segment part 72.            Intra module refs:   PHY_SetMaxNack::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetMaxNack          00019A6E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A79 - 00019A91 (0x19 bytes), align: 0
  Segment part 74.            Intra module refs:   PHY_ClearWhitelist::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWhitelist      00019A79 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A92 - 00019A92 (0x1 bytes), align: 0
  Segment part 80.            Intra module refs:   PHY_ClearBlacklistIndex
                                                   PHY_SetBlacklistIndex
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A93 - 00019A97 (0x5 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A98 - 00019A9B (0x4 bytes), align: 0
  Segment part 86.            Intra module refs:   PHY_GetAdvChans
                                                   PHY_GetEndCause
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A9C - 00019B35 (0x9a bytes), align: 0
  Segment part 89.            Intra module refs:   PHY_AddWlEntry::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_AddWlEntry          00019A9C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019B36 - 00019B42 (0xd bytes), align: 0
  Segment part 94.            Intra module refs:   PHY_AddWlEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019B43 - 00019B52 (0x10 bytes), align: 0
  Segment part 95.            Intra module refs:   PHY_SetAdvWlPolicy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvWlPolicy      00019B43 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019B53 - 00019B6C (0x1a bytes), align: 0
  Segment part 101.           Intra module refs:   PHY_SetBlacklistIndex::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBlacklistIndex   00019B53 
               XSTACK = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019B6D - 00019B89 (0x1d bytes), align: 0
  Segment part 106.           Intra module refs:   PHY_ClearBlacklistIndex::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklistIndex
                                   00019B6D 
               XSTACK = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019B8A - 00019B94 (0xb bytes), align: 0
  Segment part 108.           Intra module refs:   PHY_ClearBlacklist::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklist      00019B8A 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019B95 - 00019B9A (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   phyFindWlEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019B9B - 00019B9F (0x5 bytes), align: 0
  Segment part 118.           Intra module refs:   PHY_ClearSavedWhiteList
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BA0 - 00019BA5 (0x6 bytes), align: 0
  Segment part 119.           Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
                                                   Segment part 118
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BA6 - 00019BBB (0x16 bytes), align: 0
  Segment part 121.           Intra module refs:   PHY_ClearSavedWhiteList::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearSavedWhiteList
                                   00019BA6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BBC - 00019BC1 (0x6 bytes), align: 0
  Segment part 123.           Intra module refs:   PHY_ClearSavedWhiteList
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BC2 - 00019BC5 (0x4 bytes), align: 0
  Segment part 131.           Intra module refs:   PHY_AddWlEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BC6 - 00019BCA (0x5 bytes), align: 0
  Segment part 132.           Intra module refs:   Segment part 131
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BCB - 00019BD5 (0xb bytes), align: 0
  Segment part 134.           Intra module refs:   PHY_ConfigureFifoDataProcessing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureFifoDataProcessing
                                   00019BCB 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BD6 - 00019BEA (0x15 bytes), align: 0
  Segment part 136.           Intra module refs:   PHY_ConfigureAppendRfStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureAppendRfStatus
                                   00019BD6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BEB - 00019BF5 (0xb bytes), align: 0
  Segment part 138.           Intra module refs:   PHY_SetFifoConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetFifoConfig       00019BEB 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BF6 - 00019BFE (0x9 bytes), align: 0
  Segment part 150.           Intra module refs:   PHY_SetSyncWord
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019BFF - 00019C5F (0x61 bytes), align: 0
  Segment part 151.           Intra module refs:   PHY_ConfigWhitener::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigWhitener      00019BFF 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019C60 - 00019C65 (0x6 bytes), align: 0
  Segment part 165.           Intra module refs:   PHY_RetryTxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryTxFifo         00019C60 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019C66 - 00019C6B (0x6 bytes), align: 0
  Segment part 167.           Intra module refs:   PHY_RetryRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryRxFifo         00019C66 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019C6C - 00019C71 (0x6 bytes), align: 0
  Segment part 171.           Intra module refs:   PHY_CommitRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CommitRxFifo        00019C6C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019C72 - 00019C77 (0x6 bytes), align: 0
  Segment part 175.           Intra module refs:   PHY_DeallocateRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_DeallocateRxFifo    00019C72 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019C78 - 00019C79 (0x2 bytes), align: 0
  Segment part 180.           Intra module refs:   PHY_ClearAllRegsAndFifos
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019C7A - 00019C7A (0x1 bytes), align: 0
  Segment part 181.           Intra module refs:   Segment part 180
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019C7B - 00019C7B (0x1 bytes), align: 0
  Segment part 182.           Intra module refs:   Segment part 181
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019C7C - 00019C7C (0x1 bytes), align: 0
  Segment part 183.           Intra module refs:   PHY_ClearBlacklist
                                                   PHY_ConfigureAppendRfStatus
                                                   PHY_ConfigureFifoDataProcessing
                                                   PHY_ConfigureMD
                                                   PHY_InitSeqStat
                                                   PHY_SetAdvChans
                                                   PHY_SetAdvWlPolicy
                                                   PHY_SetEndConnection
                                                   PHY_SetFifoConfig
                                                   PHY_SetMaxNack
                                                   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
                                                   PHY_SetRfFreq
                                                   Segment part 123
                                                   Segment part 182
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019C7D - 00019C83 (0x7 bytes), align: 0
  Segment part 184.           Intra module refs:   PHY_ClearWhitelist
                                                   PHY_ConfigWhitener
                                                   PHY_Init
                                                   PHY_Reset
                                                   Segment part 183
                                                   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019C84 - 00019C89 (0x6 bytes), align: 0
  Segment part 212.           Intra module refs:   Segment part 132
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019C8A - 00019CBC (0x33 bytes), align: 0
  Segment part 218.           Intra module refs:   PHY_SetRfFreq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetRfFreq           00019C8A 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019CBD - 00019D34 (0x78 bytes), align: 0
  Segment part 220.           Intra module refs:   phyFindWlEntry::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           phyFindWlEntry          00019CBD 
               XSTACK = 0000000C ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019D35 - 00019D39 (0x5 bytes), align: 0
  Segment part 222.           Intra module refs:   phyFindWlEntry
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D9E - 00000DA3 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Init::?relay        00000D9E        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DA4 - 00000DA9 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   PHY_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Reset::?relay       00000DA4        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DAA - 00000DAF (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   PHY_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearAllRegsAndFifos::?relay
                                   00000DAA        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DB0 - 00000DB5 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetOwnAddr::?relay
                                   00000DB0        llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DB6 - 00000DBB (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetPeerAddr::?relay
                                   00000DB6        llSetupDirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DBC - 00000DC1 (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetCRCInit::?relay
                                   00000DBC        LL_Reset (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DC2 - 00000DC7 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetAdvChans::?relay
                                   00000DC2        llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DC8 - 00000DCD (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvChans::?relay
                                   00000DC8        llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DCE - 00000DD3 (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetEndConnection::?relay
                                   00000DCE        RF_NormalIsr (ll_isr)
                                                   llConnCleanup (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DD4 - 00000DD9 (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureMD::?relay
                                   00000DD4        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DDA - 00000DDF (0x6 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetEndCause::?relay
                                   00000DDA        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DE0 - 00000DE5 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_InitSeqStat::?relay
                                   00000DE0        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DE6 - 00000DEB (0x6 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetSyncWord::?relay
                                   00000DE6        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DEC - 00000DF1 (0x6 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetMaxNack::?relay
                                   00000DEC        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupVersionIndReq (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DF2 - 00000DF7 (0x6 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWhitelist::?relay
                                   00000DF2        LL_ClearWhiteList (ll)
                                                   LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DF8 - 00000DFD (0x6 bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_AddWlEntry::?relay
                                   00000DF8        LL_AddWhiteListDevice (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DFE - 00000E03 (0x6 bytes), align: 0
  Segment part 96.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvWlPolicy::?relay
                                   00000DFE        LL_SetAdvParam (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E04 - 00000E09 (0x6 bytes), align: 0
  Segment part 102.           Intra module refs:   PHY_AddWlEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBlacklistIndex::?relay
                                   00000E04 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E0A - 00000E0F (0x6 bytes), align: 0
  Segment part 107.           Intra module refs:   PHY_AddWlEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklistIndex::?relay
                                   00000E0A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E10 - 00000E15 (0x6 bytes), align: 0
  Segment part 109.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklist::?relay
                                   00000E10        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E16 - 00000E1B (0x6 bytes), align: 0
  Segment part 122.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearSavedWhiteList::?relay
                                   00000E16        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E1C - 00000E21 (0x6 bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureFifoDataProcessing::?relay
                                   00000E1C        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E22 - 00000E27 (0x6 bytes), align: 0
  Segment part 137.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureAppendRfStatus::?relay
                                   00000E22        LL_Reset (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E28 - 00000E2D (0x6 bytes), align: 0
  Segment part 139.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetFifoConfig::?relay
                                   00000E28        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E2E - 00000E33 (0x6 bytes), align: 0
  Segment part 152.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigWhitener::?relay
                                   00000E2E        llRfInit (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E34 - 00000E39 (0x6 bytes), align: 0
  Segment part 166.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryTxFifo::?relay
                                   00000E34        llSave_txFIFO (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E3A - 00000E3F (0x6 bytes), align: 0
  Segment part 168.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryRxFifo::?relay
                                   00000E3A        llProcessRxData (ll_common)
                                                   llSave_rxFIFO (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E40 - 00000E45 (0x6 bytes), align: 0
  Segment part 172.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CommitRxFifo::?relay
                                   00000E40        llSave_rxFIFO (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E46 - 00000E4B (0x6 bytes), align: 0
  Segment part 176.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_DeallocateRxFifo::?relay
                                   00000E46        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llProcessRxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E4C - 00000E51 (0x6 bytes), align: 0
  Segment part 219.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetRfFreq::?relay   00000E4C        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E52 - 00000E57 (0x6 bytes), align: 0
  Segment part 221.           Intra module refs:   PHY_AddWlEntry
           LOCAL                   ADDRESS         
           =====                   =======         
           phyFindWlEntry::?relay
                                   00000E52 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_mgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007B1 - 000007B2 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   Segment part 30
                                                   Segment part 39
                                                   smProcessRandComplete
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008443 - 00008452 (0x10 bytes), align: 0
  Segment part 7.             Intra module refs:   generate_subkey
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010000 - 00010004 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   sm_xor
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010005 - 00010088 (0x84 bytes), align: 0
  Segment part 13.            Intra module refs:   SM_CalcRandomAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_CalcRandomAddr       00010005 
               calls direct
               XSTACK = 00000000 ( 00000011 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010089 - 0001012F (0xa7 bytes), align: 0
  Segment part 15.            Intra module refs:   SM_ResolveRandomAddrs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResolveRandomAddrs   00010089 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010130 - 00010132 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   SM_CalcRandomAddr
                                                   SM_ResolveRandomAddrs
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010133 - 00010137 (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   smGenerateRandBuf
                                                   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010138 - 0001028C (0x155 bytes), align: 0
  Segment part 21.            Intra module refs:   SM_GenerateAuthenSig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_GenerateAuthenSig    00010138 
               calls direct
               XSTACK = 00000000 ( 00000032 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001028D - 00010296 (0xa bytes), align: 0
  Segment part 23.            Intra module refs:   SM_GenerateAuthenSig
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010297 - 000104AF (0x219 bytes), align: 0
  Segment part 24.            Intra module refs:   SM_VerifyAuthenSig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_VerifyAuthenSig      00010297 
               calls direct
               XSTACK = 00000003 ( 0000003F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000104B0 - 000104B7 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   SM_VerifyAuthenSig
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000104B8 - 00010591 (0xda bytes), align: 0
  Segment part 27.            Intra module refs:   smProcessRandComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessRandComplete   000104B8 
               calls direct
               XSTACK = 00000000 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010592 - 00010597 (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   SM_VerifyAuthenSig
                                                   smProcessRandComplete
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010598 - 0001059D (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001059E - 000105A3 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 30
                                                   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000105A4 - 000105D8 (0x35 bytes), align: 0
  Segment part 32.            Intra module refs:   smStartRspTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartRspTimer         000105A4 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000105D9 - 000105E8 (0x10 bytes), align: 0
  Segment part 34.            Intra module refs:   smStopRspTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStopRspTimer          000105D9 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000105E9 - 000105EF (0x7 bytes), align: 0
  Segment part 36.            Intra module refs:   smAuthReqToUint8
                                                   smStopRspTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000105F0 - 000105FA (0xb bytes), align: 0
  Segment part 39.            Intra module refs:   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000105FB - 0001066F (0x75 bytes), align: 0
  Segment part 42.            Intra module refs:   sm_ah::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_ah                   000105FB 
               calls direct
               XSTACK = 00000014 ( 00000040 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010670 - 00010683 (0x14 bytes), align: 0
  Segment part 44.            Intra module refs:   sm_ah
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010684 - 0001068A (0x7 bytes), align: 0
  Segment part 45.            Intra module refs:   sm_s1
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001068B - 0001069F (0x15 bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
                                                   sm_ah
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000106A0 - 000106A4 (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 46
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000106A5 - 000106A9 (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 47
                                                   smStartRspTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000106AA - 00010891 (0x1e8 bytes), align: 0
  Segment part 51.            Intra module refs:   sm_c1new::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1new                000106AA 
               calls direct
               XSTACK = 0000000B ( 0000006A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010892 - 00010899 (0x8 bytes), align: 0
  Segment part 53.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
                                                   sm_CMAC
                                                   sm_c1new
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001089A - 000108A1 (0x8 bytes), align: 0
  Segment part 54.            Intra module refs:   Segment part 26
                                                   Segment part 44
                                                   sm_c1new
                                                   sm_s1
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000108A2 - 000108CA (0x29 bytes), align: 0
  Segment part 55.            Intra module refs:   sm_xor::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_xor                  000108A2 
               XSTACK = 00000068 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000108CB - 0001095C (0x92 bytes), align: 0
  Segment part 57.            Intra module refs:   sm_s1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_s1                   000108CB 
               calls direct
               XSTACK = 00000004 ( 00000040 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001095D - 0001098E (0x32 bytes), align: 0
  Segment part 59.            Intra module refs:   smGenerateRandBuf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandBuf       0001095D 
               calls direct
               XSTACK = 0000000F ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001098F - 0001099B (0xd bytes), align: 0
  Segment part 61.            Intra module refs:   smAuthReqToUint8::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smAuthReqToUint8        0001098F 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001099C - 000109ED (0x52 bytes), align: 0
  Segment part 63.            Intra module refs:   smUint8ToAuthReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smUint8ToAuthReq        0001099C 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000109EE - 000109F2 (0x5 bytes), align: 0
  Segment part 65.            Intra module refs:   smEncrypt
                                                   smUint8ToAuthReq
                                                   xor_128
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000109F3 - 00010A18 (0x26 bytes), align: 0
  Segment part 66.            Intra module refs:   smEncrypt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smEncrypt               000109F3 
               calls direct
               XSTACK = 00000068 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010A19 - 00010C7B (0x263 bytes), align: 0
  Segment part 68.            Intra module refs:   sm_CMAC::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_CMAC                 00010A19 
               calls direct
               XSTACK = 0000003D ( 0000002D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C7C - 00010C85 (0xa bytes), align: 0
  Segment part 70.            Intra module refs:   SM_VerifyAuthenSig
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010C86 - 00010D88 (0x103 bytes), align: 0
  Segment part 71.            Intra module refs:   generate_subkey::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           generate_subkey         00010C86 
               calls direct
               XSTACK = 0000002D ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010D89 - 00010DC9 (0x41 bytes), align: 0
  Segment part 73.            Intra module refs:   xor_128::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           xor_128                 00010D89 
               XSTACK = 0000002D ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010DCA - 00010DD2 (0x9 bytes), align: 0
  Segment part 75.            Intra module refs:   smGenerateRandBuf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010DD3 - 00010DD7 (0x5 bytes), align: 0
  Segment part 76.            Intra module refs:   SM_VerifyAuthenSig
                                                   Segment part 75
                                                   sm_CMAC
                                                   xor_128
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010DD8 - 00010DE0 (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   sm_CMAC
                                                   xor_128
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010DE1 - 00010E2E (0x4e bytes), align: 0
  Segment part 78.            Intra module refs:   leftshift_onebit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           leftshift_onebit        00010DE1 
               XSTACK = 00000012 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E58 - 00000E5D (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_CalcRandomAddr::?relay
                                   00000E58        GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E5E - 00000E63 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResolveRandomAddrs::?relay
                                   00000E5E        GAP_ResolvePrivateAddr (gap_devmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E64 - 00000E69 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_GenerateAuthenSig::?relay
                                   00000E64        attSendMsg (att_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E6A - 00000E6F (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_VerifyAuthenSig::?relay
                                   00000E6A        ATT_ParsePacket (att_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E70 - 00000E75 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessRandComplete::?relay
                                   00000E70        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E76 - 00000E7B (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartRspTimer::?relay
                                   00000E76        smProcessDataMsg (sm_pairing)
                                                   smSendSMMsg (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E7C - 00000E81 (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStopRspTimer::?relay
                                   00000E7C        smFreePairingParams (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E82 - 00000E87 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   SM_CalcRandomAddr
                                                   SM_ResolveRandomAddrs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_ah::?relay           00000E82 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E88 - 00000E8D (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1new::?relay        00000E88        sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E8E - 00000E93 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   sm_c1new
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_xor::?relay          00000E8E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E94 - 00000E99 (0x6 bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_s1::?relay           00000E94        smResponderProcessLTKReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E9A - 00000E9F (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   SM_CalcRandomAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandBuf::?relay
                                   00000E9A        GAP_SecParamsInit (gap_configmgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EA0 - 00000EA5 (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smAuthReqToUint8::?relay
                                   00000EA0        smpBuildPairingReqRsp (smp)
                                                   smpBuildSecurityReq (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EA6 - 00000EAB (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smUint8ToAuthReq::?relay
                                   00000EA6        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   smProcessPairingReq (sm_pairing)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   smpParsePairingReq (smp)
                                                   smpParseSecurityReq (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EAC - 00000EB1 (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   sm_ah
                                                   sm_c1new
                                                   sm_s1
           LOCAL                   ADDRESS         
           =====                   =======         
           smEncrypt::?relay       00000EAC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EB2 - 00000EB7 (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_CMAC::?relay         00000EB2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EB8 - 00000EBD (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   sm_CMAC
           LOCAL                   ADDRESS         
           =====                   =======         
           generate_subkey::?relay
                                   00000EB8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EBE - 00000EC3 (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   generate_subkey
                                                   sm_CMAC
           LOCAL                   ADDRESS         
           =====                   =======         
           xor_128::?relay         00000EBE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EC4 - 00000EC9 (0x6 bytes), align: 0
  Segment part 79.            Intra module refs:   generate_subkey
           LOCAL                   ADDRESS         
           =====                   =======         
           leftshift_onebit::?relay
                                   00000EC4 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008443 - 00008452 (0x10 bytes), align: 0
  Segment part 80.            Intra module refs:   Segment part 7

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_pairing

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007B3 - 000007B4 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   SM_PasskeyUpdate
                                                   SM_StartPairing
                                                   Segment part 106
                                                   Segment part 15
                                                   Segment part 18
                                                   Segment part 22
                                                   Segment part 23
                                                   Segment part 52
                                                   Segment part 57
                                                   Segment part 69
                                                   Segment part 72
                                                   Segment part 78
                                                   Segment part 87
                                                   smDetermineKeySize
                                                   smFreePairingParams
                                                   smGenerateConfirm
                                                   smProcessEncryptChange
                                                   smSavePairInfo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pPairingParams          000007B3        Segment part 15 (sm_rsppairing)
                                                   Segment part 16 (sm_rsppairing)
                                                   Segment part 23 (sm_rsppairing)
                                                   Segment part 24 (sm_rsppairing)
                                                   Segment part 27 (sm_rsppairing)
                                                   Segment part 36 (sm_rsppairing)
                                                   Segment part 40 (sm_rsppairing)
                                                   Segment part 46 (sm_rsppairing)
                                                   Segment part 51 (sm_rsppairing)
                                                   Segment part 73 (sm_rsppairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007B5 - 000007B6 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   smNextPairingState
                                                   smProcessDataMsg
                                                   smProcessEncryptChange
                                                   smProcessPairingReq
                                                   smRegisterResponder
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pfnResponderCBs         000007B5        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007B7 - 000007B8 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   smNextPairingState
                                                   smProcessDataMsg
                                                   smProcessEncryptChange
                                                   smStartEncryption
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000822B - 00008243 (0x19 bytes), align: 0
  Segment part 9.             Intra module refs:   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DDCD - 0000DEB4 (0xe8 bytes), align: 0
  Segment part 10.            Intra module refs:   SM_StartPairing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_StartPairing         0000DDCD 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEB5 - 0000DEB7 (0x3 bytes), align: 0
  Segment part 12.            Intra module refs:   SM_StartPairing
                                                   smEndPairing
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEB8 - 0000DEBB (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEBC - 0000DEBF (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   SM_StartPairing
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEC0 - 0000DEC6 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   Segment part 45
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEC7 - 0000DECB (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 15
                                                   Segment part 73
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DECC - 0000DECD (0x2 bytes), align: 0
  Segment part 17.            Intra module refs:   smEndPairing
                                                   smLinkCheck
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DECE - 0000DED0 (0x3 bytes), align: 0
  Segment part 18.            Intra module refs:   SM_PasskeyUpdate
                                                   SM_StartPairing
                                                   Segment part 17
                                                   smFreePairingParams
                                                   smGeneratePairingReqRsp
                                                   smNextPairingState
                                                   smProcessEncryptChange
                                                   smSetPairingReqRsp
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DED1 - 0000DED6 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
                                                   smNextPairingState
                                                   smProcessDataMsg
                                                   smProcessEncryptChange
                                                   smProcessPairingReq
                                                   smSetPairingReqRsp
                                                   smStartEncryption
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DED7 - 0000DFA4 (0xce bytes), align: 0
  Segment part 20.            Intra module refs:   SM_PasskeyUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_PasskeyUpdate        0000DED7 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DFA5 - 0000DFB2 (0xe bytes), align: 0
  Segment part 22.            Intra module refs:   SM_PasskeyUpdate
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DFB3 - 0000DFB8 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   SM_PasskeyUpdate
                                                   smEndPairing
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DFB9 - 0000DFBD (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
                                                   smLinkCheck
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DFBE - 0000DFC7 (0xa bytes), align: 0
  Segment part 27.            Intra module refs:   smRegisterResponder::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smRegisterResponder     0000DFBE 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DFC8 - 0000DFE4 (0x1d bytes), align: 0
  Segment part 29.            Intra module refs:   smLinkCheck::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smLinkCheck             0000DFC8 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DFE5 - 0000DFE9 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   smEndPairing
                                                   smLinkCheck
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DFEA - 0000DFF5 (0xc bytes), align: 0
  Segment part 32.            Intra module refs:   smTimedOut::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smTimedOut              0000DFEA 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DFF6 - 0000E186 (0x191 bytes), align: 0
  Segment part 34.            Intra module refs:   smProcessDataMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessDataMsg        0000DFF6 
               calls direct
               XSTACK = 00000000 ( 0000001F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E187 - 0000E189 (0x3 bytes), align: 0
  Segment part 36.            Intra module refs:   smPairingSendIdentityAddrInfo
                                                   smProcessDataMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E18A - 0000E18E (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 36
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E18F - 0000E1BD (0x2f bytes), align: 0
  Segment part 38.            Intra module refs:   smSendFailAndEnd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendFailAndEnd        0000E18F 
               calls direct
               XSTACK = 0000001F ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E1BE - 0000E2D3 (0x116 bytes), align: 0
  Segment part 40.            Intra module refs:   smProcessEncryptChange::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessEncryptChange
                                   0000E1BE 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E2D4 - 0000E2D9 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   SM_PasskeyUpdate
                                                   smDetermineKeySize
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E2DA - 0000E308 (0x2f bytes), align: 0
  Segment part 43.            Intra module refs:   smNextPairingState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smNextPairingState      0000E2DA 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E309 - 0000E30F (0x7 bytes), align: 0
  Segment part 45.            Intra module refs:   smNextPairingState
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E310 - 0000E320 (0x11 bytes), align: 0
  Segment part 46.            Intra module refs:   smNextPairingState
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E321 - 0000E326 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 19
                                                   Segment part 46
                                                   smProcessEncryptChange
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E327 - 0000E32B (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   smRegisterResponder
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E32C - 0000E332 (0x7 bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 48
                                                   smDetermineKeySize
                                                   smFreePairingParams
                                                   smNextPairingState
                                                   smTimedOut
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E333 - 0000E477 (0x145 bytes), align: 0
  Segment part 50.            Intra module refs:   sm_c1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1                   0000E333 
               calls direct
               XSTACK = 0000000C ( 0000003A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E478 - 0000E47A (0x3 bytes), align: 0
  Segment part 52.            Intra module refs:   smProcessEncryptChange
                                                   smSavePairInfo
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E47B - 0000E47F (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 52
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E480 - 0000E483 (0x4 bytes), align: 0
  Segment part 54.            Intra module refs:   SM_StartPairing
                                                   Segment part 53
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E484 - 0000E486 (0x3 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 16
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E487 - 0000E48C (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 118
                                                   Segment part 55
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E48D - 0000E48F (0x3 bytes), align: 0
  Segment part 57.            Intra module refs:   smSavePairInfo
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E490 - 0000E498 (0x9 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 57
                                                   smDetermineKeySize
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E499 - 0000E569 (0xd1 bytes), align: 0
  Segment part 59.            Intra module refs:   smProcessPairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessPairingReq     0000E499 
               calls direct
               XSTACK = 00000000 ( 00000013 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E56A - 0000E56D (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 46
                                                   Segment part 70
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E56E - 0000E571 (0x4 bytes), align: 0
  Segment part 62.            Intra module refs:   smProcessDataMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E572 - 0000E577 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 62
                                                   smFreePairingParams
                                                   smPairingSendMasterID
                                                   smProcessDataMsg
                                                   smProcessPairingReq
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E578 - 0000E5CF (0x58 bytes), align: 0
  Segment part 64.            Intra module refs:   smStartEncryption::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartEncryption       0000E578 
               XSTACK = 00000004 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E5D0 - 0000E5D3 (0x4 bytes), align: 0
  Segment part 66.            Intra module refs:   SM_StartPairing
                                                   smStartEncryption
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E5D4 - 0000E626 (0x53 bytes), align: 0
  Segment part 67.            Intra module refs:   smGeneratePairingReqRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGeneratePairingReqRsp
                                   0000E5D4 
               calls direct
               XSTACK = 00000012 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E627 - 0000E629 (0x3 bytes), align: 0
  Segment part 69.            Intra module refs:   smEndPairing
                                                   smGeneratePairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E62A - 0000E62E (0x5 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   smNextPairingState
                                                   smProcessDataMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E62F - 0000E637 (0x9 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 95
                                                   smGeneratePairingReqRsp
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E638 - 0000E63A (0x3 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 71
                                                   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E63B - 0000E640 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 66
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E641 - 0000E67B (0x3b bytes), align: 0
  Segment part 74.            Intra module refs:   smGenerateConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateConfirm       0000E641 
               calls direct
               XSTACK = 0000000A ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E67C - 0000E6AE (0x33 bytes), align: 0
  Segment part 76.            Intra module refs:   smGenerateRandMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandMsg       0000E67C 
               calls direct
               XSTACK = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E6AF - 0000E6BA (0xc bytes), align: 0
  Segment part 78.            Intra module refs:   SM_PasskeyUpdate
                                                   smGenerateRandMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E6BB - 0000E928 (0x26e bytes), align: 0
  Segment part 79.            Intra module refs:   smSavePairInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSavePairInfo          0000E6BB 
               calls direct
               XSTACK = 00000000 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E929 - 0000E934 (0xc bytes), align: 0
  Segment part 81.            Intra module refs:   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E935 - 0000E93A (0x6 bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 81
                                                   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E93B - 0000E946 (0xc bytes), align: 0
  Segment part 83.            Intra module refs:   Segment part 82
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E947 - 0000E94C (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E94D - 0000E957 (0xb bytes), align: 0
  Segment part 85.            Intra module refs:   SM_PasskeyUpdate
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E958 - 0000E95D (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   SM_StartPairing
                                                   smDetermineKeySize
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E95E - 0000E96B (0xe bytes), align: 0
  Segment part 87.            Intra module refs:   SM_StartPairing
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E96C - 0000E96E (0x3 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 107
                                                   Segment part 58
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E96F - 0000E973 (0x5 bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 112
                                                   Segment part 13
                                                   Segment part 42
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E974 - 0000E97E (0xb bytes), align: 0
  Segment part 90.            Intra module refs:   smPairingSendEncInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendEncInfo    0000E974 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E97F - 0000E98D (0xf bytes), align: 0
  Segment part 92.            Intra module refs:   smPairingSendEncInfo
                                                   smPairingSendIdentityInfo
                                                   smPairingSendSingingInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E98E - 0000E9F4 (0x67 bytes), align: 0
  Segment part 93.            Intra module refs:   smPairingSendMasterID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendMasterID   0000E98E 
               calls direct
               XSTACK = 00000002 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E9F5 - 0000EA11 (0x1d bytes), align: 0
  Segment part 95.            Intra module refs:   smGenerateConfirm
                                                   smGenerateRandMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA12 - 0000EA14 (0x3 bytes), align: 0
  Segment part 96.            Intra module refs:   Segment part 92
                                                   Segment part 95
                                                   smGeneratePairingReqRsp
                                                   smPairingSendMasterID
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA15 - 0000EA19 (0x5 bytes), align: 0
  Segment part 97.            Intra module refs:   SM_PasskeyUpdate
                                                   Segment part 96
                                                   smSendFailAndEnd
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA1A - 0000EA27 (0xe bytes), align: 0
  Segment part 98.            Intra module refs:   smPairingSendIdentityInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityInfo
                                   0000EA1A 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA28 - 0000EA80 (0x59 bytes), align: 0
  Segment part 100.           Intra module refs:   smPairingSendIdentityAddrInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityAddrInfo
                                   0000EA28 
               calls direct
               XSTACK = 00000000 ( 00000015 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA81 - 0000EA8E (0xe bytes), align: 0
  Segment part 102.           Intra module refs:   smPairingSendSingingInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendSingingInfo
                                   0000EA81 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA8F - 0000EAED (0x5f bytes), align: 0
  Segment part 104.           Intra module refs:   smFreePairingParams::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smFreePairingParams     0000EA8F 
               calls direct
               XSTACK = 00000012 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAEE - 0000EAF6 (0x9 bytes), align: 0
  Segment part 106.           Intra module refs:   SM_StartPairing
                                                   smEndPairing
                                                   smFreePairingParams
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAF7 - 0000EAF9 (0x3 bytes), align: 0
  Segment part 107.           Intra module refs:   smFreePairingParams
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAFA - 0000EB01 (0x8 bytes), align: 0
  Segment part 108.           Intra module refs:   Segment part 107
                                                   smDetermineKeySize
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB02 - 0000EB5D (0x5c bytes), align: 0
  Segment part 109.           Intra module refs:   smEndPairing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smEndPairing            0000EB02 
               calls direct
               XSTACK = 0000000C ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB5E - 0000EB60 (0x3 bytes), align: 0
  Segment part 111.           Intra module refs:   smSavePairInfo
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB61 - 0000EB65 (0x5 bytes), align: 0
  Segment part 112.           Intra module refs:   Segment part 111
                                                   smEndPairing
                                                   smProcessEncryptChange
                                                   smSavePairInfo
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB66 - 0000EBAF (0x4a bytes), align: 0
  Segment part 113.           Intra module refs:   smDetermineKeySize::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smDetermineKeySize      0000EB66 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EBB0 - 0000EC2B (0x7c bytes), align: 0
  Segment part 115.           Intra module refs:   smSetPairingReqRsp::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smSetPairingReqRsp      0000EBB0 
               calls direct
               XSTACK = 0000002F ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC2C - 0000EC31 (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   smProcessEncryptChange
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC32 - 0000EC38 (0x7 bytes), align: 0
  Segment part 118.           Intra module refs:   Segment part 117
                                                   Segment part 24
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ECA - 00000ECF (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_StartPairing::?relay
                                   00000ECA        GAP_Authenticate (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ED0 - 00000ED5 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_PasskeyUpdate::?relay
                                   00000ED0        GAP_PasscodeUpdate (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ED6 - 00000EDB (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smRegisterResponder::?relay
                                   00000ED6        SM_ResponderInit (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EDC - 00000EE1 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smLinkCheck::?relay     00000EDC        SM_Init (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EE2 - 00000EE7 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smTimedOut::?relay      00000EE2        SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EE8 - 00000EED (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessDataMsg::?relay
                                   00000EE8        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EEE - 00000EF3 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   smProcessDataMsg
                                                   smProcessPairingReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendFailAndEnd::?relay
                                   00000EEE        GAP_TerminateAuth (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EF4 - 00000EF9 (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessEncryptChange::?relay
                                   00000EF4        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EFA - 00000EFF (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smNextPairingState::?relay
                                   00000EFA        SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F00 - 00000F05 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   SM_PasskeyUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1::?relay           00000F00        smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F06 - 00000F0B (0x6 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessPairingReq::?relay
                                   00000F06        GAP_Authenticate (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F0C - 00000F11 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartEncryption::?relay
                                   00000F0C        GAP_Bond (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F12 - 00000F17 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   SM_StartPairing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGeneratePairingReqRsp::?relay
                                   00000F12        smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F18 - 00000F1D (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   SM_PasskeyUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateConfirm::?relay
                                   00000F18        smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F1E - 00000F23 (0x6 bytes), align: 0
  Segment part 77.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandMsg::?relay
                                   00000F1E        smpResponderProcessPairingRandom (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F24 - 00000F29 (0x6 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSavePairInfo::?relay
                                   00000F24        smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F2A - 00000F2F (0x6 bytes), align: 0
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendEncInfo::?relay
                                   00000F2A        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F30 - 00000F35 (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendMasterID::?relay
                                   00000F30        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F36 - 00000F3B (0x6 bytes), align: 0
  Segment part 99.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityInfo::?relay
                                   00000F36        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F3C - 00000F41 (0x6 bytes), align: 0
  Segment part 101.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityAddrInfo::?relay
                                   00000F3C        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F42 - 00000F47 (0x6 bytes), align: 0
  Segment part 103.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendSingingInfo::?relay
                                   00000F42        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F48 - 00000F4D (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   SM_StartPairing
                                                   smEndPairing
                                                   smLinkCheck
           LOCAL                   ADDRESS         
           =====                   =======         
           smFreePairingParams::?relay
                                   00000F48 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F4E - 00000F53 (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   smNextPairingState
                                                   smProcessEncryptChange
                                                   smSendFailAndEnd
                                                   smTimedOut
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smEndPairing::?relay    00000F4E        smResponderProcessLTKReq (sm_rsppairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F54 - 00000F59 (0x6 bytes), align: 0
  Segment part 114.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smDetermineKeySize::?relay
                                   00000F54        smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F5A - 00000F5F (0x6 bytes), align: 0
  Segment part 116.           Intra module refs:   smGeneratePairingReqRsp
                                                   sm_c1
           LOCAL                   ADDRESS         
           =====                   =======         
           smSetPairingReqRsp::?relay
                                   00000F5A 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000822B - 00008243 (0x19 bytes), align: 0
  Segment part 119.           Intra module refs:   Segment part 9

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_rsppairing

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000FB9 - 00000FBE (0x6 bytes), align: 0
  Segment part 6.             Intra module refs:   SM_ResponderInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000143EA - 0001440B (0x22 bytes), align: 0
  Segment part 8.             Intra module refs:   SM_ResponderInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResponderInit        000143EA 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001440C - 000145F9 (0x1ee bytes), align: 0
  Segment part 10.            Intra module refs:   smResponderProcessLTKReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderProcessLTKReq
                                   0001440C 
               calls direct, is indirectly called
               XSTACK = 00000002 ( 00000032 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000145FA - 000145FE (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000145FF - 0001460B (0xd bytes), align: 0
  Segment part 13.            Intra module refs:   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001460C - 00014618 (0xd bytes), align: 0
  Segment part 14.            Intra module refs:   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014619 - 0001461E (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001461F - 00014631 (0x13 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 15
                                                   smpResponderProcessPairingRandom
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014632 - 00014900 (0x2cf bytes), align: 0
  Segment part 17.            Intra module refs:   smpResponderProcessIncoming::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessIncoming
                                   00014632 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014901 - 00014903 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014904 - 00014907 (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   smResponderProcessLTKReq
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014908 - 00014912 (0xb bytes), align: 0
  Segment part 21.            Intra module refs:   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014913 - 00014914 (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014915 - 0001491D (0x9 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001491E - 00014923 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014924 - 0001492A (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001492B - 0001492F (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014930 - 00014937 (0x8 bytes), align: 0
  Segment part 27.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014938 - 0001493E (0x7 bytes), align: 0
  Segment part 28.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001493F - 00014946 (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 28
                                                   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014947 - 00014A21 (0xdb bytes), align: 0
  Segment part 30.            Intra module refs:   smpResponderProcessPairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpResponderProcessPairingReq
                                   00014947 
               calls direct
               XSTACK = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A22 - 00014A26 (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   smpResponderProcessMasterID
                                                   smpResponderProcessPairingRandom
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A27 - 00014A2A (0x4 bytes), align: 0
  Segment part 33.            Intra module refs:   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A2B - 00014A2E (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 33
                                                   Segment part 73
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A2F - 00014A39 (0xb bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A3A - 00014A3C (0x3 bytes), align: 0
  Segment part 36.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A3D - 00014A40 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 36
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A41 - 00014A49 (0x9 bytes), align: 0
  Segment part 38.            Intra module refs:   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A4A - 00014A55 (0xc bytes), align: 0
  Segment part 39.            Intra module refs:   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A56 - 00014A58 (0x3 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 14
                                                   Segment part 38
                                                   Segment part 39
                                                   Segment part 54
                                                   Segment part 63
                                                   Segment part 67
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A59 - 00014A5E (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 37
                                                   Segment part 40
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A5F - 00014AF5 (0x97 bytes), align: 0
  Segment part 42.            Intra module refs:   smpResponderProcessPairingRandom::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessPairingRandom
                                   00014A5F 
               calls direct
               XSTACK = 0000000E ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014AF6 - 00014AFC (0x7 bytes), align: 0
  Segment part 44.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
                                                   smpResponderProcessPairingRandom
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014AFD - 00014B00 (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
                                                   smpResponderProcessPairingRandom
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014B01 - 00014B0A (0xa bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
                                                   Segment part 62
                                                   Segment part 64
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014B0B - 00014B11 (0x7 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 27
                                                   Segment part 46
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014B12 - 00014BBA (0xa9 bytes), align: 0
  Segment part 48.            Intra module refs:   smpResponderProcessMasterID::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessMasterID
                                   00014B12 
               calls direct
               XSTACK = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014BBB - 00014BC1 (0x7 bytes), align: 0
  Segment part 50.            Intra module refs:   smResponderProcessLTKReq
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014BC2 - 00014BD0 (0xf bytes), align: 0
  Segment part 51.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014BD1 - 00014BD3 (0x3 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 14
                                                   Segment part 38
                                                   Segment part 39
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014BD4 - 00014BD9 (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 20
                                                   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014BDA - 00014BEC (0x13 bytes), align: 0
  Segment part 54.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014BED - 00014BF3 (0x7 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 51
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014BF4 - 00014EAD (0x2ba bytes), align: 0
  Segment part 56.            Intra module refs:   smResponderSendNextKeyInfo::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderSendNextKeyInfo
                                   00014BF4 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EAE - 00014EB0 (0x3 bytes), align: 0
  Segment part 58.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EB1 - 00014EB5 (0x5 bytes), align: 0
  Segment part 59.            Intra module refs:   Segment part 58
                                                   smResponderProcessLTKReq
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EB6 - 00014EC3 (0xe bytes), align: 0
  Segment part 60.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EC4 - 00014ECD (0xa bytes), align: 0
  Segment part 61.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014ECE - 00014ED2 (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014ED3 - 00014ED8 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014ED9 - 00014EDE (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EDF - 00014EE8 (0xa bytes), align: 0
  Segment part 65.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EE9 - 00014EEE (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 26
                                                   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EEF - 00014EF3 (0x5 bytes), align: 0
  Segment part 67.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EF4 - 00014EF6 (0x3 bytes), align: 0
  Segment part 68.            Intra module refs:   Segment part 67
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EF7 - 00014EF8 (0x2 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 68
                                                   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014EF9 - 00014F02 (0xa bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F03 - 00014F06 (0x4 bytes), align: 0
  Segment part 71.            Intra module refs:   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F07 - 00014F0A (0x4 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 71
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F0B - 00014F17 (0xd bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 72
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000249 - 0000024E (0x6 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F60 - 00000F65 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResponderInit::?relay
                                   00000F60        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F66 - 00000F6B (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderProcessLTKReq::?relay
                                   00000F66 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F6C - 00000F71 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessIncoming::?relay
                                   00000F6C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F72 - 00000F77 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   smpResponderProcessIncoming
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpResponderProcessPairingReq::?relay
                                   00000F72 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F78 - 00000F7D (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   smpResponderProcessIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessPairingRandom::?relay
                                   00000F78 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F7E - 00000F83 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   smpResponderProcessIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessMasterID::?relay
                                   00000F7E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F84 - 00000F89 (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderSendNextKeyInfo::?relay
                                   00000F84 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007B9 - 000007B9 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   SM_Init
                                                   SM_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smTaskID                000007B9        smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smStartRspTimer (sm_mgr)
                                                   smStopRspTimer (sm_mgr)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C8B3 - 0001C8D2 (0x20 bytes), align: 0
  Segment part 7.             Intra module refs:   SM_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_Init                 0001C8B3 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C8D3 - 0001C8D7 (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   SM_Init
                                                   smProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C8D8 - 0001C949 (0x72 bytes), align: 0
  Segment part 10.            Intra module refs:   SM_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ProcessEvent         0001C8D8 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C94A - 0001CA57 (0x10e bytes), align: 0
  Segment part 12.            Intra module refs:   smProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smProcessOSALMsg        0001C94A 
               calls direct
               XSTACK = 0000000C ( 0000000B )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F8A - 00000F8F (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_Init::?relay         00000F8A        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F90 - 00000F95 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ProcessEvent::?relay
                                   00000F90        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F96 - 00000F9B (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   SM_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           smProcessOSALMsg::?relay
                                   00000F96 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : smp

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001725B - 00017263 (0x9 bytes), align: 0
  Segment part 6.             Intra module refs:   smpBuildPairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReq      0001725B 
               calls direct, is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017264 - 0001726C (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   smpBuildPairingRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRsp      00017264 
               calls direct, is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001726D - 0001732A (0xbe bytes), align: 0
  Segment part 10.            Intra module refs:   smpBuildPairingReqRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReqRsp   0001726D 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001732B - 0001732B (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001732C - 0001732C (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001732D - 00017330 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017331 - 00017336 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017337 - 0001733C (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001733D - 00017343 (0x7 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017344 - 000174DF (0x19c bytes), align: 0
  Segment part 18.            Intra module refs:   smpParsePairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingReq      00017344 
               calls direct
               XSTACK = 00000000 ( 00000013 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174E0 - 000174EA (0xb bytes), align: 0
  Segment part 20.            Intra module refs:   smpBuildPairingReqRsp
                                                   smpParsePairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174EB - 000174F4 (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   smpParsePairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174F5 - 0001752A (0x36 bytes), align: 0
  Segment part 22.            Intra module refs:   smpBuildPairingConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingConfirm
                                   000174F5 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001752B - 00017564 (0x3a bytes), align: 0
  Segment part 24.            Intra module refs:   smpParsePairingConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingConfirm
                                   0001752B 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017565 - 0001759A (0x36 bytes), align: 0
  Segment part 26.            Intra module refs:   smpBuildPairingRandom::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRandom   00017565 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001759B - 000175D4 (0x3a bytes), align: 0
  Segment part 28.            Intra module refs:   smpParsePairingRandom::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingRandom   0001759B 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000175D5 - 000175FE (0x2a bytes), align: 0
  Segment part 30.            Intra module refs:   smpBuildPairingFailed::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingFailed   000175D5 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000175FF - 00017601 (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   smpBuildPairingReq
                                                   smpBuildPairingRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017602 - 00017608 (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
                                                   smpBuildPairingFailed
                                                   smpParsePairingFailed
                                                   smpParseSecurityReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017609 - 00017634 (0x2c bytes), align: 0
  Segment part 34.            Intra module refs:   smpParsePairingFailed::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingFailed   00017609 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017635 - 0001766A (0x36 bytes), align: 0
  Segment part 36.            Intra module refs:   smpBuildEncInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildEncInfo         00017635 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001766B - 00017676 (0xc bytes), align: 0
  Segment part 38.            Intra module refs:   smpBuildEncInfo
                                                   smpBuildIdentityInfo
                                                   smpBuildPairingConfirm
                                                   smpBuildPairingRandom
                                                   smpBuildSigningInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017677 - 0001767D (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
                                                   smpBuildPairingReqRsp
                                                   smpBuildSecurityReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001767E - 000176B7 (0x3a bytes), align: 0
  Segment part 40.            Intra module refs:   smpParseEncInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseEncInfo         0001767E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000176B8 - 00017700 (0x49 bytes), align: 0
  Segment part 42.            Intra module refs:   smpBuildMasterID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildMasterID        000176B8 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017701 - 00017753 (0x53 bytes), align: 0
  Segment part 44.            Intra module refs:   smpParseMasterID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseMasterID        00017701 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017754 - 00017758 (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   smpBuildEncInfo
                                                   smpBuildIdentityAddrInfo
                                                   smpBuildIdentityInfo
                                                   smpBuildMasterID
                                                   smpBuildPairingConfirm
                                                   smpBuildPairingRandom
                                                   smpBuildSigningInfo
                                                   smpParseEncInfo
                                                   smpParseIdentityAddrInfo
                                                   smpParseIdentityInfo
                                                   smpParseMasterID
                                                   smpParsePairingConfirm
                                                   smpParsePairingRandom
                                                   smpParseSigningInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017759 - 0001778D (0x35 bytes), align: 0
  Segment part 47.            Intra module refs:   smpBuildIdentityInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityInfo    00017759 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001778E - 000177CF (0x42 bytes), align: 0
  Segment part 49.            Intra module refs:   smpBuildIdentityAddrInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityAddrInfo
                                   0001778E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177D0 - 000177DD (0xe bytes), align: 0
  Segment part 51.            Intra module refs:   smpBuildIdentityAddrInfo
                                                   smpBuildMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177DE - 000177E8 (0xb bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   smpBuildMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000177E9 - 00017822 (0x3a bytes), align: 0
  Segment part 53.            Intra module refs:   smpParseIdentityInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityInfo    000177E9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017823 - 00017873 (0x51 bytes), align: 0
  Segment part 55.            Intra module refs:   smpParseIdentityAddrInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityAddrInfo
                                   00017823 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017874 - 000178A9 (0x36 bytes), align: 0
  Segment part 57.            Intra module refs:   smpBuildSigningInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSigningInfo     00017874 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000178AA - 000178E3 (0x3a bytes), align: 0
  Segment part 59.            Intra module refs:   smpParseSigningInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSigningInfo     000178AA 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000178E4 - 00017911 (0x2e bytes), align: 0
  Segment part 61.            Intra module refs:   smpBuildSecurityReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSecurityReq     000178E4 
               calls direct
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017912 - 00017934 (0x23 bytes), align: 0
  Segment part 63.            Intra module refs:   smpParseSecurityReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSecurityReq     00017912 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017935 - 000179D4 (0xa0 bytes), align: 0
  Segment part 65.            Intra module refs:   smSendSMMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendSMMsg             00017935 
               calls direct
               XSTACK = 00000002 ( 00000013 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F9C - 00000FA1 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReq::?relay
                                   00000F9C        smGeneratePairingReqRsp (sm_pairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FA2 - 00000FA7 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRsp::?relay
                                   00000FA2        smGeneratePairingReqRsp (sm_pairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FA8 - 00000FAD (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 32
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReqRsp::?relay
                                   00000FA8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FAE - 00000FB3 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingReq::?relay
                                   00000FAE        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FB4 - 00000FB9 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingConfirm::?relay
                                   00000FB4        smGenerateConfirm (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FBA - 00000FBF (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingConfirm::?relay
                                   00000FBA        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FC0 - 00000FC5 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRandom::?relay
                                   00000FC0        smGenerateRandMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FC6 - 00000FCB (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingRandom::?relay
                                   00000FC6        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FCC - 00000FD1 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingFailed::?relay
                                   00000FCC        smSendFailAndEnd (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FD2 - 00000FD7 (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingFailed::?relay
                                   00000FD2        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FD8 - 00000FDD (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildEncInfo::?relay
                                   00000FD8        smPairingSendEncInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FDE - 00000FE3 (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseEncInfo::?relay
                                   00000FDE        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FE4 - 00000FE9 (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildMasterID::?relay
                                   00000FE4        smPairingSendMasterID (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FEA - 00000FEF (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseMasterID::?relay
                                   00000FEA        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FF0 - 00000FF5 (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityInfo::?relay
                                   00000FF0        smPairingSendIdentityInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FF6 - 00000FFB (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityAddrInfo::?relay
                                   00000FF6        smPairingSendIdentityAddrInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FFC - 00001001 (0x6 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityInfo::?relay
                                   00000FFC        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001002 - 00001007 (0x6 bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityAddrInfo::?relay
                                   00001002        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001008 - 0000100D (0x6 bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSigningInfo::?relay
                                   00001008        smPairingSendSingingInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000100E - 00001013 (0x6 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSigningInfo::?relay
                                   0000100E        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001014 - 00001019 (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSecurityReq::?relay
                                   00001014        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000101A - 0000101F (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSecurityReq::?relay
                                   0000101A        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001020 - 00001025 (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendSMMsg::?relay     00001020        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   Segment part 92 (sm_pairing)
                                                   Segment part 95 (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\Libraries\Common\bin\CC254x_BLE_HCI_TL_None.lib
  LIBRARY MODULE, NAME : hci_tl

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007BA - 000007BA (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   HCI_Init
                                                   HCI_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciTaskID               000007BA        HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BB - 000007BB (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   HCI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciTestTaskID           000007BB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BC - 000007BC (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   HCI_GAPTaskRegister
                                                   HCI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciGapTaskID            000007BC        HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BD - 000007BD (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HCI_Init
                                                   HCI_L2CAPTaskRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciL2capTaskID          000007BD        HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BE - 000007BE (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   HCI_Init
                                                   HCI_SMPTaskRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciSmpTaskID            000007BE        HCI_CommandCompleteEvent (hci_event)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BF - 000007BF (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   HCI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciExtTaskID            000007BF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5D8 - 0001D603 (0x2c bytes), align: 0
  Segment part 13.            Intra module refs:   HCI_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_Init                0001D5D8 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D604 - 0001D65E (0x5b bytes), align: 0
  Segment part 15.            Intra module refs:   HCI_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ProcessEvent        0001D604 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D65F - 0001D668 (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   HCI_GAPTaskRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_GAPTaskRegister     0001D65F 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D669 - 0001D670 (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   HCI_L2CAPTaskRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_L2CAPTaskRegister   0001D669 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D671 - 0001D678 (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   HCI_GAPTaskRegister
                                                   HCI_L2CAPTaskRegister
                                                   HCI_SMPTaskRegister
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D679 - 0001D682 (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   HCI_SMPTaskRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SMPTaskRegister     0001D679 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001026 - 0000102B (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_Init::?relay        00001026        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000102C - 00001031 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ProcessEvent::?relay
                                   0000102C        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001032 - 00001037 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_GAPTaskRegister::?relay
                                   00001032        GAP_Init (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001038 - 0000103D (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_L2CAPTaskRegister::?relay
                                   00001038        L2CAP_Init (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000103E - 00001043 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SMPTaskRegister::?relay
                                   0000103E        SM_Init (sm_task)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL.r51
  PROGRAM MODULE, NAME : OSAL

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007C0 - 000007C1 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   osal_init_system
                                                   osal_msg_enqueue_push
                                                   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_qHead              000007C0 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FBF - 00000FBF (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           activeTaskID            00000FBF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000161BB - 000161C4 (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   osal_strlen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen             000161BB 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000161C5 - 00016202 (0x3e bytes), align: 0
  Segment part 18.            Intra module refs:   osal_memcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy             000161C5 
               XSTACK = 00000010 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016203 - 0001624B (0x49 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_revmemcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_revmemcpy          00016203 
               XSTACK = 00000002 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001624C - 0001627C (0x31 bytes), align: 0
  Segment part 22.            Intra module refs:   osal_memdup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memdup             0001624C 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001627D - 00016285 (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   osal_memdup
                                                   osal_msg_receive
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001627D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016286 - 000162DF (0x5a bytes), align: 0
  Segment part 25.            Intra module refs:   osal_memcmp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcmp             00016286 
               XSTACK = 00000002 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000162E0 - 00016300 (0x21 bytes), align: 0
  Segment part 27.            Intra module refs:   osal_memset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset             000162E0 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016301 - 000165BB (0x2bb bytes), align: 0
  Segment part 36.            Intra module refs:   _ltoa::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ltoa                   00016301 
               calls direct
               XSTACK = 00000002 ( 00000039 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000165BC - 000165D0 (0x15 bytes), align: 0
  Segment part 38.            Intra module refs:   _ltoa
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           000165BC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000165D1 - 000165D8 (0x8 bytes), align: 0
  Segment part 39.            Intra module refs:   _ltoa
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            000165D1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000165D9 - 000165E1 (0x9 bytes), align: 0
  Segment part 40.            Intra module refs:   osal_rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand               000165D9 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000165E2 - 0001662E (0x4d bytes), align: 0
  Segment part 42.            Intra module refs:   osal_msg_allocate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate       000165E2 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001662F - 00016650 (0x22 bytes), align: 0
  Segment part 44.            Intra module refs:   osal_msg_deallocate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate     0001662F 
               calls direct
               XSTACK = 00000009 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016651 - 00016657 (0x7 bytes), align: 0
  Segment part 46.            Intra module refs:   osal_init_system
                                                   osal_msg_deallocate
                                                   osal_rand
                                                   osal_strlen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00016651 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016658 - 00016661 (0xa bytes), align: 0
  Segment part 47.            Intra module refs:   osal_msg_send::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send           00016658 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016662 - 000166C0 (0x5f bytes), align: 0
  Segment part 51.            Intra module refs:   osal_msg_enqueue_push::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_msg_enqueue_push   00016662 
               calls direct
               XSTACK = 00000009 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166C1 - 000166CD (0xd bytes), align: 0
  Segment part 53.            Intra module refs:   osal_msg_deallocate
                                                   osal_msg_enqueue_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           000166C1 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166CE - 00016759 (0x8c bytes), align: 0
  Segment part 54.            Intra module refs:   osal_msg_receive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive        000166CE 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001675A - 0001675F (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   _ltoa
                                                   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001675A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016760 - 0001678E (0x2f bytes), align: 0
  Segment part 59.            Intra module refs:   osal_msg_enqueue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue        00016760 
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001678F - 00016792 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001678F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016793 - 00016795 (0x3 bytes), align: 0
  Segment part 62.            Intra module refs:   osal_msg_send
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00016793 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016796 - 0001679A (0x5 bytes), align: 0
  Segment part 63.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine5
                                                   osal_clear_event
                                                   osal_memcpy
                                                   osal_msg_enqueue_push
                                                   osal_revmemcpy
                                                   osal_set_event
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001679B - 0001679F (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   osal_isbufset
                                                   osal_memset
                                                   osal_msg_allocate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001679B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000167A0 - 000167A9 (0xa bytes), align: 0
  Segment part 67.            Intra module refs:   osal_msg_allocate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           000167A0 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000167AA - 000167D9 (0x30 bytes), align: 0
  Segment part 68.            Intra module refs:   osal_msg_push::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push           000167AA 
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000167DA - 000167DF (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   _ltoa
                                                   osal_memcpy
                                                   osal_msg_extract
                                                   osal_msg_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           000167DA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000167E0 - 00016853 (0x74 bytes), align: 0
  Segment part 71.            Intra module refs:   osal_msg_extract::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract        000167E0 
               XSTACK = 00000010 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016854 - 00016856 (0x3 bytes), align: 0
  Segment part 73.            Intra module refs:   osal_msg_enqueue_push
                                                   osal_msg_extract
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00016854 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016857 - 00016859 (0x3 bytes), align: 0
  Segment part 74.            Intra module refs:   ?Subroutine15
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001685A - 0001685E (0x5 bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 74
                                                   osal_msg_enqueue
                                                   osal_msg_extract
                                                   osal_msg_push
                                                   osal_msg_receive
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001685F - 0001686B (0xd bytes), align: 0
  Segment part 78.            Intra module refs:   osal_msg_enqueue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0001685F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001686C - 000168AC (0x41 bytes), align: 0
  Segment part 79.            Intra module refs:   osal_set_event::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event          0001686C 
               XSTACK = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000168AD - 000168E3 (0x37 bytes), align: 0
  Segment part 81.            Intra module refs:   osal_clear_event::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_clear_event        000168AD 
               XSTACK = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000168E4 - 000168F5 (0x12 bytes), align: 0
  Segment part 87.            Intra module refs:   osal_int_disable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable        000168E4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000168F6 - 00016914 (0x1f bytes), align: 0
  Segment part 89.            Intra module refs:   osal_init_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system        000168F6 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016915 - 0001691D (0x9 bytes), align: 0
  Segment part 91.            Intra module refs:   osal_start_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system       00016915 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001691E - 000169C1 (0xa4 bytes), align: 0
  Segment part 93.            Intra module refs:   osal_run_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_run_system         0001691E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000169C2 - 000169CA (0x9 bytes), align: 0
  Segment part 95.            Intra module refs:   _ltoa
                                                   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           000169C2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000169CB - 000169DE (0x14 bytes), align: 0
  Segment part 96.            Intra module refs:   osal_clear_event
                                                   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           000169CB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000169DF - 000169E2 (0x4 bytes), align: 0
  Segment part 97.            Intra module refs:   osal_msg_enqueue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            000169DF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000169E3 - 000169EA (0x8 bytes), align: 0
  Segment part 98.            Intra module refs:   ?Subroutine7
                                                   osal_msg_enqueue_push
                                                   osal_run_system
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000169EB - 00016A18 (0x2e bytes), align: 0
  Segment part 106.           Intra module refs:   osal_isbufset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_isbufset           000169EB 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000024F - 0000024F (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   activeTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001044 - 00001049 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen::?relay     00001044        GATTServApp_ReadAttr (gattservapp)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLcd_HW_WriteLine (hal_lcd)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   hex2Str (simpleBLEPeripheral)
                                                   set_code_name (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
                                                   set_passkey (Simplepasscode)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000104A - 0000104F (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_memdup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy::?relay     0000104A        ATT_BuildFindInfoRsp (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATT_RegisterService (gatt_server)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_RandCback (hci)
                                                   LL_SetAdvData (ll)
                                                   LL_SetScanRspData (ll)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   Segment part 69 (att_util)
                                                   Segment part 81 (att_util)
                                                   Segment part 84 (att_util)
                                                   Segment part 97 (att_util)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   battReadAttrCB (battservice)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   set_code_name (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_c1new (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001050 - 00001055 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_revmemcpy::?relay
                                   00001050        GAPBondMgr_SetParameter (gapbondmgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 46 (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001056 - 0000105B (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memdup::?relay     00001056        GAP_Bond (gap_linkmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000105C - 00001061 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcmp::?relay     0000105C        ATT_CompareUUID (att_util)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   verifyWordM (osal_snv)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001062 - 00001067 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset::?relay     00001062        GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_ParamsInit (gap_configmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GGS_SetParameter (gapgattserver)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   generate_subkey (sm_mgr)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   linkDB_Remove (linkdb)
                                                   osalInitTasks (OSAL_SimpleBLEPeripheral)
                                                   osal_CbTimerInit (osal_cbtimer)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   set_code_name (Simplepasscode)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1new (sm_mgr)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001068 - 0000106D (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ltoa::?relay           00001068        HalLcdWriteStringValue (hal_lcd)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000106E - 00001073 (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand::?relay       0000106E        smGenerateRandBuf (sm_mgr)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001074 - 00001079 (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate::?relay
                                   00001074        GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   OnBoard_SendKeys (OnBoard)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvDataStatus (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   smProcessRandComplete (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000107A - 0000107F (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   osal_msg_enqueue_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate::?relay
                                   0000107A        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_ProcessEvent (gap_task)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATT_ProcessEvent (gatt_task)
                                                   HCI_ProcessEvent (hci_tl)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   SM_ProcessEvent (sm_task)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   gapBondFreeAuthEvt (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001080 - 00001085 (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send::?relay   00001080        GAP_ProcessEvent (gap_task)
                                                   GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   OnBoard_SendKeys (OnBoard)
                                                   SM_ProcessEvent (sm_task)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvDataStatus (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   smProcessRandComplete (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001086 - 0000108B (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_msg_enqueue_push::?relay
                                   00001086 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000108C - 00001091 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive::?relay
                                   0000108C        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_ProcessEvent (gap_task)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATT_ProcessEvent (gatt_task)
                                                   HCI_ProcessEvent (hci_tl)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   SM_ProcessEvent (sm_task)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001092 - 00001097 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   osal_msg_enqueue_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue::?relay
                                   00001092 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001098 - 0000109D (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   osal_msg_enqueue_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push::?relay   00001098 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000109E - 000010A3 (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract::?relay
                                   0000109E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010A4 - 000010A9 (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   osal_msg_enqueue_push
                                                   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event::?relay
                                   000010A4        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalUARTPollDMA (hal_uart)
                                                   LL_Init (ll)
                                                   LL_PowerOnReq (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalTimerUpdate (OSAL_Timers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010AA - 000010AF (0x6 bytes), align: 0
  Segment part 82.            Intra module refs:   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_clear_event::?relay
                                   000010AA        Hal_ProcessEvent (hal_drivers)
                                                   LL_SetAdvControl (ll)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010B0 - 000010B5 (0x6 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable::?relay
                                   000010B0        InitBoard (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010B6 - 000010BB (0x6 bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system::?relay
                                   000010B6        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010BC - 000010C1 (0x6 bytes), align: 0
  Segment part 92.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system::?relay
                                   000010BC        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010C2 - 000010C7 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   osal_start_system
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_run_system::?relay
                                   000010C2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010C8 - 000010CD (0x6 bytes), align: 0
  Segment part 107.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_isbufset::?relay   000010C8        GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAP_SecParamsInit (gap_configmgr)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrBondTotal (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList (gapbondmgr)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008692 - 00008692 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008691 - 00008691 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000859B - 0000859B (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008671 - 00008672 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   _ltoa
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085E1 - 000085E4 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   _ltoa
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2710         000085E1 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085E9 - 000085EC (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   _ltoa
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5f5e100      000085E9 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008692 - 00008692 (0x1 bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008691 - 00008691 (0x1 bytes), align: 0
  Segment part 111.           Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000859B - 0000859B (0x1 bytes), align: 0
  Segment part 112.           Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008671 - 00008672 (0x2 bytes), align: 0
  Segment part 113.           Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085E1 - 000085E4 (0x4 bytes), align: 0
  Segment part 114.           Intra module refs:   __Constant_2710
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085E9 - 000085EC (0x4 bytes), align: 0
  Segment part 115.           Intra module refs:   __Constant_5f5e100

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_ClockBLE.r51
  PROGRAM MODULE, NAME : OSAL_ClockBLE

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007C2 - 000007C3 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           previousLLTimerTick     000007C2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007C4 - 000007C5 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           remUsTicks              000007C4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007C6 - 000007C7 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   ?Subroutine3
                                                   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           timeMSec                000007C6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007C8 - 000007CB (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   osalTimeUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OSAL_timeSeconds        000007C8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D25D - 0001D346 (0xea bytes), align: 0
  Segment part 13.            Intra module refs:   osalTimeUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimeUpdate          0001D25D 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D347 - 0001D353 (0xd bytes), align: 0
  Segment part 15.            Intra module refs:   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001D347 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010CE - 000010D3 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimeUpdate::?relay
                                   000010CE        llScheduleTask (ll_scheduler)
                                                   osal_run_system (OSAL)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Memory.r51
  PROGRAM MODULE, NAME : OSAL_Memory

  SEGMENTS IN THE MODULE
  ======================
<XDATA_N> 1 (was XDATA_N)
  Relative segment, address: XDATA 00001280 - 00001E81 (0xc02 bytes), align: 0
  Segment part 7.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           theHeap                 00001280 
    -------------------------------------------------------------------------
<XDATA_N> 1 (was XDATA_N)
  Relative segment, address: XDATA 00001E82 - 00001E83 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
                                                   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ff1                     00001E82 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007CC - 000007CC (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           osalMemStat             000007CC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C322 - 0001C350 (0x2f bytes), align: 0
  Segment part 10.            Intra module refs:   osal_mem_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init           0001C322 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C351 - 0001C357 (0x7 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_mem_free
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001C351 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C358 - 0001C38D (0x36 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_mem_kick::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick           0001C358 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C38E - 0001C4D8 (0x14b bytes), align: 0
  Segment part 15.            Intra module refs:   osal_mem_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc          0001C38E 
               XSTACK = 0000000A ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C4D9 - 0001C512 (0x3a bytes), align: 0
  Segment part 17.            Intra module refs:   osal_mem_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free           0001C4D9 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010D4 - 000010D9 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init::?relay   000010D4        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010DA - 000010DF (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick::?relay   000010DA        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010E0 - 000010E5 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   osal_mem_kick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc::?relay
                                   000010E0        GAP_Authenticate (gap_linkmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATT_RegisterService (gatt_server)
                                                   HalLcdWriteString (hal_lcd)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   generate_subkey (sm_mgr)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_SimpleBLEPeripheral)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_memdup (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010E6 - 000010EB (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_mem_kick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free::?relay   000010E6        GAP_Bond (gap_linkmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   HalLcdWriteString (hal_lcd)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   gapFreeAdvertState (gap_peridevmgr)
                                                   gapFreeAuthLink (gap_linkmgr)
                                                   gapFreeEstLink (gap_linkmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   generate_subkey (sm_mgr)
                                                   linkDB_Remove (linkdb)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_msg_deallocate (OSAL)
                                                   smFreePairingParams (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   sm_CMAC (sm_mgr)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_PwrMgr.r51
  PROGRAM MODULE, NAME : OSAL_PwrMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007CD - 000007D3 (0x7 bytes), align: 0
  Segment part 7.             Intra module refs:   osal_pwrmgr_device
                                                   osal_pwrmgr_init
                                                   osal_pwrmgr_powerconserve
                                                   osal_pwrmgr_task_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pwrmgr_attribute        000007CD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D683 - 0001D690 (0xe bytes), align: 0
  Segment part 8.             Intra module refs:   osal_pwrmgr_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init        0001D683 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D691 - 0001D698 (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   osal_pwrmgr_device
                                                   osal_pwrmgr_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001D691 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D699 - 0001D6A2 (0xa bytes), align: 0
  Segment part 11.            Intra module refs:   osal_pwrmgr_device::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_device      0001D699 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6A3 - 0001D6EC (0x4a bytes), align: 0
  Segment part 13.            Intra module refs:   osal_pwrmgr_task_state::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_task_state
                                   0001D6A3 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D6ED - 0001D71A (0x2e bytes), align: 0
  Segment part 15.            Intra module refs:   osal_pwrmgr_powerconserve::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_powerconserve
                                   0001D6ED 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010EC - 000010F1 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init::?relay
                                   000010EC        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010F2 - 000010F7 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_device::?relay
                                   000010F2        LL_ProcessEvent (ll)
                                                   main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010F8 - 000010FD (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_task_state::?relay
                                   000010F8        Hal_ProcessEvent (hal_drivers)
                                                   LL_Init (ll)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_ProcessEvent (ll)
                                                   LL_SetAdvControl (ll)
                                                   port0Isr (hal_uart)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010FE - 00001103 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_powerconserve::?relay
                                   000010FE        osal_run_system (OSAL)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_SimpleBLEPeripheral.r51
  PROGRAM MODULE, NAME : OSAL_SimpleBLEPeripheral

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008244 - 0000825B (0x18 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksArr                00008244        osal_run_system (OSAL)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000868F - 0000868F (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksCnt                0000868F        osal_clear_event (OSAL)
                                                   osal_msg_enqueue_push (OSAL)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007D4 - 000007D5 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   osalInitTasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksEvents             000007D4        ?Subroutine11 (OSAL)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D808 - 0001D866 (0x5f bytes), align: 0
  Segment part 9.             Intra module refs:   osalInitTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks           0001D808 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001104 - 00001109 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks::?relay   00001104        osal_init_system (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008244 - 0000825B (0x18 bytes), align: 0
  Segment part 11.            Intra module refs:   tasksArr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000868F - 0000868F (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   tasksCnt

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OSAL_Timers.r51
  PROGRAM MODULE, NAME : OSAL_Timers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007D6 - 000007D7 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine4
                                                   osalAddTimer
                                                   osalFindTimer
                                                   osalTimerUpdate
                                                   osal_next_timeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerHead               000007D6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007D8 - 000007DB (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   osalTimerInit
                                                   osalTimerUpdate
                                                   osal_GetSystemClock
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_systemClock        000007D8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018723 - 00018737 (0x15 bytes), align: 0
  Segment part 9.             Intra module refs:   osalTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit           00018723 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018738 - 000187E2 (0xab bytes), align: 0
  Segment part 11.            Intra module refs:   osalAddTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer            00018738 
               calls direct
               XSTACK = 00000012 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000187E3 - 000187E7 (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   osalAddTimer
                                                   osal_next_timeout
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000187E3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000187E8 - 00018827 (0x40 bytes), align: 0
  Segment part 14.            Intra module refs:   osalFindTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer           000187E8 
               XSTACK = 00000010 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018828 - 00018840 (0x19 bytes), align: 0
  Segment part 16.            Intra module refs:   osalDeleteTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer         00018828 
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018841 - 00018876 (0x36 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_start_timerEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx      00018841 
               calls direct
               XSTACK = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018877 - 0001887B (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_start_timerEx
                                                   osal_stop_timerEx
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00018877 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001887C - 000188C3 (0x48 bytes), align: 0
  Segment part 21.            Intra module refs:   osal_start_reload_timer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_reload_timer
                                   0001887C 
               calls direct
               XSTACK = 00000004 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000188C4 - 000188C8 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   osal_get_timeoutEx
                                                   osal_start_reload_timer
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000188C4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000188C9 - 000188FA (0x32 bytes), align: 0
  Segment part 24.            Intra module refs:   osal_stop_timerEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx       000188C9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000188FB - 00018935 (0x3b bytes), align: 0
  Segment part 26.            Intra module refs:   osal_get_timeoutEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx      000188FB 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018936 - 0001893C (0x7 bytes), align: 0
  Segment part 30.            Intra module refs:   osalDeleteTimer
                                                   osalFindTimer
                                                   osal_GetSystemClock
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00018936 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001893D - 00018B32 (0x1f6 bytes), align: 0
  Segment part 31.            Intra module refs:   osalTimerUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerUpdate         0001893D 
               calls direct
               XSTACK = 0000000C ( 0000001D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018B33 - 00018B35 (0x3 bytes), align: 0
  Segment part 35.            Intra module refs:   osalAddTimer
                                                   osalTimerUpdate
                                                   osal_next_timeout
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00018B33 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018B36 - 00018B3D (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   ?Subroutine4
                                                   osalAddTimer
                                                   osalTimerUpdate
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018B3E - 00018BA3 (0x66 bytes), align: 0
  Segment part 37.            Intra module refs:   osal_next_timeout::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_next_timeout       00018B3E 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018BA4 - 00018BA9 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   osalTimerUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00018BA4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018BAA - 00018BAF (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   ?Subroutine5
                                                   osal_next_timeout
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018BB0 - 00018BBC (0xd bytes), align: 0
  Segment part 41.            Intra module refs:   osal_GetSystemClock::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock     00018BB0 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000110A - 0000110F (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit::?relay   0000110A        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001110 - 00001115 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_start_reload_timer
                                                   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer::?relay    00001110 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001116 - 0000111B (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   osalAddTimer
                                                   osal_get_timeoutEx
                                                   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer::?relay   00001116 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000111C - 00001121 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer::?relay
                                   0000111C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001122 - 00001127 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx::?relay
                                   00001122        GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalLedUpdate (hal_led)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_ProcessEvent (ll)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halProcessKeyInterrupt (hal_key)
                                                   llScheduleTask (ll_scheduler)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smStartRspTimer (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001128 - 0000112D (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_reload_timer::?relay
                                   00001128        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000112E - 00001133 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx::?relay
                                   0000112E        GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_SetAdvControl (ll)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   llT2OVFC1_ISR (ll_isr)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   smStopRspTimer (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001134 - 00001139 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx::?relay
                                   00001134        GAPRole_SetParameter (peripheral)
                                                   gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000113A - 0000113F (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerUpdate::?relay
                                   0000113A        osalTimeUpdate (OSAL_ClockBLE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001140 - 00001145 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_next_timeout::?relay
                                   00001140        osal_pwrmgr_powerconserve (OSAL_PwrMgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001146 - 0000114B (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock::?relay
                                   00001146        HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\OnBoard.r51
  PROGRAM MODULE, NAME : OnBoard

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007DC - 000007DC (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnboardKeyIntEnable     000007DC 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FC0 - 00000FC0 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   OnBoard_SendKeys
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           registeredKeysTaskID    00000FC0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CBFA - 0001CC1D (0x24 bytes), align: 0
  Segment part 10.            Intra module refs:   InitBoard::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard               0001CBFA 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CC1E - 0001CC22 (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001CC1E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CC23 - 0001CC4A (0x28 bytes), align: 0
  Segment part 13.            Intra module refs:   Onboard_rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand            0001CC23 
               calls direct
               XSTACK = 00000000 ( 00000002 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CC4B - 0001CC51 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   Onboard_rand
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001CC4B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CC52 - 0001CCE9 (0x98 bytes), align: 0
  Segment part 16.            Intra module refs:   _itoa::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _itoa                   0001CC52 
               XSTACK = 00000000 ( 00000015 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CCEA - 0001CD01 (0x18 bytes), align: 0
  Segment part 18.            Intra module refs:   RegisterForKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys         0001CCEA 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD02 - 0001CD43 (0x42 bytes), align: 0
  Segment part 20.            Intra module refs:   OnBoard_SendKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys        0001CD02 
               calls direct
               XSTACK = 00000009 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD44 - 0001CD88 (0x45 bytes), align: 0
  Segment part 22.            Intra module refs:   OnBoard_KeyCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback     0001CD44 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002FDD - 00002FE2 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_soft_reset      00002FDD        LL_ProcessEvent (ll)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000250 - 00000250 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   registeredKeysTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000114C - 00001151 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard::?relay       0000114C        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001152 - 00001157 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand::?relay    00001152        osal_rand (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001158 - 0000115D (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _itoa::?relay           00001158        _ltoa (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000115E - 00001163 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys::?relay
                                   0000115E        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001164 - 00001169 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys::?relay
                                   00001164 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000116A - 0000116F (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback::?relay
                                   0000116A 

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleBLEPeripheral_Main.r51
  PROGRAM MODULE, NAME : SimpleBLEPeripheral_Main

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000009D - 0000009D (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPSTA                0000009D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009E - 0000009E (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llRfInit (ll_common)
                                                   llSetFreqTune (ll_common)
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONSTA               0000009E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D867 - 0001D8BE (0x58 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0001D867        ?call_main (?cmain)
               calls direct

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleBLESPIFlash.r51
  PROGRAM MODULE, NAME : SimpleBLESPIFlash

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   HalLcd_HW_Control (hal_lcd)
                                                   HalLcd_HW_Init (hal_lcd)
                                                   HalLcd_HW_Write (hal_lcd)
                                                   HalLedEnterSleep (hal_led)
                                                   HalLedOnOff (hal_led)
                                                   HalSPIRead
                                                   HalSPIWrite
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   llExtendRfRange (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F8 - 000000F8 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalLcd_HW_Control (hal_lcd)
                                                   HalLcd_HW_Init (hal_lcd)
                                                   HalLcd_HW_Write (hal_lcd)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   xnvSPIWrite
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_U1CSR                000000F8 
           LOCAL                   ADDRESS         
           =====                   =======         
           U1CSR                   000000F8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F9 - 000000F9 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalLcd_HW_Control (hal_lcd)
                                                   HalLcd_HW_Write (hal_lcd)
                                                   HalSPIRead
                                                   HalSPIWrite
                                                   xnvSPIWrite
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1DBUF                  000000F9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FE - 000000FE (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   HalLcd_HW_Control (hal_lcd)
                                                   HalLcd_HW_Init (hal_lcd)
                                                   HalLcd_HW_Write (hal_lcd)
                                                   HalLedInit (hal_led)
                                                   HalSPIRead
                                                   HalSPIWrite
                                                   LL_PowerOffReq (ll_sleep)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   llExtendRfRange (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000FE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD89 - 0001CD93 (0xb bytes), align: 0
  Segment part 11.            Intra module refs:   xnvSPIWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xnvSPIWrite             0001CD89 
               XSTACK = 00000014 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD94 - 0001CE2C (0x99 bytes), align: 0
  Segment part 13.            Intra module refs:   HalSPIRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalSPIRead              0001CD94 
               calls direct
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE2D - 0001CE34 (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   HalSPIRead
                                                   HalSPIWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001CE2D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE35 - 0001CEFC (0xc8 bytes), align: 0
  Segment part 16.            Intra module refs:   HalSPIWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalSPIWrite             0001CE35 
               calls direct
               XSTACK = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085F1 - 000085F4 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   HalSPIWrite
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_100          000085F1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001170 - 00001175 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   HalSPIRead
                                                   HalSPIWrite
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xnvSPIWrite::?relay     00001170 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001176 - 0000117B (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalSPIRead::?relay      00001176        SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000117C - 00001181 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalSPIWrite::?relay     0000117C        simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085F1 - 000085F4 (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   __Constant_100

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleBLESerialUart.r51
  PROGRAM MODULE, NAME : SimpleBLESerialUart

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000FC1 - 00000FC1 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SBP_UART_STUDY_CMD      00000FC1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007DD - 000007DD (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           u_state                 000007DD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007DE - 000008DC (0xff bytes), align: 0
  Segment part 15.            Intra module refs:   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UartBuffer              000007DE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C11D - 0001C125 (0x9 bytes), align: 0
  Segment part 22.            Intra module refs:   SbpHalUART_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUART_Init         0001C11D 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C126 - 0001C196 (0x71 bytes), align: 0
  Segment part 24.            Intra module refs:   SbpHalUARTInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUARTInit          0001C126 
               calls direct
               XSTACK = 00000000 ( 0000001D )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C197 - 0001C1A3 (0xd bytes), align: 0
  Segment part 26.            Intra module refs:   studyCompletedAndBroadcastData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           studyCompletedAndBroadcastData
                                   0001C197 
               calls direct
               XSTACK = 00000009 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1A4 - 0001C1AA (0x7 bytes), align: 0
  Segment part 28.            Intra module refs:   SbpHalUARTInit
                                                   SbpHalUART_Init
                                                   studyCompletedAndBroadcastData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001C1A4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008DD - 000008DE (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine4
                                                   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numBytes                000008DD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008DF - 000008E0 (0x2 bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine3
                                                   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           point                   000008DF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008E1 - 000008E2 (0x2 bytes), align: 0
  Segment part 19.            Intra module refs:   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           irdatalen               000008E1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008E3 - 000009E1 (0xff bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine4
                                                   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pktBuffer               000008E3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009E2 - 000009E2 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   SbpHalUARTRead
                                                   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART_PORT_HAVE_READ     000009E2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1AB - 0001C2E4 (0x13a bytes), align: 0
  Segment part 29.            Intra module refs:   SbpHalUARTReadCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUARTReadCallback
                                   0001C1AB 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2E5 - 0001C2EE (0xa bytes), align: 0
  Segment part 31.            Intra module refs:   SbpHalUARTReadCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001C2E5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2EF - 0001C2F1 (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   SbpHalUARTReadCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001C2EF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2F2 - 0001C2F9 (0x8 bytes), align: 0
  Segment part 33.            Intra module refs:   ?Subroutine2
                                                   SbpHalUARTReadCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2FA - 0001C2FF (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   SbpHalUARTReadCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001C2FA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C300 - 0001C314 (0x15 bytes), align: 0
  Segment part 35.            Intra module refs:   SbpHalUARTRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUARTRead          0001C300 
               calls direct
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C315 - 0001C321 (0xd bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine1
                                                   SbpHalUARTRead
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001C315 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000251 - 00000251 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   SBP_UART_STUDY_CMD
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001182 - 00001187 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUART_Init::?relay
                                   00001182        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001188 - 0000118D (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   SbpHalUART_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUARTInit::?relay
                                   00001188 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000118E - 00001193 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           studyCompletedAndBroadcastData::?relay
                                   0000118E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001194 - 00001199 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   SbpHalUARTInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUARTReadCallback::?relay
                                   00001194 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000119A - 0000119F (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   SbpHalUARTReadCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SbpHalUARTRead::?relay
                                   0000119A 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008528 - 00008531 (0xa bytes), align: 0
  Segment part 6.             Intra module refs:   studyCompletedAndBroadcastData
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000855A - 00008562 (0x9 bytes), align: 0
  Segment part 7.             Intra module refs:   SbpHalUARTReadCallback
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084EB - 000084F5 (0xb bytes), align: 0
  Segment part 8.             Intra module refs:   SbpHalUARTReadCallback
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008532 - 0000853B (0xa bytes), align: 0
  Segment part 9.             Intra module refs:   SbpHalUARTReadCallback
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008528 - 00008531 (0xa bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000855A - 00008562 (0x9 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084EB - 000084F5 (0xb bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008532 - 0000853B (0xa bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 9

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleDS18B20.r51
  PROGRAM MODULE, NAME : SimpleDS18B20

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   HalKeyPoll (hal_key)
                                                   HalKeyRead (hal_key)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTPollDMA (hal_uart)
                                                   HalUARTReadDMA (hal_uart)
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   port0Isr (hal_uart)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   00000080 
           LOCAL                   ADDRESS         
           =====                   =======         
           P0                      00000080 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FD - 000000FD (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalKeyInit (hal_key)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTOpen (hal_uart)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   000000FD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001DA07 - 0001DA1E (0x18 bytes), align: 0
  Segment part 9.             Intra module refs:   delay_nus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_nus               0001DA07 
               XSTACK = 0000000C ( 00000000 )
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085F5 - 000085F8 (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   SM_VerifyAuthenSig (sm_mgr)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   findOffset (osal_snv)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     000085F5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011A0 - 000011A5 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_nus::?relay       000011A0        SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   simpleBLEPeripheral_HandleKeys (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085F5 - 000085F8 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   __Constant_ffffffff

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleEepromUtils.r51
    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleRTCInterrupt.r51
  PROGRAM MODULE, NAME : SimpleRTCInterrupt

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000008A - 0000008A (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   RTCInterruptIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IFG                   0000008A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008C - 0000008C (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalKeyConfig (hal_key)
                                                   HalUARTInitDMA (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PICTL                   0000008C 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008D - 0000008D (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IEN                   0000008D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   HalKeyConfig (hal_key)
                                                   halSleep (hal_sleep)
                                                   halUart0TxIsr (hal_uart)
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    0000009A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E8 - 000000E8 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalUARTOpen (hal_uart)
                                                   RTCInterruptIsr
                                                   halKeyPort2Isr (hal_key)
                                                   halUart0TxIsr (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON2               000000E8 
           LOCAL                   ADDRESS         
           =====                   =======         
           IRCON2                  000000E8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F4 - 000000F4 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalLcd_HW_Control (hal_lcd)
                                                   HalLcd_HW_Init (hal_lcd)
                                                   HalLcd_HW_Write (hal_lcd)
                                                   LL_PowerOffReq (ll_sleep)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   llExtendRfRange (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   000000F4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009E3 - 000009E6 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   RTCInterruptIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           k                       000009E3 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002FE3 - 00003054 (0x72 bytes), align: 0
  Segment part 20.            Intra module refs:   RTCInterruptIsr::??INTVEC 123
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTCInterruptIsr         00002FE3 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000001C )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000007D (0x7e bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTCInterruptIsr::??INTVEC 123
                                   0000007B 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085A2 - 000085A8 (0x7 bytes), align: 0
  Segment part 14.            Intra module refs:   RTCInterruptIsr
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008615 - 00008618 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   RTCInterruptIsr
                                                   gapIncSignCounter (gap_configmgr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            00008615 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008619 - 0000861C (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   RTCInterruptIsr
                                                   atoi (Simplepasscode)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_a            00008619 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085A2 - 000085A8 (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008615 - 00008618 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   __Constant_1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008619 - 0000861C (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   __Constant_a

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\SimpleTemperature.r51
  PROGRAM MODULE, NAME : SimpleTemperature

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   getTemperature
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 00000088 
           LOCAL                   ADDRESS         
           =====                   =======         
           TCON                    00000088 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B6 - 000000B6 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   HalAdcRead (hal_adc)
                                                   getTemperature
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON3                 000000B6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B8 - 000000B8 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalDmaInit (hal_dma)
                                                   HalKeyConfig (hal_key)
                                                   HalUARTOpen (hal_uart)
                                                   halSleep (hal_sleep)
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 000000B8 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN1                    000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BA - 000000BA (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalAdcRead (hal_adc)
                                                   getTemperature
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCL                    000000BA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BB - 000000BB (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   HalAdcRead (hal_adc)
                                                   getTemperature
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCH                    000000BB 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D79F - 0001D807 (0x69 bytes), align: 0
  Segment part 18.            Intra module refs:   getTemperature::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getTemperature          0001D79F 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000861D - 00008620 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   getTemperature
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_c4aaf000     0000861D 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008621 - 00008624 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   getTemperature
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_40900000     00008621 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008625 - 00008628 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   getTemperature
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_41200000     00008625 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011A6 - 000011AB (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getTemperature::?relay
                                   000011A6        simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000861D - 00008620 (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   __Constant_c4aaf000
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008621 - 00008624 (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   __Constant_40900000
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008625 - 00008628 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   __Constant_41200000

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\Simplepasscode.r51
  PROGRAM MODULE, NAME : Simplepasscode

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000009E7 - 000009E7 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine1
                                                   set_de_passkey
                                                   set_new_passkey
                                                   set_passkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           passkey_flag            000009E7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009E8 - 000009EB (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   set_new_passkey
                                                   set_passkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           newpasskey              000009E8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009EC - 000009FF (0x14 bytes), align: 0
  Segment part 11.            Intra module refs:   set_code_name
                                                   set_passkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           newname                 000009EC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A00 - 00000A00 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   set_code_name
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           code_flag               00000A00 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A01 - 00000A01 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   set_code_name
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           name_flag               00000A01 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FC2 - 00000FD5 (0x14 bytes), align: 0
  Segment part 14.            Intra module refs:   set_de_passkey
           LOCAL                   ADDRESS         
           =====                   =======         
           attDeviceName           00000FC2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A8BD - 0001A968 (0xac bytes), align: 0
  Segment part 17.            Intra module refs:   set_de_passkey::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_de_passkey          0001A8BD 
               calls direct
               XSTACK = 0000000A ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A969 - 0001AA2C (0xc4 bytes), align: 0
  Segment part 19.            Intra module refs:   set_new_passkey::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_new_passkey         0001A969 
               calls direct
               XSTACK = 00000018 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AA2D - 0001AA34 (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   set_code_name
                                                   set_new_passkey
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001AA2D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AA35 - 0001AA3E (0xa bytes), align: 0
  Segment part 22.            Intra module refs:   set_de_passkey
                                                   set_new_passkey
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001AA35 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AA3F - 0001AA48 (0xa bytes), align: 0
  Segment part 23.            Intra module refs:   set_de_passkey
                                                   set_new_passkey
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001AA3F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AA49 - 0001AAA0 (0x58 bytes), align: 0
  Segment part 24.            Intra module refs:   set_passkey::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_passkey             0001AA49 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AAA1 - 0001AB07 (0x67 bytes), align: 0
  Segment part 26.            Intra module refs:   atoi::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           atoi                    0001AAA1 
               XSTACK = 00000016 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB08 - 0001AC15 (0x10e bytes), align: 0
  Segment part 28.            Intra module refs:   set_code_name::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_code_name           0001AB08 
               calls direct
               XSTACK = 00000000 ( 00000018 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC16 - 0001AC20 (0xb bytes), align: 0
  Segment part 30.            Intra module refs:   set_code_name
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001AC16 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000252 - 00000265 (0x14 bytes), align: 0
  Segment part 15.            Intra module refs:   attDeviceName
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011AC - 000011B1 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   set_passkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_de_passkey::?relay
                                   000011AC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011B2 - 000011B7 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   set_code_name
                                                   set_passkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_new_passkey::?relay
                                   000011B2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011B8 - 000011BD (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_passkey::?relay     000011B8        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011BE - 000011C3 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   set_code_name
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           atoi::?relay            000011BE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011C4 - 000011C9 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_code_name::?relay   000011C4        simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085C7 - 000085CC (0x6 bytes), align: 0
  Segment part 6.             Intra module refs:   set_code_name
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085C7 - 000085CC (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 6

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\battservice.r51
  PROGRAM MODULE, NAME : battservice

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008659 - 0000865A (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   battService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           battServUUID            00008659 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008657 - 00008658 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           battLevelUUID           00008657 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A02 - 00000A03 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   battWriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceCB           00000A02 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A04 - 00000A05 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceSetupCB      00000A04 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A06 - 00000A07 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceTeardownCB   00000A06 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A08 - 00000A09 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceCalcCB       00000A08 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FD6 - 00000FD7 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine5
                                                   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battMinLevel            00000FD6 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FD8 - 00000FD9 (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battMaxLevel            00000FD8 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FDA - 00000FDA (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceAdcCh        00000FDA 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008644 - 00008646 (0x3 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           battService             00008644 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FDB - 00000FDB (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           battLevelProps          00000FDB 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FDC - 00000FDC (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 29
                                                   battReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           battLevel               00000FDC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A0A - 00000A0F (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   Batt_AddService
                                                   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           battLevelClientCharCfg
                                   00000A0A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FDD - 00000FDE (0x2 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           hidReportRefBattLevel   00000FDD 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000FDF - 00001006 (0x28 bytes), align: 0
  Segment part 28.            Intra module refs:   Batt_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           battAttrTbl             00000FDF 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085B5 - 000085BA (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   Batt_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           battCBs                 000085B5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA49 - 0001BA73 (0x2b bytes), align: 0
  Segment part 31.            Intra module refs:   Batt_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_AddService         0001BA49 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA74 - 0001BA78 (0x5 bytes), align: 0
  Segment part 33.            Intra module refs:   Batt_AddService
                                                   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001BA74 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA79 - 0001BB23 (0xab bytes), align: 0
  Segment part 46.            Intra module refs:   battReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           battReadAttrCB          0001BA79 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BB24 - 0001BBAA (0x87 bytes), align: 0
  Segment part 48.            Intra module refs:   battWriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           battWriteAttrCB         0001BB24 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BBAB - 0001BBB8 (0xe bytes), align: 0
  Segment part 50.            Intra module refs:   battReadAttrCB
                                                   battWriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001BBAB 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BBB9 - 0001BBBB (0x3 bytes), align: 0
  Segment part 53.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001BBB9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BBBC - 0001BBBF (0x4 bytes), align: 0
  Segment part 54.            Intra module refs:   ?Subroutine5
                                                   battMeasure
                                                   battReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BBC0 - 0001BBC5 (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine4
                                                   Segment part 54
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001BBC0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BBC6 - 0001BC86 (0xc1 bytes), align: 0
  Segment part 58.            Intra module refs:   battMeasure::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           battMeasure             0001BBC6 
               calls direct
               XSTACK = 0000000B ( 0000000A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BC87 - 0001BC8C (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   battMeasure
                                                   battWriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001BC87 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BC8D - 0001BC92 (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   battMeasure
                                                   battWriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001BC8D 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000266 - 00000267 (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   battMinLevel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000268 - 00000269 (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   battMaxLevel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000026A - 0000026A (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   battServiceAdcCh
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000026B - 0000026B (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   battLevelProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000026C - 0000026C (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   battLevel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000026D - 0000026E (0x2 bytes), align: 0
  Segment part 27.            Intra module refs:   hidReportRefBattLevel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000026F - 00000296 (0x28 bytes), align: 0
  Segment part 29.            Intra module refs:   battAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011CA - 000011CF (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_AddService::?relay
                                   000011CA        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011D0 - 000011D5 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   battCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           battReadAttrCB::?relay
                                   000011D0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011D6 - 000011DB (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   battCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           battWriteAttrCB::?relay
                                   000011D6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011DC - 000011E1 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   battReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           battMeasure::?relay     000011DC 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008659 - 0000865A (0x2 bytes), align: 0
  Segment part 64.            Intra module refs:   battServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008657 - 00008658 (0x2 bytes), align: 0
  Segment part 65.            Intra module refs:   battLevelUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008644 - 00008646 (0x3 bytes), align: 0
  Segment part 66.            Intra module refs:   battService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085B5 - 000085BA (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   battCBs

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\devinfoservice.r51
  PROGRAM MODULE, NAME : devinfoservice

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008653 - 00008654 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   devInfoService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoServUUID         00008653 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000864F - 00008650 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoSystemIdUUID     0000864F 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000864D - 0000864E (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoModelNumberUUID
                                   0000864D 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000864B - 0000864C (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoSerialNumberUUID
                                   0000864B 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008649 - 0000864A (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoFirmwareRevUUID
                                   00008649 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000867F - 00008680 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoHardwareRevUUID
                                   0000867F 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008655 - 00008656 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoSoftwareRevUUID
                                   00008655 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000865B - 0000865C (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoMfrNameUUID      0000865B 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000865F - 00008660 (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfo11073CertUUID    0000865F 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000866D - 0000866E (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoPnpIdUUID        0000866D 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008638 - 0000863A (0x3 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoService          00008638 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001007 - 00001007 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSystemIdProps    00001007 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A10 - 00000A17 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   DevInfo_SetParameter
                                                   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSystemId         00000A10 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001008 - 00001008 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoModelNumberProps
                                   00001008 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084C6 - 000084D2 (0xd bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoModelNumber      000084C6 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001009 - 00001009 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSerialNumberProps
                                   00001009 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000849E - 000084AB (0xe bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSerialNumber     0000849E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000100A - 0000100A (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoFirmwareRevProps
                                   0000100A 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008388 - 00008399 (0x12 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoFirmwareRev      00008388 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000100B - 0000100B (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoHardwareRevProps
                                   0000100B 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000839A - 000083AB (0x12 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoHardwareRev      0000839A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000100C - 0000100C (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSoftwareRevProps
                                   0000100C 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000083AC - 000083BD (0x12 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSoftwareRev      000083AC 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000100D - 0000100D (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoMfrNameProps     0000100D 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000083BE - 000083CF (0x12 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoMfrName          000083BE 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000100E - 0000100E (0x1 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo11073CertProps   0000100E 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008490 - 0000849D (0xe bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo11073Cert        00008490 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000100F - 0000100F (0x1 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoPnpIdProps       0000100F 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001010 - 00001016 (0x7 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoPnpId            00001010 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001017 - 000010AE (0x98 bytes), align: 0
  Segment part 45.            Intra module refs:   DevInfo_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoAttrTbl          00001017 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085C1 - 000085C6 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   DevInfo_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoCBs              000085C1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B51B - 0001B53A (0x20 bytes), align: 0
  Segment part 48.            Intra module refs:   DevInfo_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_AddService      0001B51B 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B53B - 0001B53F (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   DevInfo_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001B53B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B540 - 0001B569 (0x2a bytes), align: 0
  Segment part 51.            Intra module refs:   DevInfo_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_SetParameter    0001B540 
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B56A - 0001B7B9 (0x250 bytes), align: 0
  Segment part 55.            Intra module refs:   devInfo_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo_ReadAttrCB      0001B56A 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 00000019 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B7BA - 0001B7C1 (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001B7BA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B7C2 - 0001B7C8 (0x7 bytes), align: 0
  Segment part 58.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001B7C2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B7C9 - 0001B7D1 (0x9 bytes), align: 0
  Segment part 59.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001B7C9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B7D2 - 0001B7DA (0x9 bytes), align: 0
  Segment part 60.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001B7D2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B7DB - 0001B7E6 (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001B7DB 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000297 - 00000297 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   devInfoSystemIdProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000298 - 00000298 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   devInfoModelNumberProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000299 - 00000299 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   devInfoSerialNumberProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000029A - 0000029A (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   devInfoFirmwareRevProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000029B - 0000029B (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   devInfoHardwareRevProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000029C - 0000029C (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   devInfoSoftwareRevProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000029D - 0000029D (0x1 bytes), align: 0
  Segment part 36.            Intra module refs:   devInfoMfrNameProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000029E - 0000029E (0x1 bytes), align: 0
  Segment part 39.            Intra module refs:   devInfo11073CertProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000029F - 0000029F (0x1 bytes), align: 0
  Segment part 42.            Intra module refs:   devInfoPnpIdProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000002A0 - 000002A6 (0x7 bytes), align: 0
  Segment part 44.            Intra module refs:   devInfoPnpId
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000002A7 - 0000033E (0x98 bytes), align: 0
  Segment part 46.            Intra module refs:   devInfoAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011E2 - 000011E7 (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_AddService::?relay
                                   000011E2        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011E8 - 000011ED (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_SetParameter::?relay
                                   000011E8        peripheralStateNotificationCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011EE - 000011F3 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   devInfoCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo_ReadAttrCB::?relay
                                   000011EE 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008653 - 00008654 (0x2 bytes), align: 0
  Segment part 62.            Intra module refs:   devInfoServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000864F - 00008650 (0x2 bytes), align: 0
  Segment part 63.            Intra module refs:   devInfoSystemIdUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000864D - 0000864E (0x2 bytes), align: 0
  Segment part 64.            Intra module refs:   devInfoModelNumberUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000864B - 0000864C (0x2 bytes), align: 0
  Segment part 65.            Intra module refs:   devInfoSerialNumberUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008649 - 0000864A (0x2 bytes), align: 0
  Segment part 66.            Intra module refs:   devInfoFirmwareRevUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000867F - 00008680 (0x2 bytes), align: 0
  Segment part 67.            Intra module refs:   devInfoHardwareRevUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008655 - 00008656 (0x2 bytes), align: 0
  Segment part 68.            Intra module refs:   devInfoSoftwareRevUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000865B - 0000865C (0x2 bytes), align: 0
  Segment part 69.            Intra module refs:   devInfoMfrNameUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000865F - 00008660 (0x2 bytes), align: 0
  Segment part 70.            Intra module refs:   devInfo11073CertUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000866D - 0000866E (0x2 bytes), align: 0
  Segment part 71.            Intra module refs:   devInfoPnpIdUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008638 - 0000863A (0x3 bytes), align: 0
  Segment part 72.            Intra module refs:   devInfoService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084C6 - 000084D2 (0xd bytes), align: 0
  Segment part 73.            Intra module refs:   devInfoModelNumber
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000849E - 000084AB (0xe bytes), align: 0
  Segment part 74.            Intra module refs:   devInfoSerialNumber
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008388 - 00008399 (0x12 bytes), align: 0
  Segment part 75.            Intra module refs:   devInfoFirmwareRev
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000839A - 000083AB (0x12 bytes), align: 0
  Segment part 76.            Intra module refs:   devInfoHardwareRev
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000083AC - 000083BD (0x12 bytes), align: 0
  Segment part 77.            Intra module refs:   devInfoSoftwareRev
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000083BE - 000083CF (0x12 bytes), align: 0
  Segment part 78.            Intra module refs:   devInfoMfrName
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008490 - 0000849D (0xe bytes), align: 0
  Segment part 79.            Intra module refs:   devInfo11073Cert
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085C1 - 000085C6 (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   devInfoCBs

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\gap.r51
  PROGRAM MODULE, NAME : gap

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D8BF - 0001D914 (0x56 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_DeviceInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_DeviceInit          0001D8BF 
               calls direct
               XSTACK = 00000004 ( 00000011 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011F4 - 000011F9 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_DeviceInit::?relay
                                   000011F4        GAPRole_StartDevice (peripheral)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\gapbondmgr.r51
  PROGRAM MODULE, NAME : gapbondmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000A18 - 00000A18 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GAPBondMgr_Init
                                                   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_Register
                                                   gapBondMgrEraseBonding
                                                   gapBondMgrSendServiceChange
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_TaskID       00000A18 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010AF - 000010AF (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_PairingMode     000010AF 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010B0 - 000010B1 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_InitiateWait    000010B0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A19 - 00000A19 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_MITM            00000A19 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A1A - 00000A1A (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_IOCap           00000A1A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A1B - 00000A1B (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_OOBDataFlag     00000A1B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A1C - 00000A2B (0x10 bytes), align: 0
  Segment part 15.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_OOBData         00000A1C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A2C - 00000A2C (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_Bonding         00000A2C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A2D - 00000A2D (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_AutoFail        00000A2D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010B2 - 000010B2 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_AutoFailReason
                                   000010B2 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010B3 - 000010B3 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine17
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_KeyDistList     000010B3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A2E - 00000A31 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_Passcode        00000A2E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010B4 - 000010B4 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_KeySize         000010B4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A32 - 00000A33 (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine7
                                                   GAPBondMgr_Register
           LOCAL                   ADDRESS         
           =====                   =======         
           pGapBondCB              00000A32 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A34 - 00000ABF (0x8c bytes), align: 0
  Segment part 26.            Intra module refs:   GAPBondMgr_ResolveAddr
                                                   gapBondMgrAddBond
                                                   gapBondMgrBondTotal
                                                   gapBondMgrFindAddr
                                                   gapBondMgrReadBonds
                                                   gapBondMgr_SyncWhiteList
           LOCAL                   ADDRESS         
           =====                   =======         
           bonds                   00000A34 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AC0 - 00000AC0 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAddBond
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           autoSyncWhiteList       00000AC0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AC1 - 00000AC1 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           eraseAllBonds           00000AC1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AC2 - 00000ACB (0xa bytes), align: 0
  Segment part 29.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           bondsToDelete           00000AC2 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010B5 - 000010B5 (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   gapBondFreeAuthEvt
                                                   gapBondMgrAddBond
                                                   gapBondMgrEraseBonding
           LOCAL                   ADDRESS         
           =====                   =======         
           bondIdx                 000010B5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000ACC - 00000ACD (0x2 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine13
                                                   ?Subroutine14
                                                   ?Subroutine9
                                                   GAPBondMgr_ProcessGAPMsg
                                                   gapBondFreeAuthEvt
                                                   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           pAuthEvt                00000ACC 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006401 - 0000665B (0x25b bytes), align: 0
  Segment part 36.            Intra module refs:   GAPBondMgr_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_SetParameter
                                   00006401 
               calls direct
               XSTACK = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000665C - 00006665 (0xa bytes), align: 0
  Segment part 38.            Intra module refs:   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0000665C 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006666 - 00006806 (0x1a1 bytes), align: 0
  Segment part 41.            Intra module refs:   GAPBondMgr_LinkEst::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_LinkEst      00006666 
               calls direct
               XSTACK = 00000001 ( 00000046 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006807 - 000068BA (0xb4 bytes), align: 0
  Segment part 43.            Intra module refs:   GAPBondMgr_ResolveAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ResolveAddr
                                   00006807 
               calls direct
               XSTACK = 00000044 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000068BB - 00006943 (0x89 bytes), align: 0
  Segment part 45.            Intra module refs:   GAPBondMgr_ServiceChangeInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ServiceChangeInd
                                   000068BB 
               calls direct
               XSTACK = 0000000C ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006944 - 00006948 (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   gapBondMgrChangeState
                                                   gapBondMgrGetPublicAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00006944 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006949 - 0000694D (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   ?Subroutine1
                                                   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ServiceChangeInd
                                                   gapBondMgrFindAddr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000694E - 000069D2 (0x85 bytes), align: 0
  Segment part 49.            Intra module refs:   GAPBondMgr_UpdateCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_UpdateCharCfg
                                   0000694E 
               calls direct
               XSTACK = 0000000F ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000069D3 - 000069F7 (0x25 bytes), align: 0
  Segment part 51.            Intra module refs:   GAPBondMgr_Register::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Register     000069D3 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000069F8 - 00006D25 (0x32e bytes), align: 0
  Segment part 55.            Intra module refs:   GAPBondMgr_ProcessGAPMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessGAPMsg
                                   000069F8 
               calls direct
               XSTACK = 0000000C ( 00000026 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006D26 - 00006D28 (0x3 bytes), align: 0
  Segment part 57.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00006D26 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006D29 - 00006D2D (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   ?Subroutine0
                                                   GAPBondMgr_ResolveAddr
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006D2E - 00006D30 (0x3 bytes), align: 0
  Segment part 59.            Intra module refs:   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00006D2E 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006D31 - 00006D36 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   ?Subroutine12
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrChangeState
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006D37 - 00006D45 (0xf bytes), align: 0
  Segment part 61.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00006D37 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006D46 - 00006D4D (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
                                                   Segment part 103
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           00006D46 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006D4E - 00006DD3 (0x86 bytes), align: 0
  Segment part 63.            Intra module refs:   gapBondMgrChangeState::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrChangeState   00006D4E 
               calls direct
               XSTACK = 0000000C ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006DD4 - 00006EFA (0x127 bytes), align: 0
  Segment part 65.            Intra module refs:   gapBondMgrUpdateCharCfg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrUpdateCharCfg
                                   00006DD4 
               calls direct
               XSTACK = 0000000E ( 00000028 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EFB - 00006F00 (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   gapBondMgrInvertCharCfgItem
                                                   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00006EFB 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F01 - 00006F06 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   ?Subroutine18
                                                   GAPBondMgr_ProcessGAPMsg
                                                   gapBondMgrAddBond
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F07 - 00006F39 (0x33 bytes), align: 0
  Segment part 69.            Intra module refs:   gapBondMgrFindCharCfgItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindCharCfgItem
                                   00006F07 
               XSTACK = 00000028 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F3A - 00006F40 (0x7 bytes), align: 0
  Segment part 71.            Intra module refs:   GAPBondMgr_LinkEst
                                                   gapBondMgrFindCharCfgItem
                                                   gapBondMgrInvertCharCfgItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           00006F3A 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F41 - 00006F75 (0x35 bytes), align: 0
  Segment part 72.            Intra module refs:   gapBondMgrInvertCharCfgItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrInvertCharCfgItem
                                   00006F41 
               XSTACK = 00000044 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F76 - 00007105 (0x190 bytes), align: 0
  Segment part 74.            Intra module refs:   gapBondMgrAddBond::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAddBond       00006F76 
               calls direct
               XSTACK = 00000024 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007106 - 0000710E (0x9 bytes), align: 0
  Segment part 76.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           00007106 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000710F - 00007117 (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0000710F 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007118 - 00007122 (0xb bytes), align: 0
  Segment part 78.            Intra module refs:   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00007118 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007123 - 00007129 (0x7 bytes), align: 0
  Segment part 79.            Intra module refs:   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00007123 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000712A - 0000712F (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   ?Subroutine10
                                                   GAPBondMgr_LinkEst
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007130 - 00007135 (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   ?Subroutine16
                                                   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
                                                   Segment part 80
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           00007130 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007136 - 00007192 (0x5d bytes), align: 0
  Segment part 82.            Intra module refs:   gapBondMgrGetPublicAddr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrGetPublicAddr
                                   00007136 
               calls direct
               XSTACK = 00000010 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007193 - 000071DB (0x49 bytes), align: 0
  Segment part 84.            Intra module refs:   gapBondMgrFindAddr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindAddr      00007193 
               calls direct
               XSTACK = 0000001A ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000071DC - 00007246 (0x6b bytes), align: 0
  Segment part 86.            Intra module refs:   gapBondMgrResolvePrivateAddr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrResolvePrivateAddr
                                   000071DC 
               calls direct
               XSTACK = 00000010 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007247 - 000072B7 (0x71 bytes), align: 0
  Segment part 88.            Intra module refs:   gapBondMgrReadBonds::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrReadBonds     00007247 
               calls direct
               XSTACK = 00000024 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000072B8 - 000072E4 (0x2d bytes), align: 0
  Segment part 90.            Intra module refs:   gapBondMgrBondTotal::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondTotal     000072B8 
               calls direct
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000072E5 - 000072E9 (0x5 bytes), align: 0
  Segment part 92.            Intra module refs:   GAPBondMgr_Init
                                                   gapBondMgrBondTotal
                                                   gapBondMgrEraseAllBondings
                                                   gapBondMgrFindCharCfgItem
                                                   gapBondMgrInvertCharCfgItem
                                                   gapBondMgrReadBonds
                                                   gapBondMgrResolvePrivateAddr
                                                   gapBondMgr_SyncWhiteList
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000072E5 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000072EA - 00007301 (0x18 bytes), align: 0
  Segment part 93.            Intra module refs:   gapBondMgrEraseAllBondings::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseAllBondings
                                   000072EA 
               calls direct
               XSTACK = 00000024 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007302 - 00007442 (0x141 bytes), align: 0
  Segment part 95.            Intra module refs:   gapBondMgrEraseBonding::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseBonding
                                   00007302 
               calls direct
               XSTACK = 00000024 ( 00000042 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007443 - 0000744A (0x8 bytes), align: 0
  Segment part 97.            Intra module refs:   gapBondMgrBondReq
                                                   gapBondMgrEraseBonding
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00007443 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000744B - 0000745A (0x10 bytes), align: 0
  Segment part 98.            Intra module refs:   GAPBondMgr_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Init         0000744B 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000745B - 00007565 (0x10b bytes), align: 0
  Segment part 100.           Intra module refs:   GAPBondMgr_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessEvent
                                   0000745B 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007566 - 00007568 (0x3 bytes), align: 0
  Segment part 102.           Intra module refs:   GAPBondMgr_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00007566 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007569 - 00007570 (0x8 bytes), align: 0
  Segment part 103.           Intra module refs:   ?Subroutine9
                                                   gapBondMgr_SyncCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007571 - 00007575 (0x5 bytes), align: 0
  Segment part 106.           Intra module refs:   gapBondMgr_SyncCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00007571 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007576 - 0000758B (0x16 bytes), align: 0
  Segment part 107.           Intra module refs:   gapBondMgrSendServiceChange::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrSendServiceChange
                                   00007576 
               calls direct, is indirectly called
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000758C - 00007591 (0x6 bytes), align: 0
  Segment part 109.           Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0000758C 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007592 - 00007597 (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   ?Subroutine8
                                                   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
                                                   gapBondFreeAuthEvt
                                                   gapBondMgrSendServiceChange
                                                   gapBondMgr_SyncCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007598 - 000075C6 (0x2f bytes), align: 0
  Segment part 111.           Intra module refs:   gapBondSetupPrivFlag::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondSetupPrivFlag    00007598 
               calls direct
               XSTACK = 0000001A ( 00000001 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000075C7 - 000075CD (0x7 bytes), align: 0
  Segment part 113.           Intra module refs:   GAPBondMgr_Register
                                                   gapBondFreeAuthEvt
                                                   gapBondMgrSendServiceChange
                                                   gapBondSetupPrivFlag
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000075C7 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000075CE - 00007768 (0x19b bytes), align: 0
  Segment part 114.           Intra module refs:   gapBondMgrAuthenticate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAuthenticate
                                   000075CE 
               calls direct
               XSTACK = 00000024 ( 00000028 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007769 - 0000776B (0x3 bytes), align: 0
  Segment part 116.           Intra module refs:   gapBondMgrAddBond
                                                   gapBondMgrAuthenticate
                                                   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00007769 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000776C - 00007770 (0x5 bytes), align: 0
  Segment part 117.           Intra module refs:   ?Subroutine2
                                                   GAPBondMgr_UpdateCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007771 - 00007777 (0x7 bytes), align: 0
  Segment part 118.           Intra module refs:   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           00007771 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007778 - 00007781 (0xa bytes), align: 0
  Segment part 119.           Intra module refs:   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00007778 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007782 - 0000780E (0x8d bytes), align: 0
  Segment part 120.           Intra module refs:   gapBondMgrBondReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondReq       00007782 
               calls direct
               XSTACK = 00000045 ( 00000029 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000780F - 0000784D (0x3f bytes), align: 0
  Segment part 122.           Intra module refs:   gapBondMgr_SyncWhiteList::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncWhiteList
                                   0000780F 
               calls direct
               XSTACK = 0000001A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000784E - 0000795E (0x111 bytes), align: 0
  Segment part 124.           Intra module refs:   gapBondMgr_SyncCharCfg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncCharCfg
                                   0000784E 
               calls direct
               XSTACK = 0000000C ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000795F - 00007966 (0x8 bytes), align: 0
  Segment part 126.           Intra module refs:   gapBondMgr_SyncCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0000795F 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007967 - 00007969 (0x3 bytes), align: 0
  Segment part 127.           Intra module refs:   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00007967 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000796A - 00007971 (0x8 bytes), align: 0
  Segment part 128.           Intra module refs:   ?Subroutine7
                                                   GAPBondMgr_ProcessGAPMsg
                                                   gapBondFreeAuthEvt
                                                   gapBondMgrAddBond
                                                   gapBondMgr_SyncCharCfg
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000ACE - 00000ACF (0x2 bytes), align: 0
  Segment part 33.            Intra module refs:   gapBondMgr_SyncCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncCharCfg::pAttr
                                   00000ACE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AD0 - 00000AD1 (0x2 bytes), align: 0
  Segment part 34.            Intra module refs:   gapBondMgr_SyncCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncCharCfg::service
                                   00000AD0 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007972 - 00007996 (0x25 bytes), align: 0
  Segment part 129.           Intra module refs:   gapBondFreeAuthEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondFreeAuthEvt      00007972 
               calls direct
               XSTACK = 00000042 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000033F - 0000033F (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   gapBond_PairingMode
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000340 - 00000341 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   gapBond_InitiateWait
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000342 - 00000342 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   gapBond_AutoFailReason
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000343 - 00000343 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   gapBond_KeyDistList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000344 - 00000344 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   gapBond_KeySize
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000345 - 00000345 (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   bondIdx
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011FA - 000011FF (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_SetParameter::?relay
                                   000011FA        set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001200 - 00001205 (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_LinkEst::?relay
                                   00001200        gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001206 - 0000120B (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_ServiceChangeInd
                                                   GAPBondMgr_SetParameter
                                                   GAPBondMgr_UpdateCharCfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ResolveAddr::?relay
                                   00001206 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000120C - 00001211 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   GAPBondMgr_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ServiceChangeInd::?relay
                                   0000120C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001212 - 00001217 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   GAPBondMgr_ProcessEvent
                                                   gapBondMgr_SyncCharCfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_UpdateCharCfg::?relay
                                   00001212 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001218 - 0000121D (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Register::?relay
                                   00001218        SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000121E - 00001223 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   GAPBondMgr_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessGAPMsg::?relay
                                   0000121E        gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001224 - 00001229 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   GAPBondMgr_ServiceChangeInd
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrChangeState::?relay
                                   00001224 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000122A - 0000122F (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   GAPBondMgr_UpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrUpdateCharCfg::?relay
                                   0000122A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001230 - 00001235 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindCharCfgItem::?relay
                                   00001230 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001236 - 0000123B (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   GAPBondMgr_LinkEst
                                                   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrInvertCharCfgItem::?relay
                                   00001236 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000123C - 00001241 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAddBond::?relay
                                   0000123C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001242 - 00001247 (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   GAPBondMgr_ResolveAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrGetPublicAddr::?relay
                                   00001242 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001248 - 0000124D (0x6 bytes), align: 0
  Segment part 85.            Intra module refs:   GAPBondMgr_ResolveAddr
                                                   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindAddr::?relay
                                   00001248 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000124E - 00001253 (0x6 bytes), align: 0
  Segment part 87.            Intra module refs:   GAPBondMgr_ResolveAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrResolvePrivateAddr::?relay
                                   0000124E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001254 - 00001259 (0x6 bytes), align: 0
  Segment part 89.            Intra module refs:   GAPBondMgr_Init
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrReadBonds::?relay
                                   00001254 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000125A - 0000125F (0x6 bytes), align: 0
  Segment part 91.            Intra module refs:   gapBondSetupPrivFlag
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondTotal::?relay
                                   0000125A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001260 - 00001265 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseAllBondings::?relay
                                   00001260 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001266 - 0000126B (0x6 bytes), align: 0
  Segment part 96.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrEraseAllBondings
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseBonding::?relay
                                   00001266 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000126C - 00001271 (0x6 bytes), align: 0
  Segment part 99.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Init::?relay
                                   0000126C        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001272 - 00001277 (0x6 bytes), align: 0
  Segment part 101.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessEvent::?relay
                                   00001272        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001278 - 0000127D (0x6 bytes), align: 0
  Segment part 108.           Intra module refs:   GAPBondMgr_ServiceChangeInd
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrSendServiceChange::?relay
                                   00001278 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000127E - 00001283 (0x6 bytes), align: 0
  Segment part 112.           Intra module refs:   gapBondMgrAddBond
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondSetupPrivFlag::?relay
                                   0000127E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001284 - 00001289 (0x6 bytes), align: 0
  Segment part 115.           Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAuthenticate::?relay
                                   00001284 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000128A - 0000128F (0x6 bytes), align: 0
  Segment part 121.           Intra module refs:   GAPBondMgr_LinkEst
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondReq::?relay
                                   0000128A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001290 - 00001295 (0x6 bytes), align: 0
  Segment part 123.           Intra module refs:   gapBondMgrAddBond
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncWhiteList::?relay
                                   00001290 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001296 - 0000129B (0x6 bytes), align: 0
  Segment part 125.           Intra module refs:   GAPBondMgr_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncCharCfg::?relay
                                   00001296 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000129C - 000012A1 (0x6 bytes), align: 0
  Segment part 130.           Intra module refs:   GAPBondMgr_ProcessEvent
                                                   gapBondMgrEraseBonding
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondFreeAuthEvt::?relay
                                   0000129C 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085CD - 000085D2 (0x6 bytes), align: 0
  Segment part 6.             Intra module refs:   GAPBondMgr_LinkEst
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008631 - 00008634 (0x4 bytes), align: 0
  Segment part 35.            Intra module refs:   GAPBondMgr_SetParameter
                                                   GAP_PasscodeUpdate (gap_linkmgr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_f4240        00008631 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085CD - 000085D2 (0x6 bytes), align: 0
  Segment part 131.           Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008631 - 00008634 (0x4 bytes), align: 0
  Segment part 132.           Intra module refs:   __Constant_f4240

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\gatt_uuid.r51
  PROGRAM MODULE, NAME : gatt_uuid

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000867D - 0000867E (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapServiceUUID          0000867D        Segment part 7 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008647 - 00008648 (0x2 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattServiceUUID         00008647        Segment part 15 (gattservapp)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008651 - 00008652 (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           primaryServiceUUID      00008651        GATT_FindNextAttr (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   Segment part 20 (gattservapp)
                                                   Segment part 25 (gapgattserver)
                                                   Segment part 29 (battservice)
                                                   Segment part 46 (devinfoservice)
                                                   Segment part 59 (simpleGATTprofile)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000867B - 0000867C (0x2 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           secondaryServiceUUID    0000867B        GATTServApp_ReadAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_RegisterService (gatt_server)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000865D - 0000865E (0x2 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           characterUUID           0000865D        GATT_FindNextAttr (gatt_server)
                                                   Segment part 20 (gattservapp)
                                                   Segment part 25 (gapgattserver)
                                                   Segment part 29 (battservice)
                                                   Segment part 46 (devinfoservice)
                                                   Segment part 59 (simpleGATTprofile)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008661 - 00008662 (0x2 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           charUserDescUUID        00008661        Segment part 59 (simpleGATTprofile)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008663 - 00008664 (0x2 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clientCharCfgUUID       00008663        Segment part 20 (gattservapp)
                                                   Segment part 29 (battservice)
                                                   Segment part 59 (simpleGATTprofile)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008665 - 00008666 (0x2 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deviceNameUUID          00008665        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008667 - 00008668 (0x2 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           appearanceUUID          00008667        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008669 - 0000866A (0x2 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           periPrivacyFlagUUID     00008669        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000868D - 0000868E (0x2 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reconnectAddrUUID       0000868D        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008681 - 00008682 (0x2 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           periConnParamUUID       00008681        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008679 - 0000867A (0x2 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           serviceChangedUUID      00008679        GATT_ServiceChangedInd (gatt_server)
                                                   Segment part 20 (gattservapp)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000866F - 00008670 (0x2 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reportRefUUID           0000866F        Segment part 29 (battservice)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000867D - 0000867E (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   gapServiceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008647 - 00008648 (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   gattServiceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008651 - 00008652 (0x2 bytes), align: 0
  Segment part 31.            Intra module refs:   primaryServiceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000867B - 0000867C (0x2 bytes), align: 0
  Segment part 32.            Intra module refs:   secondaryServiceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000865D - 0000865E (0x2 bytes), align: 0
  Segment part 34.            Intra module refs:   characterUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008661 - 00008662 (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   charUserDescUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008663 - 00008664 (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   clientCharCfgUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008665 - 00008666 (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   deviceNameUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008667 - 00008668 (0x2 bytes), align: 0
  Segment part 42.            Intra module refs:   appearanceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008669 - 0000866A (0x2 bytes), align: 0
  Segment part 43.            Intra module refs:   periPrivacyFlagUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000868D - 0000868E (0x2 bytes), align: 0
  Segment part 44.            Intra module refs:   reconnectAddrUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008681 - 00008682 (0x2 bytes), align: 0
  Segment part 45.            Intra module refs:   periConnParamUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008679 - 0000867A (0x2 bytes), align: 0
  Segment part 46.            Intra module refs:   serviceChangedUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000866F - 00008670 (0x2 bytes), align: 0
  Segment part 49.            Intra module refs:   reportRefUUID

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_adc.r51
  PROGRAM MODULE, NAME : hal_adc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B4 - 000000B4 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   HalAdcRead
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 000000B4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCFG                  000000F2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AD2 - 00000AD2 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   HalAdcInit
                                                   HalAdcRead
                                                   HalAdcSetReference
           LOCAL                   ADDRESS         
           =====                   =======         
           adcRef                  00000AD2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D517 - 0001D51F (0x9 bytes), align: 0
  Segment part 12.            Intra module refs:   HalAdcInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit              0001D517 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D520 - 0001D527 (0x8 bytes), align: 0
  Segment part 14.            Intra module refs:   HalAdcInit
                                                   HalAdcSetReference
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001D520 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D528 - 0001D5CC (0xa5 bytes), align: 0
  Segment part 15.            Intra module refs:   HalAdcRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead              0001D528 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5CD - 0001D5D7 (0xb bytes), align: 0
  Segment part 17.            Intra module refs:   HalAdcSetReference::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcSetReference      0001D5CD 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012A2 - 000012A7 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit::?relay      000012A2        HalDriverInit (hal_drivers)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012A8 - 000012AD (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead::?relay      000012A8        battMeasure (battservice)
                                                   halGetJoyKeyInput (hal_key)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012AE - 000012B3 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcSetReference::?relay
                                   000012AE        battMeasure (battservice)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_aes.r51
  PROGRAM MODULE, NAME : hal_aes

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B3 - 000000B3 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCCS                   000000B3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D1 - 000000D1 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalFlashWrite (hal_flash)
                                                   HalUARTInitDMA (hal_uart)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
                                                   halDmaIsr (hal_dma)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  000000D1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D6 - 000000D6 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalFlashWrite (hal_flash)
                                                   HalUARTInitDMA (hal_uart)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  000000D6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D960 - 0001D997 (0x38 bytes), align: 0
  Segment part 10.            Intra module refs:   aesDmaInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit              0001D960 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D998 - 0001D99E (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   HalAesInit
                                                   aesDmaInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001D998 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D99F - 0001D9A8 (0xa bytes), align: 0
  Segment part 20.            Intra module refs:   HalAesInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit              0001D99F 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012B4 - 000012B9 (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   HalAesInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit::?relay      000012B4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012BA - 000012BF (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit::?relay      000012BA        HalDriverInit (hal_drivers)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_at24c32.r51
    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_crc.r51
  PROGRAM MODULE, NAME : hal_crc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000BC - 000000BC (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   LL_ENC_GenerateTrueRandNum (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDL                    000000BC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BD - 000000BD (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   LL_ENC_GenerateTrueRandNum (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDH                    000000BD 

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_dma.r51
  PROGRAM MODULE, NAME : hal_dma

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalUARTOpen (hal_uart)
                                                   halDmaIsr
                                                   halKeyPort0Isr (hal_key)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   halSleepTimerIsr (hal_sleep)
                                                   llClearSetInts (ll_common)
                                                   port0Isr (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                000000C0 
           LOCAL                   ADDRESS         
           =====                   =======         
           IRCON                   000000C0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D2 - 000000D2 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGL                000000D2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D3 - 000000D3 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGH                000000D3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D4 - 000000D4 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGL                000000D4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D5 - 000000D5 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGH                000000D5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AD3 - 00000ADA (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh0                  00000AD3        HalFlashWrite (hal_flash)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000ADB - 00000AFA (0x20 bytes), align: 0
  Segment part 16.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh1234               00000ADB        HalUARTInitDMA (hal_uart)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_InitAesDMA (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
                                                   aesDmaInit (hal_aes)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017FED - 00017FFF (0x13 bytes), align: 0
  Segment part 17.            Intra module refs:   HalDmaInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit              00017FED 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003055 - 0000307D (0x29 bytes), align: 0
  Segment part 19.            Intra module refs:   halDmaIsr::??INTVEC 67
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halDmaIsr               00003055 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000045 (0x46 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halDmaIsr::??INTVEC 67
                                   00000043 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012C0 - 000012C5 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit::?relay      000012C0        HalDriverInit (hal_drivers)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_drivers.r51
  PROGRAM MODULE, NAME : hal_drivers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000AFB - 00000AFB (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   Hal_Init
                                                   Hal_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_TaskID              00000AFB        HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalUARTPollDMA (hal_uart)
                                                   halProcessKeyInterrupt (hal_key)
                                                   port0Isr (hal_uart)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D354 - 0001D35C (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   Hal_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init                0001D354 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D35D - 0001D363 (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   HalDriverInit
                                                   Hal_Init
                                                   Hal_ProcessPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001D35D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D364 - 0001D37E (0x1b bytes), align: 0
  Segment part 11.            Intra module refs:   HalDriverInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit           0001D364 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D37F - 0001D432 (0xb4 bytes), align: 0
  Segment part 13.            Intra module refs:   Hal_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent        0001D37F 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D433 - 0001D43F (0xd bytes), align: 0
  Segment part 15.            Intra module refs:   Hal_ProcessPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll         0001D433 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085E5 - 000085E8 (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   HalLedUpdate (hal_led)
                                                   Hal_ProcessEvent
                                                   osal_snv_compact (osal_snv)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_64           000085E5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012C6 - 000012CB (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init::?relay        000012C6        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012CC - 000012D1 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit::?relay   000012CC        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012D2 - 000012D7 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent::?relay
                                   000012D2        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012D8 - 000012DD (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll::?relay
                                   000012D8        osal_run_system (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085E5 - 000085E8 (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   __Constant_64

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_ds1307.r51
  PROGRAM MODULE, NAME : hal_ds1307

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B7E7 - 0001B812 (0x2c bytes), align: 0
  Segment part 12.            Intra module refs:   HalDS1307ReadTimeData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDS1307ReadTimeData   0001B7E7 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B813 - 0001B817 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   showDate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001B813 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B818 - 0001B9C4 (0x1ad bytes), align: 0
  Segment part 21.            Intra module refs:   showDate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           showDate                0001B818 
               calls direct
               XSTACK = 00000009 ( 0000002D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9C5 - 0001B9CB (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   showDate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001B9C5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9CC - 0001B9D4 (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   showDate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001B9CC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9D5 - 0001B9E3 (0xf bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001B9D5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9E4 - 0001B9EE (0xb bytes), align: 0
  Segment part 26.            Intra module refs:   showDate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001B9E4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9EF - 0001BA01 (0x13 bytes), align: 0
  Segment part 27.            Intra module refs:   showDate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001B9EF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA02 - 0001BA48 (0x47 bytes), align: 0
  Segment part 28.            Intra module refs:   hex2char::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           hex2char                0001BA02 
               XSTACK = 0000002B ( 00000000 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012DE - 000012E3 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDS1307ReadTimeData::?relay
                                   000012DE        RTCInterruptIsr (SimpleRTCInterrupt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012E4 - 000012E9 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   HalDS1307ReadTimeData
           LOCAL                   ADDRESS         
           =====                   =======         
           showDate::?relay        000012E4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012EA - 000012EF (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   showDate
           LOCAL                   ADDRESS         
           =====                   =======         
           hex2char::?relay        000012EA 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000863B - 0000863D (0x3 bytes), align: 0
  Segment part 6.             Intra module refs:   showDate
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000863B - 0000863D (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 6

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_eeprom.r51
    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_flash.r51
  PROGRAM MODULE, NAME : hal_flash

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000C7 - 000000C7 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalFlashRead
                                                   __low_level_init (hal_startup)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MEMCTR                  000000C7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D159 - 0001D1DD (0x85 bytes), align: 0
  Segment part 10.            Intra module refs:   HalFlashRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashRead            0001D159 
               XSTACK = 00000002 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D1DE - 0001D243 (0x66 bytes), align: 0
  Segment part 12.            Intra module refs:   HalFlashWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashWrite           0001D1DE 
               XSTACK = 00000002 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D244 - 0001D25C (0x19 bytes), align: 0
  Segment part 14.            Intra module refs:   HalFlashErase::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashErase           0001D244 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012F0 - 000012F5 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashRead::?relay    000012F0        LL_Init (ll)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   initNV (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   verifyWordM (osal_snv)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012F6 - 000012FB (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashWrite::?relay   000012F6        llFindTxPowerSettings (ll_common)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012FC - 00001301 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashErase::?relay   000012FC        erasePage (osal_snv)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_i2c.r51
  PROGRAM MODULE, NAME : hal_i2c

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000AFC - 00000AFC (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   HalI2CInit
                                                   i2cMstStrt
           LOCAL                   ADDRESS         
           =====                   =======         
           i2cAddr                 00000AFC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CEFD - 0001CF30 (0x34 bytes), align: 0
  Segment part 7.             Intra module refs:   i2cMstStrt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           i2cMstStrt              0001CEFD 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF31 - 0001CF51 (0x21 bytes), align: 0
  Segment part 9.             Intra module refs:   HalI2CInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CInit              0001CF31 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF52 - 0001CF52 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   HalI2CInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001CF52 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF53 - 0001CF59 (0x7 bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine0
                                                   i2cMstStrt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF5A - 0001CFD0 (0x77 bytes), align: 0
  Segment part 13.            Intra module refs:   HalI2CRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CRead              0001CF5A 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CFD1 - 0001D037 (0x67 bytes), align: 0
  Segment part 15.            Intra module refs:   HalI2CWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CWrite             0001CFD1 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D038 - 0001D03A (0x3 bytes), align: 0
  Segment part 17.            Intra module refs:   HalI2CRead
                                                   HalI2CWrite
                                                   i2cMstStrt
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001D038 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D03B - 0001D03F (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine1
                                                   HalI2CRead
                                                   HalI2CWrite
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001302 - 00001307 (0x6 bytes), align: 0
  Segment part 8.             Intra module refs:   HalI2CRead
                                                   HalI2CWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           i2cMstStrt::?relay      00001302 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001308 - 0000130D (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CInit::?relay      00001308        HalDS1307ReadTimeData (hal_ds1307)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000130E - 00001313 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CRead::?relay      0000130E        HalSensorReadReg (hal_sensor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001314 - 00001319 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CWrite::?relay     00001314        HalSensorReadReg (hal_sensor)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_key.r51
  PROGRAM MODULE, NAME : hal_key

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000089 - 00000089 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalKeyConfig
                                                   HalUARTOpen (hal_uart)
                                                   halKeyPort0Isr
                                                   halProcessKeyInterrupt
                                                   port0Isr (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IFG                   00000089 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008B - 0000008B (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalKeyConfig
                                                   halKeyPort2Isr
                                                   halProcessKeyInterrupt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IFG                   0000008B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalKeyPoll
                                                   HalKeyRead
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P2                   000000A0 
           LOCAL                   ADDRESS         
           =====                   =======         
           P2                      000000A0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AB - 000000AB (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   HalKeyConfig
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTPollDMA (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IEN                   000000AB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AC - 000000AC (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   HalKeyConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IEN                   000000AC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F3 - 000000F3 (0x1 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   HalKeyInit
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTOpen (hal_uart)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   000000F3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F5 - 000000F5 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   HalKeyInit
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   000000F5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F7 - 000000F7 (0x1 bytes), align: 0
  Segment part 15. ROOT.      Intra module refs:   HalKeyInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2INP                   000000F7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FF - 000000FF (0x1 bytes), align: 0
  Segment part 17. ROOT.      Intra module refs:   HalKeyInit
                                                   HalUARTInitDMA (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   000000FF 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010B6 - 000010B6 (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   HalKeyPoll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           keypresslasttime        000010B6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AFD - 00000AFD (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           halKeySavedKeys         00000AFD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000AFE - 00000AFF (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   ?Subroutine3
                                                   HalKeyConfig
                                                   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           pHalKeyProcessFunction
                                   00000AFE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B00 - 00000B00 (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
           LOCAL                   ADDRESS         
           =====                   =======         
           HalKeyConfigured        00000B00 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B01 - 00000B01 (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   HalKeyConfig
                                                   HalKeyPoll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_KeyIntEnable        00000B01        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C513 - 0001C534 (0x22 bytes), align: 0
  Segment part 32.            Intra module refs:   HalKeyInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit              0001C513 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C535 - 0001C53B (0x7 bytes), align: 0
  Segment part 34.            Intra module refs:   HalKeyExitSleep
                                                   HalKeyInit
                                                   halProcessKeyInterrupt
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001C535 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C53C - 0001C5A1 (0x66 bytes), align: 0
  Segment part 35.            Intra module refs:   HalKeyConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig            0001C53C 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C5A2 - 0001C5BC (0x1b bytes), align: 0
  Segment part 37.            Intra module refs:   HalKeyRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead              0001C5A2 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C5BD - 0001C5C1 (0x5 bytes), align: 0
  Segment part 39.            Intra module refs:   HalKeyPoll
                                                   HalKeyRead
                                                   halGetJoyKeyInput
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001C5BD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C5C2 - 0001C64A (0x89 bytes), align: 0
  Segment part 40.            Intra module refs:   HalKeyPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll              0001C5C2 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C64B - 0001C656 (0xc bytes), align: 0
  Segment part 42.            Intra module refs:   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001C64B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C657 - 0001C6B1 (0x5b bytes), align: 0
  Segment part 43.            Intra module refs:   halGetJoyKeyInput::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halGetJoyKeyInput       0001C657 
               calls direct
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C6B2 - 0001C6EB (0x3a bytes), align: 0
  Segment part 45.            Intra module refs:   halProcessKeyInterrupt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessKeyInterrupt
                                   0001C6B2 
               calls direct
               XSTACK = 0000000E ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C6EC - 0001C6EE (0x3 bytes), align: 0
  Segment part 47.            Intra module refs:   HalKeyEnterSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyEnterSleep        0001C6EC 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C6EF - 0001C6F8 (0xa bytes), align: 0
  Segment part 49.            Intra module refs:   HalKeyExitSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyExitSleep         0001C6EF 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000307E - 00003099 (0x1c bytes), align: 0
  Segment part 51.            Intra module refs:   halKeyPort0Isr::??INTVEC 107
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr          0000307E 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000309A - 000030A6 (0xd bytes), align: 0
  Segment part 52.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort2Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000309A 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000030A7 - 000030C4 (0x1e bytes), align: 0
  Segment part 53.            Intra module refs:   halKeyPort2Isr::??INTVEC 51
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr          000030A7 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000035 (0x36 bytes), align: 0
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr::??INTVEC 51
                                   00000033 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000006D (0x6e bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr::??INTVEC 107
                                   0000006B 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000346 - 00000346 (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   keypresslasttime
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085ED - 000085F0 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   halProcessKeyInterrupt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_19           000085ED 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000131A - 0000131F (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit::?relay      0000131A        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001320 - 00001325 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig::?relay    00001320        InitBoard (OnBoard)
                                                   OnBoard_KeyCallback (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001326 - 0000132B (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   HalKeyExitSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead::?relay      00001326 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000132C - 00001331 (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll::?relay      0000132C        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001332 - 00001337 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   HalKeyPoll
                                                   HalKeyRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halGetJoyKeyInput::?relay
                                   00001332 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001338 - 0000133D (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort2Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessKeyInterrupt::?relay
                                   00001338 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000133E - 00001343 (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyEnterSleep::?relay
                                   0000133E        halSleep (hal_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001344 - 00001349 (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyExitSleep::?relay
                                   00001344        halSleep (hal_sleep)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085ED - 000085F0 (0x4 bytes), align: 0
  Segment part 54.            Intra module refs:   __Constant_19

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_lcd.r51
  PROGRAM MODULE, NAME : hal_lcd

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalLcd_HW_Init
                                                   HalUARTInitDMA (hal_uart)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCFG                  000000F1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FA - 000000FA (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalLcd_HW_Init
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1BAUD                  000000FA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FB - 000000FB (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   HalLcd_HW_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1UCR                   000000FB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FC - 000000FC (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   HalLcd_HW_Init
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1GCR                   000000FC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B02 - 00000B03 (0x2 bytes), align: 0
  Segment part 17.            Intra module refs:   HalLcdInit
                                                   HalLcdWriteString
           LOCAL                   ADDRESS         
           =====                   =======         
           Lcd_Line1               00000B02 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001949F - 000194D7 (0x39 bytes), align: 0
  Segment part 19.            Intra module refs:   set_ddram_line_col::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_ddram_line_col      0001949F 
               calls direct
               XSTACK = 0000000D ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000194D8 - 00019549 (0x72 bytes), align: 0
  Segment part 21.            Intra module refs:   DisplayByte_5x7::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DisplayByte_5x7         000194D8 
               calls direct
               XSTACK = 00000009 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001954A - 00019557 (0xe bytes), align: 0
  Segment part 23.            Intra module refs:   HalLcdInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit              0001954A 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019558 - 0001955E (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   HalLcdInit
                                                   HalLcd_HW_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00019558 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001955F - 00019672 (0x114 bytes), align: 0
  Segment part 26.            Intra module refs:   HalLcdWriteString::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteString       0001955F 
               calls direct, is recursive
               XSTACK = 0000002D ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019673 - 00019689 (0x17 bytes), align: 0
  Segment part 30.            Intra module refs:   HalLcdWriteStringValue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00019673 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001968A - 000196F9 (0x70 bytes), align: 0
  Segment part 33.            Intra module refs:   HalLcdWriteStringValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValue
                                   0001968A 
               calls direct
               XSTACK = 00000001 ( 0000002B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000196FA - 000196FD (0x4 bytes), align: 0
  Segment part 35.            Intra module refs:   HalLcdWriteStringValue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000196FA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000196FE - 00019705 (0x8 bytes), align: 0
  Segment part 36.            Intra module refs:   ?Subroutine4
                                                   HalLcdWriteString
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019706 - 000197CB (0xc6 bytes), align: 0
  Segment part 41.            Intra module refs:   HalLcd_HW_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Init          00019706 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000197CC - 000197E1 (0x16 bytes), align: 0
  Segment part 43.            Intra module refs:   HalLcd_HW_Control::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Control       000197CC 
               XSTACK = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000197E2 - 000197EA (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   HalLcd_HW_Control
                                                   HalLcd_HW_Write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000197E2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000197EB - 00019802 (0x18 bytes), align: 0
  Segment part 46.            Intra module refs:   HalLcd_HW_Write::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Write         000197EB 
               XSTACK = 0000000D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019803 - 00019811 (0xf bytes), align: 0
  Segment part 48.            Intra module refs:   HalLcd_HW_Control
                                                   HalLcd_HW_Write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00019803 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019812 - 0001983E (0x2d bytes), align: 0
  Segment part 51.            Intra module refs:   HalLcd_HW_Clear::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Clear         00019812 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001983F - 00019843 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   HalLcd_HW_Clear
                                                   HalLcd_HW_WriteChar
                                                   set_ddram_line_col
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001983F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019844 - 0001984E (0xb bytes), align: 0
  Segment part 54.            Intra module refs:   DisplayByte_5x7
                                                   HalLcd_HW_Clear
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00019844 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001984F - 00019866 (0x18 bytes), align: 0
  Segment part 57.            Intra module refs:   HalLcd_HW_WriteChar::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_WriteChar     0001984F 
               calls direct
               XSTACK = 0000000B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019867 - 000198B7 (0x51 bytes), align: 0
  Segment part 59.            Intra module refs:   HalLcd_HW_WriteLine::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_WriteLine     00019867 
               calls direct
               XSTACK = 00000012 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000198B8 - 000198EC (0x35 bytes), align: 0
  Segment part 61.            Intra module refs:   HalLcd_HW_WaitUs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_WaitUs        000198B8 
               XSTACK = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008000 - 000081DA (0x1db bytes), align: 0
  Segment part 18.            Intra module refs:   DisplayByte_5x7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ascii_table_5x7         00008000 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000134A - 0000134F (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   DisplayByte_5x7
                                                   HalLcd_HW_Clear
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_ddram_line_col::?relay
                                   0000134A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001350 - 00001355 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   HalLcd_HW_WriteChar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DisplayByte_5x7::?relay
                                   00001350 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001356 - 0000135B (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit::?relay      00001356        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000135C - 00001361 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   ?Subroutine3
                                                   HalLcdWriteString
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteString::?relay
                                   0000135C        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   set_code_name (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleBLEPeripheral_HandleKeys (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   studyCompletedAndBroadcastData (SimpleBLESerialUart)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001362 - 00001367 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValue::?relay
                                   00001362        SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001368 - 0000136D (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   HalLcdInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Init::?relay
                                   00001368 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000136E - 00001373 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   HalLcd_HW_Init
                                                   set_ddram_line_col
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Control::?relay
                                   0000136E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001374 - 00001379 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   DisplayByte_5x7
                                                   HalLcd_HW_Clear
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Write::?relay
                                   00001374 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000137A - 0000137F (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   HalLcd_HW_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_Clear::?relay
                                   0000137A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001380 - 00001385 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   HalLcd_HW_WriteLine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_WriteChar::?relay
                                   00001380 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001386 - 0000138B (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   HalLcdWriteString
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_WriteLine::?relay
                                   00001386 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000138C - 00001391 (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   HalLcd_HW_Init
                                                   set_ddram_line_col
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcd_HW_WaitUs::?relay
                                   0000138C 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000083E1 - 000083F1 (0x11 bytes), align: 0
  Segment part 15.            Intra module refs:   HalLcdWriteString
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008000 - 000081DA (0x1db bytes), align: 0
  Segment part 63.            Intra module refs:   ascii_table_5x7
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000083E1 - 000083F1 (0x11 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 15

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_led.r51
  PROGRAM MODULE, NAME : hal_led

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000B04 - 00000B04 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   HalLedBlink
                                                   HalLedOnOff
                                                   HalLedSet
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedState             00000B04 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B05 - 00000B05 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HalLedEnterSleep
                                                   HalLedExitSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           HalSleepLedState        00000B05 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B06 - 00000B06 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   HalLedBlink
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           preBlinkState           00000B06 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B07 - 00000B2B (0x25 bytes), align: 0
  Segment part 11.            Intra module refs:   ?Subroutine0
                                                   HalLedBlink
                                                   HalLedEnterSleep
                                                   HalLedSet
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedStatusControl     00000B07 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019D3A - 00019D50 (0x17 bytes), align: 0
  Segment part 13.            Intra module refs:   HalLedInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit              00019D3A 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019D51 - 00019DCA (0x7a bytes), align: 0
  Segment part 15.            Intra module refs:   HalLedSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet               00019D51 
               calls direct, is recursive
               XSTACK = 00000019 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019DCB - 00019EA5 (0xdb bytes), align: 0
  Segment part 17.            Intra module refs:   HalLedBlink::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink             00019DCB 
               calls direct, is recursive
               XSTACK = 0000000B ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019EA6 - 00019EAE (0x9 bytes), align: 0
  Segment part 19.            Intra module refs:   HalLedBlink
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00019EA6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019EAF - 0001A085 (0x1d7 bytes), align: 0
  Segment part 20.            Intra module refs:   HalLedUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate            00019EAF 
               calls direct
               XSTACK = 00000000 ( 0000001D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A086 - 0001A0DE (0x59 bytes), align: 0
  Segment part 22.            Intra module refs:   HalLedOnOff::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedOnOff             0001A086 
               XSTACK = 00000019 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0DF - 0001A0E2 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   HalLedExitSleep
                                                   HalLedInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001A0DF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0E3 - 0001A0E3 (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine0
                                                   HalLedOnOff
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0E4 - 0001A0EA (0x7 bytes), align: 0
  Segment part 26.            Intra module refs:   HalLedEnterSleep
                                                   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0EB - 0001A141 (0x57 bytes), align: 0
  Segment part 29.            Intra module refs:   HalLedEnterSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedEnterSleep        0001A0EB 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A142 - 0001A155 (0x14 bytes), align: 0
  Segment part 31.            Intra module refs:   HalLedExitSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedExitSleep         0001A142 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001392 - 00001397 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit::?relay      00001392        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001398 - 0000139D (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   HalLedBlink
                                                   HalLedInit
                                                   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet::?relay       00001398        InitBoard (OnBoard)
                                                   simpleBLEPeripheral_HandleKeys (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000139E - 000013A3 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   HalLedSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink::?relay     0000139E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013A4 - 000013A9 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   HalLedExitSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate::?relay    000013A4        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013AA - 000013AF (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   HalLedEnterSleep
                                                   HalLedExitSleep
                                                   HalLedSet
                                                   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedOnOff::?relay     000013AA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013B0 - 000013B5 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedEnterSleep::?relay
                                   000013B0        halSleep (hal_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013B6 - 000013BB (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedExitSleep::?relay
                                   000013B6        halSleep (hal_sleep)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_sensor.r51
  PROGRAM MODULE, NAME : hal_sensor

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D915 - 0001D95A (0x46 bytes), align: 0
  Segment part 10.            Intra module refs:   HalSensorReadReg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalSensorReadReg        0001D915 
               calls direct
               XSTACK = 0000000B ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D95B - 0001D95F (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   HalSensorReadReg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001D95B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013BC - 000013C1 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalSensorReadReg::?relay
                                   000013BC        HalDS1307ReadTimeData (hal_ds1307)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_sleep.r51
  PROGRAM MODULE, NAME : hal_sleep

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000087 - 00000087 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   halSetSleepMode
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PCON                    00000087 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000095 - 00000095 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalUARTPollDMA (hal_uart)
                                                   halSleepReadTimer
                                                   halSleepSetTimer
                                                   llGetFullCTandST (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST0                     00000095 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000096 - 00000096 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   halSleepReadTimer
                                                   halSleepSetTimer
                                                   llGetFullCTandST (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST1                     00000096 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000097 - 00000097 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   halSleepReadTimer
                                                   halSleepSetTimer
                                                   llGetFullCTandST (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST2                     00000097 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AD - 000000AD (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STLOAD                  000000AD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B2C - 00000B2C (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   halSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           halPwrMgtMode           00000B2C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B2D - 00000B2D (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   halSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           wakeForRF               00000B2D 
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA 0000001A - 0000001A (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   halSetSleepMode
                                                   halSleep
                                                   halSleepTimerIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepPconValue       0000001A        ?Subroutine2 (hal_key)
                                                   Hal_ProcessPoll (hal_drivers)
                                                   halDmaIsr (hal_dma)
                                                   port0Isr (hal_uart)
    -------------------------------------------------------------------------
SLEEP_CODE
  Relative segment, address: CODE 00007FF8 - 00007FFF (0x8 bytes), align: 0
  Segment part 27.            Intra module refs:   halSetSleepMode::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSetSleepMode         00007FF8 
               XSTACK = 00000018 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BED8 - 0001C069 (0x192 bytes), align: 0
  Segment part 29.            Intra module refs:   halSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleep                0001BED8 
               calls direct
               XSTACK = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C06A - 0001C072 (0x9 bytes), align: 0
  Segment part 31.            Intra module refs:   halSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001C06A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C073 - 0001C0D3 (0x61 bytes), align: 0
  Segment part 32.            Intra module refs:   halSleepSetTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepSetTimer        0001C073 
               XSTACK = 0000001C ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0D4 - 0001C119 (0x46 bytes), align: 0
  Segment part 34.            Intra module refs:   halSleepReadTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepReadTimer       0001C0D4 
               XSTACK = 00000018 ( 00000004 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C11A - 0001C11C (0x3 bytes), align: 0
  Segment part 38.            Intra module refs:   halRestoreSleepLevel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRestoreSleepLevel    0001C11A 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000030C5 - 000030E8 (0x24 bytes), align: 0
  Segment part 40.            Intra module refs:   halSleepTimerIsr::??INTVEC 43
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr        000030C5 
               interrupt function
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000002D (0x2e bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr::??INTVEC 43
                                   0000002B 
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE 0000014D - 0000014D (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   halSleepPconValue
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085F9 - 000085FC (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_9c41         000085F9 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085FD - 00008600 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_43           000085FD 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008601 - 00008604 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ff0001       00008601 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008605 - 00008608 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ff0000       00008605 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008609 - 0000860C (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_7d           00008609 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000860D - 00008610 (0x4 bytes), align: 0
  Segment part 26.            Intra module refs:   halSleepSetTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffe7     0000860D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013C2 - 000013C7 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSetSleepMode::?relay
                                   000013C2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013C8 - 000013CD (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleep::?relay        000013C8        osal_pwrmgr_powerconserve (OSAL_PwrMgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013CE - 000013D3 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepSetTimer::?relay
                                   000013CE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013D4 - 000013D9 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepReadTimer::?relay
                                   000013D4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013DA - 000013DF (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRestoreSleepLevel::?relay
                                   000013DA        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085F9 - 000085FC (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   __Constant_9c41
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085FD - 00008600 (0x4 bytes), align: 0
  Segment part 42.            Intra module refs:   __Constant_43
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008601 - 00008604 (0x4 bytes), align: 0
  Segment part 43.            Intra module refs:   __Constant_ff0001
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008605 - 00008608 (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   __Constant_ff0000
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008609 - 0000860C (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   __Constant_7d
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000860D - 00008610 (0x4 bytes), align: 0
  Segment part 46.            Intra module refs:   __Constant_ffffffe7

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_startup.r51
  PROGRAM MODULE, NAME : hal_startup

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000086 - 00000090 (0xb bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        00000086        __low_level_init_call (?cmain)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_timer.r51
    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\hal_uart.r51
  PROGRAM MODULE, NAME : hal_uart

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000086 - 00000086 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalUARTBusyDMA
                                                   HalUARTInitDMA
                                                   HalUARTOpen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0CSR                   00000086 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C1 - 000000C1 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   halUart0TxIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0DBUF                  000000C1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   HalUARTInitDMA
                                                   HalUARTOpen
                                                   HalUARTReadDMA
                                                   HalUARTRxAvailDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0BAUD                  000000C2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C4 - 000000C4 (0x1 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   HalUARTInitDMA
                                                   HalUARTOpen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0UCR                   000000C4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C5 - 000000C5 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   HalUARTOpen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0GCR                   000000C5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B2E - 00000B2E (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   HalUARTPollDMA
                                                   port0Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           dmaRdyIsr               00000B2E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B2F - 00000B2F (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   HalUARTPollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           dmaRdyDly               00000B2F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000B30 - 00000CB6 (0x187 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine3
                                                   HalUARTBusyDMA
                                                   HalUARTInitDMA
                                                   HalUARTOpen
                                                   HalUARTPollDMA
                                                   HalUARTReadDMA
                                                   HalUARTRxAvailDMA
                                                   halUart0TxIsr
                                                   port0Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           dmaCfg                  00000B30 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC21 - 0001ACB6 (0x96 bytes), align: 0
  Segment part 33.            Intra module refs:   HalUARTInitDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTInitDMA          0001AC21 
               calls direct
               XSTACK = 00000000 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ACB7 - 0001ACBB (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   HalUARTBusyDMA
                                                   HalUARTInitDMA
                                                   HalUARTPollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001ACB7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ACBC - 0001AD3F (0x84 bytes), align: 0
  Segment part 36.            Intra module refs:   HalUARTReadDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTReadDMA          0001ACBC 
               XSTACK = 00000009 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AD40 - 0001AE01 (0xc2 bytes), align: 0
  Segment part 40.            Intra module refs:   HalUARTPollDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTPollDMA          0001AD40 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CB7 - 00000CB7 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   HalUARTRxAvailDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sweepIdx                00000CB7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE02 - 0001AE61 (0x60 bytes), align: 0
  Segment part 42.            Intra module refs:   HalUARTRxAvailDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTRxAvailDMA       0001AE02 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE62 - 0001AE76 (0x15 bytes), align: 0
  Segment part 44.            Intra module refs:   HalUARTRxAvailDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001AE62 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE77 - 0001AE9E (0x28 bytes), align: 0
  Segment part 45.            Intra module refs:   HalUARTBusyDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTBusyDMA          0001AE77 
               calls direct
               XSTACK = 0000000A ( 0000000A )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000030E9 - 00003123 (0x3b bytes), align: 0
  Segment part 71.            Intra module refs:   port0Isr::??INTVEC 107
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port0Isr                000030E9 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003124 - 0000318D (0x6a bytes), align: 0
  Segment part 72.            Intra module refs:   halUart0TxIsr::??INTVEC 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart0TxIsr           00003124 
               interrupt function
               ISTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE9F - 0001AEA7 (0x9 bytes), align: 0
  Segment part 49.            Intra module refs:   HalUARTInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit             0001AE9F 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AEA8 - 0001AF10 (0x69 bytes), align: 0
  Segment part 51.            Intra module refs:   HalUARTOpen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen             0001AEA8 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF11 - 0001AF17 (0x7 bytes), align: 0
  Segment part 53.            Intra module refs:   HalUARTInit
                                                   HalUARTOpen
                                                   HalUARTPoll
                                                   HalUARTRxAvailDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001AF11 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF18 - 0001AF2A (0x13 bytes), align: 0
  Segment part 54.            Intra module refs:   HalUARTRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead             0001AF18 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF2B - 0001AF2F (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   HalUARTRead
                                                   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001AF2B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF30 - 0001AF38 (0x9 bytes), align: 0
  Segment part 63.            Intra module refs:   HalUARTPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTPoll             0001AF30 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF39 - 0001AF4B (0x13 bytes), align: 0
  Segment part 65.            Intra module refs:   Hal_UART_RxBufLen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen       0001AF39 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF4C - 0001AF4E (0x3 bytes), align: 0
  Segment part 69.            Intra module refs:   HalUARTIsrDMA::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTIsrDMA           0001AF4C 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000003D (0x3e bytes), align: 0
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart0TxIsr::??INTVEC 59
                                   0000003B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000006D (0x6e bytes), align: 0
  Segment part 23. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port0Isr::??INTVEC 107
                                   0000006B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013E0 - 000013E5 (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   HalUARTInit
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTInitDMA::?relay
                                   000013E0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013E6 - 000013EB (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   HalUARTRead
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTReadDMA::?relay
                                   000013E6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013EC - 000013F1 (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTPollDMA::?relay
                                   000013EC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013F2 - 000013F7 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   HalUARTBusyDMA
                                                   HalUARTPollDMA
                                                   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTRxAvailDMA::?relay
                                   000013F2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013F8 - 000013FD (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   HalUARTPollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTBusyDMA::?relay
                                   000013F8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013FE - 00001403 (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit::?relay     000013FE        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001404 - 00001409 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen::?relay     00001404        SbpHalUARTInit (SimpleBLESerialUart)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000140A - 0000140F (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead::?relay     0000140A        SbpHalUARTRead (SimpleBLESerialUart)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001410 - 00001415 (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTPoll::?relay     00001410        Hal_ProcessPoll (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001416 - 0000141B (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen::?relay
                                   00001416        SbpHalUARTReadCallback (SimpleBLESerialUart)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000141C - 00001421 (0x6 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTIsrDMA::?relay   0000141C        halDmaIsr (hal_dma)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\npi.r51
    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\osal_bufmgr.r51
  PROGRAM MODULE, NAME : osal_bufmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000CB8 - 00000CB9 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine2
                                                   osal_bm_alloc
                                                   osal_bm_free
           LOCAL                   ADDRESS         
           =====                   =======         
           bm_list_ptr             00000CB8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA58 - 0001CAA4 (0x4d bytes), align: 0
  Segment part 8.             Intra module refs:   osal_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_alloc           0001CA58 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAA5 - 0001CAA9 (0x5 bytes), align: 0
  Segment part 10.            Intra module refs:   osal_bm_adjust_header
                                                   osal_bm_alloc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001CAA5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAAA - 0001CB33 (0x8a bytes), align: 0
  Segment part 11.            Intra module refs:   osal_bm_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_free            0001CAAA 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB34 - 0001CB9A (0x67 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_bm_adjust_header::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_adjust_header   0001CB34 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB9B - 0001CBDC (0x42 bytes), align: 0
  Segment part 17.            Intra module refs:   bm_desc_from_payload::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           bm_desc_from_payload    0001CB9B 
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CBDD - 0001CBDF (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   bm_desc_from_payload
                                                   osal_bm_alloc
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001CBDD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CBE0 - 0001CBE5 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine2
                                                   bm_desc_from_payload
                                                   osal_bm_free
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001CBE6 - 0001CBF9 (0x14 bytes), align: 0
  Segment part 21.            Intra module refs:   bm_desc_from_payload
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001CBE6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001422 - 00001427 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_alloc::?relay   00001422        LL_RX_bm_alloc (ll)
                                                   LL_TX_bm_alloc (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001428 - 0000142D (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_free::?relay    00001428        HCI_ProcessEvent (hci_tl)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   attSendMsg (att_util)
                                                   gattProcessRxData (gatt_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   llConnCleanup (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llProcessTxData (ll_common)
                                                   smProcessOSALMsg (sm_task)
                                                   smSendSMMsg (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000142E - 00001433 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_adjust_header::?relay
                                   0000142E        L2CAP_bm_alloc (l2cap_util)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capParsePacket (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001434 - 00001439 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_bm_adjust_header
           LOCAL                   ADDRESS         
           =====                   =======         
           bm_desc_from_payload::?relay
                                   00001434 

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\osal_cbtimer.r51
  PROGRAM MODULE, NAME : osal_cbtimer

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 000010B7 - 000010B8 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   osal_CbTimerInit
                                                   osal_CbTimerProcessEvent
                                                   osal_CbTimerStart
                                                   osal_CbTimerStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           baseTaskID              000010B7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CBA - 00000CF5 (0x3c bytes), align: 0
  Segment part 8.             Intra module refs:   ?Subroutine1
                                                   osal_CbTimerInit
                                                   osal_CbTimerStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cbTimers                00000CBA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BC93 - 0001BCBC (0x2a bytes), align: 0
  Segment part 9.             Intra module refs:   osal_CbTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerInit        0001BC93 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BCBD - 0001BD8A (0xce bytes), align: 0
  Segment part 11.            Intra module refs:   osal_CbTimerProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerProcessEvent
                                   0001BCBD 
               XSTACK = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD8B - 0001BE4E (0xc4 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_CbTimerStart::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStart       0001BD8B 
               calls direct
               XSTACK = 00000004 ( 00000017 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE4F - 0001BE5B (0xd bytes), align: 0
  Segment part 15.            Intra module refs:   osal_CbTimerProcessEvent
                                                   osal_CbTimerStart
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001BE4F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE5C - 0001BE5D (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   osal_CbTimerStart
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001BE5C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE5E - 0001BE65 (0x8 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine0
                                                   osal_CbTimerStop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE66 - 0001BED7 (0x72 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_CbTimerStop::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStop        0001BE66 
               calls direct
               XSTACK = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000347 - 00000348 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   baseTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000143A - 0000143F (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerInit::?relay
                                   0000143A        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001440 - 00001445 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerProcessEvent::?relay
                                   00001440        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001446 - 0000144B (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStart::?relay
                                   00001446        gattStartTimer (gatt_task)
                                                   l2capSendReq (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000144C - 00001451 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStop::?relay
                                   0000144C        gattStopTimer (gatt_task)
                                                   l2capStopTimer (l2cap_util)

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\osal_snv.r51
  PROGRAM MODULE, NAME : osal_snv

  SEGMENTS IN THE MODULE
  ======================
BLENV_ADDRESS_SPACE
  Relative segment, address: CODE 0003E800 - 0003F7FF (0x1000 bytes), align: 0
  Segment part 6.             Intra module refs:   activePg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _nvBuf                  0003E800 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CF6 - 00000CF6 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 55
                                                   compactPage
                                                   findOffset
                                                   initNV
                                                   osal_snv_compact
                                                   osal_snv_read
                                                   osal_snv_write
                                                   setActivePage
                                                   setXferPage
           LOCAL                   ADDRESS         
           =====                   =======         
           activePg                00000CF6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CF7 - 00000CF8 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 55
                                                   compactPage
                                                   findOffset
                                                   initNV
                                                   osal_snv_compact
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           pgOff                   00000CF7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CF9 - 00000CF9 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   compactPage
                                                   erasePage
                                                   initNV
                                                   osal_snv_write
                                                   setActivePage
                                                   verifyWordM
                                                   writeItem
                                                   writeWord
           LOCAL                   ADDRESS         
           =====                   =======         
           failF                   00000CF9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A19 - 00016ADF (0xc7 bytes), align: 0
  Segment part 13.            Intra module refs:   initNV::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           initNV                  00016A19 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016AE0 - 00016B0C (0x2d bytes), align: 0
  Segment part 15.            Intra module refs:   setActivePage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           setActivePage           00016AE0 
               calls direct
               XSTACK = 0000001E ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B0D - 00016B16 (0xa bytes), align: 0
  Segment part 17.            Intra module refs:   setActivePage
                                                   setXferPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00016B0D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B17 - 00016B3A (0x24 bytes), align: 0
  Segment part 18.            Intra module refs:   setXferPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           setXferPage             00016B17 
               calls direct
               XSTACK = 00000014 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B3B - 00016B40 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   setActivePage
                                                   setXferPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00016B3B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B41 - 00016B92 (0x52 bytes), align: 0
  Segment part 21.            Intra module refs:   erasePage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           erasePage               00016B41 
               calls direct
               XSTACK = 0000001E ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B93 - 00016B96 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   cleanErasedPage
                                                   erasePage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00016B93 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B97 - 00016B98 (0x2 bytes), align: 0
  Segment part 24.            Intra module refs:   findItem
                                                   findOffset
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00016B97 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B99 - 00016B9B (0x3 bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine4
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B9C - 00016BA0 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 25
                                                   osal_snv_read
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016BA1 - 00016BEA (0x4a bytes), align: 0
  Segment part 27.            Intra module refs:   cleanErasedPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           cleanErasedPage         00016BA1 
               calls direct
               XSTACK = 00000010 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016BEB - 00016BF6 (0xc bytes), align: 0
  Segment part 29.            Intra module refs:   cleanErasedPage
                                                   erasePage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00016BEB 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016BF7 - 00016C5B (0x65 bytes), align: 0
  Segment part 30.            Intra module refs:   findOffset::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           findOffset              00016BF7 
               calls direct
               XSTACK = 00000010 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C5C - 00016CE8 (0x8d bytes), align: 0
  Segment part 32.            Intra module refs:   findItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           findItem                00016C5C 
               calls direct
               XSTACK = 0000001E ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016CE9 - 00016CF3 (0xb bytes), align: 0
  Segment part 34.            Intra module refs:   compactPage
                                                   findItem
                                                   findOffset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00016CE9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016CF4 - 00016DE3 (0xf0 bytes), align: 0
  Segment part 35.            Intra module refs:   writeItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem               00016CF4 
               calls direct
               XSTACK = 00000015 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DE4 - 00016DE8 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   osal_snv_compact
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00016DE4 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DE9 - 00016DEC (0x4 bytes), align: 0
  Segment part 38.            Intra module refs:   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00016DE9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DED - 00016DF6 (0xa bytes), align: 0
  Segment part 39.            Intra module refs:   ?Subroutine5
                                                   writeItem
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DF7 - 00016E02 (0xc bytes), align: 0
  Segment part 40.            Intra module refs:   ?Subroutine7
                                                   Segment part 39
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00016DF7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E03 - 00016F90 (0x18e bytes), align: 0
  Segment part 41.            Intra module refs:   compactPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           compactPage             00016E03 
               calls direct
               XSTACK = 00000014 ( 00000020 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016F91 - 00016F99 (0x9 bytes), align: 0
  Segment part 43.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00016F91 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016F9A - 0001701E (0x85 bytes), align: 0
  Segment part 44.            Intra module refs:   verifyWordM::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           verifyWordM             00016F9A 
               calls direct
               XSTACK = 00000019 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001701F - 00017026 (0x8 bytes), align: 0
  Segment part 46.            Intra module refs:   osal_snv_write
                                                   verifyWordM
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001701F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017027 - 0001708D (0x67 bytes), align: 0
  Segment part 47.            Intra module refs:   writeWord::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWord               00017027 
               calls direct
               XSTACK = 0000001E ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001708E - 000170A4 (0x17 bytes), align: 0
  Segment part 49.            Intra module refs:   osal_snv_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_init           0001708E 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000170A5 - 000171A4 (0x100 bytes), align: 0
  Segment part 51.            Intra module refs:   osal_snv_write::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_write          000170A5 
               calls direct
               XSTACK = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000171A5 - 000171AE (0xa bytes), align: 0
  Segment part 53.            Intra module refs:   compactPage
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           000171A5 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000171AF - 000171B0 (0x2 bytes), align: 0
  Segment part 54.            Intra module refs:   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            000171AF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000171B1 - 000171BE (0xe bytes), align: 0
  Segment part 55.            Intra module refs:   ?Subroutine6
                                                   osal_snv_read
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000171BF - 000171FC (0x3e bytes), align: 0
  Segment part 56.            Intra module refs:   osal_snv_read::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_read           000171BF 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000171FD - 0001725A (0x5e bytes), align: 0
  Segment part 58.            Intra module refs:   osal_snv_compact::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_compact        000171FD 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008611 - 00008614 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   initNV
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_100000       00008611 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001452 - 00001457 (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   osal_snv_init
           LOCAL                   ADDRESS         
           =====                   =======         
           initNV::?relay          00001452 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001458 - 0000145D (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   compactPage
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           setActivePage::?relay   00001458 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000145E - 00001463 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_snv_compact
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           setXferPage::?relay     0000145E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001464 - 00001469 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   cleanErasedPage
                                                   compactPage
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           erasePage::?relay       00001464 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000146A - 0000146F (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           cleanErasedPage::?relay
                                   0000146A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001470 - 00001475 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           findOffset::?relay      00001470 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001476 - 0000147B (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   compactPage
                                                   osal_snv_read
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           findItem::?relay        00001476 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000147C - 00001481 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem::?relay       0000147C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001482 - 00001487 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   initNV
                                                   osal_snv_compact
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           compactPage::?relay     00001482 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001488 - 0000148D (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   writeItem
                                                   writeWord
           LOCAL                   ADDRESS         
           =====                   =======         
           verifyWordM::?relay     00001488 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000148E - 00001493 (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   compactPage
                                                   setActivePage
                                                   setXferPage
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWord::?relay       0000148E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001494 - 00001499 (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_init::?relay   00001494        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000149A - 0000149F (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_write::?relay
                                   0000149A        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014A0 - 000014A5 (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_read::?relay   000014A0        GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPRole_Init (peripheral)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   set_passkey (Simplepasscode)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014A6 - 000014AB (0x6 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_compact::?relay
                                   000014A6        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008611 - 00008614 (0x4 bytes), align: 0
  Segment part 60.            Intra module refs:   __Constant_100000

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\peripheral.r51
  PROGRAM MODULE, NAME : peripheral

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000CFA - 00000CFA (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   ?Subroutine13
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   GAPRole_TerminateConnection
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_TaskID          00000CFA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CFB - 00000CFB (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   GAPRole_TerminateConnection
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_state           00000CFB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CFC - 00000CFC (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_StartDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_profileRole     00000CFC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000CFD - 00000D0C (0x10 bytes), align: 0
  Segment part 9.             Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_IRK             00000CFD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D0D - 00000D1C (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_SRK             00000D0D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D1D - 00000D20 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_signCounter     00000D1D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D21 - 00000D26 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_bdAddr          00000D21 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010B9 - 000010B9 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvEnabled      000010B9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010BA - 000010BB (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvertOffTime   000010BA 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010BC - 000010BC (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvertDataLen   000010BC 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010BD - 000010DB (0x1f bytes), align: 0
  Segment part 19.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvertData      000010BD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D27 - 00000D27 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ScanRspDataLen
                                   00000D27 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D28 - 00000D46 (0x1f bytes), align: 0
  Segment part 22.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ScanRspData     00000D28 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D47 - 00000D47 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvEventType    00000D47 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D48 - 00000D48 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvDirectType   00000D48 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D49 - 00000D4E (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvDirectAddr   00000D49 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D4F - 00000D4F (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvChanMap      00000D4F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D50 - 00000D50 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvFilterPolicy
                                   00000D50 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010DC - 000010DD (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   ?Subroutine4
                                                   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnectionHandle
                                   000010DC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D51 - 00000D52 (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_RSSIReadRate    00000D51 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D53 - 00000D58 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnectedDevAddr
                                   00000D53 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D59 - 00000D59 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ParamUpdateEnable
                                   00000D59 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010DE - 000010DF (0x2 bytes), align: 0
  Segment part 33.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_MinConnInterval
                                   000010DE 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010E0 - 000010E1 (0x2 bytes), align: 0
  Segment part 35.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_MaxConnInterval
                                   000010E0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D5A - 00000D5B (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_SlaveLatency    00000D5A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010E2 - 000010E3 (0x2 bytes), align: 0
  Segment part 38.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_TimeoutMultiplier
                                   000010E2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D5C - 00000D5D (0x2 bytes), align: 0
  Segment part 40.            Intra module refs:   ?Subroutine6
                                                   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnInterval    00000D5C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D5E - 00000D5F (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   ?Subroutine7
                                                   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnSlaveLatency
                                   00000D5E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D60 - 00000D61 (0x2 bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine8
                                                   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnTimeout     00000D60 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D62 - 00000D62 (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_ProcessOSALMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           paramUpdateNoSuccessOption
                                   00000D62 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D63 - 00000D64 (0x2 bytes), align: 0
  Segment part 44.            Intra module refs:   ?Subroutine2
                                                   GAPRole_StartDevice
                                                   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           pGapRoles_AppCGs        00000D63 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D65 - 00000D66 (0x2 bytes), align: 0
  Segment part 45.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           pGapRoles_ParamUpdateCB
                                   00000D65 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010E2F - 0001118D (0x35f bytes), align: 0
  Segment part 46.            Intra module refs:   GAPRole_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SetParameter    00010E2F 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001118E - 0001118F (0x2 bytes), align: 0
  Segment part 48.            Intra module refs:   ?Subroutine15
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0001118E 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011190 - 00011195 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine18
                                                   GAPRole_SendUpdateParam
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011196 - 000111A1 (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00011196 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000111A2 - 000111AF (0xe bytes), align: 0
  Segment part 51.            Intra module refs:   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000111A2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000111B0 - 00011326 (0x177 bytes), align: 0
  Segment part 52.            Intra module refs:   GAPRole_GetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_GetParameter    000111B0 
               calls direct
               XSTACK = 00000000 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011327 - 0001132F (0x9 bytes), align: 0
  Segment part 54.            Intra module refs:   GAPRole_GetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00011327 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011330 - 00011332 (0x3 bytes), align: 0
  Segment part 55.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00011330 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011333 - 00011337 (0x5 bytes), align: 0
  Segment part 56.            Intra module refs:   ?Subroutine0
                                                   GAPRole_GetParameter
                                                   GAPRole_SendUpdateParam
                                                   gapRole_ProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011338 - 00011387 (0x50 bytes), align: 0
  Segment part 57.            Intra module refs:   GAPRole_StartDevice::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_StartDevice     00011338 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011388 - 0001138E (0x7 bytes), align: 0
  Segment part 61.            Intra module refs:   GAPRole_TerminateConnection
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00011388 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001138F - 000113AD (0x1f bytes), align: 0
  Segment part 62.            Intra module refs:   GAPRole_TerminateConnection::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_TerminateConnection
                                   0001138F 
               calls direct
               XSTACK = 00000016 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000113AE - 0001142B (0x7e bytes), align: 0
  Segment part 64.            Intra module refs:   GAPRole_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_Init            000113AE 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001142C - 000115BB (0x190 bytes), align: 0
  Segment part 66.            Intra module refs:   GAPRole_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_ProcessEvent    0001142C 
               calls direct
               XSTACK = 00000000 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000115BC - 000115C1 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           000115BC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000115C2 - 000116A6 (0xe5 bytes), align: 0
  Segment part 69.            Intra module refs:   gapRole_ProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessOSALMsg
                                   000115C2 
               calls direct
               XSTACK = 00000016 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000116A7 - 00011A46 (0x3a0 bytes), align: 0
  Segment part 71.            Intra module refs:   gapRole_ProcessGAPMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessGAPMsg   000116A7 
               calls direct
               XSTACK = 0000000C ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A47 - 00011A4C (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00011A47 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A4D - 00011A58 (0xc bytes), align: 0
  Segment part 74.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00011A4D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A59 - 00011A5B (0x3 bytes), align: 0
  Segment part 75.            Intra module refs:   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00011A59 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A5C - 00011A61 (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   ?Subroutine10
                                                   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A62 - 00011A65 (0x4 bytes), align: 0
  Segment part 77.            Intra module refs:   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00011A62 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A66 - 00011A69 (0x4 bytes), align: 0
  Segment part 78.            Intra module refs:   ?Subroutine9
                                                   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A6A - 00011A6F (0x6 bytes), align: 0
  Segment part 79.            Intra module refs:   ?Subroutine6
                                                   ?Subroutine7
                                                   ?Subroutine8
                                                   Segment part 78
                                                   Segment part 87
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00011A6A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A70 - 00011A7B (0xc bytes), align: 0
  Segment part 80.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00011A70 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A7C - 00011A87 (0xc bytes), align: 0
  Segment part 81.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00011A7C 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A88 - 00011A93 (0xc bytes), align: 0
  Segment part 82.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00011A88 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A94 - 00011AA2 (0xf bytes), align: 0
  Segment part 83.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00011A94 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011AA3 - 00011AA5 (0x3 bytes), align: 0
  Segment part 84.            Intra module refs:   GAPRole_ProcessEvent
                                                   GAPRole_TerminateConnection
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00011AA3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011AA6 - 00011AAB (0x6 bytes), align: 0
  Segment part 85.            Intra module refs:   ?Subroutine4
                                                   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011AAC - 00011AAE (0x3 bytes), align: 0
  Segment part 86.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00011AAC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011AAF - 00011AB4 (0x6 bytes), align: 0
  Segment part 87.            Intra module refs:   ?Subroutine2
                                                   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011AB5 - 00011B8A (0xd6 bytes), align: 0
  Segment part 88.            Intra module refs:   gapRole_startConnUpdate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_startConnUpdate
                                   00011AB5 
               calls direct
               XSTACK = 00000016 ( 00000018 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011B8B - 00011C24 (0x9a bytes), align: 0
  Segment part 90.            Intra module refs:   GAPRole_SendUpdateParam::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SendUpdateParam
                                   00011B8B 
               calls direct
               XSTACK = 0000001A ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011C25 - 00011C2D (0x9 bytes), align: 0
  Segment part 92.            Intra module refs:   GAPRole_SendUpdateParam
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           00011C25 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000349 - 00000349 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   gapRole_AdvEnabled
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000034A - 0000034B (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   gapRole_AdvertOffTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000034C - 0000034C (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   gapRole_AdvertDataLen
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000034D - 0000036B (0x1f bytes), align: 0
  Segment part 20.            Intra module refs:   gapRole_AdvertData
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000036C - 0000036D (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   gapRole_ConnectionHandle
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000036E - 0000036F (0x2 bytes), align: 0
  Segment part 34.            Intra module refs:   gapRole_MinConnInterval
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000370 - 00000371 (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   gapRole_MaxConnInterval
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000372 - 00000373 (0x2 bytes), align: 0
  Segment part 39.            Intra module refs:   gapRole_TimeoutMultiplier
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014AC - 000014B1 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SetParameter::?relay
                                   000014AC        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014B2 - 000014B7 (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_GetParameter::?relay
                                   000014B2        peripheralStateNotificationCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014B8 - 000014BD (0x6 bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_StartDevice::?relay
                                   000014B8        SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014BE - 000014C3 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_TerminateConnection::?relay
                                   000014BE        simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014C4 - 000014C9 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_Init::?relay    000014C4        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014CA - 000014CF (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_ProcessEvent::?relay
                                   000014CA        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014D0 - 000014D5 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   GAPRole_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessOSALMsg::?relay
                                   000014D0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014D6 - 000014DB (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessGAPMsg::?relay
                                   000014D6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014DC - 000014E1 (0x6 bytes), align: 0
  Segment part 89.            Intra module refs:   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_startConnUpdate::?relay
                                   000014DC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014E2 - 000014E7 (0x6 bytes), align: 0
  Segment part 91.            Intra module refs:   GAPRole_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SendUpdateParam::?relay
                                   000014E2 

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\simpleBLEPeripheral.r51
  PROGRAM MODULE, NAME : simpleBLEPeripheral

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000D67 - 00000D68 (0x2 bytes), align: 0
  Segment part 61.            Intra module refs:   peripheralStateNotificationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           gapConnHandle           00000D67 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000D69 - 00000DE8 (0x80 bytes), align: 0
  Segment part 62.            Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           recv_value              00000D69 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000DE9 - 00000DE9 (0x1 bytes), align: 0
  Segment part 63.            Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           TRANSFER_DATA_STATE_IN
                                   00000DE9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000DEA - 00000DEA (0x1 bytes), align: 0
  Segment part 64.            Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           data_len                00000DEA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000DEB - 00000DEB (0x1 bytes), align: 0
  Segment part 65.            Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           cur_data_len            00000DEB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000DEC - 00000DEC (0x1 bytes), align: 0
  Segment part 66.            Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           data_len_index          00000DEC 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010E4 - 000010F0 (0xd bytes), align: 0
  Segment part 73.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine3
                                                   ?Subroutine7
                                                   SimpleBLEPeripheral_ProcessEvent
                                                   simpleProfileChangeCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           current_list            000010E4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000DED - 00000DEE (0x2 bytes), align: 0
  Segment part 75.            Intra module refs:   ?Subroutine10
                                                   SimpleBLEPeripheral_ProcessEvent
                                                   simpleProfileChangeCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           peripheral_event        00000DED 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000DEF - 00000E02 (0x14 bytes), align: 0
  Segment part 76.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           time_databuf_read       00000DEF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E03 - 00000E03 (0x1 bytes), align: 0
  Segment part 77.            Intra module refs:   ?Subroutine6
                                                   SimpleBLEPeripheral_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           time_datalen_read       00000E03 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E04 - 00000E04 (0x1 bytes), align: 0
  Segment part 78.            Intra module refs:   SimpleBLEPeripheral_Init
                                                   SimpleBLEPeripheral_ProcessEvent
                                                   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_TaskID
                                   00000E04 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E05 - 00000E05 (0x1 bytes), align: 0
  Segment part 79.            Intra module refs:   peripheralStateNotificationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProfileState         00000E05 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000010F1 - 0000110E (0x1e bytes), align: 0
  Segment part 80.            Intra module refs:   SimpleBLEPeripheral_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           scanRspData             000010F1 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000110F - 00001115 (0x7 bytes), align: 0
  Segment part 82.            Intra module refs:   SimpleBLEPeripheral_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           advertData              0000110F 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001116 - 00001119 (0x4 bytes), align: 0
  Segment part 84.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_PeripheralCBs
                                   00001116 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000111A - 0000111D (0x4 bytes), align: 0
  Segment part 86.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_BondMgrCBs
                                   0000111A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000111E - 0000111F (0x2 bytes), align: 0
  Segment part 88.            Intra module refs:   SimpleBLEPeripheral_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_SimpleProfileCBs
                                   0000111E 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC39 - 0000ECAB (0x73 bytes), align: 0
  Segment part 93.            Intra module refs:   simpleBLEPeripheralPairStateCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheralPairStateCB
                                   0000EC39 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ECAC - 0000EF46 (0x29b bytes), align: 0
  Segment part 95.            Intra module refs:   SimpleBLEPeripheral_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleBLEPeripheral_Init
                                   0000ECAC 
               calls direct
               XSTACK = 00000000 ( 0000008E )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EF47 - 0000EF48 (0x2 bytes), align: 0
  Segment part 97.            Intra module refs:   bdAddr2Str
                                                   hex2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000EF47 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EF49 - 0000EF4B (0x3 bytes), align: 0
  Segment part 98.            Intra module refs:   ?Subroutine0
                                                   SimpleBLEPeripheral_Init
                                                   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EF4C - 0000EF50 (0x5 bytes), align: 0
  Segment part 99.            Intra module refs:   Segment part 98
                                                   simpleBLEPeripheral_HandleKeys
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EF51 - 0000F29D (0x34d bytes), align: 0
  Segment part 100.           Intra module refs:   SimpleBLEPeripheral_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleBLEPeripheral_ProcessEvent
                                   0000EF51 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F29E - 0000F2A7 (0xa bytes), align: 0
  Segment part 102.           Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0000F29E 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F2A8 - 0000F2B5 (0xe bytes), align: 0
  Segment part 103.           Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0000F2A8 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F2B6 - 0000F2C5 (0x10 bytes), align: 0
  Segment part 104.           Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000F2B6 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F2C6 - 0000F2D4 (0xf bytes), align: 0
  Segment part 105.           Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000F2C6 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F2D5 - 0000F34C (0x78 bytes), align: 0
  Segment part 106.           Intra module refs:   simpleBLEPeripheral_HandleKeys::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_HandleKeys
                                   0000F2D5 
               calls direct
               XSTACK = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F34D - 0000F47E (0x132 bytes), align: 0
  Segment part 108.           Intra module refs:   peripheralStateNotificationCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           peripheralStateNotificationCB
                                   0000F34D 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000017 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F47F - 0000F959 (0x4db bytes), align: 0
  Segment part 110.           Intra module refs:   simpleProfileChangeCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChangeCB   0000F47F 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 000000C5 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F95A - 0000F964 (0xb bytes), align: 0
  Segment part 112.           Intra module refs:   SimpleBLEPeripheral_ProcessEvent
                                                   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000F95A 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F965 - 0000F972 (0xe bytes), align: 0
  Segment part 113.           Intra module refs:   SimpleBLEPeripheral_ProcessEvent
                                                   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000F965 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F973 - 0000F97C (0xa bytes), align: 0
  Segment part 114.           Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000F973 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F97D - 0000F99B (0x1f bytes), align: 0
  Segment part 115.           Intra module refs:   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0000F97D 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F99C - 0000F9FE (0x63 bytes), align: 0
  Segment part 116.           Intra module refs:   bdAddr2Str::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           bdAddr2Str              0000F99C 
               XSTACK = 00000017 ( 0000001A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F9FF - 0000FA0B (0xd bytes), align: 0
  Segment part 118.           Intra module refs:   bdAddr2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0000F9FF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E06 - 00000E14 (0xf bytes), align: 0
  Segment part 90.            Intra module refs:   bdAddr2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           bdAddr2Str::str         00000E06 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FA0C - 0000FA78 (0x6d bytes), align: 0
  Segment part 119.           Intra module refs:   hex2Str::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           hex2Str                 0000FA0C 
               calls direct
               XSTACK = 000000C1 ( 0000001A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FA79 - 0000FA85 (0xd bytes), align: 0
  Segment part 121.           Intra module refs:   hex2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0000FA79 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FA86 - 0000FA8C (0x7 bytes), align: 0
  Segment part 122.           Intra module refs:   bdAddr2Str
                                                   hex2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0000FA86 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FA8D - 0000FA94 (0x8 bytes), align: 0
  Segment part 123.           Intra module refs:   bdAddr2Str
                                                   hex2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0000FA8D 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FA95 - 0000FAA4 (0x10 bytes), align: 0
  Segment part 124.           Intra module refs:   ?Subroutine8
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000FA95 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E15 - 00000E28 (0x14 bytes), align: 0
  Segment part 91.            Intra module refs:   hex2Str
           LOCAL                   ADDRESS         
           =====                   =======         
           hex2Str::str            00000E15 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000374 - 00000380 (0xd bytes), align: 0
  Segment part 74.            Intra module refs:   current_list
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000381 - 0000039E (0x1e bytes), align: 0
  Segment part 81.            Intra module refs:   scanRspData
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000039F - 000003A5 (0x7 bytes), align: 0
  Segment part 83.            Intra module refs:   advertData
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003A6 - 000003A9 (0x4 bytes), align: 0
  Segment part 85.            Intra module refs:   simpleBLEPeripheral_PeripheralCBs
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003AA - 000003AD (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   simpleBLEPeripheral_BondMgrCBs
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003AE - 000003AF (0x2 bytes), align: 0
  Segment part 89.            Intra module refs:   simpleBLEPeripheral_SimpleProfileCBs
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014E8 - 000014ED (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 87
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheralPairStateCB::?relay
                                   000014E8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014EE - 000014F3 (0x6 bytes), align: 0
  Segment part 96.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleBLEPeripheral_Init::?relay
                                   000014EE        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014F4 - 000014F9 (0x6 bytes), align: 0
  Segment part 101.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleBLEPeripheral_ProcessEvent::?relay
                                   000014F4        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014FA - 000014FF (0x6 bytes), align: 0
  Segment part 107.           Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_HandleKeys::?relay
                                   000014FA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001500 - 00001505 (0x6 bytes), align: 0
  Segment part 109.           Intra module refs:   Segment part 85
           LOCAL                   ADDRESS         
           =====                   =======         
           peripheralStateNotificationCB::?relay
                                   00001500 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001506 - 0000150B (0x6 bytes), align: 0
  Segment part 111.           Intra module refs:   Segment part 89
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChangeCB::?relay
                                   00001506 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000150C - 00001511 (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   peripheralStateNotificationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           bdAddr2Str::?relay      0000150C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001512 - 00001517 (0x6 bytes), align: 0
  Segment part 120.           Intra module refs:   SimpleBLEPeripheral_ProcessEvent
                                                   simpleProfileChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           hex2Str::?relay         00001512 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008403 - 00008412 (0x10 bytes), align: 0
  Segment part 17.            Intra module refs:   simpleBLEPeripheralPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008433 - 00008442 (0x10 bytes), align: 0
  Segment part 18.            Intra module refs:   simpleBLEPeripheralPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084B9 - 000084C5 (0xd bytes), align: 0
  Segment part 19.            Intra module refs:   simpleBLEPeripheralPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008453 - 00008462 (0x10 bytes), align: 0
  Segment part 20.            Intra module refs:   simpleBLEPeripheralPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008423 - 00008432 (0x10 bytes), align: 0
  Segment part 21.            Intra module refs:   simpleBLEPeripheralPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008298 - 000082AB (0x14 bytes), align: 0
  Segment part 22.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082E8 - 000082FB (0x14 bytes), align: 0
  Segment part 23.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008324 - 00008337 (0x14 bytes), align: 0
  Segment part 24.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008338 - 0000834B (0x14 bytes), align: 0
  Segment part 25.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000825C - 0000826F (0x14 bytes), align: 0
  Segment part 26.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082C0 - 000082D3 (0x14 bytes), align: 0
  Segment part 27.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008473 - 00008481 (0xf bytes), align: 0
  Segment part 28.            Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008514 - 0000851D (0xa bytes), align: 0
  Segment part 29.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
                                                   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000850A - 00008513 (0xa bytes), align: 0
  Segment part 30.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008500 - 00008509 (0xa bytes), align: 0
  Segment part 31.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008550 - 00008559 (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084F6 - 000084FF (0xa bytes), align: 0
  Segment part 33.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000851E - 00008527 (0xa bytes), align: 0
  Segment part 34.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000856B - 00008572 (0x8 bytes), align: 0
  Segment part 35.            Intra module refs:   simpleBLEPeripheral_HandleKeys
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008629 - 0000862C (0x4 bytes), align: 0
  Segment part 36.            Intra module refs:   simpleBLEPeripheral_HandleKeys
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084DF - 000084EA (0xc bytes), align: 0
  Segment part 37.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084D3 - 000084DE (0xc bytes), align: 0
  Segment part 38.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000853C - 00008545 (0xa bytes), align: 0
  Segment part 39.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000084AC - 000084B8 (0xd bytes), align: 0
  Segment part 40.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008546 - 0000854F (0xa bytes), align: 0
  Segment part 41.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085AF - 000085B4 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008690 - 00008690 (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   peripheralStateNotificationCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008374 - 00008387 (0x14 bytes), align: 0
  Segment part 44.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082AC - 000082BF (0x14 bytes), align: 0
  Segment part 45.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008270 - 00008283 (0x14 bytes), align: 0
  Segment part 46.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082D4 - 000082E7 (0x14 bytes), align: 0
  Segment part 47.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008310 - 00008323 (0x14 bytes), align: 0
  Segment part 48.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008284 - 00008297 (0x14 bytes), align: 0
  Segment part 49.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082FC - 0000830F (0x14 bytes), align: 0
  Segment part 50.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000834C - 0000835F (0x14 bytes), align: 0
  Segment part 51.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008360 - 00008373 (0x14 bytes), align: 0
  Segment part 52.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008482 - 0000848F (0xe bytes), align: 0
  Segment part 53.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000858B - 00008592 (0x8 bytes), align: 0
  Segment part 54.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008593 - 0000859A (0x8 bytes), align: 0
  Segment part 55.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000857B - 00008582 (0x8 bytes), align: 0
  Segment part 56.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008573 - 0000857A (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008563 - 0000856A (0x8 bytes), align: 0
  Segment part 58.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000083D0 - 000083E0 (0x11 bytes), align: 0
  Segment part 59.            Intra module refs:   bdAddr2Str
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000083F2 - 00008402 (0x11 bytes), align: 0
  Segment part 60.            Intra module refs:   hex2Str
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008403 - 00008412 (0x10 bytes), align: 0
  Segment part 125.           Intra module refs:   Segment part 17
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008433 - 00008442 (0x10 bytes), align: 0
  Segment part 126.           Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084B9 - 000084C5 (0xd bytes), align: 0
  Segment part 127.           Intra module refs:   Segment part 19
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008453 - 00008462 (0x10 bytes), align: 0
  Segment part 128.           Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008423 - 00008432 (0x10 bytes), align: 0
  Segment part 129.           Intra module refs:   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008298 - 000082AB (0x14 bytes), align: 0
  Segment part 130.           Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000082E8 - 000082FB (0x14 bytes), align: 0
  Segment part 131.           Intra module refs:   Segment part 23
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008324 - 00008337 (0x14 bytes), align: 0
  Segment part 132.           Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008338 - 0000834B (0x14 bytes), align: 0
  Segment part 133.           Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000825C - 0000826F (0x14 bytes), align: 0
  Segment part 134.           Intra module refs:   Segment part 26
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000082C0 - 000082D3 (0x14 bytes), align: 0
  Segment part 135.           Intra module refs:   Segment part 27
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008473 - 00008481 (0xf bytes), align: 0
  Segment part 136.           Intra module refs:   Segment part 28
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008514 - 0000851D (0xa bytes), align: 0
  Segment part 137.           Intra module refs:   Segment part 29
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000850A - 00008513 (0xa bytes), align: 0
  Segment part 138.           Intra module refs:   Segment part 30
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008500 - 00008509 (0xa bytes), align: 0
  Segment part 139.           Intra module refs:   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008550 - 00008559 (0xa bytes), align: 0
  Segment part 140.           Intra module refs:   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084F6 - 000084FF (0xa bytes), align: 0
  Segment part 141.           Intra module refs:   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000851E - 00008527 (0xa bytes), align: 0
  Segment part 142.           Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000856B - 00008572 (0x8 bytes), align: 0
  Segment part 143.           Intra module refs:   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008629 - 0000862C (0x4 bytes), align: 0
  Segment part 144.           Intra module refs:   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084DF - 000084EA (0xc bytes), align: 0
  Segment part 145.           Intra module refs:   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084D3 - 000084DE (0xc bytes), align: 0
  Segment part 146.           Intra module refs:   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000853C - 00008545 (0xa bytes), align: 0
  Segment part 147.           Intra module refs:   Segment part 39
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000084AC - 000084B8 (0xd bytes), align: 0
  Segment part 148.           Intra module refs:   Segment part 40
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008546 - 0000854F (0xa bytes), align: 0
  Segment part 149.           Intra module refs:   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085AF - 000085B4 (0x6 bytes), align: 0
  Segment part 150.           Intra module refs:   Segment part 42
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008690 - 00008690 (0x1 bytes), align: 0
  Segment part 151.           Intra module refs:   Segment part 43
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008374 - 00008387 (0x14 bytes), align: 0
  Segment part 152.           Intra module refs:   Segment part 44
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000082AC - 000082BF (0x14 bytes), align: 0
  Segment part 153.           Intra module refs:   Segment part 45
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008270 - 00008283 (0x14 bytes), align: 0
  Segment part 154.           Intra module refs:   Segment part 46
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000082D4 - 000082E7 (0x14 bytes), align: 0
  Segment part 155.           Intra module refs:   Segment part 47
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008310 - 00008323 (0x14 bytes), align: 0
  Segment part 156.           Intra module refs:   Segment part 48
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008284 - 00008297 (0x14 bytes), align: 0
  Segment part 157.           Intra module refs:   Segment part 49
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000082FC - 0000830F (0x14 bytes), align: 0
  Segment part 158.           Intra module refs:   Segment part 50
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000834C - 0000835F (0x14 bytes), align: 0
  Segment part 159.           Intra module refs:   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008360 - 00008373 (0x14 bytes), align: 0
  Segment part 160.           Intra module refs:   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008482 - 0000848F (0xe bytes), align: 0
  Segment part 161.           Intra module refs:   Segment part 53
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000858B - 00008592 (0x8 bytes), align: 0
  Segment part 162.           Intra module refs:   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008593 - 0000859A (0x8 bytes), align: 0
  Segment part 163.           Intra module refs:   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000857B - 00008582 (0x8 bytes), align: 0
  Segment part 164.           Intra module refs:   Segment part 56
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008573 - 0000857A (0x8 bytes), align: 0
  Segment part 165.           Intra module refs:   Segment part 57
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008563 - 0000856A (0x8 bytes), align: 0
  Segment part 166.           Intra module refs:   Segment part 58
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000083D0 - 000083E0 (0x11 bytes), align: 0
  Segment part 167.           Intra module refs:   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000083F2 - 00008402 (0x11 bytes), align: 0
  Segment part 168.           Intra module refs:   Segment part 60

    *************************************************************************

  FILE NAME : E:\TexasInstruments\BLE-CC254x-1.4.0\Projects\ble\SimpleBLEPeripheral\CC2541DB\CC2541\Obj\simpleGATTprofile.r51
  PROGRAM MODULE, NAME : simpleGATTprofile

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008683 - 00008684 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   simpleProfileService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfileServUUID   00008683 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008685 - 00008686 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar1UUID
                                   00008685 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008687 - 00008688 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar2UUID
                                   00008687 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008689 - 0000868A (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar3UUID
                                   00008689 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000868B - 0000868C (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar4UUID
                                   0000868B 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008677 - 00008678 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar5UUID
                                   00008677 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008675 - 00008676 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar6UUID
                                   00008675 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008673 - 00008674 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar7UUID
                                   00008673 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000866B - 0000866C (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar8UUID
                                   0000866B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E29 - 00000E2A (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   SimpleProfile_RegisterAppCBs
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_AppCBs    00000E29 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000863E - 00008640 (0x3 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileService    0000863E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001120 - 00001120 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar1Props
                                   00001120 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E2B - 00000E3E (0x14 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 59
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar1      00000E2B 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001121 - 00001131 (0x11 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar1UserDesp
                                   00001121 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001132 - 00001132 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar2Props
                                   00001132 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E3F - 00000E52 (0x14 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 59
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar2      00000E3F 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001133 - 00001143 (0x11 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar2UserDesp
                                   00001133 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001144 - 00001144 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar3Props
                                   00001144 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E53 - 00000E66 (0x14 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 59
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar3      00000E53 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001145 - 00001155 (0x11 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar3UserDesp
                                   00001145 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001156 - 00001156 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar4Props
                                   00001156 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E67 - 00000E67 (0x1 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 59
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar4      00000E67 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E68 - 00000E6D (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 59
                                                   SimpleProfile_AddService
                                                   SimpleProfile_SetParameter
                                                   simpleProfile_HandleConnStatusCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar4Config
                                   00000E68 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001157 - 00001167 (0x11 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar4UserDesp
                                   00001157 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001168 - 00001168 (0x1 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar5Props
                                   00001168 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E6E - 00000E81 (0x14 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 59
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar5      00000E6E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00001169 - 00001179 (0x11 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar5UserDesp
                                   00001169 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000117A - 0000117A (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar6Props
                                   0000117A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E82 - 00000E95 (0x14 bytes), align: 0
  Segment part 45.            Intra module refs:   Segment part 59
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar6      00000E82 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000117B - 0000118B (0x11 bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar6UserDesp
                                   0000117B 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000118C - 0000118C (0x1 bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar7Props
                                   0000118C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000E96 - 00000EA9 (0x14 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 59
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar7      00000E96 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000118D - 0000119D (0x11 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar7UserDesp
                                   0000118D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000119E - 0000119E (0x1 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar8Props
                                   0000119E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000EAA - 00000EBD (0x14 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 59
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar8      00000EAA 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000119F - 000011AF (0x11 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 59
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar8UserDesp
                                   0000119F 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000011B0 - 0000127F (0xd0 bytes), align: 0
  Segment part 58.            Intra module refs:   SimpleProfile_AddService
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileAttrTbl    000011B0 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085D3 - 000085D8 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   SimpleProfile_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfileCBs        000085D3 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007997 - 000079D4 (0x3e bytes), align: 0
  Segment part 61.            Intra module refs:   SimpleProfile_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_AddService
                                   00007997 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079D5 - 000079DB (0x7 bytes), align: 0
  Segment part 63.            Intra module refs:   SimpleProfile_AddService
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000079D5 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079DC - 000079F8 (0x1d bytes), align: 0
  Segment part 64.            Intra module refs:   SimpleProfile_RegisterAppCBs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_RegisterAppCBs
                                   000079DC 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079F9 - 00007B1A (0x122 bytes), align: 0
  Segment part 66.            Intra module refs:   SimpleProfile_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_SetParameter
                                   000079F9 
               calls direct
               XSTACK = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007B1B - 00007BC3 (0xa9 bytes), align: 0
  Segment part 68.            Intra module refs:   SimpleProfile_GetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_GetParameter
                                   00007B1B 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BC4 - 00007BC8 (0x5 bytes), align: 0
  Segment part 70.            Intra module refs:   SimpleProfile_GetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00007BC4 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BC9 - 00007CAA (0xe2 bytes), align: 0
  Segment part 73.            Intra module refs:   simpleProfile_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_ReadAttrCB
                                   00007BC9 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007CAB - 00007CAB (0x1 bytes), align: 0
  Segment part 75.            Intra module refs:   simpleProfile_ReadAttrCB
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00007CAB 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007CAC - 00007CB1 (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   ?Subroutine4
                                                   simpleProfile_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007CB2 - 00007F62 (0x2b1 bytes), align: 0
  Segment part 77.            Intra module refs:   simpleProfile_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_WriteAttrCB
                                   00007CB2 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F63 - 00007F6B (0x9 bytes), align: 0
  Segment part 79.            Intra module refs:   simpleProfile_ReadAttrCB
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00007F63 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F6C - 00007F71 (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   simpleProfile_ReadAttrCB
                                                   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00007F6C 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F72 - 00007F88 (0x17 bytes), align: 0
  Segment part 81.            Intra module refs:   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00007F72 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F89 - 00007F9F (0x17 bytes), align: 0
  Segment part 82.            Intra module refs:   simpleProfile_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00007F89 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007FA0 - 00007FD8 (0x39 bytes), align: 0
  Segment part 83.            Intra module refs:   simpleProfile_HandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_HandleConnStatusCB
                                   00007FA0 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003B0 - 000003B0 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   simpleProfileChar1Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003B1 - 000003C1 (0x11 bytes), align: 0
  Segment part 21.            Intra module refs:   simpleProfileChar1UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003C2 - 000003C2 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   simpleProfileChar2Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003C3 - 000003D3 (0x11 bytes), align: 0
  Segment part 26.            Intra module refs:   simpleProfileChar2UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003D4 - 000003D4 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   simpleProfileChar3Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003D5 - 000003E5 (0x11 bytes), align: 0
  Segment part 31.            Intra module refs:   simpleProfileChar3UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003E6 - 000003E6 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   simpleProfileChar4Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003E7 - 000003F7 (0x11 bytes), align: 0
  Segment part 37.            Intra module refs:   simpleProfileChar4UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003F8 - 000003F8 (0x1 bytes), align: 0
  Segment part 39.            Intra module refs:   simpleProfileChar5Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003F9 - 00000409 (0x11 bytes), align: 0
  Segment part 42.            Intra module refs:   simpleProfileChar5UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000040A - 0000040A (0x1 bytes), align: 0
  Segment part 44.            Intra module refs:   simpleProfileChar6Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000040B - 0000041B (0x11 bytes), align: 0
  Segment part 47.            Intra module refs:   simpleProfileChar6UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000041C - 0000041C (0x1 bytes), align: 0
  Segment part 49.            Intra module refs:   simpleProfileChar7Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000041D - 0000042D (0x11 bytes), align: 0
  Segment part 52.            Intra module refs:   simpleProfileChar7UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000042E - 0000042E (0x1 bytes), align: 0
  Segment part 54.            Intra module refs:   simpleProfileChar8Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000042F - 0000043F (0x11 bytes), align: 0
  Segment part 57.            Intra module refs:   simpleProfileChar8UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000440 - 0000050F (0xd0 bytes), align: 0
  Segment part 59.            Intra module refs:   simpleProfileAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001518 - 0000151D (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_AddService::?relay
                                   00001518        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000151E - 00001523 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_RegisterAppCBs::?relay
                                   0000151E        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001524 - 00001529 (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_SetParameter::?relay
                                   00001524        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000152A - 0000152F (0x6 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_GetParameter::?relay
                                   0000152A        simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001530 - 00001535 (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   simpleProfileCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_ReadAttrCB::?relay
                                   00001530 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001536 - 0000153B (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   simpleProfileCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_WriteAttrCB::?relay
                                   00001536 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000153C - 00001541 (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   SimpleProfile_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_HandleConnStatusCB::?relay
                                   0000153C 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008683 - 00008684 (0x2 bytes), align: 0
  Segment part 85.            Intra module refs:   simpleProfileServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008685 - 00008686 (0x2 bytes), align: 0
  Segment part 86.            Intra module refs:   simpleProfilechar1UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008687 - 00008688 (0x2 bytes), align: 0
  Segment part 87.            Intra module refs:   simpleProfilechar2UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008689 - 0000868A (0x2 bytes), align: 0
  Segment part 88.            Intra module refs:   simpleProfilechar3UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000868B - 0000868C (0x2 bytes), align: 0
  Segment part 89.            Intra module refs:   simpleProfilechar4UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008677 - 00008678 (0x2 bytes), align: 0
  Segment part 90.            Intra module refs:   simpleProfilechar5UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008675 - 00008676 (0x2 bytes), align: 0
  Segment part 91.            Intra module refs:   simpleProfilechar6UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008673 - 00008674 (0x2 bytes), align: 0
  Segment part 92.            Intra module refs:   simpleProfilechar7UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000866B - 0000866C (0x2 bytes), align: 0
  Segment part 93.            Intra module refs:   simpleProfilechar8UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000863E - 00008640 (0x3 bytes), align: 0
  Segment part 94.            Intra module refs:   simpleProfileService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085D3 - 000085D8 (0x6 bytes), align: 0
  Segment part 95.            Intra module refs:   simpleProfileCBs

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 6.4\8051\LIB\CLIB\cl-pli-blxd-1e16x01.r51
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000091 - 00000095 (0x5 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    00000091        ?call_main (?cmain)
           ?C_EXIT                 00000091 
           ?ROM_MONITOR_NOPS       00000091 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000096, align: 0
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  00000096        Segment part 13 (CSTARTUP)
               calls direct
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000096 - 0000009E (0x9 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   00000096        __low_level_init (hal_startup)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000009F - 000000AC (0xe bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_Z           0000009F        Segment part 1 (ll_halt)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000AD - 000000BA (0xe bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_Z          000000AD        myPC (ll)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000BB - 000000CA (0x10 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          000000BB        GATTServApp_TaskID (gattservapp)
                                                   HalKeyConfigured (hal_key)
                                                   HalLedState (hal_led)
                                                   HalLedStatusControl (hal_led)
                                                   HalSleepLedState (hal_led)
                                                   Hal_KeyIntEnable (hal_key)
                                                   Hal_TaskID (hal_drivers)
                                                   LL_TaskID (ll)
                                                   Lcd_Line1 (hal_lcd)
                                                   OSAL_timeSeconds (OSAL_ClockBLE)
                                                   OnboardKeyIntEnable (OnBoard)
                                                   Segment part 10 (gap_linkmgr)
                                                   Segment part 10 (gap_peridevmgr)
                                                   Segment part 10 (gap_task)
                                                   Segment part 10 (gapgattserver)
                                                   Segment part 10 (gattservapp)
                                                   Segment part 11 (gap_peridevmgr)
                                                   Segment part 11 (gattservapp)
                                                   Segment part 12 (gap_configmgr)
                                                   Segment part 12 (gattservapp)
                                                   Segment part 13 (gapgattserver)
                                                   Segment part 13 (gattservapp)
                                                   Segment part 14 (gattservapp)
                                                   Segment part 15 (gap_configmgr)
                                                   Segment part 16 (gapgattserver)
                                                   Segment part 18 (gattservapp)
                                                   Segment part 19 (gapgattserver)
                                                   Segment part 6 (gapgattserver)
                                                   Segment part 6 (l2cap_if)
                                                   Segment part 6 (l2cap_util)
                                                   Segment part 6 (linkdb)
                                                   Segment part 6 (sm_mgr)
                                                   Segment part 7 (gatt_task)
                                                   Segment part 7 (linkdb)
                                                   Segment part 8 (gatt_task)
                                                   Segment part 8 (ll_scheduler)
                                                   Segment part 8 (sm_pairing)
                                                   Segment part 9 (gap_linkmgr)
                                                   Segment part 9 (gap_peridevmgr)
                                                   Segment part 9 (gatt_server)
                                                   Segment part 9 (gattservapp)
                                                   Segment part 9 (ll_scheduler)
                                                   TRANSFER_DATA_STATE_IN (simpleBLEPeripheral)
                                                   UART_PORT_HAVE_READ (SimpleBLESerialUart)
                                                   UartBuffer (SimpleBLESerialUart)
                                                   activePg (osal_snv)
                                                   adcRef (hal_adc)
                                                   advInfo (ll)
                                                   autoSyncWhiteList (gapbondmgr)
                                                   battLevelClientCharCfg (battservice)
                                                   battServiceCB (battservice)
                                                   battServiceCalcCB (battservice)
                                                   battServiceSetupCB (battservice)
                                                   battServiceTeardownCB (battservice)
                                                   bdAddr2Str::str (simpleBLEPeripheral)
                                                   bleEvtMask (hci_event)
                                                   bm_list_ptr (osal_bufmgr)
                                                   bonds (gapbondmgr)
                                                   bondsToDelete (gapbondmgr)
                                                   buildInfo (ll)
                                                   cachedTRNGdata (ll_enc)
                                                   cbTimers (osal_cbtimer)
                                                   chanMapUpdate (ll)
                                                   clkDivOnHalt (ll)
                                                   code_flag (Simplepasscode)
                                                   ctrlToHostEnable (hci)
                                                   cur_data_len (simpleBLEPeripheral)
                                                   dataPkt (ll_enc)
                                                   data_len (simpleBLEPeripheral)
                                                   data_len_index (simpleBLEPeripheral)
                                                   dcdcData (ll)
                                                   devInfoSystemId (devinfoservice)
                                                   deviceFeatureSet (ll)
                                                   dmaCfg (hal_uart)
                                                   dmaCh0 (hal_dma)
                                                   dmaCh1234 (hal_dma)
                                                   dmaRdyDly (hal_uart)
                                                   dmaRdyIsr (hal_uart)
                                                   dtmInfo (ll)
                                                   eraseAllBonds (gapbondmgr)
                                                   extendRfRange (ll)
                                                   failF (osal_snv)
                                                   fastTxRespTime (ll)
                                                   gapAutoAdvPrivateAddrChange (gap_configmgr)
                                                   gapBondMgr_SyncCharCfg::pAttr (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg::service (gapbondmgr)
                                                   gapBondMgr_TaskID (gapbondmgr)
                                                   gapBond_AutoFail (gapbondmgr)
                                                   gapBond_Bonding (gapbondmgr)
                                                   gapBond_IOCap (gapbondmgr)
                                                   gapBond_MITM (gapbondmgr)
                                                   gapBond_OOBData (gapbondmgr)
                                                   gapBond_OOBDataFlag (gapbondmgr)
                                                   gapBond_Passcode (gapbondmgr)
                                                   gapConnHandle (simpleBLEPeripheral)
                                                   gapDeviceAddrMode (gap_configmgr)
                                                   gapPrivateAddrChangeTimeout (gap_configmgr)
                                                   gapProfileRole (gap_configmgr)
                                                   gapProfileState (simpleBLEPeripheral)
                                                   gapRole_AdvChanMap (peripheral)
                                                   gapRole_AdvDirectAddr (peripheral)
                                                   gapRole_AdvDirectType (peripheral)
                                                   gapRole_AdvEventType (peripheral)
                                                   gapRole_AdvFilterPolicy (peripheral)
                                                   gapRole_ConnInterval (peripheral)
                                                   gapRole_ConnSlaveLatency (peripheral)
                                                   gapRole_ConnTimeout (peripheral)
                                                   gapRole_ConnectedDevAddr (peripheral)
                                                   gapRole_IRK (peripheral)
                                                   gapRole_ParamUpdateEnable (peripheral)
                                                   gapRole_RSSIReadRate (peripheral)
                                                   gapRole_SRK (peripheral)
                                                   gapRole_ScanRspData (peripheral)
                                                   gapRole_ScanRspDataLen (peripheral)
                                                   gapRole_SlaveLatency (peripheral)
                                                   gapRole_TaskID (peripheral)
                                                   gapRole_bdAddr (peripheral)
                                                   gapRole_profileRole (peripheral)
                                                   gapRole_signCounter (peripheral)
                                                   gapRole_state (peripheral)
                                                   gapTaskID (gap_task)
                                                   gattTaskID (gatt_task)
                                                   halKeySavedKeys (hal_key)
                                                   halPwrMgtMode (hal_sleep)
                                                   haltDuringRf (ll)
                                                   hciCtrlCmdToken (hci)
                                                   hciExtTaskID (hci_tl)
                                                   hciGapTaskID (hci_tl)
                                                   hciL2capTaskID (hci_tl)
                                                   hciPTMenabled (hci)
                                                   hciSmpTaskID (hci_tl)
                                                   hciTaskID (hci_tl)
                                                   hciTestTaskID (hci_tl)
                                                   hex2Str::str (simpleBLEPeripheral)
                                                   i2cAddr (hal_i2c)
                                                   irdatalen (SimpleBLESerialUart)
                                                   k (SimpleRTCInterrupt)
                                                   l2capChannels (l2cap_task)
                                                   l2capFixedChannels (l2cap_task)
                                                   l2capTaskID (l2cap_task)
                                                   llConns (ll)
                                                   llState (ll)
                                                   maxTxPwrForDTM (ll)
                                                   name_flag (Simplepasscode)
                                                   newname (Simplepasscode)
                                                   newpasskey (Simplepasscode)
                                                   numBytes (SimpleBLESerialUart)
                                                   numComplPkts (ll)
                                                   numComplPktsFlush (ll)
                                                   numComplPktsLimit (ll)
                                                   numHostBufs (hci)
                                                   numTxDataBufs (ll)
                                                   numWLEntries (phy)
                                                   nvInUse (ll)
                                                   onePktPerEvt (ll)
                                                   osalMemStat (OSAL_Memory)
                                                   osal_qHead (OSAL)
                                                   osal_systemClock (OSAL_Timers)
                                                   ownPublicAddr (ll)
                                                   ownRandomAddr (ll)
                                                   ownSavedPublicAddr (ll)
                                                   pAuthEvt (gapbondmgr)
                                                   pAuthLink (gap_linkmgr)
                                                   pEstLink (gap_linkmgr)
                                                   pGapAdvertState (gap_devmgr)
                                                   pGapBondCB (gapbondmgr)
                                                   pGapRoles_AppCGs (peripheral)
                                                   pGapRoles_ParamUpdateCB (peripheral)
                                                   pHalKeyProcessFunction (hal_key)
                                                   pHciEvtMask (hci_event)
                                                   pPairingParams (sm_pairing)
                                                   paramUpdateNoSuccessOption (peripheral)
                                                   passkey_flag (Simplepasscode)
                                                   peerInfo (ll)
                                                   peripheral_event (simpleBLEPeripheral)
                                                   pfnCentralConnCBs (gap_linkmgr)
                                                   pfnPeripheralCBs (gap_task)
                                                   pfnResponderCBs (sm_pairing)
                                                   pgOff (osal_snv)
                                                   pktBuffer (SimpleBLESerialUart)
                                                   point (SimpleBLESerialUart)
                                                   postRfOperations (ll)
                                                   preBlinkState (hal_led)
                                                   previousLLTimerTick (OSAL_ClockBLE)
                                                   pwrmgr_attribute (OSAL_PwrMgr)
                                                   recv_value (simpleBLEPeripheral)
                                                   remUsTicks (OSAL_ClockBLE)
                                                   rfCounters (ll)
                                                   rssiCorrection (ll)
                                                   rxFifoFlowCtrl (ll)
                                                   serverInfoTbl (gatt_server)
                                                   simpleBLEPeripheral_TaskID (simpleBLEPeripheral)
                                                   simpleProfileChar1 (simpleGATTprofile)
                                                   simpleProfileChar2 (simpleGATTprofile)
                                                   simpleProfileChar3 (simpleGATTprofile)
                                                   simpleProfileChar4 (simpleGATTprofile)
                                                   simpleProfileChar4Config (simpleGATTprofile)
                                                   simpleProfileChar5 (simpleGATTprofile)
                                                   simpleProfileChar6 (simpleGATTprofile)
                                                   simpleProfileChar7 (simpleGATTprofile)
                                                   simpleProfileChar8 (simpleGATTprofile)
                                                   simpleProfile_AppCBs (simpleGATTprofile)
                                                   slOverride (ll)
                                                   sleepDelay (ll)
                                                   smTaskID (sm_task)
                                                   sweepIdx (hal_uart)
                                                   taskEndCause (ll)
                                                   tasksEvents (OSAL_SimpleBLEPeripheral)
                                                   timeMSec (OSAL_ClockBLE)
                                                   time_databuf_read (simpleBLEPeripheral)
                                                   time_datalen_read (simpleBLEPeripheral)
                                                   timerHead (OSAL_Timers)
                                                   trngCounter (ll)
                                                   u_state (SimpleBLESerialUart)
                                                   verInfo (ll)
                                                   wakeForRF (hal_sleep)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000CB - 000000DD (0x13 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_I           000000CB        halSleepPconValue (hal_sleep)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000DE - 00000106 (0x29 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          000000DE        SBP_UART_STUDY_CMD (SimpleBLESerialUart)
                                                   Segment part 10 (gatt_server)
                                                   Segment part 11 (gapgattserver)
                                                   Segment part 12 (gap_peridevmgr)
                                                   Segment part 13 (gap_configmgr)
                                                   Segment part 14 (gapgattserver)
                                                   Segment part 16 (gattservapp)
                                                   Segment part 17 (gapgattserver)
                                                   Segment part 19 (gattservapp)
                                                   Segment part 20 (gapgattserver)
                                                   Segment part 22 (gapgattserver)
                                                   Segment part 24 (gapgattserver)
                                                   Segment part 6 (gap_peridevmgr)
                                                   Segment part 6 (sm_rsppairing)
                                                   Segment part 8 (gapgattserver)
                                                   activeTaskID (OSAL)
                                                   advertData (simpleBLEPeripheral)
                                                   appTaskID (gattservapp)
                                                   attDeviceName (Simplepasscode)
                                                   baseTaskID (osal_cbtimer)
                                                   battAttrTbl (battservice)
                                                   battLevel (battservice)
                                                   battLevelProps (battservice)
                                                   battMaxLevel (battservice)
                                                   battMinLevel (battservice)
                                                   battServiceAdcCh (battservice)
                                                   bondIdx (gapbondmgr)
                                                   current_list (simpleBLEPeripheral)
                                                   devInfo11073CertProps (devinfoservice)
                                                   devInfoAttrTbl (devinfoservice)
                                                   devInfoFirmwareRevProps (devinfoservice)
                                                   devInfoHardwareRevProps (devinfoservice)
                                                   devInfoMfrNameProps (devinfoservice)
                                                   devInfoModelNumberProps (devinfoservice)
                                                   devInfoPnpId (devinfoservice)
                                                   devInfoPnpIdProps (devinfoservice)
                                                   devInfoSerialNumberProps (devinfoservice)
                                                   devInfoSoftwareRevProps (devinfoservice)
                                                   devInfoSystemIdProps (devinfoservice)
                                                   gapAppTaskID (gap_configmgr)
                                                   gapBond_AutoFailReason (gapbondmgr)
                                                   gapBond_InitiateWait (gapbondmgr)
                                                   gapBond_KeyDistList (gapbondmgr)
                                                   gapBond_KeySize (gapbondmgr)
                                                   gapBond_PairingMode (gapbondmgr)
                                                   gapRole_AdvEnabled (peripheral)
                                                   gapRole_AdvertData (peripheral)
                                                   gapRole_AdvertDataLen (peripheral)
                                                   gapRole_AdvertOffTime (peripheral)
                                                   gapRole_ConnectionHandle (peripheral)
                                                   gapRole_MaxConnInterval (peripheral)
                                                   gapRole_MinConnInterval (peripheral)
                                                   gapRole_TimeoutMultiplier (peripheral)
                                                   gapUnwantedTaskID (gap_task)
                                                   hidReportRefBattLevel (battservice)
                                                   keypresslasttime (hal_key)
                                                   registeredKeysTaskID (OnBoard)
                                                   reqTaskId (gatt_server)
                                                   scanRspData (simpleBLEPeripheral)
                                                   simpleBLEPeripheral_BondMgrCBs (simpleBLEPeripheral)
                                                   simpleBLEPeripheral_PeripheralCBs (simpleBLEPeripheral)
                                                   simpleBLEPeripheral_SimpleProfileCBs (simpleBLEPeripheral)
                                                   simpleProfileAttrTbl (simpleGATTprofile)
                                                   simpleProfileChar1Props (simpleGATTprofile)
                                                   simpleProfileChar1UserDesp (simpleGATTprofile)
                                                   simpleProfileChar2Props (simpleGATTprofile)
                                                   simpleProfileChar2UserDesp (simpleGATTprofile)
                                                   simpleProfileChar3Props (simpleGATTprofile)
                                                   simpleProfileChar3UserDesp (simpleGATTprofile)
                                                   simpleProfileChar4Props (simpleGATTprofile)
                                                   simpleProfileChar4UserDesp (simpleGATTprofile)
                                                   simpleProfileChar5Props (simpleGATTprofile)
                                                   simpleProfileChar5UserDesp (simpleGATTprofile)
                                                   simpleProfileChar6Props (simpleGATTprofile)
                                                   simpleProfileChar6UserDesp (simpleGATTprofile)
                                                   simpleProfileChar7Props (simpleGATTprofile)
                                                   simpleProfileChar7UserDesp (simpleGATTprofile)
                                                   simpleProfileChar8Props (simpleGATTprofile)
                                                   simpleProfileChar8UserDesp (simpleGATTprofile)
                                                   taskEndCauses (ll)
                                                   taskErrorEndCauses (ll)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000107, align: 0
  Segment part 37.            Intra module refs:   __low_level_init_call
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000107 - 0000011C (0x16 bytes), align: 0
  Segment part 38.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              00000107 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 00000038, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           00000038 
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 00000001, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           00000001 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000011D - 00000122 (0x6 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         0000011D        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               00000120 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000123 - 00000128 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              00000123        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000129 - 0000012B (0x3 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        00000129        Absolute parts (?BANKED_CODE_SUPPORT)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000012C - 0000012E (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   Absolute parts

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?Subroutine0 (SimpleBLESPIFlash)
                                                   ?Subroutine0 (hal_sleep)
                                                   ?Subroutine1 (hal_ds1307)
                                                   ?Subroutine1 (hal_led)
                                                   ?Subroutine1 (osal_cbtimer)
                                                   ?Subroutine1 (simpleBLEPeripheral)
                                                   ?Subroutine10 (simpleBLEPeripheral)
                                                   ?Subroutine12 (peripheral)
                                                   ?Subroutine18 (OSAL)
                                                   ?Subroutine2 (devinfoservice)
                                                   ?Subroutine2 (hal_ds1307)
                                                   ?Subroutine2 (simpleGATTprofile)
                                                   ?Subroutine21 (gapbondmgr)
                                                   ?Subroutine3 (devinfoservice)
                                                   ?Subroutine3 (peripheral)
                                                   ?Subroutine3 (simpleGATTprofile)
                                                   ?Subroutine5 (devinfoservice)
                                                   ?Subroutine5 (peripheral)
                                                   ?Subroutine6 (hal_ds1307)
                                                   ?Subroutine6 (osal_snv)
                                                   ?Subroutine6 (simpleBLEPeripheral)
                                                   ?Subroutine7 (simpleBLEPeripheral)
                                                   ?Subroutine8 (gapbondmgr)
                                                   ?UL_GE_X (?UL_GE_X)
                                                   ATT_BuildFindByTypeValueRsp (att_util)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ErrorRsp (att_server)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_ExecuteWriteRsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_HandleValueInd (att_server)
                                                   ATT_HandleValueNoti (att_server)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseReadMultiReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_PrepareWriteRsp (att_server)
                                                   ATT_ReadBlobRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   ATT_ReadMultiRsp (att_server)
                                                   ATT_ReadRsp (att_server)
                                                   ATT_WriteRsp (att_server)
                                                   Batt_AddService (battservice)
                                                   DevInfo_AddService (devinfoservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   DisplayByte_5x7 (hal_lcd)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_AddService (gattservapp)
                                                   GATTServApp_FindAttr (gattservapp)
                                                   GATTServApp_InitCharCfg (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   GATTServApp_SendServiceChangedInd (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATTServApp_WriteCharCfg (gattservapp)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_InitServer (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ProcessEvent (gatt_task)
                                                   GATT_RegisterService (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GATT_VerifyWritePermissions (gatt_server)
                                                   GGS_AddService (gapgattserver)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_ProcessEvent (hci_tl)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HalAdcRead (hal_adc)
                                                   HalDS1307ReadTimeData (hal_ds1307)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalI2CRead (hal_i2c)
                                                   HalI2CWrite (hal_i2c)
                                                   HalKeyRead (hal_key)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLcd_HW_Clear (hal_lcd)
                                                   HalLcd_HW_WriteLine (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalSPIRead (SimpleBLESPIFlash)
                                                   HalSPIWrite (SimpleBLESPIFlash)
                                                   HalSensorReadReg (hal_sensor)
                                                   HalUARTBusyDMA (hal_uart)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTPollDMA (hal_uart)
                                                   HalUARTReadDMA (hal_uart)
                                                   L2CAP_BuildCmdReject (l2cap_util)
                                                   L2CAP_CmdReject (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   L2CAP_Init (l2cap_task)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   L2CAP_SendData (l2cap_if)
                                                   LL_AddWhiteListDevice (ll)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_ReverseBytes (ll_enc)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_ProcessEvent (ll)
                                                   LL_PseudoRand (ll)
                                                   LL_RX_bm_alloc (ll)
                                                   LL_Rand (ll)
                                                   LL_RandCback (hci)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_SetAdvControl (ll)
                                                   LL_SetAdvData (ll)
                                                   LL_SetAdvParam (ll)
                                                   LL_SetScanRspData (ll)
                                                   LL_TX_bm_alloc (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   PHY_AddWlEntry (phy)
                                                   PHY_ClearBlacklistIndex (phy)
                                                   PHY_SetBlacklistIndex (phy)
                                                   RF_NormalIsr (ll_isr)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ProcessEvent (sm_task)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   Segment part 100 (gattservapp)
                                                   Segment part 101 (gattservapp)
                                                   Segment part 103 (l2cap_util)
                                                   Segment part 104 (hci_event)
                                                   Segment part 105 (gattservapp)
                                                   Segment part 105 (hci_event)
                                                   Segment part 108 (hci_event)
                                                   Segment part 115 (gattservapp)
                                                   Segment part 119 (gattservapp)
                                                   Segment part 119 (hci_event)
                                                   Segment part 120 (gattservapp)
                                                   Segment part 124 (gattservapp)
                                                   Segment part 125 (gattservapp)
                                                   Segment part 130 (gattservapp)
                                                   Segment part 130 (hci_event)
                                                   Segment part 131 (hci_event)
                                                   Segment part 132 (gattservapp)
                                                   Segment part 137 (att_util)
                                                   Segment part 156 (att_util)
                                                   Segment part 162 (gattservapp)
                                                   Segment part 167 (att_util)
                                                   Segment part 18 (gatt_server)
                                                   Segment part 18 (hci_event)
                                                   Segment part 19 (gatt_server)
                                                   Segment part 19 (l2cap_util)
                                                   Segment part 20 (hci_event)
                                                   Segment part 20 (smp)
                                                   Segment part 21 (gatt_server)
                                                   Segment part 22 (sm_rsppairing)
                                                   Segment part 23 (l2cap_util)
                                                   Segment part 23 (sm_mgr)
                                                   Segment part 24 (gap_linkmgr)
                                                   Segment part 24 (l2cap_util)
                                                   Segment part 26 (sm_mgr)
                                                   Segment part 28 (gatt_task)
                                                   Segment part 30 (linkdb)
                                                   Segment part 36 (att_util)
                                                   Segment part 38 (smp)
                                                   Segment part 39 (osal_snv)
                                                   Segment part 41 (gap_peridevmgr)
                                                   Segment part 44 (hci_event)
                                                   Segment part 45 (sm_mgr)
                                                   Segment part 46 (sm_mgr)
                                                   Segment part 50 (gap_configmgr)
                                                   Segment part 51 (gapgattserver)
                                                   Segment part 53 (att_util)
                                                   Segment part 53 (gatt_server)
                                                   Segment part 54 (sm_mgr)
                                                   Segment part 55 (gapgattserver)
                                                   Segment part 57 (gap_linkmgr)
                                                   Segment part 58 (gattservapp)
                                                   Segment part 59 (gattservapp)
                                                   Segment part 60 (sm_rsppairing)
                                                   Segment part 62 (gap_linkmgr)
                                                   Segment part 62 (gattservapp)
                                                   Segment part 63 (gatt_server)
                                                   Segment part 66 (att_util)
                                                   Segment part 67 (gap_linkmgr)
                                                   Segment part 68 (gap_linkmgr)
                                                   Segment part 68 (gattservapp)
                                                   Segment part 69 (att_util)
                                                   Segment part 70 (hci_event)
                                                   Segment part 71 (gattservapp)
                                                   Segment part 71 (sm_rsppairing)
                                                   Segment part 72 (gatt_server)
                                                   Segment part 72 (sm_rsppairing)
                                                   Segment part 75 (sm_mgr)
                                                   Segment part 77 (sm_mgr)
                                                   Segment part 78 (gattservapp)
                                                   Segment part 80 (gap_linkmgr)
                                                   Segment part 81 (gap_linkmgr)
                                                   Segment part 81 (gattservapp)
                                                   Segment part 81 (sm_pairing)
                                                   Segment part 82 (gattservapp)
                                                   Segment part 82 (hci_event)
                                                   Segment part 83 (gattservapp)
                                                   Segment part 83 (sm_pairing)
                                                   Segment part 85 (gap_linkmgr)
                                                   Segment part 86 (gatt_server)
                                                   Segment part 86 (hci_event)
                                                   Segment part 88 (att_util)
                                                   Segment part 88 (gattservapp)
                                                   Segment part 89 (gap_peridevmgr)
                                                   Segment part 90 (ll_timer2)
                                                   Segment part 91 (gattservapp)
                                                   Segment part 92 (sm_pairing)
                                                   Segment part 93 (hci_event)
                                                   Segment part 94 (gattservapp)
                                                   Segment part 95 (l2cap_util)
                                                   Segment part 95 (sm_pairing)
                                                   Segment part 97 (hci_event)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   SimpleProfile_AddService (simpleGATTprofile)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   atoi (Simplepasscode)
                                                   attSendMsg (att_util)
                                                   battMeasure (battservice)
                                                   battReadAttrCB (battservice)
                                                   battWriteAttrCB (battservice)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapPeriProcessHCICmdCompleteEvt (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattFindServerInfo (gatt_server)
                                                   gattGetServerStatus (gatt_server)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattProcessReadMultiReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattProcessWriteReq (gatt_server)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   getTemperature (SimpleTemperature)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   halUart0TxIsr (hal_uart)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capAllocChannel (l2cap_util)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capFindLocalId (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capParseCmdReject (l2cap_util)
                                                   l2capParsePacket (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   leftshift_onebit (sm_mgr)
                                                   linkDB_Add (linkdb)
                                                   linkDB_Authen (linkdb)
                                                   linkDB_Remove (linkdb)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocTask (ll_scheduler)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llConnCleanup (ll_common)
                                                   llConvertCtrlProcTimeoutToEvent (ll_common)
                                                   llConvertLstoToEvent (ll_common)
                                                   llDequeueCtrlPkt (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llGetNextDataChan (ll_common)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessChanMap (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llProcessTxData (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSave_rxFIFO (ll_scheduler)
                                                   llSave_txFIFO (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetNextDataChan (ll_common)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_adjust_header (osal_bufmgr)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_isbufset (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   phyFindWlEntry (phy)
                                                   reportStatusChange (linkdb)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   set_code_name (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
                                                   set_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_HandleConnStatusCB (simpleGATTprofile)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smEncrypt (sm_mgr)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandBuf (sm_mgr)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendEncInfo (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendIdentityInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smPairingSendSingingInfo (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessPairingReq (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   smStartEncryption (sm_pairing)
                                                   smStartRspTimer (sm_mgr)
                                                   smUint8ToAuthReq (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingReqRsp (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParsePairingReq (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
                                                   xor_128 (sm_mgr)
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000018 - 00000019 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000018        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?Subroutine1 (hal_ds1307)
                                                   ?Subroutine11 (simpleBLEPeripheral)
                                                   ?Subroutine12 (osal_snv)
                                                   ?Subroutine12 (simpleBLEPeripheral)
                                                   ?Subroutine3 (Simplepasscode)
                                                   ?Subroutine3 (hal_lcd)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ParseExecuteWriteReq (att_util)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetRandomAddressCmd (hci)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedUpdate (hal_led)
                                                   HalSensorReadReg (hal_sensor)
                                                   HalUARTInitDMA (hal_uart)
                                                   L2CAP_HostNumCompletedPkts (l2cap_if)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback (hci)
                                                   LL_EXT_SetRxGainCback (hci)
                                                   LL_EXT_SetTxPowerCback (hci)
                                                   LL_RandCback (hci)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   Onboard_rand (OnBoard)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTInit (SimpleBLESerialUart)
                                                   Segment part 134 (hci_event)
                                                   Segment part 30 (ll_timer2)
                                                   Segment part 36 (ll_timer2)
                                                   Segment part 44 (sm_mgr)
                                                   Segment part 60 (gattservapp)
                                                   Segment part 61 (gattservapp)
                                                   Segment part 63 (gatt_server)
                                                   Segment part 70 (sm_mgr)
                                                   Segment part 72 (hci)
                                                   Segment part 77 (hci)
                                                   Segment part 83 (gattservapp)
                                                   Segment part 90 (hci)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   bdAddr2Str (simpleBLEPeripheral)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   hex2Str (simpleBLEPeripheral)
                                                   initNV (osal_snv)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   llDivide31By16To16 (ll_math)
                                                   llEventInRange (ll_common)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llProcessTxData (ll_common)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   memset (?memset)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_snv_write (osal_snv)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   set_code_name (Simplepasscode)
                                                   set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessPairingReq (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSendSMMsg (smp)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   writeItem (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_CODE_SUPPORT

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000012F - 0000014C (0x1e bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL_FF               0000012F        ?call_main (?cmain)
           ?BRET_FF                00000135        ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?Subroutine0 (OSAL)
                                                   ?Subroutine0 (OSAL_Memory)
                                                   ?Subroutine0 (OSAL_PwrMgr)
                                                   ?Subroutine0 (SimpleBLESerialUart)
                                                   ?Subroutine0 (hal_adc)
                                                   ?Subroutine0 (hal_aes)
                                                   ?Subroutine0 (hal_drivers)
                                                   ?Subroutine0 (hal_key)
                                                   ?Subroutine1 (OSAL_Timers)
                                                   ?Subroutine1 (OnBoard)
                                                   ?Subroutine1 (hal_lcd)
                                                   ?Subroutine1 (peripheral)
                                                   ?Subroutine2 (hal_lcd)
                                                   ?Subroutine2 (hal_uart)
                                                   ?Subroutine3 (gapbondmgr)
                                                   HalDmaInit (hal_dma)
                                                   HalFlashErase (hal_flash)
                                                   HalKeyEnterSleep (hal_key)
                                                   HalLcd_HW_WaitUs (hal_lcd)
                                                   HalUARTIsrDMA (hal_uart)
                                                   PHY_CommitRxFifo (phy)
                                                   PHY_DeallocateRxFifo (phy)
                                                   PHY_RetryRxFifo (phy)
                                                   PHY_RetryTxFifo (phy)
                                                   SM_ResponderInit (sm_rsppairing)
                                                   Segment part 10 (gap_devmgr)
                                                   Segment part 10 (hci_event)
                                                   Segment part 12 (gatt_task)
                                                   Segment part 12 (hal_i2c)
                                                   Segment part 146 (hci)
                                                   Segment part 149 (ll)
                                                   Segment part 15 (gap_task)
                                                   Segment part 184 (phy)
                                                   Segment part 22 (linkdb)
                                                   Segment part 23 (hci_tl)
                                                   Segment part 25 (att_util)
                                                   Segment part 26 (gatt_server)
                                                   Segment part 26 (hal_led)
                                                   Segment part 30 (ll_scheduler)
                                                   Segment part 31 (gap_peridevmgr)
                                                   Segment part 33 (ll_enc)
                                                   Segment part 33 (ll_timer2)
                                                   Segment part 33 (smp)
                                                   Segment part 36 (sm_mgr)
                                                   Segment part 40 (gap_configmgr)
                                                   Segment part 42 (gapgattserver)
                                                   Segment part 49 (sm_pairing)
                                                   Segment part 50 (l2cap_util)
                                                   Segment part 53 (ll_common)
                                                   Segment part 54 (gattservapp)
                                                   Segment part 57 (gatt_server)
                                                   Segment part 66 (ll_timer2)
                                                   Segment part 74 (gap_linkmgr)
                                                   Segment part 9 (l2cap_if)
                                                   SimpleProfile_RegisterAppCBs (simpleGATTprofile)
                                                   bm_desc_from_payload (osal_bufmgr)
                                                   delay_nus (SimpleDS18B20)
                                                   gapValidADType (gap_devmgr)
                                                   halRestoreSleepLevel (hal_sleep)
                                                   halSetSleepMode (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   hex2char (hal_ds1307)
                                                   l2capHandleRxError (l2cap_util)
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llInitTimer2 (ll_timer2)
                                                   llSlaveEvt_TaskAbort (ll_slaveEndCauses)
                                                   llUnexpectedEndCauseHandler (ll_errorEndCauses)
                                                   main (SimpleBLEPeripheral_Main)
                                                   memset (?memset)
                                                   osalInitTasks (OSAL_SimpleBLEPeripheral)
                                                   osal_int_disable (OSAL)
                                                   osal_snv_init (osal_snv)
                                                   strlen (?strlen)
                                                   xnvSPIWrite (SimpleBLESPIFlash)
           ?BDISPATCH_FF           00000138        ATT_BuildErrorRsp::?relay (att_util)
                                                   ATT_BuildExchangeMTURsp::?relay (att_util)
                                                   ATT_BuildFindByTypeValueRsp::?relay (att_util)
                                                   ATT_BuildFindInfoRsp::?relay (att_util)
                                                   ATT_BuildHandleValueInd::?relay (att_util)
                                                   ATT_BuildPrepareWriteRsp::?relay (att_util)
                                                   ATT_BuildReadBlobRsp::?relay (att_util)
                                                   ATT_BuildReadByGrpTypeRsp::?relay (att_util)
                                                   ATT_BuildReadByTypeRsp::?relay (att_util)
                                                   ATT_BuildReadMultiRsp::?relay (att_util)
                                                   ATT_BuildReadRsp::?relay (att_util)
                                                   ATT_CompareUUID::?relay (att_util)
                                                   ATT_ConvertUUIDto128::?relay (att_util)
                                                   ATT_ErrorRsp::?relay (att_server)
                                                   ATT_ExchangeMTURsp::?relay (att_server)
                                                   ATT_ExecuteWriteRsp::?relay (att_server)
                                                   ATT_FindByTypeValueRsp::?relay (att_server)
                                                   ATT_FindInfoRsp::?relay (att_server)
                                                   ATT_HandleValueInd::?relay (att_server)
                                                   ATT_HandleValueNoti::?relay (att_server)
                                                   ATT_ParseExchangeMTUReq::?relay (att_util)
                                                   ATT_ParseExecuteWriteReq::?relay (att_util)
                                                   ATT_ParseFindByTypeValueReq::?relay (att_util)
                                                   ATT_ParseFindInfoReq::?relay (att_util)
                                                   ATT_ParsePacket::?relay (att_util)
                                                   ATT_ParsePrepareWriteReq::?relay (att_util)
                                                   ATT_ParseReadBlobReq::?relay (att_util)
                                                   ATT_ParseReadByTypeReq::?relay (att_util)
                                                   ATT_ParseReadMultiReq::?relay (att_util)
                                                   ATT_ParseReadReq::?relay (att_util)
                                                   ATT_ParseWriteReq::?relay (att_util)
                                                   ATT_PrepareWriteRsp::?relay (att_server)
                                                   ATT_ReadBlobRsp::?relay (att_server)
                                                   ATT_ReadByGrpTypeRsp::?relay (att_server)
                                                   ATT_ReadByTypeRsp::?relay (att_server)
                                                   ATT_ReadMultiRsp::?relay (att_server)
                                                   ATT_ReadRsp::?relay (att_server)
                                                   ATT_WriteRsp::?relay (att_server)
                                                   Batt_AddService::?relay (battservice)
                                                   DevInfo_AddService::?relay (devinfoservice)
                                                   DevInfo_SetParameter::?relay (devinfoservice)
                                                   DisplayByte_5x7::?relay (hal_lcd)
                                                   GAPBondMgr_Init::?relay (gapbondmgr)
                                                   GAPBondMgr_LinkEst::?relay (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent::?relay (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg::?relay (gapbondmgr)
                                                   GAPBondMgr_Register::?relay (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr::?relay (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd::?relay (gapbondmgr)
                                                   GAPBondMgr_SetParameter::?relay (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg::?relay (gapbondmgr)
                                                   GAPRole_GetParameter::?relay (peripheral)
                                                   GAPRole_Init::?relay (peripheral)
                                                   GAPRole_ProcessEvent::?relay (peripheral)
                                                   GAPRole_SendUpdateParam::?relay (peripheral)
                                                   GAPRole_SetParameter::?relay (peripheral)
                                                   GAPRole_StartDevice::?relay (peripheral)
                                                   GAPRole_TerminateConnection::?relay (peripheral)
                                                   GAP_Authenticate::?relay (gap_linkmgr)
                                                   GAP_Bond::?relay (gap_linkmgr)
                                                   GAP_DeviceInit::?relay (gap)
                                                   GAP_EndDiscoverable::?relay (gap_peridevmgr)
                                                   GAP_GetParamValue::?relay (gap_configmgr)
                                                   GAP_Init::?relay (gap_task)
                                                   GAP_MakeDiscoverable::?relay (gap_peridevmgr)
                                                   GAP_NumActiveConnections::?relay (gap_task)
                                                   GAP_ParamsInit::?relay (gap_configmgr)
                                                   GAP_PasscodeUpdate::?relay (gap_linkmgr)
                                                   GAP_PeriDevMgrInit::?relay (gap_peridevmgr)
                                                   GAP_ProcessEvent::?relay (gap_task)
                                                   GAP_RegisterForHCIMsgs::?relay (gap_task)
                                                   GAP_ResolvePrivateAddr::?relay (gap_devmgr)
                                                   GAP_SecParamsInit::?relay (gap_configmgr)
                                                   GAP_SendSlaveSecurityRequest::?relay (gap_perilinkmgr)
                                                   GAP_SetParamValue::?relay (gap_configmgr)
                                                   GAP_Signable::?relay (gap_linkmgr)
                                                   GAP_TerminateAuth::?relay (gap_linkmgr)
                                                   GAP_TerminateLinkReq::?relay (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData::?relay (gap_peridevmgr)
                                                   GATTServApp_AddService::?relay (gattservapp)
                                                   GATTServApp_FindAttr::?relay (gattservapp)
                                                   GATTServApp_Init::?relay (gattservapp)
                                                   GATTServApp_InitCharCfg::?relay (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq::?relay (gattservapp)
                                                   GATTServApp_ProcessCharCfg::?relay (gattservapp)
                                                   GATTServApp_ProcessEvent::?relay (gattservapp)
                                                   GATTServApp_ReadAttr::?relay (gattservapp)
                                                   GATTServApp_ReadCharCfg::?relay (gattservapp)
                                                   GATTServApp_RegisterForMsg::?relay (gattservapp)
                                                   GATTServApp_RegisterService::?relay (gattservapp)
                                                   GATTServApp_SendCCCUpdatedEvent::?relay (gattservapp)
                                                   GATTServApp_SendServiceChangedInd::?relay (gattservapp)
                                                   GATTServApp_UpdateCharCfg::?relay (gattservapp)
                                                   GATTServApp_WriteAttr::?relay (gattservapp)
                                                   GATTServApp_WriteCharCfg::?relay (gattservapp)
                                                   GATT_AppCompletedMsg::?relay (gatt_task)
                                                   GATT_FindHandle::?relay (gatt_server)
                                                   GATT_FindHandleUUID::?relay (gatt_server)
                                                   GATT_FindNextAttr::?relay (gatt_server)
                                                   GATT_Indication::?relay (gatt_server)
                                                   GATT_Init::?relay (gatt_task)
                                                   GATT_InitServer::?relay (gatt_server)
                                                   GATT_Notification::?relay (gatt_server)
                                                   GATT_ProcessEvent::?relay (gatt_task)
                                                   GATT_RegisterForReq::?relay (gatt_server)
                                                   GATT_RegisterService::?relay (gatt_server)
                                                   GATT_ServiceChangedInd::?relay (gatt_server)
                                                   GATT_ServiceNumAttrs::?relay (gatt_server)
                                                   GATT_VerifyReadPermissions::?relay (gatt_server)
                                                   GATT_VerifyWritePermissions::?relay (gatt_server)
                                                   GGS_AddService::?relay (gapgattserver)
                                                   GGS_SetParameter::?relay (gapgattserver)
                                                   HCI_CommandCompleteEvent::?relay (hci_event)
                                                   HCI_CommandStatusEvent::?relay (hci_event)
                                                   HCI_DisconnectCmd::?relay (hci)
                                                   HCI_GAPTaskRegister::?relay (hci_tl)
                                                   HCI_HostNumCompletedPktCmd::?relay (hci)
                                                   HCI_Init::?relay (hci_tl)
                                                   HCI_L2CAPTaskRegister::?relay (hci_tl)
                                                   HCI_LE_AddWhiteListCmd::?relay (hci)
                                                   HCI_LE_ClearWhiteListCmd::?relay (hci)
                                                   HCI_LE_LtkReqNegReplyCmd::?relay (hci)
                                                   HCI_LE_LtkReqReplyCmd::?relay (hci)
                                                   HCI_LE_RandCmd::?relay (hci)
                                                   HCI_LE_ReadBufSizeCmd::?relay (hci)
                                                   HCI_LE_SetAdvDataCmd::?relay (hci)
                                                   HCI_LE_SetAdvEnableCmd::?relay (hci)
                                                   HCI_LE_SetAdvParamCmd::?relay (hci)
                                                   HCI_LE_SetRandomAddressCmd::?relay (hci)
                                                   HCI_LE_SetScanRspDataCmd::?relay (hci)
                                                   HCI_NumOfCompletedPacketsEvent::?relay (hci_event)
                                                   HCI_ProcessEvent::?relay (hci_tl)
                                                   HCI_ReadBDADDRCmd::?relay (hci)
                                                   HCI_ReadRssiCmd::?relay (hci)
                                                   HCI_SMPTaskRegister::?relay (hci_tl)
                                                   HCI_SendCommandCompleteEvent::?relay (hci_event)
                                                   HCI_SendCommandStatusEvent::?relay (hci_event)
                                                   HCI_SendControllerToHostEvent::?relay (hci_event)
                                                   HCI_SendDataPkt::?relay (hci)
                                                   HCI_VendorSpecifcCommandCompleteEvent::?relay (hci_event)
                                                   HCI_bm_alloc::?relay (hci)
                                                   HalAdcInit::?relay (hal_adc)
                                                   HalAdcRead::?relay (hal_adc)
                                                   HalAdcSetReference::?relay (hal_adc)
                                                   HalAesInit::?relay (hal_aes)
                                                   HalDS1307ReadTimeData::?relay (hal_ds1307)
                                                   HalDmaInit::?relay (hal_dma)
                                                   HalDriverInit::?relay (hal_drivers)
                                                   HalFlashErase::?relay (hal_flash)
                                                   HalFlashRead::?relay (hal_flash)
                                                   HalFlashWrite::?relay (hal_flash)
                                                   HalI2CInit::?relay (hal_i2c)
                                                   HalI2CRead::?relay (hal_i2c)
                                                   HalI2CWrite::?relay (hal_i2c)
                                                   HalKeyConfig::?relay (hal_key)
                                                   HalKeyEnterSleep::?relay (hal_key)
                                                   HalKeyExitSleep::?relay (hal_key)
                                                   HalKeyInit::?relay (hal_key)
                                                   HalKeyPoll::?relay (hal_key)
                                                   HalKeyRead::?relay (hal_key)
                                                   HalLcdInit::?relay (hal_lcd)
                                                   HalLcdWriteString::?relay (hal_lcd)
                                                   HalLcdWriteStringValue::?relay (hal_lcd)
                                                   HalLcd_HW_Clear::?relay (hal_lcd)
                                                   HalLcd_HW_Control::?relay (hal_lcd)
                                                   HalLcd_HW_Init::?relay (hal_lcd)
                                                   HalLcd_HW_WaitUs::?relay (hal_lcd)
                                                   HalLcd_HW_Write::?relay (hal_lcd)
                                                   HalLcd_HW_WriteChar::?relay (hal_lcd)
                                                   HalLcd_HW_WriteLine::?relay (hal_lcd)
                                                   HalLedBlink::?relay (hal_led)
                                                   HalLedEnterSleep::?relay (hal_led)
                                                   HalLedExitSleep::?relay (hal_led)
                                                   HalLedInit::?relay (hal_led)
                                                   HalLedOnOff::?relay (hal_led)
                                                   HalLedSet::?relay (hal_led)
                                                   HalLedUpdate::?relay (hal_led)
                                                   HalSPIRead::?relay (SimpleBLESPIFlash)
                                                   HalSPIWrite::?relay (SimpleBLESPIFlash)
                                                   HalSensorReadReg::?relay (hal_sensor)
                                                   HalUARTBusyDMA::?relay (hal_uart)
                                                   HalUARTInit::?relay (hal_uart)
                                                   HalUARTInitDMA::?relay (hal_uart)
                                                   HalUARTIsrDMA::?relay (hal_uart)
                                                   HalUARTOpen::?relay (hal_uart)
                                                   HalUARTPoll::?relay (hal_uart)
                                                   HalUARTPollDMA::?relay (hal_uart)
                                                   HalUARTRead::?relay (hal_uart)
                                                   HalUARTReadDMA::?relay (hal_uart)
                                                   HalUARTRxAvailDMA::?relay (hal_uart)
                                                   Hal_Init::?relay (hal_drivers)
                                                   Hal_ProcessEvent::?relay (hal_drivers)
                                                   Hal_ProcessPoll::?relay (hal_drivers)
                                                   Hal_UART_RxBufLen::?relay (hal_uart)
                                                   InitBoard::?relay (OnBoard)
                                                   L2CAP_BuildCmdReject::?relay (l2cap_util)
                                                   L2CAP_CmdReject::?relay (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq::?relay (l2cap_if)
                                                   L2CAP_HostNumCompletedPkts::?relay (l2cap_if)
                                                   L2CAP_Init::?relay (l2cap_task)
                                                   L2CAP_ParseParamUpdateReq::?relay (l2cap_util)
                                                   L2CAP_ProcessEvent::?relay (l2cap_task)
                                                   L2CAP_RegisterApp::?relay (l2cap_if)
                                                   L2CAP_SendData::?relay (l2cap_if)
                                                   L2CAP_bm_alloc::?relay (l2cap_util)
                                                   LL_AddWhiteListDevice::?relay (ll)
                                                   LL_ClearWhiteList::?relay (ll)
                                                   LL_ConnParamUpdateCback::?relay (hci_event)
                                                   LL_ConnectionCompleteCback::?relay (hci_event)
                                                   LL_CtrlToHostFlowControl::?relay (ll)
                                                   LL_Disconnect::?relay (ll)
                                                   LL_DisconnectCback::?relay (hci_event)
                                                   LL_ENC_AES128_Encrypt::?relay (ll_enc)
                                                   LL_ENC_Decrypt::?relay (ll_enc)
                                                   LL_ENC_DecryptMsg::?relay (ll_enc)
                                                   LL_ENC_Encrypt::?relay (ll_enc)
                                                   LL_ENC_EncryptMsg::?relay (ll_enc)
                                                   LL_ENC_GenDeviceIV::?relay (ll_enc)
                                                   LL_ENC_GenDeviceSKD::?relay (ll_enc)
                                                   LL_ENC_GenerateMIC::?relay (ll_enc)
                                                   LL_ENC_GeneratePseudoRandNum::?relay (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum::?relay (ll_enc)
                                                   LL_ENC_InitAesDMA::?relay (ll_enc)
                                                   LL_ENC_LoadEmptyIV::?relay (ll_enc)
                                                   LL_ENC_MoveData::?relay (ll_enc)
                                                   LL_ENC_ReverseBytes::?relay (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback::?relay (hci)
                                                   LL_EXT_SetRxGainCback::?relay (hci)
                                                   LL_EXT_SetTxPowerCback::?relay (hci)
                                                   LL_EncChangeCback::?relay (hci_event)
                                                   LL_EncKeyRefreshCback::?relay (hci_event)
                                                   LL_EncLtkNegReply::?relay (ll)
                                                   LL_EncLtkReply::?relay (ll)
                                                   LL_EncLtkReqCback::?relay (hci_event)
                                                   LL_Encrypt::?relay (ll)
                                                   LL_Init::?relay (ll)
                                                   LL_ProcessEvent::?relay (ll)
                                                   LL_PseudoRand::?relay (ll)
                                                   LL_RX_bm_alloc::?relay (ll)
                                                   LL_Rand::?relay (ll)
                                                   LL_RandCback::?relay (hci)
                                                   LL_ReadBDADDR::?relay (ll)
                                                   LL_ReadRemoteVersionInfoCback::?relay (hci_event)
                                                   LL_ReadRssi::?relay (ll)
                                                   LL_Reset::?relay (ll)
                                                   LL_RxDataCompleteCback::?relay (hci_data)
                                                   LL_SetAdvControl::?relay (ll)
                                                   LL_SetAdvData::?relay (ll)
                                                   LL_SetAdvParam::?relay (ll)
                                                   LL_SetRandomAddress::?relay (ll)
                                                   LL_SetScanRspData::?relay (ll)
                                                   LL_TX_bm_alloc::?relay (ll)
                                                   LL_TxData::?relay (ll)
                                                   OnBoard_KeyCallback::?relay (OnBoard)
                                                   OnBoard_SendKeys::?relay (OnBoard)
                                                   Onboard_rand::?relay (OnBoard)
                                                   PHY_AddWlEntry::?relay (phy)
                                                   PHY_ClearAllRegsAndFifos::?relay (phy)
                                                   PHY_ClearBlacklist::?relay (phy)
                                                   PHY_ClearBlacklistIndex::?relay (phy)
                                                   PHY_ClearSavedWhiteList::?relay (phy)
                                                   PHY_ClearWhitelist::?relay (phy)
                                                   PHY_CommitRxFifo::?relay (phy)
                                                   PHY_ConfigWhitener::?relay (phy)
                                                   PHY_ConfigureAppendRfStatus::?relay (phy)
                                                   PHY_ConfigureFifoDataProcessing::?relay (phy)
                                                   PHY_ConfigureMD::?relay (phy)
                                                   PHY_DeallocateRxFifo::?relay (phy)
                                                   PHY_GetAdvChans::?relay (phy)
                                                   PHY_GetEndCause::?relay (phy)
                                                   PHY_Init::?relay (phy)
                                                   PHY_InitSeqStat::?relay (phy)
                                                   PHY_Reset::?relay (phy)
                                                   PHY_RetryRxFifo::?relay (phy)
                                                   PHY_RetryTxFifo::?relay (phy)
                                                   PHY_SetAdvChans::?relay (phy)
                                                   PHY_SetAdvWlPolicy::?relay (phy)
                                                   PHY_SetBlacklistIndex::?relay (phy)
                                                   PHY_SetCRCInit::?relay (phy)
                                                   PHY_SetEndConnection::?relay (phy)
                                                   PHY_SetFifoConfig::?relay (phy)
                                                   PHY_SetMaxNack::?relay (phy)
                                                   PHY_SetOwnAddr::?relay (phy)
                                                   PHY_SetPeerAddr::?relay (phy)
                                                   PHY_SetRfFreq::?relay (phy)
                                                   PHY_SetSyncWord::?relay (phy)
                                                   RegisterForKeys::?relay (OnBoard)
                                                   SM_CalcRandomAddr::?relay (sm_mgr)
                                                   SM_GenerateAuthenSig::?relay (sm_mgr)
                                                   SM_Init::?relay (sm_task)
                                                   SM_PasskeyUpdate::?relay (sm_pairing)
                                                   SM_ProcessEvent::?relay (sm_task)
                                                   SM_ResolveRandomAddrs::?relay (sm_mgr)
                                                   SM_ResponderInit::?relay (sm_rsppairing)
                                                   SM_StartPairing::?relay (sm_pairing)
                                                   SM_VerifyAuthenSig::?relay (sm_mgr)
                                                   SbpHalUARTInit::?relay (SimpleBLESerialUart)
                                                   SbpHalUARTRead::?relay (SimpleBLESerialUart)
                                                   SbpHalUARTReadCallback::?relay (SimpleBLESerialUart)
                                                   SbpHalUART_Init::?relay (SimpleBLESerialUart)
                                                   SimpleBLEPeripheral_Init::?relay (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent::?relay (simpleBLEPeripheral)
                                                   SimpleProfile_AddService::?relay (simpleGATTprofile)
                                                   SimpleProfile_GetParameter::?relay (simpleGATTprofile)
                                                   SimpleProfile_RegisterAppCBs::?relay (simpleGATTprofile)
                                                   SimpleProfile_SetParameter::?relay (simpleGATTprofile)
                                                   _itoa::?relay (OnBoard)
                                                   _ltoa::?relay (OSAL)
                                                   aesDmaInit::?relay (hal_aes)
                                                   atoi::?relay (Simplepasscode)
                                                   attSendMsg::?relay (att_util)
                                                   battMeasure::?relay (battservice)
                                                   battReadAttrCB::?relay (battservice)
                                                   battWriteAttrCB::?relay (battservice)
                                                   bdAddr2Str::?relay (simpleBLEPeripheral)
                                                   bm_desc_from_payload::?relay (osal_bufmgr)
                                                   cleanErasedPage::?relay (osal_snv)
                                                   compactPage::?relay (osal_snv)
                                                   delay_nus::?relay (SimpleDS18B20)
                                                   devInfo_ReadAttrCB::?relay (devinfoservice)
                                                   disconnectNext::?relay (gap_linkmgr)
                                                   erasePage::?relay (osal_snv)
                                                   findItem::?relay (osal_snv)
                                                   findOffset::?relay (osal_snv)
                                                   gapAddAddrAdj::?relay (gap_configmgr)
                                                   gapBondFreeAuthEvt::?relay (gapbondmgr)
                                                   gapBondMgrAddBond::?relay (gapbondmgr)
                                                   gapBondMgrAuthenticate::?relay (gapbondmgr)
                                                   gapBondMgrBondReq::?relay (gapbondmgr)
                                                   gapBondMgrBondTotal::?relay (gapbondmgr)
                                                   gapBondMgrChangeState::?relay (gapbondmgr)
                                                   gapBondMgrEraseAllBondings::?relay (gapbondmgr)
                                                   gapBondMgrEraseBonding::?relay (gapbondmgr)
                                                   gapBondMgrFindAddr::?relay (gapbondmgr)
                                                   gapBondMgrFindCharCfgItem::?relay (gapbondmgr)
                                                   gapBondMgrGetPublicAddr::?relay (gapbondmgr)
                                                   gapBondMgrInvertCharCfgItem::?relay (gapbondmgr)
                                                   gapBondMgrReadBonds::?relay (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr::?relay (gapbondmgr)
                                                   gapBondMgrSendServiceChange::?relay (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg::?relay (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg::?relay (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList::?relay (gapbondmgr)
                                                   gapBondSetupPrivFlag::?relay (gapbondmgr)
                                                   gapDetermineAddrType::?relay (gap_configmgr)
                                                   gapFindADType::?relay (gap_devmgr)
                                                   gapFreeAdvertState::?relay (gap_peridevmgr)
                                                   gapFreeAuthLink::?relay (gap_linkmgr)
                                                   gapFreeEstLink::?relay (gap_linkmgr)
                                                   gapGetDevAddress::?relay (gap_configmgr)
                                                   gapGetDevAddressMode::?relay (gap_configmgr)
                                                   gapGetIRK::?relay (gap_configmgr)
                                                   gapGetSRK::?relay (gap_configmgr)
                                                   gapGetSignCounter::?relay (gap_configmgr)
                                                   gapIncSignCounter::?relay (gap_configmgr)
                                                   gapIsAdvertising::?relay (gap_devmgr)
                                                   gapPairingCompleteCB::?relay (gap_linkmgr)
                                                   gapPasskeyNeededCB::?relay (gap_linkmgr)
                                                   gapPeriProcessHCICmdCompleteEvt::?relay (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt::?relay (gap_peridevmgr)
                                                   gapProcessConnUpdateCompleteEvt::?relay (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt::?relay (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt::?relay (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt::?relay (gap_task)
                                                   gapProcessNewAddr::?relay (gap_configmgr)
                                                   gapProcessOSALMsg::?relay (gap_task)
                                                   gapProcessRandomAddrComplete::?relay (gap_configmgr)
                                                   gapReadBD_ADDRStatus::?relay (gap_configmgr)
                                                   gapReadBufSizeCmdStatus::?relay (gap_configmgr)
                                                   gapRegisterPeripheral::?relay (gap_task)
                                                   gapRole_ProcessGAPMsg::?relay (peripheral)
                                                   gapRole_ProcessOSALMsg::?relay (peripheral)
                                                   gapRole_startConnUpdate::?relay (peripheral)
                                                   gapSendBondCompleteEvent::?relay (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent::?relay (gap_configmgr)
                                                   gapSendLinkUpdateEvent::?relay (gap_linkmgr)
                                                   gapSendMakeDiscEvent::?relay (gap_peridevmgr)
                                                   gapSendPairingReqEvent::?relay (gap_linkmgr)
                                                   gapSetAdvParams::?relay (gap_peridevmgr)
                                                   gapSetAdvParamsStatus::?relay (gap_peridevmgr)
                                                   gapUpdateConnSignCounter::?relay (gap_configmgr)
                                                   gapValidADType::?relay (gap_devmgr)
                                                   gapWriteAdvDataStatus::?relay (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus::?relay (gap_peridevmgr)
                                                   gattFindServerInfo::?relay (gatt_server)
                                                   gattGetServerStatus::?relay (gatt_server)
                                                   gattNotifyEvent::?relay (gatt_task)
                                                   gattProcessExchangeMTUReq::?relay (gatt_server)
                                                   gattProcessExecuteWriteReq::?relay (gatt_server)
                                                   gattProcessFindByTypeValueReq::?relay (gatt_server)
                                                   gattProcessFindInfoReq::?relay (gatt_server)
                                                   gattProcessReadByGrpTypeReq::?relay (gatt_server)
                                                   gattProcessReadByTypeReq::?relay (gatt_server)
                                                   gattProcessReadMultiReq::?relay (gatt_server)
                                                   gattProcessReadReq::?relay (gatt_server)
                                                   gattProcessRxData::?relay (gatt_task)
                                                   gattProcessWriteReq::?relay (gatt_server)
                                                   gattRegisterServer::?relay (gatt_task)
                                                   gattServApp_FindAuthorizeAttrCB::?relay (gattservapp)
                                                   gattServApp_FindCharCfgItem::?relay (gattservapp)
                                                   gattServApp_FindPrepareWriteQ::?relay (gattservapp)
                                                   gattServApp_FindServiceCBs::?relay (gattservapp)
                                                   gattServApp_HandleConnStatusCB::?relay (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq::?relay (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq::?relay (gattservapp)
                                                   gattServApp_ProcessMsg::?relay (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq::?relay (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq::?relay (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq::?relay (gattservapp)
                                                   gattServApp_ProcessReadMultiReq::?relay (gattservapp)
                                                   gattServApp_ProcessWriteReq::?relay (gattservapp)
                                                   gattServApp_SetNumPrepareWrites::?relay (gattservapp)
                                                   gattServApp_WriteAttrCB::?relay (gattservapp)
                                                   gattServerHandleConnStatusCB::?relay (gatt_server)
                                                   gattServerHandleTimerCB::?relay (gatt_server)
                                                   gattServerProcessMsgCB::?relay (gatt_server)
                                                   gattServiceLastHandle::?relay (gatt_server)
                                                   gattStartTimer::?relay (gatt_task)
                                                   gattStopTimer::?relay (gatt_task)
                                                   generate_subkey::?relay (sm_mgr)
                                                   getTemperature::?relay (SimpleTemperature)
                                                   ggs_ReadAttrCB::?relay (gapgattserver)
                                                   ggs_SetAttrWPermit::?relay (gapgattserver)
                                                   ggs_WriteAttrCB::?relay (gapgattserver)
                                                   halGetJoyKeyInput::?relay (hal_key)
                                                   halProcessKeyInterrupt::?relay (hal_key)
                                                   halRestoreSleepLevel::?relay (hal_sleep)
                                                   halSetSleepMode::?relay (hal_sleep)
                                                   halSleep::?relay (hal_sleep)
                                                   halSleepReadTimer::?relay (hal_sleep)
                                                   halSleepSetTimer::?relay (hal_sleep)
                                                   hciInitEventMasks::?relay (hci_event)
                                                   hex2Str::?relay (simpleBLEPeripheral)
                                                   hex2char::?relay (hal_ds1307)
                                                   i2cMstStrt::?relay (hal_i2c)
                                                   initNV::?relay (osal_snv)
                                                   isLimitedDiscoverableMode::?relay (gap_peridevmgr)
                                                   l2capAllocChannel::?relay (l2cap_util)
                                                   l2capBuildParamUpdateReq::?relay (l2cap_util)
                                                   l2capEncapSendData::?relay (l2cap_util)
                                                   l2capFindLocalId::?relay (l2cap_util)
                                                   l2capFreeChannel::?relay (l2cap_util)
                                                   l2capHandleRxError::?relay (l2cap_util)
                                                   l2capHandleTimerCB::?relay (l2cap_util)
                                                   l2capNotifyData::?relay (l2cap_util)
                                                   l2capNotifySignal::?relay (l2cap_util)
                                                   l2capParseCmdReject::?relay (l2cap_util)
                                                   l2capParsePacket::?relay (l2cap_util)
                                                   l2capParseParamUpdateRsp::?relay (l2cap_util)
                                                   l2capParseSignalHdr::?relay (l2cap_util)
                                                   l2capProcessReq::?relay (l2cap_task)
                                                   l2capProcessRsp::?relay (l2cap_task)
                                                   l2capProcessRxData::?relay (l2cap_task)
                                                   l2capProcessSignal::?relay (l2cap_task)
                                                   l2capSendCmd::?relay (l2cap_util)
                                                   l2capSendReq::?relay (l2cap_util)
                                                   l2capStopTimer::?relay (l2cap_util)
                                                   leftshift_onebit::?relay (sm_mgr)
                                                   linkDB_Add::?relay (linkdb)
                                                   linkDB_Authen::?relay (linkdb)
                                                   linkDB_Find::?relay (linkdb)
                                                   linkDB_FindFirst::?relay (linkdb)
                                                   linkDB_Init::?relay (linkdb)
                                                   linkDB_NumActive::?relay (linkdb)
                                                   linkDB_PerformFunc::?relay (linkdb)
                                                   linkDB_Register::?relay (linkdb)
                                                   linkDB_Remove::?relay (linkdb)
                                                   linkDB_State::?relay (linkdb)
                                                   llAdjustForMissedEvent::?relay (ll_common)
                                                   llAdvEvt_TaskAbort::?relay (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect::?relay (ll_advEndCauses)
                                                   llAllocConnId::?relay (ll_common)
                                                   llAllocTask::?relay (ll_scheduler)
                                                   llCheckWhiteListUsage::?relay (ll_common)
                                                   llClearSetInts::?relay (ll_common)
                                                   llConnCleanup::?relay (ll_common)
                                                   llConnTerminate::?relay (ll_common)
                                                   llConvertCtrlProcTimeoutToEvent::?relay (ll_common)
                                                   llConvertLstoToEvent::?relay (ll_common)
                                                   llDequeueCtrlPkt::?relay (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llDisableT2E1::?relay (ll_timer2)
                                                   llDisableT2Ints::?relay (ll_timer2)
                                                   llDisableT2IntsEvts::?relay (ll_timer2)
                                                   llDiscoverableAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llEnqueueCtrlPkt::?relay (ll_common)
                                                   llEnqueueDataQ::?relay (ll_common)
                                                   llExtendRfRange::?relay (ll_common)
                                                   llFindNextSecTask::?relay (ll_scheduler)
                                                   llFindTxPowerSettings::?relay (ll_common)
                                                   llFreeTask::?relay (ll_scheduler)
                                                   llGetActiveTasks::?relay (ll_scheduler)
                                                   llGetCurrentTask::?relay (ll_scheduler)
                                                   llGetCurrentTime::?relay (ll_timer2)
                                                   llGetFullCTandST::?relay (ll_timer2)
                                                   llGetNextConn::?relay (ll_common)
                                                   llGetNumTasks::?relay (ll_scheduler)
                                                   llGetTaskState::?relay (ll_scheduler)
                                                   llGetTimer2Capture::?relay (ll_timer2)
                                                   llInitFeatureSet::?relay (ll_common)
                                                   llInitTimer2::?relay (ll_timer2)
                                                   llMemCopySrc::?relay (ll_common)
                                                   llNonConnAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llProcessChanMap::?relay (ll_common)
                                                   llProcessPostRfOps::?relay (ll_common)
                                                   llProcessSlaveControlPacket::?relay (ll_slaveEndCauses)
                                                   llProcessSlaveControlProcedures::?relay (ll_slaveEndCauses)
                                                   llReleaseAllConnId::?relay (ll_common)
                                                   llReplaceCtrlPkt::?relay (ll_common)
                                                   llRestoreConnState::?relay (ll_scheduler)
                                                   llRfInit::?relay (ll_common)
                                                   llSave_rxFIFO::?relay (ll_scheduler)
                                                   llSave_txFIFO::?relay (ll_scheduler)
                                                   llScheduleTask::?relay (ll_scheduler)
                                                   llScheduler::?relay (ll_scheduler)
                                                   llSchedulerInit::?relay (ll_scheduler)
                                                   llSetFreqTune::?relay (ll_common)
                                                   llSetT2C1Event1::?relay (ll_timer2)
                                                   llSetT2LongC1Event1::?relay (ll_timer2)
                                                   llSetT2LongC1Timeout::?relay (ll_timer2)
                                                   llSetT2OVFC2Event2::?relay (ll_timer2)
                                                   llSetupAdv::?relay (ll_common)
                                                   llSetupDirectedAdvEvt::?relay (ll_common)
                                                   llSetupEncRsp::?relay (ll_common)
                                                   llSetupFeatureSetRsp::?relay (ll_common)
                                                   llSetupNextSlaveEvent::?relay (ll_slaveEndCauses)
                                                   llSetupNonConnectableAdvEvt::?relay (ll_common)
                                                   llSetupPauseEncRsp::?relay (ll_common)
                                                   llSetupRejectInd::?relay (ll_common)
                                                   llSetupScannableAdvEvt::?relay (ll_common)
                                                   llSetupStartEncReq::?relay (ll_common)
                                                   llSetupStartEncRsp::?relay (ll_common)
                                                   llSetupTermInd::?relay (ll_common)
                                                   llSetupUndirectedAdvEvt::?relay (ll_common)
                                                   llSetupUnknownRsp::?relay (ll_common)
                                                   llSetupVersionIndReq::?relay (ll_common)
                                                   llSlaveEvt_TaskAbort::?relay (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk::?relay (ll_slaveEndCauses)
                                                   llStartAdvSetup::?relay (ll_common)
                                                   llStartSlaveSetup::?relay (ll_common)
                                                   llStartTimer2::?relay (ll_timer2)
                                                   llStopTimer2::?relay (ll_timer2)
                                                   llUndirectedAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llUnexpectedEndCauseHandler::?relay (ll_errorEndCauses)
                                                   llWriteTxData::?relay (ll_common)
                                                   ll_McuPrecisionCount::?relay (ll_timer2)
                                                   memset::?relay (?memset)
                                                   osalAddTimer::?relay (OSAL_Timers)
                                                   osalDeleteTimer::?relay (OSAL_Timers)
                                                   osalFindTimer::?relay (OSAL_Timers)
                                                   osalInitTasks::?relay (OSAL_SimpleBLEPeripheral)
                                                   osalTimeUpdate::?relay (OSAL_ClockBLE)
                                                   osalTimerInit::?relay (OSAL_Timers)
                                                   osalTimerUpdate::?relay (OSAL_Timers)
                                                   osal_CbTimerInit::?relay (osal_cbtimer)
                                                   osal_CbTimerProcessEvent::?relay (osal_cbtimer)
                                                   osal_CbTimerStart::?relay (osal_cbtimer)
                                                   osal_CbTimerStop::?relay (osal_cbtimer)
                                                   osal_GetSystemClock::?relay (OSAL_Timers)
                                                   osal_bm_adjust_header::?relay (osal_bufmgr)
                                                   osal_bm_alloc::?relay (osal_bufmgr)
                                                   osal_bm_free::?relay (osal_bufmgr)
                                                   osal_clear_event::?relay (OSAL)
                                                   osal_get_timeoutEx::?relay (OSAL_Timers)
                                                   osal_init_system::?relay (OSAL)
                                                   osal_int_disable::?relay (OSAL)
                                                   osal_isbufset::?relay (OSAL)
                                                   osal_mem_alloc::?relay (OSAL_Memory)
                                                   osal_mem_free::?relay (OSAL_Memory)
                                                   osal_mem_init::?relay (OSAL_Memory)
                                                   osal_mem_kick::?relay (OSAL_Memory)
                                                   osal_memcmp::?relay (OSAL)
                                                   osal_memcpy::?relay (OSAL)
                                                   osal_memdup::?relay (OSAL)
                                                   osal_memset::?relay (OSAL)
                                                   osal_msg_allocate::?relay (OSAL)
                                                   osal_msg_deallocate::?relay (OSAL)
                                                   osal_msg_enqueue::?relay (OSAL)
                                                   osal_msg_enqueue_push::?relay (OSAL)
                                                   osal_msg_extract::?relay (OSAL)
                                                   osal_msg_push::?relay (OSAL)
                                                   osal_msg_receive::?relay (OSAL)
                                                   osal_msg_send::?relay (OSAL)
                                                   osal_next_timeout::?relay (OSAL_Timers)
                                                   osal_pwrmgr_device::?relay (OSAL_PwrMgr)
                                                   osal_pwrmgr_init::?relay (OSAL_PwrMgr)
                                                   osal_pwrmgr_powerconserve::?relay (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state::?relay (OSAL_PwrMgr)
                                                   osal_rand::?relay (OSAL)
                                                   osal_revmemcpy::?relay (OSAL)
                                                   osal_run_system::?relay (OSAL)
                                                   osal_set_event::?relay (OSAL)
                                                   osal_snv_compact::?relay (osal_snv)
                                                   osal_snv_init::?relay (osal_snv)
                                                   osal_snv_read::?relay (osal_snv)
                                                   osal_snv_write::?relay (osal_snv)
                                                   osal_start_reload_timer::?relay (OSAL_Timers)
                                                   osal_start_system::?relay (OSAL)
                                                   osal_start_timerEx::?relay (OSAL_Timers)
                                                   osal_stop_timerEx::?relay (OSAL_Timers)
                                                   osal_strlen::?relay (OSAL)
                                                   peripheralStateNotificationCB::?relay (simpleBLEPeripheral)
                                                   phyFindWlEntry::?relay (phy)
                                                   reportStatusChange::?relay (linkdb)
                                                   sendAuthEvent::?relay (gap_linkmgr)
                                                   sendEstLinkEvent::?relay (gap_linkmgr)
                                                   sendTerminateEvent::?relay (gap_linkmgr)
                                                   setActivePage::?relay (osal_snv)
                                                   setXferPage::?relay (osal_snv)
                                                   set_code_name::?relay (Simplepasscode)
                                                   set_ddram_line_col::?relay (hal_lcd)
                                                   set_de_passkey::?relay (Simplepasscode)
                                                   set_new_passkey::?relay (Simplepasscode)
                                                   set_passkey::?relay (Simplepasscode)
                                                   showDate::?relay (hal_ds1307)
                                                   simpleBLEPeripheralPairStateCB::?relay (simpleBLEPeripheral)
                                                   simpleBLEPeripheral_HandleKeys::?relay (simpleBLEPeripheral)
                                                   simpleProfileChangeCB::?relay (simpleBLEPeripheral)
                                                   simpleProfile_HandleConnStatusCB::?relay (simpleGATTprofile)
                                                   simpleProfile_ReadAttrCB::?relay (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB::?relay (simpleGATTprofile)
                                                   smAuthReqToUint8::?relay (sm_mgr)
                                                   smDetermineKeySize::?relay (sm_pairing)
                                                   smEncrypt::?relay (sm_mgr)
                                                   smEndPairing::?relay (sm_pairing)
                                                   smFreePairingParams::?relay (sm_pairing)
                                                   smGenerateConfirm::?relay (sm_pairing)
                                                   smGeneratePairingReqRsp::?relay (sm_pairing)
                                                   smGenerateRandBuf::?relay (sm_mgr)
                                                   smGenerateRandMsg::?relay (sm_pairing)
                                                   smLinkCheck::?relay (sm_pairing)
                                                   smNextPairingState::?relay (sm_pairing)
                                                   smPairingSendEncInfo::?relay (sm_pairing)
                                                   smPairingSendIdentityAddrInfo::?relay (sm_pairing)
                                                   smPairingSendIdentityInfo::?relay (sm_pairing)
                                                   smPairingSendMasterID::?relay (sm_pairing)
                                                   smPairingSendSingingInfo::?relay (sm_pairing)
                                                   smProcessDataMsg::?relay (sm_pairing)
                                                   smProcessEncryptChange::?relay (sm_pairing)
                                                   smProcessOSALMsg::?relay (sm_task)
                                                   smProcessPairingReq::?relay (sm_pairing)
                                                   smProcessRandComplete::?relay (sm_mgr)
                                                   smRegisterResponder::?relay (sm_pairing)
                                                   smResponderProcessLTKReq::?relay (sm_rsppairing)
                                                   smResponderSendNextKeyInfo::?relay (sm_rsppairing)
                                                   smSavePairInfo::?relay (sm_pairing)
                                                   smSendFailAndEnd::?relay (sm_pairing)
                                                   smSendSMMsg::?relay (smp)
                                                   smSetPairingReqRsp::?relay (sm_pairing)
                                                   smStartEncryption::?relay (sm_pairing)
                                                   smStartRspTimer::?relay (sm_mgr)
                                                   smStopRspTimer::?relay (sm_mgr)
                                                   smTimedOut::?relay (sm_pairing)
                                                   smUint8ToAuthReq::?relay (sm_mgr)
                                                   sm_CMAC::?relay (sm_mgr)
                                                   sm_ah::?relay (sm_mgr)
                                                   sm_c1::?relay (sm_pairing)
                                                   sm_c1new::?relay (sm_mgr)
                                                   sm_s1::?relay (sm_mgr)
                                                   sm_xor::?relay (sm_mgr)
                                                   smpBuildEncInfo::?relay (smp)
                                                   smpBuildIdentityAddrInfo::?relay (smp)
                                                   smpBuildIdentityInfo::?relay (smp)
                                                   smpBuildMasterID::?relay (smp)
                                                   smpBuildPairingConfirm::?relay (smp)
                                                   smpBuildPairingFailed::?relay (smp)
                                                   smpBuildPairingRandom::?relay (smp)
                                                   smpBuildPairingReq::?relay (smp)
                                                   smpBuildPairingReqRsp::?relay (smp)
                                                   smpBuildPairingRsp::?relay (smp)
                                                   smpBuildSecurityReq::?relay (smp)
                                                   smpBuildSigningInfo::?relay (smp)
                                                   smpParseEncInfo::?relay (smp)
                                                   smpParseIdentityAddrInfo::?relay (smp)
                                                   smpParseIdentityInfo::?relay (smp)
                                                   smpParseMasterID::?relay (smp)
                                                   smpParsePairingConfirm::?relay (smp)
                                                   smpParsePairingFailed::?relay (smp)
                                                   smpParsePairingRandom::?relay (smp)
                                                   smpParsePairingReq::?relay (smp)
                                                   smpParseSecurityReq::?relay (smp)
                                                   smpParseSigningInfo::?relay (smp)
                                                   smpResponderProcessIncoming::?relay (sm_rsppairing)
                                                   smpResponderProcessMasterID::?relay (sm_rsppairing)
                                                   smpResponderProcessPairingRandom::?relay (sm_rsppairing)
                                                   smpResponderProcessPairingReq::?relay (sm_rsppairing)
                                                   strcat::?relay (?strcat)
                                                   strcpy::?relay (?strcpy)
                                                   strlen::?relay (?strlen)
                                                   studyCompletedAndBroadcastData::?relay (SimpleBLESerialUart)
                                                   verifyWordM::?relay (osal_snv)
                                                   writeItem::?relay (osal_snv)
                                                   writeWord::?relay (osal_snv)
                                                   xnvSPIWrite::?relay (SimpleBLESPIFlash)
                                                   xor_128::?relay (sm_mgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EQ_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000155A - 0000156E (0x15 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X                 0000155A        SM_VerifyAuthenSig (sm_mgr)
                                                   findOffset (osal_snv)
                                                   initNV (osal_snv)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000156F - 0000157E (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT                  0000156F        HalLedUpdate (hal_led)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_snv_compact (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000157F - 0000158E (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X                0000157F        halSleep (hal_sleep)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GE_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000158F - 000015AD (0x1f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GE_X                0000158F        GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   halSleep (hal_sleep)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_TO_FLT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000015AE - 0000160A (0x5d bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT              000015AE        getTemperature (SimpleTemperature)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TO_L

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000160B - 0000163E (0x34 bytes), align: 0
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L               0000160B        getTemperature (SimpleTemperature)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000163F - 0000164A (0xc bytes), align: 0
  Segment part 6.             Intra module refs:   ?FLT_TO_L
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000164B - 00001699 (0x4f bytes), align: 0
  Segment part 7.             Intra module refs:   ?FLT_TO_L

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000169A - 000016A3 (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_REW      0000169A        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000016A4 - 000016AD (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1_REW   000016A4        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000016AE - 000016B0 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_REW       000016AE        ?FLT_ADD (?FLT_ADD)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000016B1 - 000016C2 (0x12 bytes), align: 0
  Segment part 1.             Intra module refs:   ?FLT_TEST_INF_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF           000016B1        ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000016C3 - 000016C5 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1_REW    000016C3        ?FLT_ADD (?FLT_ADD)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000016C6 - 000016D7 (0x12 bytes), align: 0
  Segment part 1.             Intra module refs:   ?FLT_TEST_INF_R1_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1        000016C6        ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000016D8 - 000016E6 (0xf bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN           000016D8        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000016E7 - 000016F5 (0xf bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1        000016E7        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000016F6 - 0000190F (0x21a bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_ADD                000016F6        getTemperature (SimpleTemperature)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_DIV

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001910 - 00001AF5 (0x1e6 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_DIV                00001910        getTemperature (SimpleTemperature)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001AF6 - 00001AF8 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL                  00001AF6        HalLedUpdate (hal_led)
                                                   LL_TxData (ll)
                                                   atoi (Simplepasscode)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llScheduleTask (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osal_snv_compact (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001AF9 - 00001B75 (0x7d bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_MUL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL_REW              00001AF9 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001B76 - 00001BE5 (0x70 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIV_MOD             00001B76        HalLedUpdate (hal_led)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   _ltoa (OSAL)
                                                   halSleep (hal_sleep)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001BE6 - 00001BEA (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR                 00001BE6        GAP_PasscodeUpdate (gap_linkmgr)
                                                   HalSPIRead (SimpleBLESPIFlash)
                                                   HalSPIWrite (SimpleBLESPIFlash)
                                                   LL_TxData (ll)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   _ltoa (OSAL)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001BEB - 00001BFE (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?UL_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001BFF - 00001C04 (0x6 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL                  00001BFF        LL_TimeToNextRfEvent (ll_sleep)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   halSleep (hal_sleep)
                                                   osal_snv_compact (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001C05 - 00001C09 (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL_REW              00001C05 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001C0A - 00001C1D (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?L_SHL
                                                   ?L_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001C1E - 00001C30 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD                  00001C1E        HalLedUpdate (hal_led)
                                                   HalSPIWrite (SimpleBLESPIFlash)
                                                   LL_SetAdvControl (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   atoi (Simplepasscode)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001C31 - 00001C43 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X                00001C31        HalSPIWrite (SimpleBLESPIFlash)
                                                   LL_TxData (ll)
                                                   halSleepSetTimer (hal_sleep)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001C44 - 00001C56 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X             00001C44        LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   gapIncSignCounter (gap_configmgr)
                                                   halSleepSetTimer (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001C57 - 00001C6A (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB                  00001C57        LL_TimeToNextRfEvent (ll_sleep)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_FROM_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001C6B - 00001C7E (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X           00001C6B        llAdjustTimeBackward (ll_timer2)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001C7F - 00001C91 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND                  00001C7F        LL_SetAdvControl (ll)
                                                   LL_TxData (ll)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001C92 - 00001CA4 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X                00001C92        LL_TimeToNextRfEvent (ll_sleep)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001CA5 - 00001CB7 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X             00001CA5        Segment part 90 (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001CB8 - 00001CC6 (0xf bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                00001CB8        GAPBondMgr_SetParameter (gapbondmgr)
                                                   HalLedUpdate (hal_led)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   _ltoa (OSAL)
                                                   atoi (Simplepasscode)
                                                   findOffset (osal_snv)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   getTemperature (SimpleTemperature)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llFindTxPowerSettings (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_snv_compact (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001CC7 - 00001CD5 (0xf bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             00001CC7        GAPBondMgr_SetParameter (gapbondmgr)
                                                   LL_SetAdvControl (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   set_new_passkey (Simplepasscode)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XLOAD_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001CD6 - 00001CE1 (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XLOAD_R2345            00001CD6        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Signable (gap_linkmgr)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_TxData (ll)
                                                   Segment part 30 (ll_timer2)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   gapGetSignCounter (gap_configmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   set_passkey (Simplepasscode)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTORE_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001CE2 - 00001CED (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTORE_R2345           00001CE2        GAPRole_GetParameter (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Signable (gap_linkmgr)
                                                   HalLedBlink (hal_led)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   halSleep (hal_sleep)
                                                   llAllocTask (ll_scheduler)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001CEE - 00001CFA (0xd bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   00001CEE        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001CFB - 00001D1B (0x21 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   00001CFB        ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GGS_SetParameter (gapgattserver)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   _ltoa (OSAL)
                                                   bdAddr2Str (simpleBLEPeripheral)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   hex2Str (simpleBLEPeripheral)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llFindTxPowerSettings (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   set_code_name (Simplepasscode)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smProcessPairingReq (sm_pairing)
                                                   smSetPairingReqRsp (sm_pairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001D1C - 00001D5C (0x41 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_DIV_MOD              00001D55        osal_snv_write (osal_snv)
                                                   sm_CMAC (sm_mgr)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001D5D - 00001DB5 (0x59 bytes), align: 0
  Segment part 1.             Intra module refs:   ?S_DIV_MOD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             00001D5D        LL_TimeToNextRfEvent (ll_sleep)
                                                   _itoa (OnBoard)
                                                   battMeasure (battservice)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llConvertCtrlProcTimeoutToEvent (ll_common)
                                                   llConvertLstoToEvent (ll_common)
                                                   llGetNextDataChan (ll_common)
                                                   llSetNextDataChan (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osalTimeUpdate (OSAL_ClockBLE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001DB6 - 00001DB8 (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR                 00001DB6        HalAdcRead (hal_adc)
                                                   llProcessChanMap (ll_common)
                                                   phyFindWlEntry (phy)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001DB9 - 00001DC5 (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?SS_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001DC6 - 00001DC8 (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 00001DC6        HalFlashWrite (hal_flash)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   battMeasure (battservice)
                                                   getTemperature (SimpleTemperature)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001DC9 - 00001DD4 (0xc bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001DD5 - 00001DD7 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL                  00001DD5        ATT_BuildFindByTypeValueRsp (att_util)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   GATTServApp_FindAttr (gattservapp)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_InitServer (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HalFlashRead (hal_flash)
                                                   L2CAP_Init (l2cap_task)
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   PHY_AddWlEntry (phy)
                                                   PHY_ClearBlacklistIndex (phy)
                                                   PHY_SetBlacklistIndex (phy)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gattFindServerInfo (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   l2capAllocChannel (l2cap_util)
                                                   l2capFindLocalId (l2cap_util)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_snv_write (osal_snv)
                                                   phyFindWlEntry (phy)
                                                   smSavePairInfo (sm_pairing)
                                                   smUint8ToAuthReq (sm_mgr)
                                                   smpParsePairingReq (smp)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001DD8 - 00001DDA (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_REW              00001DD8 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001DDB - 00001DE7 (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?S_SHL
                                                   ?S_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001DE8 - 00001DFD (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          00001DE8        ATT_CompareUUID (att_util)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_LE_AddWhiteListCmd (hci)
                                                   HCI_LE_ClearWhiteListCmd (hci)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetAdvDataCmd (hci)
                                                   HCI_LE_SetAdvEnableCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_LE_SetRandomAddressCmd (hci)
                                                   HCI_LE_SetScanRspDataCmd (hci)
                                                   HCI_ReadBDADDRCmd (hci)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedUpdate (hal_led)
                                                   HalSensorReadReg (hal_sensor)
                                                   HalUARTInitDMA (hal_uart)
                                                   L2CAP_HostNumCompletedPkts (l2cap_if)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback (hci)
                                                   LL_EXT_SetRxGainCback (hci)
                                                   LL_EXT_SetTxPowerCback (hci)
                                                   LL_RandCback (hci)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   Onboard_rand (OnBoard)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTInit (SimpleBLESerialUart)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   bdAddr2Str (simpleBLEPeripheral)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   hex2Str (simpleBLEPeripheral)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   llFindTxPowerSettings (ll_common)
                                                   llGetCurrentTime (ll_timer2)
                                                   llProcessPostRfOps (ll_common)
                                                   llProcessTxData (ll_common)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_snv_write (osal_snv)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   set_code_name (Simplepasscode)
                                                   set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessPairingReq (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSendSMMsg (smp)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001DFE - 00001E17 (0x1a bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        00001DFE        ?Subroutine0 (Simplepasscode)
                                                   ?Subroutine0 (gapbondmgr)
                                                   ?Subroutine0 (peripheral)
                                                   ?Subroutine1 (gapbondmgr)
                                                   ?Subroutine1 (osal_snv)
                                                   ?Subroutine2 (gapbondmgr)
                                                   ?Subroutine3 (hal_lcd)
                                                   ?Subroutine3 (osal_snv)
                                                   ?Subroutine5 (gapbondmgr)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   Batt_AddService (battservice)
                                                   DevInfo_AddService (devinfoservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_AddService (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GGS_AddService (gapgattserver)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedUpdate (hal_led)
                                                   HalSensorReadReg (hal_sensor)
                                                   HalUARTInitDMA (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_HostNumCompletedPkts (l2cap_if)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_RandCback (hci)
                                                   LL_SetAdvData (ll)
                                                   LL_SetScanRspData (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   Onboard_rand (OnBoard)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTInit (SimpleBLESerialUart)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   Segment part 118 (gattservapp)
                                                   Segment part 124 (hci)
                                                   Segment part 130 (hci)
                                                   Segment part 145 (hci)
                                                   Segment part 19 (sm_mgr)
                                                   Segment part 22 (l2cap_if)
                                                   Segment part 25 (osal_snv)
                                                   Segment part 32 (ll_timer2)
                                                   Segment part 34 (att_server)
                                                   Segment part 36 (sm_pairing)
                                                   Segment part 46 (sm_mgr)
                                                   Segment part 47 (sm_mgr)
                                                   Segment part 53 (sm_mgr)
                                                   Segment part 54 (ll_enc)
                                                   Segment part 60 (att_util)
                                                   Segment part 62 (ll_enc)
                                                   Segment part 67 (gattservapp)
                                                   Segment part 69 (att_util)
                                                   Segment part 81 (att_util)
                                                   Segment part 82 (gatt_server)
                                                   Segment part 84 (att_util)
                                                   Segment part 95 (sm_pairing)
                                                   Segment part 96 (gattservapp)
                                                   Segment part 96 (sm_pairing)
                                                   Segment part 97 (att_util)
                                                   Segment part 98 (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   SimpleProfile_AddService (simpleGATTprofile)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   battReadAttrCB (battservice)
                                                   battWriteAttrCB (battservice)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llProcessTxData (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llWriteTxData (ll_common)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   set_code_name (Simplepasscode)
                                                   set_de_passkey (Simplepasscode)
                                                   set_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smEncrypt (sm_mgr)
                                                   smEndPairing (sm_pairing)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)
                                                   smStartRspTimer (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001E18 - 00001E32 (0x1b bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     00001E18        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001E33 - 00001E3C (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         00001E33        ATT_CompareUUID (att_util)
                                                   ATT_ParseExchangeMTUReq (att_util)
                                                   ATT_ParseExecuteWriteReq (att_util)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParseFindInfoReq (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadBlobReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseReadMultiReq (att_util)
                                                   ATT_ParseReadReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_SecParamsInit (gap_configmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GATTServApp_FindAttr (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATTServApp_WriteCharCfg (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_ReadBDADDRCmd (hci)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalSPIRead (SimpleBLESPIFlash)
                                                   HalSPIWrite (SimpleBLESPIFlash)
                                                   L2CAP_HostNumCompletedPkts (l2cap_if)
                                                   L2CAP_ParseParamUpdateReq (l2cap_util)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback (hci)
                                                   LL_EXT_SetRxGainCback (hci)
                                                   LL_EXT_SetTxPowerCback (hci)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_RandCback (hci)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_SetAdvParam (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTInit (SimpleBLESerialUart)
                                                   Segment part 30 (ll_timer2)
                                                   Segment part 46 (sm_mgr)
                                                   Segment part 95 (sm_pairing)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   battReadAttrCB (battservice)
                                                   battWriteAttrCB (battservice)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capParseCmdReject (l2cap_util)
                                                   l2capParseParamUpdateRsp (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessTxData (ll_common)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llWriteTxData (ll_common)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_memcmp (OSAL)
                                                   osal_memcpy (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_revmemcpy (OSAL)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   set_code_name (Simplepasscode)
                                                   set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessPairingReq (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   xor_128 (sm_mgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CALL_IND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001E3D - 00001E3E (0x2 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CALL_IND               00001E3D        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   HalKeyPoll (hal_key)
                                                   HalUARTPollDMA (hal_uart)
                                                   LL_ProcessEvent (ll)
                                                   attSendMsg (att_util)
                                                   battMeasure (battservice)
                                                   battWriteAttrCB (battservice)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   l2capSendCmd (l2cap_util)
                                                   linkDB_PerformFunc (linkdb)
                                                   llScheduleTask (ll_scheduler)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_run_system (OSAL)
                                                   reportStatusChange (linkdb)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smNextPairingState (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessPairingReq (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001E3F - 00001EAA (0x6c bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_ENTER_XDATA     00001E3F        ATT_BuildErrorRsp (att_util)
                                                   ATT_BuildFindByTypeValueRsp (att_util)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ErrorRsp (att_server)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_ExecuteWriteRsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_HandleValueInd (att_server)
                                                   ATT_HandleValueNoti (att_server)
                                                   ATT_ParseExchangeMTUReq (att_util)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParseFindInfoReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadBlobReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseReadMultiReq (att_util)
                                                   ATT_ParseReadReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_PrepareWriteRsp (att_server)
                                                   ATT_ReadBlobRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   ATT_ReadMultiRsp (att_server)
                                                   ATT_ReadRsp (att_server)
                                                   ATT_WriteRsp (att_server)
                                                   Batt_AddService (battservice)
                                                   DevInfo_AddService (devinfoservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   DisplayByte_5x7 (hal_lcd)
                                                   GAPBondMgr_Init (gapbondmgr)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_Init (gap_task)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_ParamsInit (gap_configmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SecParamsInit (gap_configmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_AddService (gattservapp)
                                                   GATTServApp_FindAttr (gattservapp)
                                                   GATTServApp_Init (gattservapp)
                                                   GATTServApp_InitCharCfg (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_ReadCharCfg (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   GATTServApp_SendServiceChangedInd (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATTServApp_WriteCharCfg (gattservapp)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Init (gatt_task)
                                                   GATT_InitServer (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ProcessEvent (gatt_task)
                                                   GATT_RegisterService (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GATT_VerifyReadPermissions (gatt_server)
                                                   GATT_VerifyWritePermissions (gatt_server)
                                                   GGS_AddService (gapgattserver)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_DisconnectCmd (hci)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_Init (hci_tl)
                                                   HCI_LE_AddWhiteListCmd (hci)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_SetAdvDataCmd (hci)
                                                   HCI_LE_SetAdvEnableCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_LE_SetScanRspDataCmd (hci)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_ProcessEvent (hci_tl)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HalAdcRead (hal_adc)
                                                   HalDS1307ReadTimeData (hal_ds1307)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalI2CRead (hal_i2c)
                                                   HalI2CWrite (hal_i2c)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalKeyRead (hal_key)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLcd_HW_Clear (hal_lcd)
                                                   HalLcd_HW_WriteChar (hal_lcd)
                                                   HalLcd_HW_WriteLine (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalSPIRead (SimpleBLESPIFlash)
                                                   HalSPIWrite (SimpleBLESPIFlash)
                                                   HalSensorReadReg (hal_sensor)
                                                   HalUARTBusyDMA (hal_uart)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTPollDMA (hal_uart)
                                                   HalUARTRead (hal_uart)
                                                   HalUARTReadDMA (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   Hal_UART_RxBufLen (hal_uart)
                                                   InitBoard (OnBoard)
                                                   L2CAP_BuildCmdReject (l2cap_util)
                                                   L2CAP_CmdReject (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   L2CAP_Init (l2cap_task)
                                                   L2CAP_ParseParamUpdateReq (l2cap_util)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   L2CAP_SendData (l2cap_if)
                                                   L2CAP_bm_alloc (l2cap_util)
                                                   LL_AddWhiteListDevice (ll)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_Disconnect (ll)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_ENC_ReverseBytes (ll_enc)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_PseudoRand (ll)
                                                   LL_RX_bm_alloc (ll)
                                                   LL_Rand (ll)
                                                   LL_RandCback (hci)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_SetAdvControl (ll)
                                                   LL_SetAdvData (ll)
                                                   LL_SetAdvParam (ll)
                                                   LL_SetScanRspData (ll)
                                                   LL_TX_bm_alloc (ll)
                                                   LL_TxData (ll)
                                                   OnBoard_KeyCallback (OnBoard)
                                                   OnBoard_SendKeys (OnBoard)
                                                   PHY_AddWlEntry (phy)
                                                   PHY_ClearBlacklistIndex (phy)
                                                   PHY_SetBlacklistIndex (phy)
                                                   PHY_SetCRCInit (phy)
                                                   PHY_SetSyncWord (phy)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_Init (sm_task)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ProcessEvent (sm_task)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SbpHalUARTRead (SimpleBLESerialUart)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   Segment part 69 (att_util)
                                                   Segment part 81 (att_util)
                                                   Segment part 84 (att_util)
                                                   Segment part 97 (att_util)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   SimpleProfile_AddService (simpleGATTprofile)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   atoi (Simplepasscode)
                                                   attSendMsg (att_util)
                                                   battMeasure (battservice)
                                                   battReadAttrCB (battservice)
                                                   battWriteAttrCB (battservice)
                                                   bdAddr2Str (simpleBLEPeripheral)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   disconnectNext (gap_linkmgr)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrBondTotal (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseAllBondings (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrFindCharCfgItem (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrInvertCharCfgItem (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapPeriProcessHCICmdCompleteEvt (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapReadBufSizeCmdStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapSetAdvParamsStatus (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvDataStatus (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattFindServerInfo (gatt_server)
                                                   gattGetServerStatus (gatt_server)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattProcessReadMultiReq (gatt_server)
                                                   gattProcessReadReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattProcessWriteReq (gatt_server)
                                                   gattServApp_FindAuthorizeAttrCB (gattservapp)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattServiceLastHandle (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   gattStopTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   getTemperature (SimpleTemperature)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   halGetJoyKeyInput (hal_key)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   hex2Str (simpleBLEPeripheral)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capAllocChannel (l2cap_util)
                                                   l2capBuildParamUpdateReq (l2cap_util)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capFindLocalId (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capParseCmdReject (l2cap_util)
                                                   l2capParsePacket (l2cap_util)
                                                   l2capParseParamUpdateRsp (l2cap_util)
                                                   l2capParseSignalHdr (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   l2capStopTimer (l2cap_util)
                                                   leftshift_onebit (sm_mgr)
                                                   linkDB_Add (linkdb)
                                                   linkDB_Authen (linkdb)
                                                   linkDB_Register (linkdb)
                                                   linkDB_Remove (linkdb)
                                                   linkDB_State (linkdb)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocConnId (ll_common)
                                                   llAllocTask (ll_scheduler)
                                                   llConnCleanup (ll_common)
                                                   llConnTerminate (ll_common)
                                                   llConvertCtrlProcTimeoutToEvent (ll_common)
                                                   llConvertLstoToEvent (ll_common)
                                                   llDequeueCtrlPkt (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llEnqueueDataQ (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llMemCopySrc (ll_common)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessChanMap (ll_common)
                                                   llProcessSlaveControlPacket (ll_slaveEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSave_rxFIFO (ll_scheduler)
                                                   llSave_txFIFO (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupEncRsp (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llStartSlaveSetup (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerInit (osal_cbtimer)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_adjust_header (osal_bufmgr)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_clear_event (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_isbufset (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_memcpy (OSAL)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_enqueue_push (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_push (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_revmemcpy (OSAL)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   phyFindWlEntry (phy)
                                                   reportStatusChange (linkdb)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   set_code_name (Simplepasscode)
                                                   set_ddram_line_col (hal_lcd)
                                                   set_de_passkey (Simplepasscode)
                                                   set_new_passkey (Simplepasscode)
                                                   set_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleBLEPeripheral_HandleKeys (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_HandleConnStatusCB (simpleGATTprofile)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smEncrypt (sm_mgr)
                                                   smEndPairing (sm_pairing)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandBuf (sm_mgr)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smLinkCheck (sm_pairing)
                                                   smPairingSendEncInfo (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendIdentityInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smPairingSendSingingInfo (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessPairingReq (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   smStartEncryption (sm_pairing)
                                                   smStartRspTimer (sm_mgr)
                                                   smUint8ToAuthReq (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   sm_xor (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildPairingReqRsp (smp)
                                                   smpBuildSecurityReq (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParsePairingReq (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   strcat (?strcat)
                                                   strcpy (?strcpy)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
                                                   xor_128 (sm_mgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001EAB - 00001F10 (0x66 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       00001EAB        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llGetNextDataChan (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llProcessTxData (ll_common)
                                                   llSetNextDataChan (ll_common)
                                                   llT2OVFC1_ISR (ll_isr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001F11 - 00001F56 (0x46 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_LEAVE_XDATA     00001F11        ?Subroutine0 (OSAL_Timers)
                                                   ?Subroutine0 (OnBoard)
                                                   ?Subroutine0 (SimpleBLESPIFlash)
                                                   ?Subroutine0 (Simplepasscode)
                                                   ?Subroutine0 (battservice)
                                                   ?Subroutine0 (devinfoservice)
                                                   ?Subroutine0 (hal_ds1307)
                                                   ?Subroutine0 (hal_lcd)
                                                   ?Subroutine0 (hal_sensor)
                                                   ?Subroutine0 (hal_uart)
                                                   ?Subroutine0 (osal_bufmgr)
                                                   ?Subroutine0 (simpleGATTprofile)
                                                   ?Subroutine1 (hal_key)
                                                   ?Subroutine1 (hal_uart)
                                                   ?Subroutine1 (osal_snv)
                                                   ?Subroutine1 (simpleGATTprofile)
                                                   ?Subroutine2 (OSAL)
                                                   ?Subroutine2 (OSAL_Timers)
                                                   ?Subroutine2 (osal_snv)
                                                   ?Subroutine3 (OSAL)
                                                   ?Subroutine3 (OSAL_Timers)
                                                   ?Subroutine3 (hal_lcd)
                                                   ?Subroutine3 (osal_snv)
                                                   ?Subroutine4 (gapbondmgr)
                                                   ?Subroutine5 (gapbondmgr)
                                                   ?Subroutine6 (gapbondmgr)
                                                   ATT_BuildFindByTypeValueRsp (att_util)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   DisplayByte_5x7 (hal_lcd)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_DeviceInit (gap)
                                                   GAP_Init (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_HostNumCompletedPktCmd (hci)
                                                   HCI_Init (hci_tl)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_ProcessEvent (hci_tl)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HalAdcRead (hal_adc)
                                                   HalDS1307ReadTimeData (hal_ds1307)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalI2CRead (hal_i2c)
                                                   HalI2CWrite (hal_i2c)
                                                   HalKeyConfig (hal_key)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcd_HW_WriteLine (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalUARTReadDMA (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_SetAdvControl (ll)
                                                   LL_TxData (ll)
                                                   OnBoard_SendKeys (OnBoard)
                                                   PHY_AddWlEntry (phy)
                                                   SM_ProcessEvent (sm_task)
                                                   SM_StartPairing (sm_pairing)
                                                   SbpHalUARTRead (SimpleBLESerialUart)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   Segment part 11 (l2cap_task)
                                                   Segment part 11 (sm_mgr)
                                                   Segment part 112 (ll_common)
                                                   Segment part 117 (gapbondmgr)
                                                   Segment part 118 (gattservapp)
                                                   Segment part 12 (sm_rsppairing)
                                                   Segment part 120 (ll)
                                                   Segment part 123 (ll)
                                                   Segment part 124 (hci_event)
                                                   Segment part 125 (hci)
                                                   Segment part 13 (hci_event)
                                                   Segment part 131 (hci)
                                                   Segment part 14 (l2cap_task)
                                                   Segment part 145 (gattservapp)
                                                   Segment part 151 (gattservapp)
                                                   Segment part 16 (hci_event)
                                                   Segment part 16 (ll_scheduler)
                                                   Segment part 162 (att_util)
                                                   Segment part 17 (gatt_server)
                                                   Segment part 17 (gatt_task)
                                                   Segment part 17 (ll_slaveEndCauses)
                                                   Segment part 18 (l2cap_util)
                                                   Segment part 19 (ll_advEndCauses)
                                                   Segment part 20 (gap_task)
                                                   Segment part 20 (sm_mgr)
                                                   Segment part 21 (gap_linkmgr)
                                                   Segment part 22 (l2cap_util)
                                                   Segment part 222 (phy)
                                                   Segment part 23 (l2cap_if)
                                                   Segment part 23 (ll_enc)
                                                   Segment part 24 (gatt_task)
                                                   Segment part 24 (ll_scheduler)
                                                   Segment part 25 (gap_configmgr)
                                                   Segment part 25 (linkdb)
                                                   Segment part 26 (gattservapp)
                                                   Segment part 26 (osal_snv)
                                                   Segment part 29 (gatt_server)
                                                   Segment part 31 (l2cap_util)
                                                   Segment part 31 (sm_pairing)
                                                   Segment part 32 (att_util)
                                                   Segment part 32 (gap_configmgr)
                                                   Segment part 32 (gap_linkmgr)
                                                   Segment part 32 (sm_rsppairing)
                                                   Segment part 34 (gap_peridevmgr)
                                                   Segment part 34 (gatt_server)
                                                   Segment part 35 (att_server)
                                                   Segment part 37 (gapgattserver)
                                                   Segment part 37 (sm_pairing)
                                                   Segment part 38 (hci_event)
                                                   Segment part 45 (phy)
                                                   Segment part 46 (smp)
                                                   Segment part 47 (gap_configmgr)
                                                   Segment part 47 (gapgattserver)
                                                   Segment part 48 (gap_linkmgr)
                                                   Segment part 48 (gapbondmgr)
                                                   Segment part 48 (sm_mgr)
                                                   Segment part 49 (gattservapp)
                                                   Segment part 53 (sm_mgr)
                                                   Segment part 54 (gap_peridevmgr)
                                                   Segment part 55 (ll_enc)
                                                   Segment part 56 (peripheral)
                                                   Segment part 58 (gapbondmgr)
                                                   Segment part 58 (hci_event)
                                                   Segment part 58 (ll_common)
                                                   Segment part 59 (l2cap_util)
                                                   Segment part 60 (gap_peridevmgr)
                                                   Segment part 61 (att_util)
                                                   Segment part 61 (gap_linkmgr)
                                                   Segment part 62 (ll_enc)
                                                   Segment part 63 (OSAL)
                                                   Segment part 63 (ll_common)
                                                   Segment part 65 (sm_mgr)
                                                   Segment part 67 (gattservapp)
                                                   Segment part 71 (gatt_server)
                                                   Segment part 76 (l2cap_util)
                                                   Segment part 81 (phy)
                                                   Segment part 83 (gatt_server)
                                                   Segment part 86 (att_util)
                                                   Segment part 86 (gattservapp)
                                                   Segment part 9 (att_util)
                                                   Segment part 9 (sm_task)
                                                   Segment part 91 (ll)
                                                   Segment part 95 (ll_common)
                                                   Segment part 97 (gattservapp)
                                                   Segment part 97 (sm_pairing)
                                                   Segment part 99 (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   atoi (Simplepasscode)
                                                   battReadAttrCB (battservice)
                                                   battWriteAttrCB (battservice)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   disconnectNext (gap_linkmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessRxData (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   getTemperature (SimpleTemperature)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capSendReq (l2cap_util)
                                                   leftshift_onebit (sm_mgr)
                                                   linkDB_Add (linkdb)
                                                   linkDB_Authen (linkdb)
                                                   linkDB_Register (linkdb)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llProcessChanMap (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerInit (osal_cbtimer)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   set_de_passkey (Simplepasscode)
                                                   set_passkey (Simplepasscode)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_HandleConnStatusCB (simpleGATTprofile)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)
                                                   sm_c1 (sm_pairing)
                                                   smpBuildPairingReqRsp (smp)
                                                   smpBuildSecurityReq (smp)
                                                   smpParsePairingReq (smp)
                                                   strcat (?strcat)
                                                   strcpy (?strcpy)
                                                   writeWord (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001F57 - 00001F96 (0x40 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       00001F57        LL_TimeToNextRfEvent (ll_sleep)
                                                   Segment part 16 (ll_sleep)
                                                   Segment part 167 (ll_common)
                                                   Segment part 86 (ll_timer2)
                                                   Segment part 90 (ll_timer2)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llProcessRxData (ll_common)
                                                   llT2OVFC1_ISR (ll_isr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_ENTER_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001F97 - 00001FF5 (0x5f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_ENTER_XSP    00001F97        RTCInterruptIsr (SimpleRTCInterrupt)
                                                   halDmaIsr (hal_dma)
                                                   halKeyPort0Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   port0Isr (hal_uart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_LEAVE_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001FF6 - 0000204D (0x58 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_LEAVE_XSP    00001FF6        ?Subroutine2 (hal_key)
                                                   RTCInterruptIsr (SimpleRTCInterrupt)
                                                   halDmaIsr (hal_dma)
                                                   port0Isr (hal_uart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000204E - 00002051 (0x4 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_FOUR     0000204E        GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalLedUpdate (hal_led)
                                                   LL_ProcessEvent (ll)
                                                   LL_TxData (ll)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halSleep (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smStartRspTimer (sm_mgr)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00002052 - 00002055 (0x4 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      00002052        ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ErrorRsp (att_server)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_ExecuteWriteRsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_HandleValueInd (att_server)
                                                   ATT_HandleValueNoti (att_server)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_PrepareWriteRsp (att_server)
                                                   ATT_ReadBlobRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   ATT_ReadMultiRsp (att_server)
                                                   ATT_ReadRsp (att_server)
                                                   ATT_WriteRsp (att_server)
                                                   Batt_AddService (battservice)
                                                   DevInfo_AddService (devinfoservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_AddService (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GGS_AddService (gapgattserver)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalUARTInitDMA (hal_uart)
                                                   L2CAP_CmdReject (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_RandCback (hci)
                                                   LL_SetAdvData (ll)
                                                   LL_SetScanRspData (ll)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 45 (sm_mgr)
                                                   Segment part 69 (att_util)
                                                   Segment part 81 (att_util)
                                                   Segment part 84 (att_util)
                                                   Segment part 92 (sm_pairing)
                                                   Segment part 95 (sm_pairing)
                                                   Segment part 97 (att_util)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   SimpleProfile_AddService (simpleGATTprofile)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   battReadAttrCB (battservice)
                                                   battWriteAttrCB (battservice)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendReq (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessRxData (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llProcessTxData (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llWriteTxData (ll_common)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   set_code_name (Simplepasscode)
                                                   set_passkey (Simplepasscode)
                                                   showDate (hal_ds1307)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
                                                   smEncrypt (sm_mgr)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smStartEncryption (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00002056 - 00002057 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_ONE      00002056        ATT_ParsePacket (att_util)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_SendDataPkt (hci)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   LL_ProcessEvent (ll)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   llProcessRxData (ll_common)
                                                   simpleBLEPeripheralPairStateCB (simpleBLEPeripheral)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   sm_c1 (sm_pairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00002058 - 00002064 (0xd bytes), align: 0
  Segment part 4.             Intra module refs:   ?PUSH_XSTACK_I_FOUR
                                                   ?PUSH_XSTACK_I_ONE
                                                   ?PUSH_XSTACK_I_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          00002058 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00002065 - 00002068 (0x4 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_FOUR    00002065        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_TxData (ll)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halSleep (hal_sleep)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00002069 - 0000206C (0x4 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_TWO     00002069        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_Bond (gap_linkmgr)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   LL_ProcessEvent (ll)
                                                   LL_TxData (ll)
                                                   SbpHalUARTReadCallback (SimpleBLESerialUart)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llScheduleTask (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   smEndPairing (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000206D - 00002095 (0x29 bytes), align: 0
  Segment part 5.             Intra module refs:   ?PUSH_XSTACK8_X_FOUR
                                                   ?PUSH_XSTACK8_X_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X         0000206D        smpResponderProcessIncoming (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00002096 - 0000209C (0x7 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE        00002096        GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   gapPeriProcessHCICmdCompleteEvt (gap_peridevmgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   simpleProfile_ReadAttrCB (simpleGATTprofile)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000209D - 000020DA (0x3e bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SWITCH_DENSE
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000020DB - 000020DB (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   ?US_SWITCH_DENSE

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000020DC - 000020E5 (0xa bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE       000020DC        GATTServApp_ReadAttr (gattservapp)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessOSALMsg (gap_task)
                                                   simpleProfile_WriteAttrCB (simpleGATTprofile)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000020E6 - 00002126 (0x41 bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SWITCH_SPARSE
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE_LEAVE
                                   00002118        ?US_JMP_IF_IN_RANGE (?US_JMP_IF_IN_RANGE)
                                                   ?US_JMP_IF_VALUE (?US_JMP_IF_VALUE)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00002127 - 00002127 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   ?US_SWITCH_SPARSE

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00002128 - 00002166 (0x3f bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_IN_RANGE     00002128        ?US_SWITCH_SPARSE_LEAVE (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00002167 - 00002191 (0x2b bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_VALUE        00002167        ?US_SWITCH_SPARSE_LEAVE (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memset

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FFCC - 0000FFF7 (0x2c bytes), align: 0
  Segment part 6.             Intra module refs:   memset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  0000FFCC 
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001542 - 00001547 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset::?relay          00001542        HalUARTInitDMA (hal_uart)
                                                   osal_memset (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcat

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9A9 - 0001D9DE (0x36 bytes), align: 0
  Segment part 6.             Intra module refs:   strcat::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcat                  0001D9A9 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001548 - 0000154D (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcat::?relay          00001548        _ltoa (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcpy

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9DF - 0001DA06 (0x28 bytes), align: 0
  Segment part 6.             Intra module refs:   strcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy                  0001D9DF 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000154E - 00001553 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy::?relay          0000154E        _ltoa (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007FD9 - 00007FF6 (0x1e bytes), align: 0
  Segment part 6.             Intra module refs:   strlen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  00007FD9 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001554 - 00001559 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen::?relay          00001554        _ltoa (OSAL)
                                                   osal_strlen (OSAL)




                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000000
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
  02    PHY_SetRfFreq
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
  02    PHY_GetEndCause
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
  02    PHY_SetEndConnection
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
  02    llDisableT2E1
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
  02    llDisableT2IntsEvts
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
  02    llDisableT2Ints
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
  03      osal_bm_free
          | Stack used (prev) :  0000000A 00000002
          | + function block  :  00000014 00000000
  06            LL_ENC_LoadEmptyIV
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000002B 00000002
  05          LL_ENC_GenerateMIC
              | Stack used (prev) :  0000002B 00000002
              | + function block  :  00000076 00000000
  05          LL_ENC_EncryptMsg
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000044 00000001
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
  03      llWriteTxData
          | Stack used (prev) :  000000DB 00000002
          | + function block  :  00000029 00000000
  06            osal_set_event
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000017 00000000
                |  Already listed
  06            osal_msg_push
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000012 00000000
  06            osal_msg_enqueue
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000012 00000000
  07              osal_mem_free
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  0000000A 00000002
                  |  Already listed
  06            osal_msg_deallocate
                | Stack used (prev) :  0000000A 00000002
                | + function block  :  00000009 00000004
  06            osal_msg_deallocate
                | Stack used (prev) :  0000000A 00000002
                | + function block  :  00000009 00000004
                |  Already listed
  05          osal_msg_enqueue_push
              | Stack used (prev) :  00000017 00000006
              | + function block  :  0000001B 00000000
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
  03      HCI_NumOfCompletedPacketsEvent
          | Stack used (prev) :  00000044 00000006
          | + function block  :  00000024 00000000
  02    llProcessTxData
        | Stack used (prev) :  00000104 00000006
        | + function block  :  00000022 00000000
  03      osal_bm_free
          | Stack used (prev) :  0000000A 00000002
          | + function block  :  00000014 00000000
          |  Already listed
  03      PHY_DeallocateRxFifo
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000000 00000000
  03      PHY_RetryRxFifo
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000000 00000000
  04        LL_ENC_GenDeviceIV
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000000 00000003
  04        LL_ENC_GenDeviceSKD
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000000 00000003
  04        LL_ENC_ReverseBytes
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000001
  04        llMemCopySrc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000009 00000001
  06            ll24BitTimeDelta
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000017 00000000
  06            ll24BitTimeCompare
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000017 00000000
  06            llGetCurrentTime
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000004 00000003
  07              LL_ENC_MoveData
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000002 00000002
  06            llRestoreConnState
                | Stack used (prev) :  00000002 00000002
                | + function block  :  0000003A 00000000
  06            llRestoreConnState
                | Stack used (prev) :  00000002 00000002
                | + function block  :  0000003A 00000000
                |  Already listed
  07              PHY_CommitRxFifo
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000000
  07              PHY_RetryRxFifo
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000000
                  |  Already listed
  06            llSave_rxFIFO
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000002E 00000001
  06            llSave_rxFIFO
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000002E 00000001
                |  Already listed
  07              PHY_RetryTxFifo
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000000
  06            llSave_txFIFO
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000002E 00000001
  06            llSave_txFIFO
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000002E 00000001
                |  Already listed
  07              ll24BitTimeCompare
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000017 00000000
                  |  Already listed
  06            llFindNextSecTask
                | Stack used (prev) :  00000017 00000000
                | + function block  :  00000042 00000000
  06            llFindNextSecTask
                | Stack used (prev) :  00000017 00000000
                | + function block  :  00000042 00000000
                |  Already listed
  06            llFindNextSecTask
                | Stack used (prev) :  00000017 00000000
                | + function block  :  00000042 00000000
                |  Already listed
  09                  osalFindTimer
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000010 00000002
  09                  osal_mem_alloc
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000018 00000000
                      |  Already listed
  08                osalAddTimer
                    | Stack used (prev) :  00000018 00000002
                    | + function block  :  00000032 00000000
  07              osal_start_timerEx
                  | Stack used (prev) :  0000004A 00000002
                  | + function block  :  00000024 00000000
  09                  osal_mem_free
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  0000000A 00000002
                      |  Already listed
  09                  osal_set_event
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000017 00000000
                      |  Already listed
  08                osalTimerUpdate
                    | Stack used (prev) :  00000017 00000002
                    | + function block  :  00000046 00000000
  08                ll_McuPrecisionCount
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000002 00000003
  07              osalTimeUpdate
                  | Stack used (prev) :  0000005D 00000003
                  | + function block  :  0000001C 00000000
  07              PHY_Reset
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000002
  07              ll24BitTimeDelta
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000017 00000000
                  |  Already listed
  07              llGetCurrentTime
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000004 00000003
                  |  Already listed
  07              llSetT2OVFC2Event2
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000010 00000000
  07              llSetT2LongC1Event1
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000006 00000002
  07              llSetT2LongC1Timeout
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000006 00000002
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000079 00000003
                | + function block  :  0000003A 00000000
                |  Already listed
  06            LL_ENC_MoveData
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000002 00000002
                |  Already listed
  06            llGetNextConn
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000000 00000002
  06            llProcessTxData
                | Stack used (prev) :  00000104 00000006
                | + function block  :  00000022 00000000
                |  Already listed
  07              PHY_ConfigureAppendRfStatus
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000002
  07              PHY_SetSyncWord
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000010 00000000
  07              PHY_SetAdvChans
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000002
  07              PHY_SetCRCInit
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000010 00000000
  07              PHY_SetOwnAddr
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000002
  07              llSetupScannableAdvEvt
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000009 00000000
  07              llSetupNonConnectableAdvEvt
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000009 00000000
  07              llSetupUndirectedAdvEvt
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000009 00000000
  08                PHY_SetPeerAddr
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000000 00000002
  07              llSetupDirectedAdvEvt
                  | Stack used (prev) :  00000000 00000002
                  | + function block  :  00000020 00000000
  06            llSetupAdv
                | Stack used (prev) :  00000020 00000002
                | + function block  :  00000000 00000004
  09                  PHY_ConfigWhitener
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000000 00000002
  08                llRfInit
                    | Stack used (prev) :  00000000 00000002
                    | + function block  :  00000000 00000004
  07              LL_ENC_GenerateTrueRandNum
                  | Stack used (prev) :  00000000 00000006
                  | + function block  :  00000016 00000000
  07              llExtendRfRange
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000008 00000002
  10                    osal_msg_send
                        | Stack used (prev) :  00000032 00000006
                        | + function block  :  00000012 00000000
                        |  Already listed
  10                    osal_msg_allocate
                        | Stack used (prev) :  00000018 00000000
                        | + function block  :  00000014 00000000
                        |  Already listed
  10                    osal_memcpy
                        | Stack used (prev) :  00000000 00000000
                        | + function block  :  00000019 00000001
  09                  HCI_SendCommandCompleteEvent
                      | Stack used (prev) :  00000044 00000006
                      | + function block  :  00000030 00000000
  08                HCI_VendorSpecifcCommandCompleteEvent
                    | Stack used (prev) :  00000074 00000006
                    | + function block  :  00000018 00000000
  07              LL_EXT_ExtendRfRangeCback
                  | Stack used (prev) :  0000008C 00000006
                  | + function block  :  00000006 00000004
  08                HCI_VendorSpecifcCommandCompleteEvent
                    | Stack used (prev) :  00000074 00000006
                    | + function block  :  00000018 00000000
                    |  Already listed
  07              LL_EXT_SetTxPowerCback
                  | Stack used (prev) :  0000008C 00000006
                  | + function block  :  00000006 00000004
  08                HCI_VendorSpecifcCommandCompleteEvent
                    | Stack used (prev) :  00000074 00000006
                    | + function block  :  00000018 00000000
                    |  Already listed
  07              LL_EXT_SetRxGainCback
                  | Stack used (prev) :  0000008C 00000006
                  | + function block  :  00000006 00000004
  08                osal_memcpy
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000019 00000001
                    |  Already listed
  09                  osal_msg_send
                      | Stack used (prev) :  00000032 00000006
                      | + function block  :  00000012 00000000
                      |  Already listed
  09                  osal_msg_allocate
                      | Stack used (prev) :  00000018 00000000
                      | + function block  :  00000014 00000000
                      |  Already listed
  09                  osal_memcpy
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000019 00000001
                      |  Already listed
  09                  HCI_SendCommandCompleteEvent
                      | Stack used (prev) :  00000044 00000006
                      | + function block  :  00000030 00000000
                      |  Already listed
  08                HCI_CommandCompleteEvent
                    | Stack used (prev) :  00000074 00000006
                    | + function block  :  0000002B 00000000
  07              LL_RandCback
                  | Stack used (prev) :  0000009F 00000006
                  | + function block  :  00000026 00000000
  06            llProcessPostRfOps
                | Stack used (prev) :  000000C5 0000000A
                | + function block  :  00000010 00000004
  05          llScheduler
              | Stack used (prev) :  00000126 0000000E
              | + function block  :  00000034 00000000
  06            osal_bm_free
                | Stack used (prev) :  0000000A 00000002
                | + function block  :  00000014 00000000
                |  Already listed
  06            PHY_SetEndConnection
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000000 00000002
                |  Already listed
  06            llFreeTask
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000000 00000002
  05          llConnCleanup
              | Stack used (prev) :  0000001E 00000002
              | + function block  :  00000025 00000000
  06            osal_msg_send
                | Stack used (prev) :  00000032 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  05          LL_DisconnectCback
              | Stack used (prev) :  00000044 00000006
              | + function block  :  00000018 00000000
  04        llConnTerminate
            | Stack used (prev) :  0000015A 0000000E
            | + function block  :  00000012 00000000
  04        llEnqueueCtrlPkt
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000B 00000001
  03      llProcessSlaveControlPacket
          | Stack used (prev) :  0000016C 0000000E
          | + function block  :  00000028 00000000
  03      llScheduler
          | Stack used (prev) :  00000126 0000000E
          | + function block  :  00000034 00000000
          |  Already listed
  04        LL_ENC_GenerateMIC
            | Stack used (prev) :  0000002B 00000002
            | + function block  :  00000076 00000000
            |  Already listed
  04        LL_ENC_DecryptMsg
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000048 00000001
  03      LL_ENC_Decrypt
          | Stack used (prev) :  000000A1 00000002
          | + function block  :  00000042 00000000
  03      LL_ENC_MoveData
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000002 00000002
          |  Already listed
  03      llConnCleanup
          | Stack used (prev) :  0000001E 00000002
          | + function block  :  00000025 00000000
          |  Already listed
  03      llConnCleanup
          | Stack used (prev) :  0000001E 00000002
          | + function block  :  00000025 00000000
          |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  04        osal_bm_alloc
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000018 00000000
  03      LL_RX_bm_alloc
          | Stack used (prev) :  00000030 00000000
          | + function block  :  00000014 00000000
  03      LL_DisconnectCback
          | Stack used (prev) :  00000044 00000006
          | + function block  :  00000018 00000000
          |  Already listed
  04        osal_bm_free
            | Stack used (prev) :  0000000A 00000002
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        LL_CtrlToHostFlowControl
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000000 00000002
  03      LL_RxDataCompleteCback
          | Stack used (prev) :  00000044 00000006
          | + function block  :  0000001E 00000000
  02    llProcessRxData
        | Stack used (prev) :  00000194 0000000E
        | + function block  :  00000022 00000000
  02    llProcessPostRfOps
        | Stack used (prev) :  000000C5 0000000A
        | + function block  :  00000010 00000004
        |  Already listed
  01  RF_NormalIsr
      | Stack used (prev) :  000001B6 0000000E
      | + function block  :  00000000 00000020
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000001B6 0000002E


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000001B6 0000002E
  01  RF_ErrorIsr
      | Stack used (prev) :  000001B6 0000002E
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000001B6 00000032


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000001B6 00000032
  04        osalDeleteTimer
            | Stack used (prev) :  000001B6 00000032
            | + function block  :  0000000C 00000002
  04        osalFindTimer
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000010 00000002
            |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000001C2 00000034
          | + function block  :  00000018 00000000
  03      osal_clear_event
          | Stack used (prev) :  000001B6 00000032
          | + function block  :  00000017 00000000
  03      llSetT2C1Event1
          | Stack used (prev) :  000001B6 00000032
          | + function block  :  00000002 00000002
  03      llGetCurrentTask
          | Stack used (prev) :  000001B6 00000032
          | + function block  :  00000000 00000002
  03      HaltMcuUsingPhyFlag
          | Stack used (prev) :  000001B6 00000032
          | + function block  :  00000000 00000000
  02    llT2OVFC1_ISR
        | Stack used (prev) :  000001DA 00000034
        | + function block  :  00000010 00000000
  01  T2_Isr
      | Stack used (prev) :  000001EA 00000034
      | + function block  :  00000000 00000012
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000001EA 00000046


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000001EA 00000046
  05          i2cMstStrt
              | Stack used (prev) :  000001EA 00000046
              | + function block  :  0000000A 00000002
  04        HalI2CWrite
            | Stack used (prev) :  000001F4 00000048
            | + function block  :  00000012 00000000
  05          i2cMstStrt
              | Stack used (prev) :  000001EA 00000046
              | + function block  :  0000000A 00000002
              |  Already listed
  04        HalI2CRead
            | Stack used (prev) :  000001F4 00000048
            | + function block  :  00000014 00000000
  03      HalSensorReadReg
          | Stack used (prev) :  00000208 00000048
          | + function block  :  00000021 00000000
  03      HalI2CInit
          | Stack used (prev) :  000001EA 00000046
          | + function block  :  00000000 00000002
  08                HalLcd_HW_Write
                    | Stack used (prev) :  000001EA 00000046
                    | + function block  :  0000000D 00000000
  08                HalLcd_HW_Write
                    | Stack used (prev) :  000001EA 00000046
                    | + function block  :  0000000D 00000000
                    |  Already listed
  08                HalLcd_HW_Write
                    | Stack used (prev) :  000001EA 00000046
                    | + function block  :  0000000D 00000000
                    |  Already listed
  09                  HalLcd_HW_WaitUs
                      | Stack used (prev) :  000001EA 00000046
                      | + function block  :  00000009 00000000
  09                  HalLcd_HW_WaitUs
                      | Stack used (prev) :  000001EA 00000046
                      | + function block  :  00000009 00000000
                      |  Already listed
  09                  HalLcd_HW_WaitUs
                      | Stack used (prev) :  000001EA 00000046
                      | + function block  :  00000009 00000000
                      |  Already listed
  09                  HalLcd_HW_Control
                      | Stack used (prev) :  000001EA 00000046
                      | + function block  :  00000009 00000000
  09                  HalLcd_HW_Control
                      | Stack used (prev) :  000001EA 00000046
                      | + function block  :  00000009 00000000
                      |  Already listed
  09                  HalLcd_HW_Control
                      | Stack used (prev) :  000001EA 00000046
                      | + function block  :  00000009 00000000
                      |  Already listed
  08                set_ddram_line_col
                    | Stack used (prev) :  000001F3 00000046
                    | + function block  :  0000001F 00000000
  08                set_ddram_line_col
                    | Stack used (prev) :  000001F3 00000046
                    | + function block  :  0000001F 00000000
                    |  Already listed
  07              DisplayByte_5x7
                  | Stack used (prev) :  00000212 00000046
                  | + function block  :  00000023 00000000
  06            HalLcd_HW_WriteChar
                | Stack used (prev) :  00000235 00000046
                | + function block  :  0000001D 00000000
  06            HalLcd_HW_WriteChar
                | Stack used (prev) :  00000235 00000046
                | + function block  :  0000001D 00000000
                |  Already listed
  07              strlen
                  | Stack used (prev) :  000001EA 00000046
                  | + function block  :  00000000 00000002
  06            osal_strlen
                | Stack used (prev) :  000001EA 00000048
                | + function block  :  00000000 00000004
  05          HalLcd_HW_WriteLine
              | Stack used (prev) :  00000252 0000004C
              | + function block  :  00000028 00000000
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          osal_strlen
              | Stack used (prev) :  000001EA 00000048
              | + function block  :  00000000 00000004
              |  Already listed
  04        Recursive system consisting of
             | HalLcdWriteString
            | Stack used (prev) :  0000027A 0000004C
            | + function block  :  00000051 00000000
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        hex2char
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  0000002B 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      showDate
          | Stack used (prev) :  000002CB 0000004C
          | + function block  :  0000005F 00000000
  02    HalDS1307ReadTimeData
        | Stack used (prev) :  0000032A 0000004C
        | + function block  :  00000012 00000000
  01  RTCInterruptIsr
      | Stack used (prev) :  0000033C 0000004C
      | + function block  :  00000038 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000374 0000004C


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000374 0000004C
  02    HalUARTIsrDMA
        | Stack used (prev) :  00000374 0000004C
        | + function block  :  00000000 00000000
  01  halDmaIsr
      | Stack used (prev) :  00000374 0000004C
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000390 0000004C


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000390 0000004C
  03      osal_start_timerEx
          | Stack used (prev) :  0000004A 00000002
          | + function block  :  00000024 00000000
          |  Already listed
  02    halProcessKeyInterrupt
        | Stack used (prev) :  00000390 0000004C
        | + function block  :  00000012 00000002
  01  halKeyPort0Isr
      | Stack used (prev) :  000003A2 0000004E
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000003BE 0000004E


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000003BE 0000004E
  02    halProcessKeyInterrupt
        | Stack used (prev) :  00000390 0000004C
        | + function block  :  00000012 00000002
        |  Already listed
  01  halKeyPort2Isr
      | Stack used (prev) :  000003BE 0000004E
      | + function block  :  0000000E 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000003CC 0000004E


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000003CC 0000004E
  01  halSleepTimerIsr
      | Stack used (prev) :  000003CC 0000004E
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000003CC 00000052


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000003CC 00000052
  02    osal_pwrmgr_task_state
        | Stack used (prev) :  000003CC 00000052
        | + function block  :  0000000A 00000000
  01  port0Isr
      | Stack used (prev) :  000003D6 00000052
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000003F2 00000052


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 00000052
  01  halUart0TxIsr
      | Stack used (prev) :  000003F2 00000052
      | + function block  :  00000000 00000008
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000003F2 0000005A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  02    gapWriteAdvDataStatus
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000001
  04        osalAddTimer
            | Stack used (prev) :  00000018 00000002
            | + function block  :  00000032 00000000
            |  Already listed
  03      osal_start_reload_timer
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000016 00000000
  03      osal_start_timerEx
          | Stack used (prev) :  0000004A 00000002
          | + function block  :  00000024 00000000
          |  Already listed
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  05          gapValidADType
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000012 00000000
  04        gapFindADType
            | Stack used (prev) :  00000404 0000005A
            | + function block  :  00000026 00000001
  03      isLimitedDiscoverableMode
          | Stack used (prev) :  0000042A 0000005B
          | + function block  :  0000002E 00000000
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  03      gapFreeAdvertState
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        gapFreeAdvertState
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      gapSendMakeDiscEvent
          | Stack used (prev) :  00000406 0000005C
          | + function block  :  0000002C 00000000
  03      GAP_GetParamValue
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
  02    gapWriteAdvEnableStatus
        | Stack used (prev) :  00000458 0000005C
        | + function block  :  00000032 00000000
  05          osal_stop_timerEx
              | Stack used (prev) :  000001C2 00000034
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_pwrmgr_task_state
              | Stack used (prev) :  000003CC 00000052
              | + function block  :  0000000A 00000000
              |  Already listed
  05          osal_clear_event
              | Stack used (prev) :  000001B6 00000032
              | + function block  :  00000017 00000000
              |  Already listed
  05          llGetCurrentTime
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000004 00000003
              |  Already listed
  05          llDisableT2IntsEvts
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000000 00000000
              |  Already listed
  05          llGetNumTasks
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000000 00000002
  05          llGetActiveTasks
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000000 00000002
  05          llFreeTask
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000000 00000002
              |  Already listed
  06            llGetCurrentTime
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000004 00000003
                |  Already listed
  05          llAllocTask
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000001
  05          llScheduler
              | Stack used (prev) :  00000126 0000000E
              | + function block  :  00000034 00000000
              |  Already listed
  05          llSetupAdv
              | Stack used (prev) :  00000020 00000002
              | + function block  :  00000000 00000004
              |  Already listed
  04        LL_SetAdvControl
            | Stack used (prev) :  000003FC 0000005C
            | + function block  :  00000020 00000000
  04        HCI_CommandCompleteEvent
            | Stack used (prev) :  00000074 00000006
            | + function block  :  0000002B 00000000
            |  Already listed
  03      HCI_LE_SetAdvEnableCmd
          | Stack used (prev) :  0000041C 0000005C
          | + function block  :  00000014 00000000
  03      gapSendMakeDiscEvent
          | Stack used (prev) :  00000406 0000005C
          | + function block  :  0000002C 00000000
          |  Already listed
  02    gapSetAdvParamsStatus
        | Stack used (prev) :  00000432 0000005C
        | + function block  :  0000001C 00000000
  01  gapPeriProcessHCICmdCompleteEvt
      | Stack used (prev) :  0000048A 0000005C
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000049E 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  04        PHY_SetAdvWlPolicy
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000000 00000002
  03      LL_SetAdvParam
          | Stack used (prev) :  000003F2 0000005C
          | + function block  :  0000001A 00000000
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  00000074 00000006
          | + function block  :  0000002B 00000000
          |  Already listed
  02    HCI_LE_SetAdvParamCmd
        | Stack used (prev) :  0000040C 0000005C
        | + function block  :  0000002C 00000000
  03      linkDB_NumActive
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000002
  02    GAP_NumActiveConnections
        | Stack used (prev) :  000003F2 0000005C
        | + function block  :  00000000 00000004
  02    isLimitedDiscoverableMode
        | Stack used (prev) :  0000042A 0000005B
        | + function block  :  0000002E 00000000
        |  Already listed
  02    gapAddAddrAdj
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000A 00000002
  02    GAP_GetParamValue
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000002
        |  Already listed
  01  gapSetAdvParams
      | Stack used (prev) :  00000458 00000060
      | + function block  :  00000028 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000480 00000060


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_stop_timerEx
        | Stack used (prev) :  000001C2 00000034
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_start_timerEx
        | Stack used (prev) :  0000004A 00000002
        | + function block  :  00000024 00000000
        |  Already listed
  02    gapFreeAdvertState
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000002
        |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000001C2 00000034
          | + function block  :  00000018 00000000
          |  Already listed
  03      HCI_LE_SetAdvEnableCmd
          | Stack used (prev) :  0000041C 0000005C
          | + function block  :  00000014 00000000
          |  Already listed
  02    GAP_EndDiscoverable
        | Stack used (prev) :  00000430 0000005C
        | + function block  :  0000001E 00000000
  01  gapProcessAdvertisingEvt
      | Stack used (prev) :  0000044E 0000005C
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000466 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    osal_strlen
        | Stack used (prev) :  000001EA 00000048
        | + function block  :  00000000 00000004
        |  Already listed
  01  ggs_ReadAttrCB
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  0000001A 00000001
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000040C 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    osal_strlen
        | Stack used (prev) :  000001EA 00000048
        | + function block  :  00000000 00000004
        |  Already listed
  01  ggs_WriteAttrCB
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  00000018 00000001
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000040A 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  04        osal_stop_timerEx
            | Stack used (prev) :  000001C2 00000034
            | + function block  :  00000018 00000000
            |  Already listed
  03      osal_CbTimerStop
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000B 00000000
  02    gattStopTimer
        | Stack used (prev) :  000003FD 0000005A
        | + function block  :  00000012 00000000
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  04        memset
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000002 00000002
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    gattNotifyEvent
        | Stack used (prev) :  0000040C 0000005C
        | + function block  :  00000022 00000000
  02    gattFindServerInfo
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000037 00000000
  04        osal_bm_free
            | Stack used (prev) :  0000000A 00000002
            | + function block  :  00000014 00000000
            |  Already listed
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_revmemcpy
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000B 00000001
  06            osal_mem_free
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000000A 00000002
                |  Already listed
  06            osal_mem_alloc
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  06            xor_128
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000037 00000001
  06            xor_128
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000037 00000001
                |  Already listed
  06            xor_128
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000037 00000001
                |  Already listed
  06            xor_128
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000037 00000001
                |  Already listed
  07              osal_mem_free
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  0000000A 00000002
                  |  Already listed
  07              osal_mem_alloc
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_memset
                  | Stack used (prev) :  000003F4 0000005C
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              leftshift_onebit
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000001D 00000001
  07              leftshift_onebit
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000001D 00000001
                  |  Already listed
  07              leftshift_onebit
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000001D 00000001
                  |  Already listed
  07              leftshift_onebit
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000001D 00000001
                  |  Already listed
  07              xor_128
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000037 00000001
                  |  Already listed
  07              xor_128
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000037 00000001
                  |  Already listed
  08                LL_ENC_AES128_Encrypt
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  00000002 00000002
  07              LL_Encrypt
                  | Stack used (prev) :  000003F4 0000005C
                  | + function block  :  0000001A 00000000
  06            generate_subkey
                | Stack used (prev) :  00000429 0000005C
                | + function block  :  00000055 00000000
  06            LL_Encrypt
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  0000001A 00000000
                |  Already listed
  05          sm_CMAC
              | Stack used (prev) :  0000047E 0000005C
              | + function block  :  00000097 00000000
  06            osal_set_event
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000017 00000000
                |  Already listed
  05          gapIncSignCounter
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000C 00000000
  05          gapGetSignCounter
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000000 00000002
  05          gapGetSRK
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000000 00000002
  04        SM_GenerateAuthenSig
            | Stack used (prev) :  00000515 0000005C
            | + function block  :  00000064 00000000
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
  04        linkDB_State
            | Stack used (prev) :  00000406 0000005C
            | + function block  :  00000014 00000000
  06            bm_desc_from_payload
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000C 00000002
  05          osal_bm_adjust_header
              | Stack used (prev) :  000003FE 0000005C
              | + function block  :  00000018 00000000
  07              osal_bm_alloc
                  | Stack used (prev) :  00000018 00000000
                  | + function block  :  00000018 00000000
                  |  Already listed
  06            LL_TX_bm_alloc
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000A 00000000
  05          HCI_bm_alloc
              | Stack used (prev) :  000003FC 0000005A
              | + function block  :  00000000 00000004
  04        L2CAP_bm_alloc
            | Stack used (prev) :  00000416 0000005E
            | + function block  :  0000002A 00000000
  05          linkDB_State
              | Stack used (prev) :  00000406 0000005C
              | + function block  :  00000014 00000000
              |  Already listed
  06            osal_bm_adjust_header
                | Stack used (prev) :  000003FE 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_msg_send
                | Stack used (prev) :  00000032 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  08                ll24BitTimeDelta
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000017 00000000
                    |  Already listed
  08                ll24BitTimeCompare
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000017 00000000
                    |  Already listed
  08                llGetCurrentTime
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000004 00000003
                    |  Already listed
  08                llGetCurrentTask
                    | Stack used (prev) :  000001B6 00000032
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llScheduleTask
                    | Stack used (prev) :  00000079 00000003
                    | + function block  :  0000003A 00000000
                    |  Already listed
  08                llDivide31By16To16
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  00000000 00000000
  08                llEnqueueDataQ
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  00000009 00000000
  08                llProcessTxData
                    | Stack used (prev) :  00000104 00000006
                    | + function block  :  00000022 00000000
                    |  Already listed
  09                  PHY_SetDataChan
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  00000000 00000002
  09                  llProcessChanMap
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  00000018 00000001
  08                llSetNextDataChan
                    | Stack used (prev) :  0000040A 0000005A
                    | + function block  :  00000016 00000002
  07              LL_TxData
                  | Stack used (prev) :  00000420 0000005A
                  | + function block  :  0000002D 00000002
  06            HCI_SendDataPkt
                | Stack used (prev) :  0000044D 0000005C
                | + function block  :  00000018 00000000
  05          l2capEncapSendData
              | Stack used (prev) :  00000465 0000005C
              | + function block  :  00000036 00000000
  04        L2CAP_SendData
            | Stack used (prev) :  0000049B 0000005C
            | + function block  :  00000014 00000000
  03      attSendMsg
          | Stack used (prev) :  00000579 0000005E
          | + function block  :  00000032 00000000
  02    ATT_ErrorRsp
        | Stack used (prev) :  000005AB 0000005E
        | + function block  :  00000018 00000000
  01  gattServerProcessMsgCB
      | Stack used (prev) :  000005C3 0000005E
      | + function block  :  0000005A 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000061D 0000005E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  01  gattProcessExchangeMTUReq
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000003F2 0000005A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  04        osal_memcmp
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000D 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        ATT_ConvertUUIDto128
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000002A 00000001
  04        ATT_ConvertUUIDto128
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000002A 00000001
            |  Already listed
  03      ATT_CompareUUID
          | Stack used (prev) :  0000041C 0000005B
          | + function block  :  0000003C 00000000
  02    GATT_FindHandleUUID
        | Stack used (prev) :  00000458 0000005B
        | + function block  :  00000060 00000000
  03      attSendMsg
          | Stack used (prev) :  00000579 0000005E
          | + function block  :  00000032 00000000
          |  Already listed
  02    ATT_FindInfoRsp
        | Stack used (prev) :  000005AB 0000005E
        | + function block  :  00000018 00000000
  01  gattProcessFindInfoReq
      | Stack used (prev) :  000005C3 0000005E
      | + function block  :  0000004C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000060F 0000005E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATT_FindHandleUUID
        | Stack used (prev) :  00000458 0000005B
        | + function block  :  00000060 00000000
        |  Already listed
  01  gattProcessFindByTypeValueReq
      | Stack used (prev) :  000004B8 0000005B
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004D8 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATT_FindHandleUUID
        | Stack used (prev) :  00000458 0000005B
        | + function block  :  00000060 00000000
        |  Already listed
  01  gattProcessReadByTypeReq
      | Stack used (prev) :  000004B8 0000005B
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004D8 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATT_FindHandle
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000022 00000000
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      linkDB_Authen
          | Stack used (prev) :  00000406 0000005C
          | + function block  :  00000018 00000000
  02    GATT_VerifyReadPermissions
        | Stack used (prev) :  0000041E 0000005C
        | + function block  :  00000022 00000000
  01  gattProcessReadReq
      | Stack used (prev) :  00000440 0000005C
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000454 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATT_FindHandle
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000022 00000000
        |  Already listed
  02    GATT_VerifyReadPermissions
        | Stack used (prev) :  0000041E 0000005C
        | + function block  :  00000022 00000000
        |  Already listed
  01  gattProcessReadMultiReq
      | Stack used (prev) :  00000440 0000005C
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000460 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATT_FindHandleUUID
        | Stack used (prev) :  00000458 0000005B
        | + function block  :  00000060 00000000
        |  Already listed
  02    ATT_CompareUUID
        | Stack used (prev) :  0000041C 0000005B
        | + function block  :  0000003C 00000000
        |  Already listed
  01  gattProcessReadByGrpTypeReq
      | Stack used (prev) :  000004B8 0000005B
      | + function block  :  0000002C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004E4 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATT_FindHandle
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000022 00000000
        |  Already listed
  03      linkDB_Authen
          | Stack used (prev) :  00000406 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  02    GATT_VerifyWritePermissions
        | Stack used (prev) :  0000041E 0000005C
        | + function block  :  0000001E 00000000
  01  gattProcessWriteReq
      | Stack used (prev) :  0000043C 0000005C
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000454 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  01  gattProcessExecuteWriteReq
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000003F2 0000005A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    gattNotifyEvent
        | Stack used (prev) :  0000040C 0000005C
        | + function block  :  00000022 00000000
        |  Already listed
  01  gattServerHandleTimerCB
      | Stack used (prev) :  0000042E 0000005C
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000044A 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    linkDB_State
        | Stack used (prev) :  00000406 0000005C
        | + function block  :  00000014 00000000
        |  Already listed
  02    gattStopTimer
        | Stack used (prev) :  000003FD 0000005A
        | + function block  :  00000012 00000000
        |  Already listed
  02    gattNotifyEvent
        | Stack used (prev) :  0000040C 0000005C
        | + function block  :  00000022 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000037 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000037 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000037 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000037 00000000
        |  Already listed
  01  gattServerHandleConnStatusCB
      | Stack used (prev) :  0000042E 0000005C
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000452 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      GATTServApp_SendCCCUpdatedEvent
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000022 00000000
  04        gattServApp_FindCharCfgItem
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000E 00000002
  04        gattServApp_FindCharCfgItem
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000E 00000002
            |  Already listed
  03      GATTServApp_WriteCharCfg
          | Stack used (prev) :  00000400 0000005C
          | + function block  :  00000030 00000000
  04        gattServApp_FindCharCfgItem
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000E 00000002
            |  Already listed
  03      GATTServApp_ReadCharCfg
          | Stack used (prev) :  00000400 0000005C
          | + function block  :  00000031 00000000
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  00000430 0000005C
        | + function block  :  0000003C 00000000
  01  gattServApp_WriteAttrCB
      | Stack used (prev) :  0000046C 0000005C
      | + function block  :  0000002C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000498 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memset
        | Stack used (prev) :  000003F4 0000005C
        | + function block  :  00000018 00000000
        |  Already listed
  02    linkDB_State
        | Stack used (prev) :  00000406 0000005C
        | + function block  :  00000014 00000000
        |  Already listed
  03      gattServApp_FindCharCfgItem
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000E 00000002
          |  Already listed
  02    GATTServApp_InitCharCfg
        | Stack used (prev) :  00000400 0000005C
        | + function block  :  00000022 00000000
  02    gattServApp_FindPrepareWriteQ
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000002
  01  gattServApp_HandleConnStatusCB
      | Stack used (prev) :  00000422 0000005C
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000043E 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    l2capFreeChannel
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000012 00000002
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    l2capNotifySignal
        | Stack used (prev) :  0000040C 0000005C
        | + function block  :  0000002D 00000000
  01  l2capHandleTimerCB
      | Stack used (prev) :  00000439 0000005C
      | + function block  :  0000001A 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000453 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  01  llStartAdvSetup
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000003F2 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memset
        | Stack used (prev) :  000003F4 0000005C
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcmp
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000D 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    smDetermineKeySize
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  05          osal_stop_timerEx
              | Stack used (prev) :  000001C2 00000034
              | + function block  :  00000018 00000000
              |  Already listed
  04        smStopRspTimer
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000000 00000002
  03      smFreePairingParams
          | Stack used (prev) :  000003F2 0000005C
          | + function block  :  00000012 00000004
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        osal_memdup
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000010 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000032 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  06            osal_mem_free
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000000A 00000002
                |  Already listed
  05          gapFreeAuthLink
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
  05          GAP_GetParamValue
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        sendAuthEvent
            | Stack used (prev) :  0000040C 0000005C
            | + function block  :  00000042 00000000
  03      gapPairingCompleteCB
          | Stack used (prev) :  0000044E 0000005C
          | + function block  :  0000003C 00000000
  02    smEndPairing
        | Stack used (prev) :  0000048A 00000060
        | + function block  :  0000002E 00000000
  03      osal_revmemcpy
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000B 00000001
          |  Already listed
  04        LL_Encrypt
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  0000001A 00000000
            |  Already listed
  03      smEncrypt
          | Stack used (prev) :  0000040E 0000005C
          | + function block  :  00000080 00000000
  02    sm_s1
        | Stack used (prev) :  0000048E 0000005C
        | + function block  :  00000080 00000000
  02    linkDB_Find
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000002
        |  Already listed
  04        llEnqueueCtrlPkt
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000B 00000001
            |  Already listed
  03      LL_EncLtkNegReply
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000002
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  00000074 00000006
          | + function block  :  0000002B 00000000
          |  Already listed
  02    HCI_LE_LtkReqNegReplyCmd
        | Stack used (prev) :  000003F2 0000005C
        | + function block  :  00000018 00000000
  04        llEnqueueCtrlPkt
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000B 00000001
            |  Already listed
  03      LL_EncLtkReply
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000003
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  00000074 00000006
          | + function block  :  0000002B 00000000
          |  Already listed
  02    HCI_LE_LtkReqReplyCmd
        | Stack used (prev) :  000003F2 0000005D
        | + function block  :  00000018 00000000
  01  smResponderProcessLTKReq
      | Stack used (prev) :  0000050E 00000060
      | + function block  :  00000066 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000574 00000060


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_mem_alloc
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smEndPairing
          | Stack used (prev) :  0000048A 00000060
          | + function block  :  0000002E 00000000
          |  Already listed
  02    smpResponderProcessMasterID
        | Stack used (prev) :  000004B8 00000060
        | + function block  :  00000022 00000000
  03      osal_memcmp
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000D 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  05          osal_bm_free
              | Stack used (prev) :  0000000A 00000002
              | + function block  :  00000014 00000000
              |  Already listed
  06            osal_start_timerEx
                | Stack used (prev) :  0000004A 00000002
                | + function block  :  00000024 00000000
                |  Already listed
  06            GAP_GetParamValue
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000014 00000002
                |  Already listed
  05          smStartRspTimer
              | Stack used (prev) :  00000406 0000005C
              | + function block  :  0000001C 00000000
  05          L2CAP_bm_alloc
              | Stack used (prev) :  00000416 0000005E
              | + function block  :  0000002A 00000000
              |  Already listed
  05          L2CAP_SendData
              | Stack used (prev) :  0000049B 0000005C
              | + function block  :  00000014 00000000
              |  Already listed
  04        smSendSMMsg
            | Stack used (prev) :  000004AF 0000005E
            | + function block  :  00000028 00000000
  03      smGenerateRandMsg
          | Stack used (prev) :  000004D7 0000005E
          | + function block  :  00000038 00000000
  06            smAuthReqToUint8
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000000 00000002
  05          smpBuildPairingReqRsp
              | Stack used (prev) :  000003F2 0000005C
              | + function block  :  00000016 00000000
  04        smpBuildPairingRsp
            | Stack used (prev) :  00000408 0000005C
            | + function block  :  00000000 00000004
  05          smpBuildPairingReqRsp
              | Stack used (prev) :  000003F2 0000005C
              | + function block  :  00000016 00000000
              |  Already listed
  04        smpBuildPairingReq
            | Stack used (prev) :  00000408 0000005C
            | + function block  :  00000000 00000004
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          smUint8ToAuthReq
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000000
  04        smSetPairingReqRsp
            | Stack used (prev) :  0000040C 0000005C
            | + function block  :  00000043 00000000
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_revmemcpy
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000B 00000001
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          smEncrypt
              | Stack used (prev) :  0000040E 0000005C
              | + function block  :  00000080 00000000
              |  Already listed
  05          smEncrypt
              | Stack used (prev) :  0000040E 0000005C
              | + function block  :  00000080 00000000
              |  Already listed
  05          sm_xor
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000071 00000000
  05          sm_xor
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000071 00000000
              |  Already listed
  04        sm_c1new
            | Stack used (prev) :  0000048E 0000005C
            | + function block  :  000000DB 00000000
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  04        gapGetDevAddress
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000000 00000002
  04        gapGetDevAddressMode
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000000 00000002
  03      sm_c1
          | Stack used (prev) :  00000569 00000060
          | + function block  :  00000080 00000000
  02    smpResponderProcessPairingRandom
        | Stack used (prev) :  000005E9 00000060
        | + function block  :  00000046 00000000
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      smSavePairInfo
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000012 00000001
  04        smSendSMMsg
            | Stack used (prev) :  000004AF 0000005E
            | + function block  :  00000028 00000000
            |  Already listed
  04        smSetPairingReqRsp
            | Stack used (prev) :  0000040C 0000005C
            | + function block  :  00000043 00000000
            |  Already listed
  03      smGeneratePairingReqRsp
          | Stack used (prev) :  000004D7 0000005E
          | + function block  :  00000038 00000000
  07              LL_ENC_GeneratePseudoRandNum
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000000 00000002
  06            LL_PseudoRand
                | Stack used (prev) :  000003F2 0000005C
                | + function block  :  00000014 00000000
  05          Onboard_rand
              | Stack used (prev) :  00000406 0000005C
              | + function block  :  00000004 00000004
  04        osal_rand
            | Stack used (prev) :  0000040A 00000060
            | + function block  :  00000000 00000004
  03      smGenerateRandBuf
          | Stack used (prev) :  0000040A 00000064
          | + function block  :  00000027 00000000
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  04        GAP_GetParamValue
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      gapPasskeyNeededCB
          | Stack used (prev) :  00000406 0000005C
          | + function block  :  00000024 00000000
  02    smpResponderProcessPairingReq
        | Stack used (prev) :  0000050F 00000064
        | + function block  :  00000022 00000000
  02    smDetermineKeySize
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  02    smEndPairing
        | Stack used (prev) :  0000048A 00000060
        | + function block  :  0000002E 00000000
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  000004AF 0000005E
          | + function block  :  00000028 00000000
          |  Already listed
  02    smGenerateConfirm
        | Stack used (prev) :  000004D7 0000005E
        | + function block  :  00000042 00000000
  02    sm_c1
        | Stack used (prev) :  00000569 00000060
        | + function block  :  00000080 00000000
        |  Already listed
  02    smAuthReqToUint8
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      linkDB_Find
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  02    gapSendPairingReqEvent
        | Stack used (prev) :  0000040C 0000005C
        | + function block  :  0000002C 00000000
  01  smpResponderProcessIncoming
      | Stack used (prev) :  0000062F 00000064
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000064B 00000064


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_start_timerEx
        | Stack used (prev) :  0000004A 00000002
        | + function block  :  00000024 00000000
        |  Already listed
  02    osal_mem_alloc
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_rand
        | Stack used (prev) :  0000040A 00000060
        | + function block  :  00000000 00000004
        |  Already listed
  02    osal_memset
        | Stack used (prev) :  000003F4 0000005C
        | + function block  :  00000018 00000000
        |  Already listed
  02    smDetermineKeySize
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  000004AF 0000005E
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendSingingInfo
        | Stack used (prev) :  000004D7 0000005E
        | + function block  :  00000018 00000000
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  000004AF 0000005E
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendIdentityAddrInfo
        | Stack used (prev) :  000004D7 0000005E
        | + function block  :  0000002A 00000000
  03      smSendSMMsg
          | Stack used (prev) :  000004AF 0000005E
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendIdentityInfo
        | Stack used (prev) :  000004D7 0000005E
        | + function block  :  00000018 00000000
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  000004AF 0000005E
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendMasterID
        | Stack used (prev) :  000004D7 0000005E
        | + function block  :  0000003E 00000000
  03      smSendSMMsg
          | Stack used (prev) :  000004AF 0000005E
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendEncInfo
        | Stack used (prev) :  000004D7 0000005E
        | + function block  :  00000018 00000000
  02    smGenerateRandBuf
        | Stack used (prev) :  0000040A 00000064
        | + function block  :  00000027 00000000
        |  Already listed
  02    linkDB_Find
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000002
        |  Already listed
  02    gapGetIRK
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
  02    gapGetDevAddress
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  02    gapGetDevAddressMode
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  02    gapGetSRK
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  01  smResponderSendNextKeyInfo
      | Stack used (prev) :  00000515 00000064
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000539 00000064


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  03      osal_stop_timerEx
          | Stack used (prev) :  000001C2 00000034
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_set_event
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000017 00000000
          |  Already listed
  02    HalKeyConfig
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000009 00000000
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  02    OnBoard_SendKeys
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000013 00000001
  01  OnBoard_KeyCallback
      | Stack used (prev) :  00000405 0000005B
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000417 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  03      HalUARTRxAvailDMA
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000A 00000002
  02    Hal_UART_RxBufLen
        | Stack used (prev) :  000003FC 0000005C
        | + function block  :  00000012 00000000
  03      Recursive system consisting of
           | HalLcdWriteString
          | Stack used (prev) :  0000027A 0000004C
          | + function block  :  00000051 00000000
          |  Already listed
  04        strlen
            | Stack used (prev) :  000001EA 00000046
            | + function block  :  00000000 00000002
            |  Already listed
  04        strcpy
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000009 00000001
  04        strcat
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000009 00000001
  04        _itoa
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000015 00000001
  03      _ltoa
          | Stack used (prev) :  00000407 0000005A
          | + function block  :  00000074 00000002
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      osal_strlen
          | Stack used (prev) :  000001EA 00000048
          | + function block  :  00000000 00000004
          |  Already listed
  02    HalLcdWriteStringValue
        | Stack used (prev) :  0000047B 0000005C
        | + function block  :  00000057 00000000
  04        HalUARTReadDMA
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000001
  03      HalUARTRead
          | Stack used (prev) :  00000406 0000005B
          | + function block  :  00000012 00000000
  02    SbpHalUARTRead
        | Stack used (prev) :  00000418 0000005B
        | + function block  :  0000001B 00000000
  02    SbpHalUARTRead
        | Stack used (prev) :  00000418 0000005B
        | + function block  :  0000001B 00000000
        |  Already listed
  02    SbpHalUARTRead
        | Stack used (prev) :  00000418 0000005B
        | + function block  :  0000001B 00000000
        |  Already listed
  02    SbpHalUARTRead
        | Stack used (prev) :  00000418 0000005B
        | + function block  :  0000001B 00000000
        |  Already listed
  03      Recursive system consisting of
           | HalLcdWriteString
          | Stack used (prev) :  0000027A 0000004C
          | + function block  :  00000051 00000000
          |  Already listed
  02    studyCompletedAndBroadcastData
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000009 00000002
  02    osal_memset
        | Stack used (prev) :  000003F4 0000005C
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  SbpHalUARTReadCallback
      | Stack used (prev) :  000004D2 0000005C
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004E6 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  03      HalAdcSetReference
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000002
  03      HalAdcRead
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000A 00000000
  02    battMeasure
        | Stack used (prev) :  000003FC 0000005A
        | + function block  :  0000001F 00000002
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  battReadAttrCB
      | Stack used (prev) :  0000041B 0000005C
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000437 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  00000430 0000005C
        | + function block  :  0000003C 00000000
        |  Already listed
  01  battWriteAttrCB
      | Stack used (prev) :  0000046C 0000005C
      | + function block  :  0000002C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000498 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  devInfo_ReadAttrCB
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  0000001F 00000001
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000411 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  03      GATTServApp_ReadCharCfg
          | Stack used (prev) :  00000400 0000005C
          | + function block  :  00000031 00000000
          |  Already listed
  05          linkDB_Authen
              | Stack used (prev) :  00000406 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  07              osal_start_timerEx
                  | Stack used (prev) :  0000004A 00000002
                  | + function block  :  00000024 00000000
                  |  Already listed
  06            osal_CbTimerStart
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000001B 00000001
  05          gattStartTimer
              | Stack used (prev) :  0000040D 0000005B
              | + function block  :  00000024 00000000
  06            gattFindServerInfo
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000037 00000000
                |  Already listed
  05          gattGetServerStatus
              | Stack used (prev) :  00000429 0000005A
              | + function block  :  00000024 00000000
  06            attSendMsg
                | Stack used (prev) :  00000579 0000005E
                | + function block  :  00000032 00000000
                |  Already listed
  05          ATT_HandleValueInd
              | Stack used (prev) :  000005AB 0000005E
              | + function block  :  00000018 00000000
  04        GATT_Indication
            | Stack used (prev) :  000005C3 0000005E
            | + function block  :  00000044 00000000
  04        GATT_FindHandleUUID
            | Stack used (prev) :  00000458 0000005B
            | + function block  :  00000060 00000000
            |  Already listed
  03      GATT_ServiceChangedInd
          | Stack used (prev) :  00000607 0000005E
          | + function block  :  00000048 00000000
  02    GATTServApp_SendServiceChangedInd
        | Stack used (prev) :  0000064F 0000005E
        | + function block  :  00000012 00000000
  01  gapBondMgrSendServiceChange
      | Stack used (prev) :  00000661 0000005E
      | + function block  :  0000000C 00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000066D 00000062


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  06            llReplaceCtrlPkt
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000000 00000003
  06            llEnqueueCtrlPkt
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000000B 00000001
                |  Already listed
  05          LL_Disconnect
              | Stack used (prev) :  000003F2 0000005D
              | + function block  :  00000012 00000000
  06            osal_msg_send
                | Stack used (prev) :  00000032 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  08                osal_msg_send
                    | Stack used (prev) :  00000032 00000006
                    | + function block  :  00000012 00000000
                    |  Already listed
  08                osal_msg_allocate
                    | Stack used (prev) :  00000018 00000000
                    | + function block  :  00000014 00000000
                    |  Already listed
  08                osal_memcpy
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000019 00000001
                    |  Already listed
  07              HCI_SendControllerToHostEvent
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000001D 00000001
  06            HCI_SendCommandStatusEvent
                | Stack used (prev) :  0000040F 0000005A
                | + function block  :  00000025 00000001
  05          HCI_CommandStatusEvent
              | Stack used (prev) :  00000434 0000005A
              | + function block  :  00000016 00000001
  04        HCI_DisconnectCmd
            | Stack used (prev) :  0000044A 0000005D
            | + function block  :  00000012 00000000
  05          linkDB_FindFirst
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000000 00000002
  05          HCI_DisconnectCmd
              | Stack used (prev) :  0000044A 0000005D
              | + function block  :  00000012 00000000
              |  Already listed
  04        disconnectNext
            | Stack used (prev) :  0000045C 0000005D
            | + function block  :  0000002A 00000000
  03      GAP_TerminateLinkReq
          | Stack used (prev) :  00000486 0000005D
          | + function block  :  0000001C 00000000
  02    GAPRole_TerminateConnection
        | Stack used (prev) :  000004A2 0000005D
        | + function block  :  00000016 00000004
  02    HalLcdWriteStringValue
        | Stack used (prev) :  0000047B 0000005C
        | + function block  :  00000057 00000000
        |  Already listed
  02    Recursive system consisting of
         | HalLcdWriteString
        | Stack used (prev) :  0000027A 0000004C
        | + function block  :  00000051 00000000
        |  Already listed
  01  simpleBLEPeripheralPairStateCB
      | Stack used (prev) :  000004D2 00000061
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004EA 00000061


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    bdAddr2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000031 00000002
  02    bdAddr2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000031 00000002
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  02    GAPRole_GetParameter
        | Stack used (prev) :  00000406 0000005C
        | + function block  :  00000018 00000000
  02    Recursive system consisting of
         | HalLcdWriteString
        | Stack used (prev) :  0000027A 0000004C
        | + function block  :  00000051 00000000
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    DevInfo_SetParameter
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000D 00000000
  01  peripheralStateNotificationCB
      | Stack used (prev) :  00000423 0000005C
      | + function block  :  0000002E 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000451 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    SimpleProfile_GetParameter
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000C 00000001
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          osal_strlen
              | Stack used (prev) :  000001EA 00000048
              | + function block  :  00000000 00000004
              |  Already listed
  05          GATTServApp_ReadCharCfg
              | Stack used (prev) :  00000400 0000005C
              | + function block  :  00000031 00000000
              |  Already listed
  06            gattServApp_FindServiceCBs
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000001D 00000002
  05          gattServApp_FindAuthorizeAttrCB
              | Stack used (prev) :  0000040F 0000005C
              | + function block  :  00000031 00000000
  05          gattServApp_FindServiceCBs
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000001D 00000002
              |  Already listed
  07              GATT_ServiceNumAttrs
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000A 00000002
  06            gattServiceLastHandle
                | Stack used (prev) :  000003FC 0000005C
                | + function block  :  00000026 00000000
  06            gattServiceLastHandle
                | Stack used (prev) :  000003FC 0000005C
                | + function block  :  00000026 00000000
                |  Already listed
  06            GATT_FindHandleUUID
                | Stack used (prev) :  00000458 0000005B
                | + function block  :  00000060 00000000
                |  Already listed
  06            ATT_CompareUUID
                | Stack used (prev) :  0000041C 0000005B
                | + function block  :  0000003C 00000000
                |  Already listed
  05          GATT_FindNextAttr
              | Stack used (prev) :  000004B8 0000005C
              | + function block  :  00000034 00000000
  05          GATT_FindHandle
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000022 00000000
              |  Already listed
  05          ATT_CompareUUID
              | Stack used (prev) :  0000041C 0000005B
              | + function block  :  0000003C 00000000
              |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  000004EC 0000005C
            | + function block  :  0000007B 00000000
  04        GATTServApp_FindAttr
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000003F 00000000
  05          linkDB_Authen
              | Stack used (prev) :  00000406 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          gattGetServerStatus
              | Stack used (prev) :  00000429 0000005A
              | + function block  :  00000024 00000000
              |  Already listed
  06            attSendMsg
                | Stack used (prev) :  00000579 0000005E
                | + function block  :  00000032 00000000
                |  Already listed
  05          ATT_HandleValueNoti
              | Stack used (prev) :  000005AB 0000005E
              | + function block  :  00000018 00000000
  04        GATT_Notification
            | Stack used (prev) :  000005C3 0000005E
            | + function block  :  0000001A 00000000
  04        GATT_Indication
            | Stack used (prev) :  000005C3 0000005E
            | + function block  :  00000044 00000000
            |  Already listed
  03      GATTServApp_ProcessCharCfg
          | Stack used (prev) :  00000607 0000005E
          | + function block  :  00000069 00000000
  02    SimpleProfile_SetParameter
        | Stack used (prev) :  00000670 0000005E
        | + function block  :  00000022 00000000
  03      osal_strlen
          | Stack used (prev) :  000001EA 00000048
          | + function block  :  00000000 00000004
          |  Already listed
  02    hex2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  000000DB 00000002
  02    hex2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  000000DB 00000002
        |  Already listed
  02    hex2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  000000DB 00000002
        |  Already listed
  02    HalLcdWriteStringValue
        | Stack used (prev) :  0000047B 0000005C
        | + function block  :  00000057 00000000
        |  Already listed
  02    Recursive system consisting of
         | HalLcdWriteString
        | Stack used (prev) :  0000027A 0000004C
        | + function block  :  00000051 00000000
        |  Already listed
  03      Recursive system consisting of
           | HalLcdWriteString
          | Stack used (prev) :  0000027A 0000004C
          | + function block  :  00000051 00000000
          |  Already listed
  03      atoi
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000002A 00000000
  08                HalFlashRead
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000E 00000001
  08                osal_memcmp
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000D 00000000
                    |  Already listed
  07              verifyWordM
                  | Stack used (prev) :  00000400 0000005B
                  | + function block  :  00000045 00000000
  07              HalFlashWrite
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000C 00000000
  06            writeWord
                | Stack used (prev) :  00000445 0000005B
                | + function block  :  0000003E 00000000
  07              HalFlashRead
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000E 00000001
                  |  Already listed
  06            findItem
                | Stack used (prev) :  00000400 0000005B
                | + function block  :  00000042 00000000
  07              HalFlashErase
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000000 00000002
  07              HalFlashRead
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000E 00000001
                  |  Already listed
  06            erasePage
                | Stack used (prev) :  00000400 0000005C
                | + function block  :  0000003C 00000000
  07              writeWord
                  | Stack used (prev) :  00000445 0000005B
                  | + function block  :  0000003E 00000000
                  |  Already listed
  06            setActivePage
                | Stack used (prev) :  00000483 0000005B
                | + function block  :  00000038 00000000
  06            HalFlashRead
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000E 00000001
                |  Already listed
  05          compactPage
              | Stack used (prev) :  000004BB 0000005C
              | + function block  :  00000050 00000000
  06            writeWord
                | Stack used (prev) :  00000445 0000005B
                | + function block  :  0000003E 00000000
                |  Already listed
  06            writeWord
                | Stack used (prev) :  00000445 0000005B
                | + function block  :  0000003E 00000000
                |  Already listed
  06            writeWord
                | Stack used (prev) :  00000445 0000005B
                | + function block  :  0000003E 00000000
                |  Already listed
  06            writeWord
                | Stack used (prev) :  00000445 0000005B
                | + function block  :  0000003E 00000000
                |  Already listed
  06            verifyWordM
                | Stack used (prev) :  00000400 0000005B
                | + function block  :  00000045 00000000
                |  Already listed
  06            HalFlashWrite
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000C 00000000
                |  Already listed
  05          writeItem
              | Stack used (prev) :  00000483 0000005B
              | + function block  :  00000045 00000000
  05          findItem
              | Stack used (prev) :  00000400 0000005B
              | + function block  :  00000042 00000000
              |  Already listed
  06            writeWord
                | Stack used (prev) :  00000445 0000005B
                | + function block  :  0000003E 00000000
                |  Already listed
  05          setXferPage
              | Stack used (prev) :  00000483 0000005B
              | + function block  :  0000002E 00000000
  05          HalFlashRead
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000E 00000001
              |  Already listed
  04        osal_snv_write
            | Stack used (prev) :  0000050B 0000005C
            | + function block  :  00000022 00000000
  06            compactPage
                | Stack used (prev) :  000004BB 0000005C
                | + function block  :  00000050 00000000
                |  Already listed
  06            setXferPage
                | Stack used (prev) :  00000483 0000005B
                | + function block  :  0000002E 00000000
                |  Already listed
  05          osal_snv_compact
              | Stack used (prev) :  0000050B 0000005C
              | + function block  :  00000028 00000000
  07              findItem
                  | Stack used (prev) :  00000400 0000005B
                  | + function block  :  00000042 00000000
                  |  Already listed
  07              HalFlashRead
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000E 00000001
                  |  Already listed
  06            osal_snv_read
                | Stack used (prev) :  00000442 0000005B
                | + function block  :  00000018 00000000
  06            osal_snv_write
                | Stack used (prev) :  0000050B 0000005C
                | + function block  :  00000022 00000000
                |  Already listed
  07              osal_msg_deallocate
                  | Stack used (prev) :  0000000A 00000002
                  | + function block  :  00000009 00000004
                  |  Already listed
  06            gapBondFreeAuthEvt
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000042 00000002
  06            osal_isbufset
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000A 00000000
  06            osal_clear_event
                | Stack used (prev) :  000001B6 00000032
                | + function block  :  00000017 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  05          gapBondMgrEraseBonding
              | Stack used (prev) :  0000052D 0000005C
              | + function block  :  000000A8 00000000
  06            gapBondMgrEraseBonding
                | Stack used (prev) :  0000052D 0000005C
                | + function block  :  000000A8 00000000
                |  Already listed
  05          gapBondMgrEraseAllBondings
              | Stack used (prev) :  000005D5 0000005C
              | + function block  :  00000036 00000000
  06            osal_snv_read
                | Stack used (prev) :  00000442 0000005B
                | + function block  :  00000018 00000000
                |  Already listed
  07              osal_isbufset
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000A 00000000
                  |  Already listed
  10                    phyFindWlEntry
                        | Stack used (prev) :  000003F2 0000005A
                        | + function block  :  00000017 00000000
  10                    PHY_ClearBlacklistIndex
                        | Stack used (prev) :  000003F2 0000005A
                        | + function block  :  00000016 00000000
  10                    PHY_SetBlacklistIndex
                        | Stack used (prev) :  000003F2 0000005A
                        | + function block  :  00000016 00000000
  09                  PHY_AddWlEntry
                      | Stack used (prev) :  00000409 0000005A
                      | + function block  :  00000018 00000001
  09                  llCheckWhiteListUsage
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  00000000 00000002
  08                LL_AddWhiteListDevice
                    | Stack used (prev) :  00000421 0000005C
                    | + function block  :  00000012 00000000
  08                HCI_CommandCompleteEvent
                    | Stack used (prev) :  00000074 00000006
                    | + function block  :  0000002B 00000000
                    |  Already listed
  07              HCI_LE_AddWhiteListCmd
                  | Stack used (prev) :  00000433 0000005C
                  | + function block  :  00000014 00000000
  09                  PHY_ClearWhitelist
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  00000000 00000002
  09                  llCheckWhiteListUsage
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  00000000 00000002
                      |  Already listed
  08                LL_ClearWhiteList
                    | Stack used (prev) :  000003F2 0000005C
                    | + function block  :  00000000 00000004
  08                HCI_CommandCompleteEvent
                    | Stack used (prev) :  00000074 00000006
                    | + function block  :  0000002B 00000000
                    |  Already listed
  07              HCI_LE_ClearWhiteListCmd
                  | Stack used (prev) :  000003F2 00000060
                  | + function block  :  00000002 00000004
  06            gapBondMgr_SyncWhiteList
                | Stack used (prev) :  00000447 00000064
                | + function block  :  0000002C 00000000
  08                osal_isbufset
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000A 00000000
                    |  Already listed
  07              gapBondMgrBondTotal
                  | Stack used (prev) :  000003FC 0000005A
                  | + function block  :  0000001E 00000000
  08                osal_memset
                    | Stack used (prev) :  000003F4 0000005C
                    | + function block  :  00000018 00000000
                    |  Already listed
  08                osal_memcpy
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000019 00000001
                    |  Already listed
  08                ggs_SetAttrWPermit
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000E 00000002
  08                ggs_SetAttrWPermit
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000E 00000002
                    |  Already listed
  08                ggs_SetAttrWPermit
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000E 00000002
                    |  Already listed
  07              GGS_SetParameter
                  | Stack used (prev) :  0000040C 0000005C
                  | + function block  :  0000001C 00000000
  06            gapBondSetupPrivFlag
                | Stack used (prev) :  00000428 0000005C
                | + function block  :  0000001C 00000004
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  05          gapBondMgrReadBonds
              | Stack used (prev) :  00000473 00000064
              | + function block  :  00000036 00000000
  05          gapBondMgrReadBonds
              | Stack used (prev) :  00000473 00000064
              | + function block  :  00000036 00000000
              |  Already listed
  05          gapBondMgrReadBonds
              | Stack used (prev) :  00000473 00000064
              | + function block  :  00000036 00000000
              |  Already listed
  07              osal_snv_read
                  | Stack used (prev) :  00000442 0000005B
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_isbufset
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000A 00000000
                  |  Already listed
  09                  osal_memcmp
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  0000000D 00000000
                      |  Already listed
  09                  osal_memcpy
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000019 00000001
                      |  Already listed
  10                    osal_memset
                        | Stack used (prev) :  000003F4 0000005C
                        | + function block  :  00000018 00000000
                        |  Already listed
  10                    osal_revmemcpy
                        | Stack used (prev) :  000003F2 0000005A
                        | + function block  :  0000000B 00000001
                        |  Already listed
  10                    smEncrypt
                        | Stack used (prev) :  0000040E 0000005C
                        | + function block  :  00000080 00000000
                        |  Already listed
  09                  sm_ah
                      | Stack used (prev) :  0000048E 0000005C
                      | + function block  :  00000090 00000000
  08                SM_ResolveRandomAddrs
                    | Stack used (prev) :  0000051E 0000005C
                    | + function block  :  00000028 00000000
  07              GAP_ResolvePrivateAddr
                  | Stack used (prev) :  00000546 0000005C
                  | + function block  :  00000000 00000004
  06            gapBondMgrResolvePrivateAddr
                | Stack used (prev) :  00000546 00000060
                | + function block  :  00000042 00000000
  07              osal_memcmp
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000D 00000000
                  |  Already listed
  06            gapBondMgrFindAddr
                | Stack used (prev) :  000003FF 0000005A
                | + function block  :  00000036 00000000
  07              osal_snv_read
                  | Stack used (prev) :  00000442 0000005B
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_memcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000019 00000001
                  |  Already listed
  06            gapBondMgrGetPublicAddr
                | Stack used (prev) :  0000045A 0000005B
                | + function block  :  00000044 00000000
  06            osal_memcmp
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000D 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  05          GAPBondMgr_ResolveAddr
              | Stack used (prev) :  00000588 00000060
              | + function block  :  00000064 00000000
  05          osal_revmemcpy
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000B 00000001
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          GAP_NumActiveConnections
              | Stack used (prev) :  000003F2 0000005C
              | + function block  :  00000000 00000004
              |  Already listed
  05          GAP_SetParamValue
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000000 00000002
  04        GAPBondMgr_SetParameter
            | Stack used (prev) :  0000060B 00000064
            | + function block  :  0000002C 00000000
  04        osal_strlen
            | Stack used (prev) :  000001EA 00000048
            | + function block  :  00000000 00000004
            |  Already listed
  04        GGS_SetParameter
            | Stack used (prev) :  0000040C 0000005C
            | + function block  :  0000001C 00000000
            |  Already listed
  03      set_new_passkey
          | Stack used (prev) :  00000637 00000064
          | + function block  :  00000040 00000000
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      osal_strlen
          | Stack used (prev) :  000001EA 00000048
          | + function block  :  00000000 00000004
          |  Already listed
  02    set_code_name
        | Stack used (prev) :  00000677 00000064
        | + function block  :  00000030 00000000
  02    getTemperature
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000010 00000000
  02    delay_nus
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000C 00000000
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  02    HalSPIWrite
        | Stack used (prev) :  00000406 0000005A
        | + function block  :  0000002C 00000000
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  03      xnvSPIWrite
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000000
          |  Already listed
  02    HalSPIRead
        | Stack used (prev) :  00000406 0000005A
        | + function block  :  0000002C 00000001
  02    osal_start_timerEx
        | Stack used (prev) :  0000004A 00000002
        | + function block  :  00000024 00000000
        |  Already listed
  02    osal_memset
        | Stack used (prev) :  000003F4 0000005C
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    osal_strlen
        | Stack used (prev) :  000001EA 00000048
        | + function block  :  00000000 00000004
        |  Already listed
  01  simpleProfileChangeCB
      | Stack used (prev) :  000006A7 00000064
      | + function block  :  00000182 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  simpleProfile_ReadAttrCB
      | Stack used (prev) :  000003F2 0000005A
      | + function block  :  00000016 00000001
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000408 0000005B


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    osal_memset
        | Stack used (prev) :  000003F4 0000005C
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  00000430 0000005C
        | + function block  :  0000003C 00000000
        |  Already listed
  01  simpleProfile_WriteAttrCB
      | Stack used (prev) :  0000046C 0000005C
      | + function block  :  00000036 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004A2 0000005C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  000003F2 0000005A
  02    linkDB_State
        | Stack used (prev) :  00000406 0000005C
        | + function block  :  00000014 00000000
        |  Already listed
  02    GATTServApp_InitCharCfg
        | Stack used (prev) :  00000400 0000005C
        | + function block  :  00000022 00000000
        |  Already listed
  01  simpleProfile_HandleConnStatusCB
      | Stack used (prev) :  00000422 0000005C
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000434 0000005C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_ErrorRsp::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_ExchangeMTURsp::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_FindInfoRsp::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_FindByTypeValueRsp::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_ReadByTypeRsp::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_ReadRsp::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_ReadBlobRsp::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_ReadMultiRsp::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_ReadByGrpTypeRsp::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_WriteRsp::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_PrepareWriteRsp::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_ExecuteWriteRsp::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_HandleValueNoti::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_HandleValueInd::?relay
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000829 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000829 00000064
  01  ATT_BuildErrorRsp
      | Stack used (prev) :  00000829 00000064
      | + function block  :  00000009 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000832 00000065


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000832 00000065
  01  ATT_ParseExchangeMTUReq
      | Stack used (prev) :  00000832 00000065
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 00000065


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 00000065
  01  ATT_BuildExchangeMTURsp
      | Stack used (prev) :  0000083F 00000065
      | + function block  :  00000000 00000003
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 00000068


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 00000068
  01  ATT_ParseFindInfoReq
      | Stack used (prev) :  0000083F 00000068
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084C 00000068


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084C 00000068
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildFindInfoRsp
      | Stack used (prev) :  0000084C 00000068
      | + function block  :  00000014 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000860 00000069


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000860 00000069
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_ParseFindByTypeValueReq
      | Stack used (prev) :  00000860 00000069
      | + function block  :  00000014 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000874 0000006A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000874 0000006A
  01  ATT_BuildFindByTypeValueRsp
      | Stack used (prev) :  00000874 0000006A
      | + function block  :  0000000B 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  0000087F 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000087F 0000006B
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_ParseReadByTypeReq
      | Stack used (prev) :  0000087F 0000006B
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000088F 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000088F 0000006B
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadByTypeRsp
      | Stack used (prev) :  0000088F 0000006B
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  0000089B 0000006C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000089B 0000006C
  01  ATT_ParseReadReq
      | Stack used (prev) :  0000089B 0000006C
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000008A8 0000006C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000008A8 0000006C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadRsp
      | Stack used (prev) :  000008A8 0000006C
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000008B4 0000006C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000008B4 0000006C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_ParseWriteReq
      | Stack used (prev) :  000008B4 0000006C
      | + function block  :  00000012 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000008C6 0000006D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000008C6 0000006D
  01  ATT_ParseReadBlobReq
      | Stack used (prev) :  000008C6 0000006D
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000008D3 0000006D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000008D3 0000006D
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadBlobRsp
      | Stack used (prev) :  000008D3 0000006D
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000008DF 0000006D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000008DF 0000006D
  01  ATT_ParseReadMultiReq
      | Stack used (prev) :  000008DF 0000006D
      | + function block  :  0000000E 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000008ED 0000006E


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000008ED 0000006E
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadMultiRsp
      | Stack used (prev) :  000008ED 0000006E
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000008F9 0000006E


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000008F9 0000006E
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadByGrpTypeRsp
      | Stack used (prev) :  000008F9 0000006E
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000905 0000006F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000905 0000006F
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_ParsePrepareWriteReq
      | Stack used (prev) :  00000905 0000006F
      | + function block  :  00000010 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000915 00000070


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000915 00000070
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildPrepareWriteRsp
      | Stack used (prev) :  00000915 00000070
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000921 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000921 00000071
  01  ATT_ParseExecuteWriteReq
      | Stack used (prev) :  00000921 00000071
      | + function block  :  00000004 00000003
  <-Sub-tree of type: Function tree
    | Stack used          :  00000925 00000074


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000925 00000074
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildHandleValueInd
      | Stack used (prev) :  00000925 00000074
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_ParsePacket::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_BuildErrorRsp::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_ParseExchangeMTUReq::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_BuildExchangeMTURsp::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_ParseFindInfoReq::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_BuildFindInfoRsp::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_ParseFindByTypeValueReq::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_BuildFindByTypeValueRsp::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_ParseReadByTypeReq::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_BuildReadByTypeRsp::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_ParseReadReq::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_BuildReadRsp::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_ParseWriteReq::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_ParseReadBlobReq::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_BuildReadBlobRsp::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_ParseReadMultiReq::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_BuildReadMultiRsp::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_BuildReadByGrpTypeRsp::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_ParsePrepareWriteReq::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_BuildPrepareWriteRsp::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_ParseExecuteWriteReq::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_BuildHandleValueInd::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  attSendMsg::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_CompareUUID::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  ATT_ConvertUUIDto128::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_SetParamValue::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_GetParamValue::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_ParamsInit::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_SecParamsInit::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapReadBD_ADDRStatus::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapReadBufSizeCmdStatus::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapProcessNewAddr::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapAddAddrAdj::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapDetermineAddrType::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapProcessRandomAddrComplete::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapGetSRK::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapGetSignCounter::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapIncSignCounter::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapUpdateConnSignCounter::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapGetDevAddressMode::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapGetDevAddress::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapGetIRK::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapSendDeviceInitDoneEvent::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_ResolvePrivateAddr::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapIsAdvertising::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapValidADType::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapFindADType::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_TerminateLinkReq::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_Signable::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_Authenticate::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_TerminateAuth::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_PasscodeUpdate::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_Bond::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapProcessConnectionCompleteEvt::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapProcessConnUpdateCompleteEvt::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapProcessDisconnectCompleteEvt::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  sendEstLinkEvent::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  sendTerminateEvent::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapSendLinkUpdateEvent::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  disconnectNext::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  sendAuthEvent::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapFreeAuthLink::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapFreeEstLink::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapSendBondCompleteEvent::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapSendPairingReqEvent::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapPasskeyNeededCB::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapPairingCompleteCB::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_MakeDiscoverable::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_UpdateAdvertisingData::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_EndDiscoverable::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_PeriDevMgrInit::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapPeriProcessHCICmdCompleteEvt::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapSetAdvParams::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapSetAdvParamsStatus::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapWriteAdvEnableStatus::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapWriteAdvDataStatus::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapProcessAdvertisingEvt::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapSendMakeDiscEvent::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  gapFreeAdvertState::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  isLimitedDiscoverableMode::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  01  GAP_SendSlaveSecurityRequest::?relay
      | Stack used (prev) :  00000931 00000075
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000931 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000931 00000075
  02    osal_stop_timerEx
        | Stack used (prev) :  000001C2 00000034
        | + function block  :  00000018 00000000
        |  Already listed
  03      osal_clear_event
          | Stack used (prev) :  000001B6 00000032
          | + function block  :  00000017 00000000
          |  Already listed
  03      osal_set_event
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000017 00000000
          |  Already listed
  03      osal_msg_extract
          | Stack used (prev) :  00000931 00000075
          | + function block  :  0000001D 00000000
  02    osal_msg_receive
        | Stack used (prev) :  0000094E 00000075
        | + function block  :  00000020 00000000
  02    osal_msg_send
        | Stack used (prev) :  00000032 00000006
        | + function block  :  00000012 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smGenerateRandBuf
          | Stack used (prev) :  0000040A 00000064
          | + function block  :  00000027 00000000
          |  Already listed
  03      sm_ah
          | Stack used (prev) :  0000048E 0000005C
          | + function block  :  00000090 00000000
          |  Already listed
  02    SM_CalcRandomAddr
        | Stack used (prev) :  00000931 00000075
        | + function block  :  00000011 00000001
  05          osal_bm_free
              | Stack used (prev) :  0000000A 00000002
              | + function block  :  00000014 00000000
              |  Already listed
  05          L2CAP_bm_alloc
              | Stack used (prev) :  00000416 0000005E
              | + function block  :  0000002A 00000000
              |  Already listed
  05          l2capEncapSendData
              | Stack used (prev) :  00000465 0000005C
              | + function block  :  00000036 00000000
              |  Already listed
  04        l2capSendCmd
            | Stack used (prev) :  00000931 00000075
            | + function block  :  0000002C 00000001
  03      L2CAP_CmdReject
          | Stack used (prev) :  0000095D 00000076
          | + function block  :  0000001C 00000000
  05          osal_start_reload_timer
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000016 00000000
              |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000032 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        gapProcessRandomAddrComplete
            | Stack used (prev) :  00000931 00000075
            | + function block  :  00000010 00000001
  06            osal_msg_send
                | Stack used (prev) :  00000032 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  05          gapSendDeviceInitDoneEvent
              | Stack used (prev) :  00000931 00000075
              | + function block  :  00000018 00000001
  04        gapReadBufSizeCmdStatus
            | Stack used (prev) :  00000949 00000076
            | + function block  :  00000012 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000074 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_LE_ReadBufSizeCmd
              | Stack used (prev) :  00000931 00000075
              | + function block  :  00000004 00000002
  05          gapSendDeviceInitDoneEvent
              | Stack used (prev) :  00000931 00000075
              | + function block  :  00000018 00000001
              |  Already listed
  04        gapReadBD_ADDRStatus
            | Stack used (prev) :  00000949 00000077
            | + function block  :  00000014 00000000
  03      gapProcessHCICmdCompleteEvt
          | Stack used (prev) :  0000095D 00000077
          | + function block  :  00000028 00000000
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          reportStatusChange
              | Stack used (prev) :  00000931 00000075
              | + function block  :  0000001E 00000000
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        linkDB_Remove
            | Stack used (prev) :  0000094F 00000075
            | + function block  :  00000014 00000000
  04        gapFreeAuthLink
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  04        disconnectNext
            | Stack used (prev) :  0000045C 0000005D
            | + function block  :  0000002A 00000000
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000032 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  04        sendTerminateEvent
            | Stack used (prev) :  00000931 00000075
            | + function block  :  00000024 00000001
  03      gapProcessDisconnectCompleteEvt
          | Stack used (prev) :  00000963 00000076
          | + function block  :  0000001C 00000000
  05          osal_msg_send
              | Stack used (prev) :  00000032 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        gapSendLinkUpdateEvent
            | Stack used (prev) :  00000931 00000075
            | + function block  :  00000021 00000001
  03      gapProcessConnUpdateCompleteEvt
          | Stack used (prev) :  00000952 00000076
          | + function block  :  0000001A 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          reportStatusChange
              | Stack used (prev) :  00000931 00000075
              | + function block  :  0000001E 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        linkDB_Add
            | Stack used (prev) :  0000094F 00000075
            | + function block  :  0000002C 00000001
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  04        gapFreeEstLink
            | Stack used (prev) :  00000931 00000075
            | + function block  :  00000016 00000002
  04        disconnectNext
            | Stack used (prev) :  0000045C 0000005D
            | + function block  :  0000002A 00000000
            |  Already listed
  04        sendTerminateEvent
            | Stack used (prev) :  00000931 00000075
            | + function block  :  00000024 00000001
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000032 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        sendEstLinkEvent
            | Stack used (prev) :  00000931 00000075
            | + function block  :  0000003A 00000001
  04        gapDetermineAddrType
            | Stack used (prev) :  00000931 00000075
            | + function block  :  00000000 00000002
  03      gapProcessConnectionCompleteEvt
          | Stack used (prev) :  0000097B 00000077
          | + function block  :  00000034 00000000
  02    gapProcessOSALMsg
        | Stack used (prev) :  000009AF 00000077
        | + function block  :  00000032 00000000
  02    gapIsAdvertising
        | Stack used (prev) :  00000931 00000075
        | + function block  :  00000000 00000002
  02    gapGetIRK
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  04        LL_SetRandomAddress
            | Stack used (prev) :  00000931 00000075
            | + function block  :  00000000 00000002
  04        HCI_CommandCompleteEvent
            | Stack used (prev) :  00000074 00000006
            | + function block  :  0000002B 00000000
            |  Already listed
  03      HCI_LE_SetRandomAddressCmd
          | Stack used (prev) :  00000931 00000077
          | + function block  :  00000002 00000004
  03      gapAddAddrAdj
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000A 00000002
          |  Already listed
  02    gapProcessNewAddr
        | Stack used (prev) :  00000933 0000007B
        | + function block  :  00000028 00000000
  02    GAP_GetParamValue
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000014 00000002
        |  Already listed
  01  GAP_ProcessEvent
      | Stack used (prev) :  000009E1 0000007B
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GAP_RegisterForHCIMsgs::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GAP_Init::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GAP_ProcessEvent::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GAP_NumActiveConnections::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gapProcessOSALMsg::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gapProcessHCICmdCompleteEvt::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gapRegisterPeripheral::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GGS_SetParameter::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GGS_AddService::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  ggs_SetAttrWPermit::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  ggs_ReadAttrCB::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  ggs_WriteAttrCB::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GATT_InitServer::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GATT_RegisterService::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GATT_RegisterForReq::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GATT_VerifyReadPermissions::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GATT_VerifyWritePermissions::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GATT_ServiceChangedInd::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GATT_FindHandleUUID::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GATT_FindHandle::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GATT_FindNextAttr::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GATT_ServiceNumAttrs::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GATT_Indication::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  GATT_Notification::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattServiceLastHandle::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattServerProcessMsgCB::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattProcessExchangeMTUReq::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattProcessFindInfoReq::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattProcessFindByTypeValueReq::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattProcessReadByTypeReq::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattProcessReadReq::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattProcessReadMultiReq::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattProcessReadByGrpTypeReq::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattProcessWriteReq::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattProcessExecuteWriteReq::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattGetServerStatus::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattFindServerInfo::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattServerHandleTimerCB::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  01  gattServerHandleConnStatusCB::?relay
      | Stack used (prev) :  00000A05 0000007B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A05 0000007B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A05 0000007B
  02    osal_msg_receive
        | Stack used (prev) :  0000094E 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      osal_bm_free
          | Stack used (prev) :  0000000A 00000002
          | + function block  :  00000014 00000000
          |  Already listed
  05          LL_CtrlToHostFlowControl
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000000 00000002
              |  Already listed
  05          HCI_CommandCompleteEvent
              | Stack used (prev) :  00000074 00000006
              | + function block  :  0000002B 00000000
              |  Already listed
  04        HCI_HostNumCompletedPktCmd
            | Stack used (prev) :  00000A05 0000007B
            | + function block  :  0000000C 00000000
  03      L2CAP_HostNumCompletedPkts
          | Stack used (prev) :  00000A11 0000007B
          | + function block  :  00000008 00000004
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcmp
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000D 00000000
              |  Already listed
  05          osal_revmemcpy
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000B 00000001
              |  Already listed
  05          sm_CMAC
              | Stack used (prev) :  0000047E 0000005C
              | + function block  :  00000097 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  06            osal_msg_send
                | Stack used (prev) :  00000032 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  06            linkDB_Find
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000014 00000002
                |  Already listed
  06            GAP_GetParamValue
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000014 00000002
                |  Already listed
  05          gapUpdateConnSignCounter
              | Stack used (prev) :  00000A05 0000007B
              | + function block  :  00000018 00000001
  04        SM_VerifyAuthenSig
            | Stack used (prev) :  00000A1D 0000007B
            | + function block  :  00000081 00000001
  03      ATT_ParsePacket
          | Stack used (prev) :  00000A9E 0000007B
          | + function block  :  00000022 00000001
  03      ATT_ErrorRsp
          | Stack used (prev) :  000005AB 0000005E
          | + function block  :  00000018 00000000
          |  Already listed
  02    gattProcessRxData
        | Stack used (prev) :  00000AC0 0000007F
        | + function block  :  00000038 00000000
  01  GATT_ProcessEvent
      | Stack used (prev) :  00000AF8 0000007F
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B10 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B10 0000007F
  01  gattRegisterServer::?relay
      | Stack used (prev) :  00000B10 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B10 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B10 0000007F
  01  GATT_AppCompletedMsg::?relay
      | Stack used (prev) :  00000B10 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B10 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B10 0000007F
  01  GATT_Init::?relay
      | Stack used (prev) :  00000B10 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B10 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B10 0000007F
  01  GATT_ProcessEvent::?relay
      | Stack used (prev) :  00000B10 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B10 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B10 0000007F
  01  gattProcessRxData::?relay
      | Stack used (prev) :  00000B10 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B10 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B10 0000007F
  01  gattNotifyEvent::?relay
      | Stack used (prev) :  00000B10 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B10 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B10 0000007F
  01  gattStartTimer::?relay
      | Stack used (prev) :  00000B10 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B10 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B10 0000007F
  01  gattStopTimer::?relay
      | Stack used (prev) :  00000B10 0000007F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B10 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B10 0000007F
  02    osal_msg_receive
        | Stack used (prev) :  0000094E 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      GATTServApp_ReadAttr
          | Stack used (prev) :  000004EC 0000005C
          | + function block  :  0000007B 00000000
          |  Already listed
  03      GATTServApp_ReadAttr
          | Stack used (prev) :  000004EC 0000005C
          | + function block  :  0000007B 00000000
          |  Already listed
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  05          gattServApp_FindServiceCBs
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000001D 00000002
              |  Already listed
  05          GATT_FindHandle
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000022 00000000
              |  Already listed
  04        GATTServApp_WriteAttr
            | Stack used (prev) :  00000B10 0000007F
            | + function block  :  00000034 00000000
  04        gattServApp_FindPrepareWriteQ
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ExecuteWriteRsp
            | Stack used (prev) :  00000B10 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessExecuteWriteReq
          | Stack used (prev) :  00000B44 0000007F
          | + function block  :  0000004A 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        gattServApp_FindAuthorizeAttrCB
            | Stack used (prev) :  0000040F 0000005C
            | + function block  :  00000031 00000000
            |  Already listed
  04        gattServApp_FindPrepareWriteQ
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  04        gattServApp_FindPrepareWriteQ
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  04        GATT_FindHandle
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_PrepareWriteRsp
            | Stack used (prev) :  00000B10 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessPrepareWriteReq
          | Stack used (prev) :  00000B1C 0000007F
          | + function block  :  0000003E 00000000
  04        GATTServApp_WriteAttr
            | Stack used (prev) :  00000B10 0000007F
            | + function block  :  00000034 00000000
            |  Already listed
  04        gattServApp_FindAuthorizeAttrCB
            | Stack used (prev) :  0000040F 0000005C
            | + function block  :  00000031 00000000
            |  Already listed
  04        GATT_FindHandle
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_WriteRsp
            | Stack used (prev) :  00000B10 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessWriteReq
          | Stack used (prev) :  00000B44 0000007F
          | + function block  :  0000004E 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  000004EC 0000005C
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindNextAttr
            | Stack used (prev) :  000004B8 0000005C
            | + function block  :  00000034 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  00000458 0000005B
            | + function block  :  00000060 00000000
            |  Already listed
  04        GATT_VerifyReadPermissions
            | Stack used (prev) :  0000041E 0000005C
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ReadByGrpTypeRsp
            | Stack used (prev) :  00000B10 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessReadByGrpTypeReq
          | Stack used (prev) :  00000B1C 0000007F
          | + function block  :  0000004A 00000001
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  000004EC 0000005C
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindHandle
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ReadMultiRsp
            | Stack used (prev) :  00000B10 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessReadMultiReq
          | Stack used (prev) :  00000B1C 0000007F
          | + function block  :  0000003E 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  000004EC 0000005C
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  00000458 0000005B
            | + function block  :  00000060 00000000
            |  Already listed
  04        GATT_VerifyReadPermissions
            | Stack used (prev) :  0000041E 0000005C
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ReadByTypeRsp
            | Stack used (prev) :  00000B10 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessReadByTypeReq
          | Stack used (prev) :  00000B1C 0000007F
          | + function block  :  00000046 00000001
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcmp
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000D 00000000
            |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  000004EC 0000005C
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindNextAttr
            | Stack used (prev) :  000004B8 0000005C
            | + function block  :  00000034 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  00000458 0000005B
            | + function block  :  00000060 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000579 0000005E
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_FindByTypeValueRsp
            | Stack used (prev) :  00000B10 0000007F
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessFindByTypeValueReq
          | Stack used (prev) :  00000B1C 0000007F
          | + function block  :  00000042 00000000
  04        L2CAP_HostNumCompletedPkts
            | Stack used (prev) :  00000A11 0000007B
            | + function block  :  00000008 00000004
            |  Already listed
  03      GATT_AppCompletedMsg
          | Stack used (prev) :  00000B10 0000007F
          | + function block  :  00000000 00000004
  03      GATT_FindHandle
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000022 00000000
          |  Already listed
  04        attSendMsg
            | Stack used (prev) :  00000579 0000005E
            | + function block  :  00000032 00000000
            |  Already listed
  03      ATT_ReadBlobRsp
          | Stack used (prev) :  00000B10 0000007F
          | + function block  :  0000000C 00000000
  04        attSendMsg
            | Stack used (prev) :  00000579 0000005E
            | + function block  :  00000032 00000000
            |  Already listed
  03      ATT_ReadRsp
          | Stack used (prev) :  00000B10 0000007F
          | + function block  :  0000000C 00000000
  04        attSendMsg
            | Stack used (prev) :  00000579 0000005E
            | + function block  :  00000032 00000000
            |  Already listed
  03      ATT_ExchangeMTURsp
          | Stack used (prev) :  00000B10 0000007F
          | + function block  :  0000000C 00000000
  03      ATT_ErrorRsp
          | Stack used (prev) :  000005AB 0000005E
          | + function block  :  00000018 00000000
          |  Already listed
  02    gattServApp_ProcessMsg
        | Stack used (prev) :  00000B92 00000083
        | + function block  :  00000038 00000000
  01  GATTServApp_ProcessEvent
      | Stack used (prev) :  00000BCA 00000083
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_RegisterForMsg::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_Init::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_ProcessEvent::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_RegisterService::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_SetNumPrepareWrites::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_FindAttr::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_AddService::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_FindServiceCBs::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_ProcessMsg::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_ProcessFindByTypeValueReq::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_ProcessReadByTypeReq::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_ProcessReadMultiReq::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_ProcessReadByGrpTypeReq::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_ProcessWriteReq::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_ProcessPrepareWriteReq::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_ProcessExecuteWriteReq::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_FindPrepareWriteQ::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_FindCharCfgItem::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_FindAuthorizeAttrCB::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_WriteAttrCB::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_ReadAttr::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_WriteAttr::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_UpdateCharCfg::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_SendServiceChangedInd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_InitCharCfg::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_ReadCharCfg::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_WriteCharCfg::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_ProcessCCCWriteReq::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_ProcessCharCfg::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  gattServApp_HandleConnStatusCB::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  GATTServApp_SendCCCUpdatedEvent::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_bm_alloc::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_SendDataPkt::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_DisconnectCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_HostNumCompletedPktCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_ReadBDADDRCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_ReadRssiCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_LE_ReadBufSizeCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_LE_SetRandomAddressCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_LE_SetAdvParamCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_LE_SetAdvDataCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_LE_SetScanRspDataCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_LE_SetAdvEnableCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_LE_ClearWhiteListCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_LE_AddWhiteListCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_LE_RandCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_LE_LtkReqReplyCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_LE_LtkReqNegReplyCmd::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  LL_RandCback::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  LL_EXT_SetRxGainCback::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  LL_EXT_SetTxPowerCback::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  LL_EXT_ExtendRfRangeCback::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  LL_RxDataCompleteCback::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  hciInitEventMasks::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_NumOfCompletedPacketsEvent::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_CommandCompleteEvent::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_VendorSpecifcCommandCompleteEvent::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_CommandStatusEvent::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_SendCommandStatusEvent::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_SendCommandCompleteEvent::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  HCI_SendControllerToHostEvent::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  LL_ConnectionCompleteCback::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  LL_DisconnectCback::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  LL_ConnParamUpdateCback::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  LL_ReadRemoteVersionInfoCback::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  LL_EncLtkReqCback::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  LL_EncChangeCback::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  LL_EncKeyRefreshCback::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  L2CAP_RegisterApp::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  L2CAP_SendData::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  L2CAP_CmdReject::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  L2CAP_ConnParamUpdateReq::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  01  L2CAP_HostNumCompletedPkts::?relay
      | Stack used (prev) :  00000BE2 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE2 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE2 00000083
  02    osal_msg_receive
        | Stack used (prev) :  0000094E 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      osal_bm_free
          | Stack used (prev) :  0000000A 00000002
          | + function block  :  00000014 00000000
          |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      l2capNotifyData
          | Stack used (prev) :  00000BE2 00000083
          | + function block  :  00000012 00000000
  04        osal_bm_adjust_header
            | Stack used (prev) :  000003FE 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  03      l2capParsePacket
          | Stack used (prev) :  00000BE2 00000083
          | + function block  :  0000000E 00000000
  04        l2capHandleRxError
            | Stack used (prev) :  00000BE2 00000083
            | + function block  :  00000000 00000000
  04        l2capParseSignalHdr
            | Stack used (prev) :  00000BE2 00000083
            | + function block  :  00000009 00000001
  05          l2capNotifySignal
              | Stack used (prev) :  0000040C 0000005C
              | + function block  :  0000002D 00000000
              |  Already listed
  05          L2CAP_ParseParamUpdateReq
              | Stack used (prev) :  00000BE2 00000083
              | + function block  :  0000000B 00000000
  05          L2CAP_CmdReject
              | Stack used (prev) :  0000095D 00000076
              | + function block  :  0000001C 00000000
              |  Already listed
  04        l2capProcessReq
            | Stack used (prev) :  00000BED 00000083
            | + function block  :  0000005E 00000000
  06            osal_CbTimerStop
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000B 00000000
                |  Already listed
  05          l2capStopTimer
              | Stack used (prev) :  00000BE2 00000083
              | + function block  :  00000009 00000000
  05          l2capFindLocalId
              | Stack used (prev) :  00000BE2 00000083
              | + function block  :  0000000A 00000000
  05          l2capFreeChannel
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000012 00000002
              |  Already listed
  05          l2capNotifySignal
              | Stack used (prev) :  0000040C 0000005C
              | + function block  :  0000002D 00000000
              |  Already listed
  05          l2capParseParamUpdateRsp
              | Stack used (prev) :  00000BE2 00000083
              | + function block  :  0000000B 00000000
  05          l2capParseCmdReject
              | Stack used (prev) :  00000BE2 00000083
              | + function block  :  0000000C 00000000
  04        l2capProcessRsp
            | Stack used (prev) :  00000BEE 00000083
            | + function block  :  00000054 00000000
  04        L2CAP_CmdReject
            | Stack used (prev) :  0000095D 00000076
            | + function block  :  0000001C 00000000
            |  Already listed
  03      l2capProcessSignal
          | Stack used (prev) :  00000C4B 00000084
          | + function block  :  00000040 00000000
  03      L2CAP_HostNumCompletedPkts
          | Stack used (prev) :  00000A11 0000007B
          | + function block  :  00000008 00000004
          |  Already listed
  02    l2capProcessRxData
        | Stack used (prev) :  00000C8B 00000084
        | + function block  :  0000002C 00000000
  01  L2CAP_ProcessEvent
      | Stack used (prev) :  00000CB7 00000084
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCF 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCF 00000084
  01  L2CAP_Init::?relay
      | Stack used (prev) :  00000CCF 00000084
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCF 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCF 00000084
  01  L2CAP_ProcessEvent::?relay
      | Stack used (prev) :  00000CCF 00000084
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCF 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCF 00000084
  01  l2capProcessRxData::?relay
      | Stack used (prev) :  00000CCF 00000084
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCF 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCF 00000084
  01  l2capProcessSignal::?relay
      | Stack used (prev) :  00000CCF 00000084
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCF 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCF 00000084
  01  l2capProcessRsp::?relay
      | Stack used (prev) :  00000CCF 00000084
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCF 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCF 00000084
  01  l2capProcessReq::?relay
      | Stack used (prev) :  00000CCF 00000084
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCF 00000084


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCF 00000084
  01  L2CAP_BuildCmdReject
      | Stack used (prev) :  00000CCF 00000084
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CDB 00000085


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CDB 00000085
  01  l2capBuildParamUpdateReq
      | Stack used (prev) :  00000CDB 00000085
      | + function block  :  00000009 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capParseSignalHdr::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capSendReq::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capSendCmd::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capEncapSendData::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capParsePacket::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  L2CAP_BuildCmdReject::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capParseCmdReject::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capBuildParamUpdateReq::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  L2CAP_ParseParamUpdateReq::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capParseParamUpdateRsp::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capNotifyData::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capNotifySignal::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capAllocChannel::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capFreeChannel::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capFindLocalId::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capStopTimer::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capHandleTimerCB::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  l2capHandleRxError::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  L2CAP_bm_alloc::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  linkDB_Init::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  linkDB_Register::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  linkDB_Add::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  linkDB_Remove::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  linkDB_Find::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  linkDB_FindFirst::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  linkDB_State::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  linkDB_NumActive::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  linkDB_Authen::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  linkDB_PerformFunc::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  01  reportStatusChange::?relay
      | Stack used (prev) :  00000CE4 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CE4 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CE4 00000086
  02    Onboard_soft_reset
        | Stack used (prev) :  00000CE4 00000086
        | + function block  :  00000000 00000000
  02    osal_start_timerEx
        | Stack used (prev) :  0000004A 00000002
        | + function block  :  00000024 00000000
        |  Already listed
  02    osal_pwrmgr_task_state
        | Stack used (prev) :  000003CC 00000052
        | + function block  :  0000000A 00000000
        |  Already listed
  02    osal_pwrmgr_device
        | Stack used (prev) :  00000CE4 00000086
        | + function block  :  00000000 00000002
  02    llConnTerminate
        | Stack used (prev) :  0000015A 0000000E
        | + function block  :  00000012 00000000
        |  Already listed
  03      osal_msg_send
          | Stack used (prev) :  00000032 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    LL_ConnectionCompleteCback
        | Stack used (prev) :  00000CE4 00000086
        | + function block  :  00000023 00000001
  01  LL_ProcessEvent
      | Stack used (prev) :  00000D07 00000088
      | + function block  :  0000002A 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_Init::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_ProcessEvent::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_TX_bm_alloc::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_RX_bm_alloc::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_Reset::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_ReadBDADDR::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_SetRandomAddress::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_ClearWhiteList::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_AddWhiteListDevice::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_Encrypt::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_Rand::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_PseudoRand::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_CtrlToHostFlowControl::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_ReadRssi::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_Disconnect::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_TxData::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_SetAdvParam::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_SetAdvData::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_SetAdvControl::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_SetScanRspData::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_EncLtkReply::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  01  LL_EncLtkNegReply::?relay
      | Stack used (prev) :  00000D31 00000088
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D31 00000088


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D31 00000088
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    llDisableT2IntsEvts
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
        |  Already listed
  02    llGetTaskState
        | Stack used (prev) :  00000D31 00000088
        | + function block  :  00000000 00000002
  02    llFreeTask
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  01  llDirectedAdvEvt_TaskEndOk
      | Stack used (prev) :  00000D31 0000008A
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D51 0000008A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D51 0000008A
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    PHY_DeallocateRxFifo
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
        |  Already listed
  02    PHY_ConfigureAppendRfStatus
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_SetMaxNack
        | Stack used (prev) :  00000D51 0000008A
        | + function block  :  00000000 00000002
  02    PHY_SetSyncWord
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000010 00000000
        |  Already listed
  02    PHY_InitSeqStat
        | Stack used (prev) :  00000D51 0000008A
        | + function block  :  00000000 00000002
  02    PHY_SetDataChan
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_SetCRCInit
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000010 00000000
        |  Already listed
  03      llDivide31By16To16
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000000
          |  Already listed
  02    llCalcTimerDrift
        | Stack used (prev) :  00000D51 0000008A
        | + function block  :  00000017 00000000
  03      llDivide31By16To16
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000000
          |  Already listed
  02    llCalcScaFactor
        | Stack used (prev) :  00000D51 0000008A
        | + function block  :  0000000D 00000000
  02    llAdjustTimeBackward
        | Stack used (prev) :  00000D51 0000008A
        | + function block  :  0000000B 00000000
  02    llGetTimer2Capture
        | Stack used (prev) :  00000D51 0000008A
        | + function block  :  00000000 00000003
  02    llGetTaskState
        | Stack used (prev) :  00000D31 00000088
        | + function block  :  00000000 00000002
        |  Already listed
  02    llFreeTask
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    llAllocTask
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000A 00000001
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  02    llConvertCtrlProcTimeoutToEvent
        | Stack used (prev) :  00000D51 0000008A
        | + function block  :  0000000A 00000000
  02    llConvertLstoToEvent
        | Stack used (prev) :  00000D51 0000008A
        | + function block  :  0000000A 00000000
  02    llConnCleanup
        | Stack used (prev) :  0000001E 00000002
        | + function block  :  00000025 00000000
        |  Already listed
  02    llAllocConnId
        | Stack used (prev) :  00000D51 0000008A
        | + function block  :  00000009 00000001
  02    llProcessChanMap
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000018 00000001
        |  Already listed
  02    llGetNextDataChan
        | Stack used (prev) :  00000D51 0000008A
        | + function block  :  0000000B 00000001
  01  llAdvEvt_TaskConnect
      | Stack used (prev) :  00000D68 0000008D
      | + function block  :  00000034 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D9C 0000008D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D9C 0000008D
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    PHY_SetAdvChans
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_GetAdvChans
        | Stack used (prev) :  00000D9C 0000008D
        | + function block  :  00000000 00000002
  02    llGetTaskState
        | Stack used (prev) :  00000D31 00000088
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  01  llUndirectedAdvEvt_TaskEndOk
      | Stack used (prev) :  00000D9C 0000008F
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DBC 0000008F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DBC 0000008F
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    PHY_SetAdvChans
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_GetAdvChans
        | Stack used (prev) :  00000D9C 0000008D
        | + function block  :  00000000 00000002
        |  Already listed
  02    llGetTaskState
        | Stack used (prev) :  00000D31 00000088
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  01  llDiscoverableAdvEvt_TaskEndOk
      | Stack used (prev) :  00000DBC 0000008F
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DCC 0000008F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DCC 0000008F
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    PHY_SetAdvChans
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_GetAdvChans
        | Stack used (prev) :  00000D9C 0000008D
        | + function block  :  00000000 00000002
        |  Already listed
  02    llGetTaskState
        | Stack used (prev) :  00000D31 00000088
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  01  llNonConnAdvEvt_TaskEndOk
      | Stack used (prev) :  00000DCC 0000008F
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DDC 0000008F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DDC 0000008F
  02    llGetTaskState
        | Stack used (prev) :  00000D31 00000088
        | + function block  :  00000000 00000002
        |  Already listed
  02    llFreeTask
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  01  llAdvEvt_TaskAbort
      | Stack used (prev) :  00000DDC 0000008F
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DDC 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DDC 00000091
  01  llDirectedAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000DDC 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DDC 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DDC 00000091
  01  llAdvEvt_TaskConnect::?relay
      | Stack used (prev) :  00000DDC 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DDC 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DDC 00000091
  01  llUndirectedAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000DDC 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DDC 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DDC 00000091
  01  llDiscoverableAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000DDC 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DDC 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DDC 00000091
  01  llNonConnAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000DDC 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DDC 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DDC 00000091
  01  llAdvEvt_TaskAbort::?relay
      | Stack used (prev) :  00000DDC 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DDC 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DDC 00000091
  01  llStartSlaveSetup
      | Stack used (prev) :  00000DDC 00000091
      | + function block  :  00000009 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llRfInit::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetFreqTune::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llClearSetInts::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llProcessPostRfOps::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llFindTxPowerSettings::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llExtendRfRange::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llCheckWhiteListUsage::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupAdv::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupDirectedAdvEvt::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupUndirectedAdvEvt::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupNonConnectableAdvEvt::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupScannableAdvEvt::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llStartAdvSetup::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llStartSlaveSetup::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupEncRsp::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupStartEncReq::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupStartEncRsp::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupPauseEncRsp::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupRejectInd::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupFeatureSetRsp::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupVersionIndReq::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupTermInd::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSetupUnknownRsp::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llEnqueueCtrlPkt::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llDequeueCtrlPkt::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llReplaceCtrlPkt::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llProcessChanMap::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llAllocConnId::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llReleaseAllConnId::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llGetNextConn::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llConnCleanup::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llConnTerminate::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llInitFeatureSet::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llConvertLstoToEvent::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llConvertCtrlProcTimeoutToEvent::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llAdjustForMissedEvent::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llWriteTxData::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llEnqueueDataQ::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llMemCopySrc::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_ReverseBytes::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_GeneratePseudoRandNum::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_GenerateTrueRandNum::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_GenDeviceSKD::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_GenDeviceIV::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_AES128_Encrypt::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_InitAesDMA::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_MoveData::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_LoadEmptyIV::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_EncryptMsg::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_DecryptMsg::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_GenerateMIC::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_Encrypt::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  LL_ENC_Decrypt::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llUnexpectedEndCauseHandler
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llUnexpectedEndCauseHandler::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSchedulerInit::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llScheduler::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llScheduleTask::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llFindNextSecTask::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llAllocTask::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llFreeTask::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llGetCurrentTask::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llGetTaskState::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llGetActiveTasks::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llGetNumTasks::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSave_txFIFO::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llSave_rxFIFO::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  01  llRestoreConnState::?relay
      | Stack used (prev) :  00000DE5 00000091
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DE5 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DE5 00000091
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    llGetTimer2Capture
        | Stack used (prev) :  00000D51 0000008A
        | + function block  :  00000000 00000003
        |  Already listed
  03      LL_ENC_AES128_Encrypt
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000002 00000002
          |  Already listed
  03      llConnTerminate
          | Stack used (prev) :  0000015A 0000000E
          | + function block  :  00000012 00000000
          |  Already listed
  03      llReplaceCtrlPkt
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000003
          |  Already listed
  03      llDequeueCtrlPkt
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  0000000A 00000001
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupUnknownRsp
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  0000000C 00000000
  04        PHY_SetMaxNack
            | Stack used (prev) :  00000D51 0000008A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupTermInd
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  0000000C 00000000
  04        PHY_SetMaxNack
            | Stack used (prev) :  00000D51 0000008A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupVersionIndReq
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  0000000C 00000000
  04        PHY_SetMaxNack
            | Stack used (prev) :  00000D51 0000008A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupFeatureSetRsp
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  0000000C 00000001
  04        PHY_SetMaxNack
            | Stack used (prev) :  00000D51 0000008A
            | + function block  :  00000000 00000002
            |  Already listed
  03      llSetupRejectInd
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  00000009 00000000
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupPauseEncRsp
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  0000000C 00000000
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000000A1 00000002
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupStartEncRsp
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  0000000C 00000000
  03      llSetupStartEncReq
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  00000000 00000002
  04        LL_ENC_ReverseBytes
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000001
            |  Already listed
  03      llSetupEncRsp
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  00000009 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_EncKeyRefreshCback
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  0000000C 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_EncChangeCback
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  0000000C 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        LL_EncLtkNegReply
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000000 00000002
            |  Already listed
  03      LL_EncLtkReqCback
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  00000018 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_ReadRemoteVersionInfoCback
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  00000010 00000001
  02    llProcessSlaveControlProcedures
        | Stack used (prev) :  00000DFD 00000093
        | + function block  :  00000024 00000000
  03      PHY_SetEndConnection
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000000 00000002
          |  Already listed
  03      llCalcTimerDrift
          | Stack used (prev) :  00000D51 0000008A
          | + function block  :  00000017 00000000
          |  Already listed
  03      llAdjustTimeBackward
          | Stack used (prev) :  00000D51 0000008A
          | + function block  :  0000000B 00000000
          |  Already listed
  04        ll24BitTimeCompare
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000017 00000000
            |  Already listed
  04        llGetCurrentTime
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000004 00000003
            |  Already listed
  03      llAdjustForMissedEvent
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  0000001C 00000002
  03      llConvertCtrlProcTimeoutToEvent
          | Stack used (prev) :  00000D51 0000008A
          | + function block  :  0000000A 00000000
          |  Already listed
  03      llConvertLstoToEvent
          | Stack used (prev) :  00000D51 0000008A
          | + function block  :  0000000A 00000000
          |  Already listed
  03      llConnTerminate
          | Stack used (prev) :  0000015A 0000000E
          | + function block  :  00000012 00000000
          |  Already listed
  03      llEventDelta
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  00000000 00000000
  03      llEventInRange
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  00000002 00000002
  03      llSetNextDataChan
          | Stack used (prev) :  0000040A 0000005A
          | + function block  :  00000016 00000002
          |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_ConnParamUpdateCback
          | Stack used (prev) :  00000DE5 00000091
          | + function block  :  00000014 00000001
  02    llSetupNextSlaveEvent
        | Stack used (prev) :  00000E01 00000091
        | + function block  :  0000003C 00000002
  02    llScheduler
        | Stack used (prev) :  00000126 0000000E
        | + function block  :  00000034 00000000
        |  Already listed
  02    llConnTerminate
        | Stack used (prev) :  0000015A 0000000E
        | + function block  :  00000012 00000000
        |  Already listed
  02    llProcessTxData
        | Stack used (prev) :  00000104 00000006
        | + function block  :  00000022 00000000
        |  Already listed
  02    llProcessRxData
        | Stack used (prev) :  00000194 0000000E
        | + function block  :  00000022 00000000
        |  Already listed
  01  llSlaveEvt_TaskEndOk
      | Stack used (prev) :  00000E3D 00000093
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llSlaveEvt_TaskAbort
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llSlaveEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llSlaveEvt_TaskAbort::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llSetupNextSlaveEvent::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llProcessSlaveControlPacket::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llProcessSlaveControlProcedures::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llInitTimer2::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llStopTimer2::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llStartTimer2::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llSetT2LongC1Timeout::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llSetT2C1Event1::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llSetT2LongC1Event1::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llSetT2OVFC2Event2::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llDisableT2Ints::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llDisableT2IntsEvts::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llDisableT2E1::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llGetTimer2Capture::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llGetCurrentTime::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  llGetFullCTandST::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  ll_McuPrecisionCount::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_Init::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_Reset::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_ClearAllRegsAndFifos::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_SetOwnAddr::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_SetPeerAddr::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_SetCRCInit::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_GetAdvChans::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_SetAdvChans::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_SetEndConnection::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_ConfigureMD::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_GetEndCause::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_InitSeqStat::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_SetSyncWord::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_SetMaxNack::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_ClearWhitelist::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_AddWlEntry::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_SetAdvWlPolicy::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_SetBlacklistIndex::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_ClearBlacklistIndex::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_ClearBlacklist::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_ClearSavedWhiteList::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_ConfigureFifoDataProcessing::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_ConfigureAppendRfStatus::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_SetFifoConfig::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_ConfigWhitener::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_RetryTxFifo::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_RetryRxFifo::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_CommitRxFifo::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_DeallocateRxFifo::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  PHY_SetRfFreq::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  phyFindWlEntry::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  SM_CalcRandomAddr::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  SM_ResolveRandomAddrs::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  SM_GenerateAuthenSig::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  SM_VerifyAuthenSig::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  smProcessRandComplete::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  smStartRspTimer::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  smStopRspTimer::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  sm_ah::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  sm_c1new::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  sm_xor::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  sm_s1::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  smGenerateRandBuf::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  smAuthReqToUint8::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  smUint8ToAuthReq::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  smEncrypt::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  sm_CMAC::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  generate_subkey::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  xor_128::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  01  leftshift_onebit::?relay
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E55 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E55 00000093
  02    smFreePairingParams
        | Stack used (prev) :  000003F2 0000005C
        | + function block  :  00000012 00000004
        |  Already listed
  01  smLinkCheck
      | Stack used (prev) :  00000E55 00000093
      | + function block  :  00000009 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  SM_StartPairing::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  SM_PasskeyUpdate::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smRegisterResponder::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smLinkCheck::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smTimedOut::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smProcessDataMsg::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smSendFailAndEnd::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smProcessEncryptChange::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smNextPairingState::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  sm_c1::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smProcessPairingReq::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smStartEncryption::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smGeneratePairingReqRsp::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smGenerateConfirm::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smGenerateRandMsg::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smSavePairInfo::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smPairingSendEncInfo::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smPairingSendMasterID::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smPairingSendIdentityInfo::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smPairingSendIdentityAddrInfo::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smPairingSendSingingInfo::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smFreePairingParams::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smEndPairing::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smDetermineKeySize::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smSetPairingReqRsp::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  SM_ResponderInit::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smResponderProcessLTKReq::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smpResponderProcessIncoming::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smpResponderProcessPairingReq::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smpResponderProcessPairingRandom::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smpResponderProcessMasterID::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  01  smResponderSendNextKeyInfo::?relay
      | Stack used (prev) :  00000E5E 00000093
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E5E 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E5E 00000093
  02    osal_msg_receive
        | Stack used (prev) :  0000094E 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_send
        | Stack used (prev) :  00000032 00000006
        | + function block  :  00000012 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      osal_bm_free
          | Stack used (prev) :  0000000A 00000002
          | + function block  :  00000014 00000000
          |  Already listed
  04        smEndPairing
            | Stack used (prev) :  0000048A 00000060
            | + function block  :  0000002E 00000000
            |  Already listed
  04        smEndPairing
            | Stack used (prev) :  0000048A 00000060
            | + function block  :  0000002E 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000032 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  05          GAP_GetParamValue
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        gapSendBondCompleteEvent
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  00000010 00000001
  03      smProcessEncryptChange
          | Stack used (prev) :  00000E6E 00000094
          | + function block  :  00000018 00000000
  05          smUint8ToAuthReq
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000000
              |  Already listed
  04        smpParseSecurityReq
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  00000000 00000002
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseSigningInfo
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseIdentityAddrInfo
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  0000000C 00000001
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseIdentityInfo
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseMasterID
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseEncInfo
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  0000000C 00000000
  04        smpParsePairingFailed
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  00000000 00000003
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParsePairingRandom
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParsePairingConfirm
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  0000000C 00000000
  05          smUint8ToAuthReq
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000000
              |  Already listed
  05          GAP_GetParamValue
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        smpParsePairingReq
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  00000013 00000001
  05          smSendSMMsg
              | Stack used (prev) :  000004AF 0000005E
              | + function block  :  00000028 00000000
              |  Already listed
  05          smEndPairing
              | Stack used (prev) :  0000048A 00000060
              | + function block  :  0000002E 00000000
              |  Already listed
  04        smSendFailAndEnd
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  0000002B 00000000
  04        smStartRspTimer
            | Stack used (prev) :  00000406 0000005C
            | + function block  :  0000001C 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      smProcessDataMsg
          | Stack used (prev) :  00000E89 00000096
          | + function block  :  0000003E 00000000
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000032 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  06            llGetCurrentTask
                | Stack used (prev) :  000001B6 00000032
                | + function block  :  00000000 00000002
                |  Already listed
  06            LL_ENC_GenerateTrueRandNum
                | Stack used (prev) :  00000000 00000006
                | + function block  :  00000016 00000000
                |  Already listed
  05          LL_Rand
              | Stack used (prev) :  00000E5E 00000093
              | + function block  :  0000000C 00000000
  05          HCI_CommandCompleteEvent
              | Stack used (prev) :  00000074 00000006
              | + function block  :  0000002B 00000000
              |  Already listed
  04        HCI_LE_RandCmd
            | Stack used (prev) :  00000E6A 00000093
            | + function block  :  00000012 00000004
  03      smProcessRandComplete
          | Stack used (prev) :  00000E7C 00000097
          | + function block  :  00000018 00000000
  02    smProcessOSALMsg
        | Stack used (prev) :  00000EC7 00000097
        | + function block  :  0000001E 00000000
  03      smEndPairing
          | Stack used (prev) :  0000048A 00000060
          | + function block  :  0000002E 00000000
          |  Already listed
  02    smNextPairingState
        | Stack used (prev) :  00000E5E 00000093
        | + function block  :  00000000 00000002
  03      smEndPairing
          | Stack used (prev) :  0000048A 00000060
          | + function block  :  0000002E 00000000
          |  Already listed
  02    smTimedOut
        | Stack used (prev) :  00000E5E 00000093
        | + function block  :  00000000 00000002
  01  SM_ProcessEvent
      | Stack used (prev) :  00000EE5 00000097
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000EFD 00000097


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000EFD 00000097
  01  SM_Init::?relay
      | Stack used (prev) :  00000EFD 00000097
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000EFD 00000097


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000EFD 00000097
  01  SM_ProcessEvent::?relay
      | Stack used (prev) :  00000EFD 00000097
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000EFD 00000097


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000EFD 00000097
  01  smProcessOSALMsg::?relay
      | Stack used (prev) :  00000EFD 00000097
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000EFD 00000097


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000EFD 00000097
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildPairingConfirm
      | Stack used (prev) :  00000EFD 00000097
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F09 00000097


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F09 00000097
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildPairingRandom
      | Stack used (prev) :  00000F09 00000097
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F15 00000097


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F15 00000097
  01  smpBuildPairingFailed
      | Stack used (prev) :  00000F15 00000097
      | + function block  :  00000000 00000003
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F15 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F15 0000009A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildEncInfo
      | Stack used (prev) :  00000F15 0000009A
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F21 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F21 0000009A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildMasterID
      | Stack used (prev) :  00000F21 0000009A
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F2D 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F2D 0000009B
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildIdentityInfo
      | Stack used (prev) :  00000F2D 0000009B
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F39 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F39 0000009B
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildIdentityAddrInfo
      | Stack used (prev) :  00000F39 0000009B
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F45 0000009C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F45 0000009C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildSigningInfo
      | Stack used (prev) :  00000F45 0000009C
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F51 0000009C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F51 0000009C
  02    smAuthReqToUint8
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000000 00000002
        |  Already listed
  01  smpBuildSecurityReq
      | Stack used (prev) :  00000F51 0000009C
      | + function block  :  00000009 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpBuildPairingReq::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpBuildPairingRsp::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpBuildPairingReqRsp::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpParsePairingReq::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpBuildPairingConfirm::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpParsePairingConfirm::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpBuildPairingRandom::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpParsePairingRandom::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpBuildPairingFailed::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpParsePairingFailed::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpBuildEncInfo::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpParseEncInfo::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpBuildMasterID::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpParseMasterID::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpBuildIdentityInfo::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpBuildIdentityAddrInfo::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpParseIdentityInfo::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpParseIdentityAddrInfo::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpBuildSigningInfo::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpParseSigningInfo::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpBuildSecurityReq::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smpParseSecurityReq::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  01  smSendSMMsg::?relay
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F5A 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F5A 0000009D
  02    osal_bm_free
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000014 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  0000094E 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  01  HCI_ProcessEvent
      | Stack used (prev) :  00000F5A 0000009D
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  HCI_Init::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  HCI_ProcessEvent::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  HCI_GAPTaskRegister::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  HCI_L2CAPTaskRegister::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  HCI_SMPTaskRegister::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_strlen::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_memcpy::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_revmemcpy::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_memdup::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_memcmp::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_memset::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  _ltoa::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_rand::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_msg_allocate::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_msg_deallocate::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_msg_send::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_msg_enqueue_push::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_msg_receive::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_msg_enqueue::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_msg_push::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_msg_extract::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_set_event::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_clear_event::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_int_disable::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_init_system::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_start_system::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_run_system::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_isbufset::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osalTimeUpdate::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_mem_init::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_mem_kick::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_mem_alloc::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_mem_free::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_pwrmgr_init::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_pwrmgr_device::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_pwrmgr_task_state::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_pwrmgr_powerconserve::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osalInitTasks::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osalTimerInit::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osalAddTimer::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osalFindTimer::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osalDeleteTimer::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_start_timerEx::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_start_reload_timer::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_stop_timerEx::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_get_timeoutEx::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osalTimerUpdate::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_next_timeout::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  osal_GetSystemClock::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  InitBoard::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  Onboard_rand::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  _itoa::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  RegisterForKeys::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  OnBoard_SendKeys::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  OnBoard_KeyCallback::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  xnvSPIWrite::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  HalSPIRead::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  HalSPIWrite::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  SbpHalUART_Init::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  SbpHalUARTInit::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  studyCompletedAndBroadcastData::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  SbpHalUARTReadCallback::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  SbpHalUARTRead::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  delay_nus::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  getTemperature::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  set_de_passkey::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  set_new_passkey::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  set_passkey::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  atoi::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  set_code_name::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  Batt_AddService::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  battReadAttrCB::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  battWriteAttrCB::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  battMeasure::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  DevInfo_AddService::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  DevInfo_SetParameter::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  devInfo_ReadAttrCB::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  01  GAP_DeviceInit::?relay
      | Stack used (prev) :  00000F66 0000009D
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F66 0000009D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F66 0000009D
  02    gapBondFreeAuthEvt
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  00000042 00000002
        |  Already listed
  05          osal_snv_read
              | Stack used (prev) :  00000442 0000005B
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_snv_write
              | Stack used (prev) :  0000050B 0000005C
              | + function block  :  00000022 00000000
              |  Already listed
  05          gapBondMgrInvertCharCfgItem
              | Stack used (prev) :  00000F66 0000009D
              | + function block  :  0000004D 00000001
  05          gapBondMgrInvertCharCfgItem
              | Stack used (prev) :  00000F66 0000009D
              | + function block  :  0000004D 00000001
              |  Already listed
  05          gapBondMgrFindCharCfgItem
              | Stack used (prev) :  00000F66 0000009D
              | + function block  :  00000031 00000000
  05          gapBondMgrFindCharCfgItem
              | Stack used (prev) :  00000F66 0000009D
              | + function block  :  00000031 00000000
              |  Already listed
  05          osal_isbufset
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  04        gapBondMgrUpdateCharCfg
            | Stack used (prev) :  00000FB3 0000009D
            | + function block  :  0000005E 00000001
  04        gapBondMgrUpdateCharCfg
            | Stack used (prev) :  00000FB3 0000009D
            | + function block  :  0000005E 00000001
            |  Already listed
  04        GAPBondMgr_ResolveAddr
            | Stack used (prev) :  00000588 00000060
            | + function block  :  00000064 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      GAPBondMgr_UpdateCharCfg
          | Stack used (prev) :  00001011 0000009E
          | + function block  :  0000002B 00000000
  03      GATTServApp_ReadAttr
          | Stack used (prev) :  000004EC 0000005C
          | + function block  :  0000007B 00000000
          |  Already listed
  03      GATT_FindNextAttr
          | Stack used (prev) :  000004B8 0000005C
          | + function block  :  00000034 00000000
          |  Already listed
  03      GATT_FindHandleUUID
          | Stack used (prev) :  00000458 0000005B
          | + function block  :  00000060 00000000
          |  Already listed
  02    gapBondMgr_SyncCharCfg
        | Stack used (prev) :  0000103C 0000009E
        | + function block  :  0000002A 00000000
  03      osal_snv_write
          | Stack used (prev) :  0000050B 0000005C
          | + function block  :  00000022 00000000
          |  Already listed
  03      gapBondMgr_SyncWhiteList
          | Stack used (prev) :  00000447 00000064
          | + function block  :  0000002C 00000000
          |  Already listed
  03      gapBondSetupPrivFlag
          | Stack used (prev) :  00000428 0000005C
          | + function block  :  0000001C 00000004
          |  Already listed
  03      gapBondMgrFindAddr
          | Stack used (prev) :  000003FF 0000005A
          | + function block  :  00000036 00000000
          |  Already listed
  03      osal_isbufset
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000A 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    gapBondMgrAddBond
        | Stack used (prev) :  00000F66 0000009D
        | + function block  :  00000040 00000000
  03      osal_snv_compact
          | Stack used (prev) :  0000050B 0000005C
          | + function block  :  00000028 00000000
          |  Already listed
  03      osal_snv_write
          | Stack used (prev) :  0000050B 0000005C
          | + function block  :  00000022 00000000
          |  Already listed
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  06            smSendFailAndEnd
                | Stack used (prev) :  00000E5E 00000093
                | + function block  :  0000002B 00000000
                |  Already listed
  06            smUint8ToAuthReq
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000A 00000000
                |  Already listed
  05          smProcessPairingReq
              | Stack used (prev) :  00000F66 0000009D
              | + function block  :  00000013 00000002
  06            osal_mem_alloc
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  06            smFreePairingParams
                | Stack used (prev) :  000003F2 0000005C
                | + function block  :  00000012 00000004
                |  Already listed
  06            smGeneratePairingReqRsp
                | Stack used (prev) :  000004D7 0000005E
                | + function block  :  00000038 00000000
                |  Already listed
  06            GAP_GetParamValue
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000014 00000002
                |  Already listed
  05          SM_StartPairing
              | Stack used (prev) :  00000F66 0000009D
              | + function block  :  00000014 00000001
  05          linkDB_Find
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  05          gapFreeAuthLink
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  00000014 00000002
              |  Already listed
  04        GAP_Authenticate
            | Stack used (prev) :  00000F7A 0000009F
            | + function block  :  00000020 00000000
  03      gapBondMgrAuthenticate
          | Stack used (prev) :  00000F9A 0000009F
          | + function block  :  00000070 00000000
  03      gapBondMgrEraseBonding
          | Stack used (prev) :  0000052D 0000005C
          | + function block  :  000000A8 00000000
          |  Already listed
  03      gapBondMgrEraseAllBondings
          | Stack used (prev) :  000005D5 0000005C
          | + function block  :  00000036 00000000
          |  Already listed
  03      gapBondMgrReadBonds
          | Stack used (prev) :  00000473 00000064
          | + function block  :  00000036 00000000
          |  Already listed
  03      gapBondMgrAddBond
          | Stack used (prev) :  00000F66 0000009D
          | + function block  :  00000040 00000000
          |  Already listed
  03      GAPBondMgr_ResolveAddr
          | Stack used (prev) :  00000588 00000060
          | + function block  :  00000064 00000000
          |  Already listed
  03      GAPBondMgr_ResolveAddr
          | Stack used (prev) :  00000588 00000060
          | + function block  :  00000064 00000000
          |  Already listed
  03      osal_set_event
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000017 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  000003F4 0000005C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      linkDB_Find
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  03      GAP_NumActiveConnections
          | Stack used (prev) :  000003F2 0000005C
          | + function block  :  00000000 00000004
          |  Already listed
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          smGenerateConfirm
              | Stack used (prev) :  000004D7 0000005E
              | + function block  :  00000042 00000000
              |  Already listed
  05          sm_c1
              | Stack used (prev) :  00000569 00000060
              | + function block  :  00000080 00000000
              |  Already listed
  05          smGenerateRandBuf
              | Stack used (prev) :  0000040A 00000064
              | + function block  :  00000027 00000000
              |  Already listed
  04        SM_PasskeyUpdate
            | Stack used (prev) :  00000F66 0000009D
            | + function block  :  0000000C 00000000
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      GAP_PasscodeUpdate
          | Stack used (prev) :  00000F72 0000009D
          | + function block  :  00000056 00000001
  04        smSendFailAndEnd
            | Stack used (prev) :  00000E5E 00000093
            | + function block  :  0000002B 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      GAP_TerminateAuth
          | Stack used (prev) :  00000F66 0000009D
          | + function block  :  0000000D 00000001
  02    GAPBondMgr_ProcessGAPMsg
        | Stack used (prev) :  0000100A 0000009F
        | + function block  :  00000054 00000000
  02    GAPBondMgr_UpdateCharCfg
        | Stack used (prev) :  00001011 0000009E
        | + function block  :  0000002B 00000000
        |  Already listed
  03      gapBondMgrSendServiceChange
          | Stack used (prev) :  00000661 0000005E
          | + function block  :  0000000C 00000004
          |  Already listed
  04        osal_snv_read
            | Stack used (prev) :  00000442 0000005B
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_snv_write
            | Stack used (prev) :  0000050B 0000005C
            | + function block  :  00000022 00000000
            |  Already listed
  04        osal_isbufset
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000A 00000000
            |  Already listed
  03      gapBondMgrChangeState
          | Stack used (prev) :  00000F66 0000009D
          | + function block  :  00000026 00000000
  03      gapBondMgrChangeState
          | Stack used (prev) :  00000F66 0000009D
          | + function block  :  00000026 00000000
          |  Already listed
  03      GAPBondMgr_ResolveAddr
          | Stack used (prev) :  00000588 00000060
          | + function block  :  00000064 00000000
          |  Already listed
  03      linkDB_PerformFunc
          | Stack used (prev) :  00000F66 0000009D
          | + function block  :  00000000 00000002
  03      linkDB_Find
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  02    GAPBondMgr_ServiceChangeInd
        | Stack used (prev) :  00000F8C 0000009F
        | + function block  :  00000024 00000000
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000017 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  0000094E 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  01  GAPBondMgr_ProcessEvent
      | Stack used (prev) :  00001066 0000009F
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  GAPBondMgr_SetParameter::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  GAPBondMgr_LinkEst::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  GAPBondMgr_ResolveAddr::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  GAPBondMgr_ServiceChangeInd::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  GAPBondMgr_UpdateCharCfg::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  GAPBondMgr_Register::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  GAPBondMgr_ProcessGAPMsg::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrChangeState::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrUpdateCharCfg::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrFindCharCfgItem::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrInvertCharCfgItem::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrAddBond::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrGetPublicAddr::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrFindAddr::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrResolvePrivateAddr::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrReadBonds::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrBondTotal::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrEraseAllBondings::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrEraseBonding::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  GAPBondMgr_Init::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  GAPBondMgr_ProcessEvent::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrSendServiceChange::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondSetupPrivFlag::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrAuthenticate::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgrBondReq::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgr_SyncWhiteList::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondMgr_SyncCharCfg::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  gapBondFreeAuthEvt::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  HalAdcInit::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  HalAdcRead::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  HalAdcSetReference::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  aesDmaInit::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  HalAesInit::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  01  HalDmaInit::?relay
      | Stack used (prev) :  0000107E 0000009F
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000107E 0000009F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000107E 0000009F
  02    halRestoreSleepLevel
        | Stack used (prev) :  0000107E 0000009F
        | + function block  :  00000000 00000000
  03      HalLedOnOff
          | Stack used (prev) :  0000107E 0000009F
          | + function block  :  00000019 00000002
  03      HalLedOnOff
          | Stack used (prev) :  0000107E 0000009F
          | + function block  :  00000019 00000002
          |  Already listed
  04        osal_GetSystemClock
            | Stack used (prev) :  0000107E 0000009F
            | + function block  :  00000000 00000002
  04        osal_stop_timerEx
            | Stack used (prev) :  000001C2 00000034
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_set_event
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000017 00000000
            |  Already listed
  04        HalLedOnOff
            | Stack used (prev) :  0000107E 0000009F
            | + function block  :  00000019 00000002
            |  Already listed
  03      Recursive system consisting of
           | HalLedBlink
           | HalLedSet
          | Stack used (prev) :  00001097 0000009F
          | + function block  :  0000003A 00000002
  03      osal_GetSystemClock
          | Stack used (prev) :  0000107E 0000009F
          | + function block  :  00000000 00000002
          |  Already listed
  03      osal_start_timerEx
          | Stack used (prev) :  0000004A 00000002
          | + function block  :  00000024 00000000
          |  Already listed
  02    HalLedUpdate
        | Stack used (prev) :  000010D1 000000A1
        | + function block  :  00000032 00000000
  04        HalAdcRead
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  0000000A 00000000
            |  Already listed
  03      halGetJoyKeyInput
          | Stack used (prev) :  0000107E 0000009F
          | + function block  :  00000012 00000000
  02    HalKeyPoll
        | Stack used (prev) :  00001090 0000009F
        | + function block  :  00000012 00000000
  02    osal_stop_timerEx
        | Stack used (prev) :  000001C2 00000034
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_start_timerEx
        | Stack used (prev) :  0000004A 00000002
        | + function block  :  00000024 00000000
        |  Already listed
  02    osal_pwrmgr_task_state
        | Stack used (prev) :  000003CC 00000052
        | + function block  :  0000000A 00000000
        |  Already listed
  02    osal_clear_event
        | Stack used (prev) :  000001B6 00000032
        | + function block  :  00000017 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  0000094E 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  01  Hal_ProcessEvent
      | Stack used (prev) :  00001103 000000A1
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  Hal_Init::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalDriverInit::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  Hal_ProcessEvent::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  Hal_ProcessPoll::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalDS1307ReadTimeData::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  showDate::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  hex2char::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalFlashRead::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalFlashWrite::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalFlashErase::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  i2cMstStrt::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalI2CInit::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalI2CRead::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalI2CWrite::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalKeyInit::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalKeyConfig::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalKeyRead::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalKeyPoll::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  halGetJoyKeyInput::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  halProcessKeyInterrupt::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalKeyEnterSleep::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalKeyExitSleep::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  set_ddram_line_col::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  DisplayByte_5x7::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLcdInit::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLcdWriteString::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLcdWriteStringValue::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLcd_HW_Init::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLcd_HW_Control::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLcd_HW_Write::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLcd_HW_Clear::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLcd_HW_WriteChar::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLcd_HW_WriteLine::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLcd_HW_WaitUs::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLedInit::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLedSet::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLedBlink::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLedUpdate::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLedOnOff::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLedEnterSleep::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalLedExitSleep::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalSensorReadReg::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  halSetSleepMode::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  halSleep::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  halSleepSetTimer::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  halSleepReadTimer::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  halRestoreSleepLevel::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalUARTInitDMA::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalUARTReadDMA::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalUARTPollDMA::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalUARTRxAvailDMA::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalUARTBusyDMA::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalUARTInit::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalUARTOpen::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalUARTRead::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalUARTPoll::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  Hal_UART_RxBufLen::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  HalUARTIsrDMA::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  osal_bm_alloc::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  osal_bm_free::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  osal_bm_adjust_header::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  bm_desc_from_payload::?relay
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001117 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001117 000000A1
  01  osal_CbTimerProcessEvent
      | Stack used (prev) :  00001117 000000A1
      | + function block  :  0000000F 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  osal_CbTimerInit::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  osal_CbTimerProcessEvent::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  osal_CbTimerStart::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  osal_CbTimerStop::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  initNV::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  setActivePage::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  setXferPage::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  erasePage::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  cleanErasedPage::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  findOffset::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  findItem::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  writeItem::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  compactPage::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  verifyWordM::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  writeWord::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  osal_snv_init::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  osal_snv_write::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  osal_snv_read::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  01  osal_snv_compact::?relay
      | Stack used (prev) :  00001126 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001126 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001126 000000A1
  04        osal_start_timerEx
            | Stack used (prev) :  0000004A 00000002
            | + function block  :  00000024 00000000
            |  Already listed
  06            osal_CbTimerStart
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000001B 00000001
                |  Already listed
  06            linkDB_State
                | Stack used (prev) :  00000406 0000005C
                | + function block  :  00000014 00000000
                |  Already listed
  06            l2capFreeChannel
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000012 00000002
                |  Already listed
  06            l2capAllocChannel
                | Stack used (prev) :  00001126 000000A1
                | + function block  :  0000001E 00000001
  06            l2capSendCmd
                | Stack used (prev) :  00000931 00000075
                | + function block  :  0000002C 00000001
                |  Already listed
  05          l2capSendReq
              | Stack used (prev) :  00001144 000000A1
              | + function block  :  00000028 00000001
  04        L2CAP_ConnParamUpdateReq
            | Stack used (prev) :  0000116C 000000A2
            | + function block  :  0000001C 00000000
  04        GAP_GetParamValue
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      gapRole_startConnUpdate
          | Stack used (prev) :  00001188 000000A1
          | + function block  :  0000003E 00000002
  03      osal_stop_timerEx
          | Stack used (prev) :  000001C2 00000034
          | + function block  :  00000018 00000000
          |  Already listed
  02    GAPRole_SendUpdateParam
        | Stack used (prev) :  000011C6 000000A3
        | + function block  :  00000032 00000000
  02    gapRole_startConnUpdate
        | Stack used (prev) :  00001188 000000A1
        | + function block  :  0000003E 00000002
        |  Already listed
  04        osal_snv_write
            | Stack used (prev) :  0000050B 0000005C
            | + function block  :  00000022 00000000
            |  Already listed
  04        GAPBondMgr_ProcessGAPMsg
            | Stack used (prev) :  0000100A 0000009F
            | + function block  :  00000054 00000000
            |  Already listed
  05          osal_snv_read
              | Stack used (prev) :  00000442 0000005B
              | + function block  :  00000018 00000000
              |  Already listed
  06            osal_snv_read
                | Stack used (prev) :  00000442 0000005B
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  07              osal_mem_free
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  0000000A 00000002
                  |  Already listed
  07              osal_memdup
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000010 00000000
                  |  Already listed
  07              smStartEncryption
                  | Stack used (prev) :  00001126 000000A1
                  | + function block  :  00000016 00000000
  07              linkDB_Find
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000014 00000002
                  |  Already listed
  06            GAP_Bond
                | Stack used (prev) :  0000113C 000000A1
                | + function block  :  00000029 00000000
  05          gapBondMgrBondReq
              | Stack used (prev) :  00001165 000000A1
              | + function block  :  00000097 00000000
  05          gapBondMgrInvertCharCfgItem
              | Stack used (prev) :  00000F66 0000009D
              | + function block  :  0000004D 00000001
              |  Already listed
  05          GAPBondMgr_ResolveAddr
              | Stack used (prev) :  00000588 00000060
              | + function block  :  00000064 00000000
              |  Already listed
  05          osal_isbufset
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          GATTServApp_SendServiceChangedInd
              | Stack used (prev) :  0000064F 0000005E
              | + function block  :  00000012 00000000
              |  Already listed
  06            GATTServApp_WriteAttr
                | Stack used (prev) :  00000B10 0000007F
                | + function block  :  00000034 00000000
                |  Already listed
  05          GATTServApp_UpdateCharCfg
              | Stack used (prev) :  00001126 000000A1
              | + function block  :  00000014 00000001
  06            smSendSMMsg
                | Stack used (prev) :  000004AF 0000005E
                | + function block  :  00000028 00000000
                |  Already listed
  06            smUint8ToAuthReq
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000A 00000000
                |  Already listed
  06            linkDB_Find
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000014 00000002
                |  Already listed
  05          GAP_SendSlaveSecurityRequest
              | Stack used (prev) :  00001126 000000A1
              | + function block  :  00000010 00000000
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  06            linkDB_Find
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000014 00000002
                |  Already listed
  05          GAP_Signable
              | Stack used (prev) :  00001126 000000A1
              | + function block  :  00000010 00000000
  04        GAPBondMgr_LinkEst
            | Stack used (prev) :  000011FC 000000A1
            | + function block  :  0000008B 00000002
  05          osalFindTimer
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000010 00000002
              |  Already listed
  04        osal_get_timeoutEx
            | Stack used (prev) :  00001126 000000A1
            | + function block  :  0000000E 00000000
  04        osal_stop_timerEx
            | Stack used (prev) :  000001C2 00000034
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_start_timerEx
            | Stack used (prev) :  0000004A 00000002
            | + function block  :  00000024 00000000
            |  Already listed
  04        osal_set_event
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000017 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  000003F4 0000005C
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GAP_EndDiscoverable
            | Stack used (prev) :  00000430 0000005C
            | + function block  :  0000001E 00000000
            |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  07              osal_memcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000019 00000001
                  |  Already listed
  06            LL_SetScanRspData
                | Stack used (prev) :  00001126 000000A1
                | + function block  :  0000000C 00000000
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000074 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_LE_SetScanRspDataCmd
              | Stack used (prev) :  00001132 000000A1
              | + function block  :  00000014 00000001
  07              osal_memcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000019 00000001
                  |  Already listed
  06            LL_SetAdvData
                | Stack used (prev) :  00001126 000000A1
                | + function block  :  0000000C 00000000
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000074 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_LE_SetAdvDataCmd
              | Stack used (prev) :  00001132 000000A1
              | + function block  :  00000014 00000001
  04        GAP_UpdateAdvertisingData
            | Stack used (prev) :  00001146 000000A1
            | + function block  :  00000024 00000001
  04        GAP_GetParamValue
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000014 00000002
            |  Already listed
  03      gapRole_ProcessGAPMsg
          | Stack used (prev) :  00001287 000000A3
          | + function block  :  00000036 00000000
  03      GAPRole_TerminateConnection
          | Stack used (prev) :  000004A2 0000005D
          | + function block  :  00000016 00000004
          |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000001C2 00000034
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_start_timerEx
          | Stack used (prev) :  0000004A 00000002
          | + function block  :  00000024 00000000
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  02    gapRole_ProcessOSALMsg
        | Stack used (prev) :  000012BD 000000A3
        | + function block  :  0000002E 00000000
  02    GAPRole_TerminateConnection
        | Stack used (prev) :  000004A2 0000005D
        | + function block  :  00000016 00000004
        |  Already listed
  02    osal_snv_write
        | Stack used (prev) :  0000050B 0000005C
        | + function block  :  00000022 00000000
        |  Already listed
  02    osal_start_timerEx
        | Stack used (prev) :  0000004A 00000002
        | + function block  :  00000024 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  0000094E 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  03      LL_ReadRssi
          | Stack used (prev) :  00001126 000000A1
          | + function block  :  00000000 00000003
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  00000074 00000006
          | + function block  :  0000002B 00000000
          |  Already listed
  02    HCI_ReadRssiCmd
        | Stack used (prev) :  00001126 000000A4
        | + function block  :  0000001A 00000000
  03      osal_start_reload_timer
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000016 00000000
          |  Already listed
  03      osal_mem_alloc
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      GAP_NumActiveConnections
          | Stack used (prev) :  000003F2 0000005C
          | + function block  :  00000000 00000004
          |  Already listed
  03      gapFreeAdvertState
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  03      gapSetAdvParams
          | Stack used (prev) :  00000458 00000060
          | + function block  :  00000028 00000000
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000014 00000002
          |  Already listed
  02    GAP_MakeDiscoverable
        | Stack used (prev) :  00001126 000000A1
        | + function block  :  00000010 00000001
  01  GAPRole_ProcessEvent
      | Stack used (prev) :  000012EB 000000A4
      | + function block  :  0000002C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001317 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001317 000000A4
  01  GAPRole_SetParameter::?relay
      | Stack used (prev) :  00001317 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001317 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001317 000000A4
  01  GAPRole_GetParameter::?relay
      | Stack used (prev) :  00001317 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001317 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001317 000000A4
  01  GAPRole_StartDevice::?relay
      | Stack used (prev) :  00001317 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001317 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001317 000000A4
  01  GAPRole_TerminateConnection::?relay
      | Stack used (prev) :  00001317 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001317 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001317 000000A4
  01  GAPRole_Init::?relay
      | Stack used (prev) :  00001317 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001317 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001317 000000A4
  01  GAPRole_ProcessEvent::?relay
      | Stack used (prev) :  00001317 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001317 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001317 000000A4
  01  gapRole_ProcessOSALMsg::?relay
      | Stack used (prev) :  00001317 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001317 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001317 000000A4
  01  gapRole_ProcessGAPMsg::?relay
      | Stack used (prev) :  00001317 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001317 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001317 000000A4
  01  gapRole_startConnUpdate::?relay
      | Stack used (prev) :  00001317 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001317 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001317 000000A4
  01  GAPRole_SendUpdateParam::?relay
      | Stack used (prev) :  00001317 000000A4
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001317 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001317 000000A4
  02    SimpleProfile_SetParameter
        | Stack used (prev) :  00000670 0000005E
        | + function block  :  00000022 00000000
        |  Already listed
  02    hex2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  000000DB 00000002
        |  Already listed
  02    hex2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  000000DB 00000002
        |  Already listed
  02    hex2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  000000DB 00000002
        |  Already listed
  02    hex2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  000000DB 00000002
        |  Already listed
  02    hex2Str
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  000000DB 00000002
        |  Already listed
  03      Recursive system consisting of
           | HalLedBlink
           | HalLedSet
          | Stack used (prev) :  00001097 0000009F
          | + function block  :  0000003A 00000002
          |  Already listed
  03      Recursive system consisting of
           | HalLcdWriteString
          | Stack used (prev) :  0000027A 0000004C
          | + function block  :  00000051 00000000
          |  Already listed
  03      delay_nus
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  0000000C 00000000
          |  Already listed
  02    simpleBLEPeripheral_HandleKeys
        | Stack used (prev) :  00001317 000000A4
        | + function block  :  00000017 00000000
  05          smRegisterResponder
              | Stack used (prev) :  00001317 000000A4
              | + function block  :  00000000 00000002
  04        SM_ResponderInit
            | Stack used (prev) :  00001317 000000A6
            | + function block  :  00000000 00000004
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  05          gapRegisterPeripheral
              | Stack used (prev) :  00001317 000000A4
              | + function block  :  00000000 00000002
  04        GAP_PeriDevMgrInit
            | Stack used (prev) :  00001317 000000A6
            | + function block  :  00000012 00000000
  05          osal_isbufset
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000A 00000000
              |  Already listed
  05          smGenerateRandBuf
              | Stack used (prev) :  0000040A 00000064
              | + function block  :  00000027 00000000
              |  Already listed
  04        GAP_SecParamsInit
            | Stack used (prev) :  00001317 000000A4
            | + function block  :  0000000B 00000000
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  06            LL_ReadBDADDR
                | Stack used (prev) :  00001317 000000A4
                | + function block  :  00000000 00000003
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000074 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_ReadBDADDRCmd
              | Stack used (prev) :  00001317 000000A7
              | + function block  :  0000000E 00000004
  04        GAP_ParamsInit
            | Stack used (prev) :  00001325 000000AB
            | + function block  :  00000012 00000000
  03      GAP_DeviceInit
          | Stack used (prev) :  00001337 000000AB
          | + function block  :  00000022 00000000
  02    GAPRole_StartDevice
        | Stack used (prev) :  00001359 000000AB
        | + function block  :  0000001C 00000000
  02    HalLcdWriteStringValue
        | Stack used (prev) :  0000047B 0000005C
        | + function block  :  00000057 00000000
        |  Already listed
  02    Recursive system consisting of
         | HalLcdWriteString
        | Stack used (prev) :  0000027A 0000004C
        | + function block  :  00000051 00000000
        |  Already listed
  03      GATTServApp_RegisterForMsg
          | Stack used (prev) :  00001317 000000A4
          | + function block  :  00000000 00000002
  03      GAP_SetParamValue
          | Stack used (prev) :  000003F2 0000005A
          | + function block  :  00000000 00000002
          |  Already listed
  02    GAPBondMgr_Register
        | Stack used (prev) :  00001317 000000A6
        | + function block  :  00000000 00000004
  02    delay_nus
        | Stack used (prev) :  000003F2 0000005A
        | + function block  :  0000000C 00000000
        |  Already listed
  02    HalSPIRead
        | Stack used (prev) :  00000406 0000005A
        | + function block  :  0000002C 00000001
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  0000094E 00000075
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  01  SimpleBLEPeripheral_ProcessEvent
      | Stack used (prev) :  00001375 000000AB
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  simpleBLEPeripheralPairStateCB::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  SimpleBLEPeripheral_Init::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  SimpleBLEPeripheral_ProcessEvent::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  simpleBLEPeripheral_HandleKeys::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  peripheralStateNotificationCB::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  simpleProfileChangeCB::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  bdAddr2Str::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  hex2Str::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  SimpleProfile_AddService::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  SimpleProfile_RegisterAppCBs::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  SimpleProfile_SetParameter::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  SimpleProfile_GetParameter::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  simpleProfile_ReadAttrCB::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  simpleProfile_WriteAttrCB::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  01  simpleProfile_HandleConnStatusCB::?relay
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  02    exit
        | Stack used (prev) :  00001391 000000AB
        | + function block  :  00000000 00000000
  01  ?cmain
      | Stack used (prev) :  00001391 000000AB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001391 000000AB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001391 000000AB
  02    __low_level_init
        | Stack used (prev) :  00001391 000000AB
        | + function block  :  00000000 00000000
  05          compactPage
              | Stack used (prev) :  000004BB 0000005C
              | + function block  :  00000050 00000000
              |  Already listed
  06            HalFlashRead
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000E 00000001
                |  Already listed
  05          findOffset
              | Stack used (prev) :  00001391 000000AB
              | + function block  :  00000022 00000000
  05          findOffset
              | Stack used (prev) :  00001391 000000AB
              | + function block  :  00000022 00000000
              |  Already listed
  06            erasePage
                | Stack used (prev) :  00000400 0000005C
                | + function block  :  0000003C 00000000
                |  Already listed
  06            HalFlashRead
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000E 00000001
                |  Already listed
  05          cleanErasedPage
              | Stack used (prev) :  00001391 000000AB
              | + function block  :  0000001F 00000000
  05          cleanErasedPage
              | Stack used (prev) :  00001391 000000AB
              | + function block  :  0000001F 00000000
              |  Already listed
  05          cleanErasedPage
              | Stack used (prev) :  00001391 000000AB
              | + function block  :  0000001F 00000000
              |  Already listed
  05          erasePage
              | Stack used (prev) :  00000400 0000005C
              | + function block  :  0000003C 00000000
              |  Already listed
  05          setActivePage
              | Stack used (prev) :  00000483 0000005B
              | + function block  :  00000038 00000000
              |  Already listed
  05          HalFlashRead
              | Stack used (prev) :  000003F2 0000005A
              | + function block  :  0000000E 00000001
              |  Already listed
  04        initNV
            | Stack used (prev) :  000013B3 000000AB
            | + function block  :  00000020 00000000
  03      osal_snv_init
          | Stack used (prev) :  000013D3 000000AB
          | + function block  :  00000000 00000004
  06            memset
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000002 00000002
                |  Already listed
  05          HalUARTInitDMA
              | Stack used (prev) :  00001391 000000AB
              | + function block  :  0000000D 00000001
  04        HalUARTInit
            | Stack used (prev) :  0000139E 000000AC
            | + function block  :  00000000 00000004
  05          Recursive system consisting of
               | HalLedBlink
               | HalLedSet
              | Stack used (prev) :  00001097 0000009F
              | + function block  :  0000003A 00000002
              |  Already listed
  04        HalLedInit
            | Stack used (prev) :  00001391 000000AB
            | + function block  :  00000000 00000002
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_WaitUs
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  07              HalLcd_HW_Write
                  | Stack used (prev) :  000001EA 00000046
                  | + function block  :  0000000D 00000000
                  |  Already listed
  07              set_ddram_line_col
                  | Stack used (prev) :  000001F3 00000046
                  | + function block  :  0000001F 00000000
                  |  Already listed
  06            HalLcd_HW_Clear
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000009 00000000
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  06            HalLcd_HW_Control
                | Stack used (prev) :  000001EA 00000046
                | + function block  :  00000009 00000000
                |  Already listed
  05          HalLcd_HW_Init
              | Stack used (prev) :  0000139A 000000AB
              | + function block  :  00000000 00000004
  04        HalLcdInit
            | Stack used (prev) :  0000139A 000000AF
            | + function block  :  00000000 00000004
  04        HalKeyInit
            | Stack used (prev) :  00001391 000000AB
            | + function block  :  00000000 00000002
  04        HalDmaInit
            | Stack used (prev) :  00001391 000000AB
            | + function block  :  00000000 00000000
  05          aesDmaInit
              | Stack used (prev) :  00001391 000000AB
              | + function block  :  00000000 00000002
  04        HalAesInit
            | Stack used (prev) :  00001391 000000AD
            | + function block  :  00000000 00000004
  04        HalAdcInit
            | Stack used (prev) :  00001391 000000AB
            | + function block  :  00000000 00000002
  03      HalDriverInit
          | Stack used (prev) :  0000139E 000000B3
          | + function block  :  00000000 00000004
  04        Recursive system consisting of
             | HalLedBlink
             | HalLedSet
            | Stack used (prev) :  00001097 0000009F
            | + function block  :  0000003A 00000002
            |  Already listed
  04        HalKeyConfig
            | Stack used (prev) :  000003F2 0000005A
            | + function block  :  00000009 00000000
            |  Already listed
  04        osal_int_disable
            | Stack used (prev) :  00001391 000000AB
            | + function block  :  00000000 00000000
  03      InitBoard
          | Stack used (prev) :  00001391 000000AB
          | + function block  :  00000012 00000000
  03      osal_pwrmgr_device
          | Stack used (prev) :  00000CE4 00000086
          | + function block  :  00000000 00000002
          |  Already listed
  09                  HalUARTRxAvailDMA
                      | Stack used (prev) :  000003F2 0000005A
                      | + function block  :  0000000A 00000002
                      |  Already listed
  08                HalUARTBusyDMA
                    | Stack used (prev) :  00001391 000000AB
                    | + function block  :  00000014 00000000
  08                HalUARTBusyDMA
                    | Stack used (prev) :  00001391 000000AB
                    | + function block  :  00000014 00000000
                    |  Already listed
  08                HalUARTRxAvailDMA
                    | Stack used (prev) :  000003F2 0000005A
                    | + function block  :  0000000A 00000002
                    |  Already listed
  08                osal_set_event
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000017 00000000
                    |  Already listed
  07              HalUARTPollDMA
                  | Stack used (prev) :  000013A5 000000AB
                  | + function block  :  00000014 00000000
  06            HalUARTPoll
                | Stack used (prev) :  000013B9 000000AB
                | + function block  :  00000000 00000004
  05          Hal_ProcessPoll
              | Stack used (prev) :  000013B9 000000AF
              | + function block  :  00000000 00000004
  07              halSleepReadTimer
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  0000001C 00000003
  07              halSleepSetTimer
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  0000002C 00000000
  07              halSleepSetTimer
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  0000002C 00000000
                  |  Already listed
  07              halSetSleepMode
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000018 00000000
  08                HalLedOnOff
                    | Stack used (prev) :  0000107E 0000009F
                    | + function block  :  00000019 00000002
                    |  Already listed
  08                HalLedUpdate
                    | Stack used (prev) :  000010D1 000000A1
                    | + function block  :  00000032 00000000
                    |  Already listed
  07              HalLedExitSleep
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  08                HalLedOnOff
                    | Stack used (prev) :  0000107E 0000009F
                    | + function block  :  00000019 00000002
                    |  Already listed
  07              HalLedEnterSleep
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  09                  halGetJoyKeyInput
                      | Stack used (prev) :  0000107E 0000009F
                      | + function block  :  00000012 00000000
                      |  Already listed
  08                HalKeyRead
                    | Stack used (prev) :  00001391 000000AB
                    | + function block  :  00000009 00000000
  07              HalKeyExitSleep
                  | Stack used (prev) :  0000139A 000000AB
                  | + function block  :  00000000 00000004
  07              HalKeyEnterSleep
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000000
  08                osal_pwrmgr_task_state
                    | Stack used (prev) :  000003CC 00000052
                    | + function block  :  0000000A 00000000
                    |  Already listed
  08                osal_set_event
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000017 00000000
                    |  Already listed
  08                PHY_Reset
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llStartTimer2
                    | Stack used (prev) :  00001391 000000AB
                    | + function block  :  00000000 00000000
  08                llGetCurrentTask
                    | Stack used (prev) :  000001B6 00000032
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llExtendRfRange
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000008 00000002
                    |  Already listed
  08                llSetFreqTune
                    | Stack used (prev) :  00001391 000000AB
                    | + function block  :  00000000 00000002
  07              LL_PowerOnReq
                  | Stack used (prev) :  00001391 000000AD
                  | + function block  :  00000012 00000000
  08                PHY_Reset
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llStopTimer2
                    | Stack used (prev) :  00001391 000000AB
                    | + function block  :  00000000 00000000
  07              LL_PowerOffReq
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000012 00000000
  08                llGetFullCTandST
                    | Stack used (prev) :  00001391 000000AB
                    | + function block  :  00000000 00000003
  08                llGetCurrentTask
                    | Stack used (prev) :  000001B6 00000032
                    | + function block  :  00000000 00000002
                    |  Already listed
  07              LL_TimeToNextRfEvent
                  | Stack used (prev) :  00001391 000000AE
                  | + function block  :  0000003E 00000000
  06            halSleep
                | Stack used (prev) :  000013CF 000000AF
                | + function block  :  00000030 00000000
  06            osal_next_timeout
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000010 00000000
  05          osal_pwrmgr_powerconserve
              | Stack used (prev) :  000013FF 000000AF
              | + function block  :  00000018 00000000
  05          osalTimeUpdate
              | Stack used (prev) :  0000005D 00000003
              | + function block  :  0000001C 00000000
              |  Already listed
  04        osal_run_system
            | Stack used (prev) :  00001417 000000B3
            | + function block  :  00000018 00000000
  03      osal_start_system
          | Stack used (prev) :  0000142F 000000B3
          | + function block  :  00000000 00000004
  04        osalTimerInit
            | Stack used (prev) :  00001391 000000AB
            | + function block  :  00000009 00000000
  06            SimpleProfile_SetParameter
                | Stack used (prev) :  00000670 0000005E
                | + function block  :  00000022 00000000
                |  Already listed
  06            SimpleProfile_RegisterAppCBs
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000002
  07              linkDB_Register
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000009 00000000
  07              GATTServApp_InitCharCfg
                  | Stack used (prev) :  00000400 0000005C
                  | + function block  :  00000022 00000000
                  |  Already listed
  08                osal_mem_alloc
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000018 00000000
                    |  Already listed
  09                  osal_mem_alloc
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000018 00000000
                      |  Already listed
  09                  osal_memcpy
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000019 00000001
                      |  Already listed
  09                  ATT_CompareUUID
                      | Stack used (prev) :  0000041C 0000005B
                      | + function block  :  0000003C 00000000
                      |  Already listed
  08                GATT_RegisterService
                    | Stack used (prev) :  00001391 000000AB
                    | + function block  :  00000012 00000000
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000013A3 000000AB
                  | + function block  :  00000032 00000000
  06            SimpleProfile_AddService
                | Stack used (prev) :  000013D5 000000AB
                | + function block  :  0000001C 00000000
  07              gapRole_startConnUpdate
                  | Stack used (prev) :  00001188 000000A1
                  | + function block  :  0000003E 00000002
                  |  Already listed
  07              osal_get_timeoutEx
                  | Stack used (prev) :  00001126 000000A1
                  | + function block  :  0000000E 00000000
                  |  Already listed
  07              osal_stop_timerEx
                  | Stack used (prev) :  000001C2 00000034
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_start_timerEx
                  | Stack used (prev) :  0000004A 00000002
                  | + function block  :  00000024 00000000
                  |  Already listed
  07              osal_set_event
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000017 00000000
                  |  Already listed
  07              osal_memset
                  | Stack used (prev) :  000003F4 0000005C
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_memcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000019 00000001
                  |  Already listed
  07              GAP_EndDiscoverable
                  | Stack used (prev) :  00000430 0000005C
                  | + function block  :  0000001E 00000000
                  |  Already listed
  07              GAP_UpdateAdvertisingData
                  | Stack used (prev) :  00001146 000000A1
                  | + function block  :  00000024 00000001
                  |  Already listed
  07              GAP_SetParamValue
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000000 00000002
                  |  Already listed
  06            GAPRole_SetParameter
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000014 00000000
  06            Recursive system consisting of
                 | HalLcdWriteString
                | Stack used (prev) :  0000027A 0000004C
                | + function block  :  00000051 00000000
                |  Already listed
  06            HalAdcInit
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000002
                |  Already listed
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000013A3 000000AB
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            DevInfo_AddService
                | Stack used (prev) :  000013D5 000000AB
                | + function block  :  00000018 00000000
  07              GATTServApp_InitCharCfg
                  | Stack used (prev) :  00000400 0000005C
                  | + function block  :  00000022 00000000
                  |  Already listed
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000013A3 000000AB
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            Batt_AddService
                | Stack used (prev) :  000013D5 000000AB
                | + function block  :  00000018 00000000
  07              osal_snv_read
                  | Stack used (prev) :  00000442 0000005B
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              set_new_passkey
                  | Stack used (prev) :  00000637 00000064
                  | + function block  :  00000040 00000000
                  |  Already listed
  08                osal_snv_write
                    | Stack used (prev) :  0000050B 0000005C
                    | + function block  :  00000022 00000000
                    |  Already listed
  08                GAPBondMgr_SetParameter
                    | Stack used (prev) :  0000060B 00000064
                    | + function block  :  0000002C 00000000
                    |  Already listed
  08                GGS_SetParameter
                    | Stack used (prev) :  0000040C 0000005C
                    | + function block  :  0000001C 00000000
                    |  Already listed
  07              set_de_passkey
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  0000001B 00000000
  07              osal_strlen
                  | Stack used (prev) :  000001EA 00000048
                  | + function block  :  00000000 00000004
                  |  Already listed
  06            set_passkey
                | Stack used (prev) :  000013AC 000000AB
                | + function block  :  00000014 00000000
  08                HalUARTOpen
                    | Stack used (prev) :  00001391 000000AB
                    | + function block  :  00000000 00000002
  07              SbpHalUARTInit
                  | Stack used (prev) :  00001391 000000AD
                  | + function block  :  0000003A 00000004
  06            SbpHalUART_Init
                | Stack used (prev) :  000013CB 000000B1
                | + function block  :  00000000 00000004
  06            RegisterForKeys
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000002
  06            osal_set_event
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000017 00000000
                |  Already listed
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000013A3 000000AB
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            GATTServApp_AddService
                | Stack used (prev) :  000013D5 000000AB
                | + function block  :  0000001C 00000000
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000013A3 000000AB
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            GGS_AddService
                | Stack used (prev) :  000013D5 000000AB
                | + function block  :  0000001C 00000000
  06            GAP_SetParamValue
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  00000000 00000002
                |  Already listed
  05          SimpleBLEPeripheral_Init
              | Stack used (prev) :  000013F1 000000B5
              | + function block  :  0000011C 00000000
  06            osal_snv_read
                | Stack used (prev) :  00000442 0000005B
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  06            GAP_RegisterForHCIMsgs
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000002
  05          GAPRole_Init
              | Stack used (prev) :  00001391 000000AD
              | + function block  :  00000012 00000000
  06            osal_memset
                | Stack used (prev) :  000003F4 0000005C
                | + function block  :  00000018 00000000
                |  Already listed
  05          osal_CbTimerInit
              | Stack used (prev) :  00001391 000000AB
              | + function block  :  00000009 00000000
  05          Hal_Init
              | Stack used (prev) :  00001391 000000AB
              | + function block  :  00000000 00000002
  06            gapBondMgrReadBonds
                | Stack used (prev) :  00000473 00000064
                | + function block  :  00000036 00000000
                |  Already listed
  05          GAPBondMgr_Init
              | Stack used (prev) :  00001391 000000AB
              | + function block  :  00000009 00000000
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  000003F4 0000005C
              | + function block  :  00000018 00000000
              |  Already listed
  06            hciInitEventMasks
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000002
  05          HCI_Init
              | Stack used (prev) :  00001391 000000AD
              | + function block  :  00000012 00000000
  06            HCI_SMPTaskRegister
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000002
  06            linkDB_Register
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000009 00000000
                |  Already listed
  06            L2CAP_RegisterApp
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000003
  05          SM_Init
              | Stack used (prev) :  0000139A 000000AE
              | + function block  :  00000012 00000000
  06            HalFlashRead
                | Stack used (prev) :  000003F2 0000005A
                | + function block  :  0000000E 00000001
                |  Already listed
  06            osal_pwrmgr_task_state
                | Stack used (prev) :  000003CC 00000052
                | + function block  :  0000000A 00000000
                |  Already listed
  06            osal_set_event
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000017 00000000
                |  Already listed
  07              PHY_ClearAllRegsAndFifos
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  07              PHY_Reset
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000002
                  |  Already listed
  06            PHY_Init
                | Stack used (prev) :  00001391 000000AD
                | + function block  :  00000000 00000004
  06            llInitTimer2
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000000
  06            LL_ENC_InitAesDMA
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000002
  06            LL_ENC_GenerateTrueRandNum
                | Stack used (prev) :  00000000 00000006
                | + function block  :  00000016 00000000
                |  Already listed
  07              HalFlashWrite
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  0000000C 00000000
                  |  Already listed
  06            llFindTxPowerSettings
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000022 00000002
  07              PHY_SetFifoConfig
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  07              PHY_ConfigureAppendRfStatus
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              PHY_ConfigureFifoDataProcessing
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  07              PHY_ClearSavedWhiteList
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  07              PHY_ClearBlacklist
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  07              PHY_ClearWhitelist
                  | Stack used (prev) :  000003F2 0000005A
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              PHY_ConfigureMD
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  07              PHY_SetCRCInit
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000010 00000000
                  |  Already listed
  07              PHY_ClearAllRegsAndFifos
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              llDisableT2IntsEvts
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000000
                  |  Already listed
  07              llSchedulerInit
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  07              llInitFeatureSet
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  07              llReleaseAllConnId
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  07              llClearSetInts
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  07              llRfInit
                  | Stack used (prev) :  00000000 00000002
                  | + function block  :  00000000 00000004
                  |  Already listed
  06            LL_Reset
                | Stack used (prev) :  00001391 000000AD
                | + function block  :  0000000C 00000004
  05          LL_Init
              | Stack used (prev) :  000013B3 000000B1
              | + function block  :  00000018 00000000
  06            HCI_L2CAPTaskRegister
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000002
  05          L2CAP_Init
              | Stack used (prev) :  00001391 000000AD
              | + function block  :  00000014 00000000
  06            linkDB_Register
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000009 00000000
                |  Already listed
  06            GATTServApp_InitCharCfg
                | Stack used (prev) :  00000400 0000005C
                | + function block  :  00000022 00000000
                |  Already listed
  07              osal_mem_free
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  0000000A 00000002
                  |  Already listed
  07              osal_mem_alloc
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_memset
                  | Stack used (prev) :  000003F4 0000005C
                  | + function block  :  00000018 00000000
                  |  Already listed
  06            gattServApp_SetNumPrepareWrites
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000017 00000000
  06            GATT_RegisterForReq
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000002
  05          GATTServApp_Init
              | Stack used (prev) :  000013A8 000000AD
              | + function block  :  00000012 00000000
  06            L2CAP_RegisterApp
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000003
                |  Already listed
  07              linkDB_Register
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000009 00000000
                  |  Already listed
  07              gattRegisterServer
                  | Stack used (prev) :  00001391 000000AB
                  | + function block  :  00000000 00000002
  06            GATT_InitServer
                | Stack used (prev) :  0000139A 000000AD
                | + function block  :  00000014 00000000
  05          GATT_Init
              | Stack used (prev) :  000013AE 000000AE
              | + function block  :  00000012 00000000
  06            HCI_GAPTaskRegister
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000002
  06            linkDB_Init
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000002
  06            L2CAP_RegisterApp
                | Stack used (prev) :  00001391 000000AB
                | + function block  :  00000000 00000003
                |  Already listed
  05          GAP_Init
              | Stack used (prev) :  00001391 000000AE
              | + function block  :  00000012 00000000
  04        osalInitTasks
            | Stack used (prev) :  0000150D 000000B5
            | + function block  :  00000000 00000004
  04        osal_pwrmgr_init
            | Stack used (prev) :  00001391 000000AB
            | + function block  :  00000000 00000002
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  04        osal_mem_kick
            | Stack used (prev) :  00001391 000000AB
            | + function block  :  0000000A 00000000
  04        osal_mem_init
            | Stack used (prev) :  00001391 000000AB
            | + function block  :  00000000 00000002
  03      osal_init_system
          | Stack used (prev) :  0000150D 000000B9
          | + function block  :  00000000 00000004
  02    main
        | Stack used (prev) :  0000150D 000000BD
        | + function block  :  00000000 00000000
  01  ?call_main
      | Stack used (prev) :  0000150D 000000BD
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000150D 000000BD


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000150D 000000BD
  01  __program_start
      | Stack used (prev) :  0000150D 000000BD
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000150D 000000BD


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000150D 000000BD
  01  memset::?relay
      | Stack used (prev) :  0000150D 000000BD
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000150D 000000BD


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000150D 000000BD
  01  strcat::?relay
      | Stack used (prev) :  0000150D 000000BD
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000150D 000000BD


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000150D 000000BD
  01  strcpy::?relay
      | Stack used (prev) :  0000150D 000000BD
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000150D 000000BD


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000150D 000000BD
  01  strlen::?relay
      | Stack used (prev) :  0000150D 000000BD
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000150D 000000BD




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000085          86   com    0
CSTART               CODE          00000086 - 0000014C          C7   rel    0
BDATA_ID             CODE               0000014D                     dse    0
BIT_ID               CODE               0000014D                     dse    0
DATA_ID              CODE          0000014D - 0000014D           1   rel    0
PDATA_ID             CODE               0000014E                     dse    0
IXDATA_ID            CODE               0000014E                     dse    0
IDATA_ID             CODE               0000014E                     dse    0
XDATA_ID             CODE          0000014E - 0000050F         3C2   rel    0
BANK_RELAYS          CODE          00000510 - 00001559        104A   rel    0
RCODE                CODE          0000155A - 00002191         C38   rel    0
CODE_N               CODE               00002192                     dse    0
DIFUNCT              CODE               00002192                     dse    0
NEAR_CODE            CODE          00002194 - 0000318D         FFA   rel    2
<BANKED_CODE,CODE_C> 1
                     CODE          00003190 - 00007FF6        4E67   rel    2
SLEEP_CODE           CODE          00007FF8 - 00007FFF           8   rel    0
<BANKED_CODE,XDATA_ROM_C_FLASH> 1
                     CODE          00008000 - 0000FFFA        7FFB   rel    2
<BANKED_CODE> 1      CODE          00010000 - 00017FFF        8000   rel    0
<BANKED_CODE> 2      CODE          00018000 - 0001DA1E        5A1F   rel    0
BLENV_ADDRESS_SPACE
                     CODE          0003E800 - 0003F7FF        1000   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 00000017          10   rel    0
PSP                  DATA               00000018                     dse    0
XSP                  DATA          00000018 - 00000019           2   rel    0
DATA_I               DATA          0000001A - 0000001A           1   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
DATA_Z               DATA          00000021 - 00000028           8   rel    0
SFR_AN               DATA          00000080 - 00000080           1   rel    0
                     DATA          00000086 - 0000008D           8 
                     DATA          00000090 - 00000091           2 
                     DATA          00000094 - 00000097           4 
                     DATA          0000009A - 000000A9          10 
                     DATA          000000AB - 000000AF           5 
                     DATA          000000B3 - 000000B4           2 
                     DATA          000000B6 - 000000B6           1 
                     DATA          000000B8 - 000000C7          10 
                     DATA          000000C9 - 000000C9           1 
                     DATA          000000D1 - 000000D7           7 
                     DATA          000000D9 - 000000DB           3 
                     DATA          000000E1 - 000000E5           5 
                     DATA          000000E8 - 000000E9           2 
                     DATA          000000F1 - 000000F2           2 
                     DATA          000000F2 - 000000F5           4 
                     DATA          000000F7 - 000000FF           9 
XSTACK               XDATA         00000001 - 00000300         300   rel    0
XDATA_Z              XDATA         00000301 - 00000EBD         BBD   rel    0
XDATA_I              XDATA         00000EBE - 0000127F         3C2   rel    0
<XDATA_N> 1          XDATA         00001280 - 00001E83         C04   rel    0
<XDATA_ROM_C> 1      CONST         00008000 - 00008692         693   rel    2
IDATA_I              IDATA              00000029                     dse    0
IDATA_Z              IDATA         00000029 - 0000002A           2   rel    0
ISTACK               IDATA         00000038 - 000000FF          C8   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 125 461 bytes of CODE  memory
      35 bytes of DATA  memory (+ 88 absolute )
   7 811 bytes of XDATA memory
     202 bytes of IDATA memory
       8 bits  of BIT   memory
   1 683 bytes of CONST memory

Errors: none
Warnings: 2

